<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>掌握 Ant Design Pro：目录结构、业务逻辑与代码改造技巧</title>
    <link href="/blog/2023/07/21/%E6%8E%8C%E6%8F%A1-Ant-Design-Pro%EF%BC%9A%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E3%80%81%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%94%B9%E9%80%A0%E6%8A%80%E5%B7%A7/"/>
    <url>/blog/2023/07/21/%E6%8E%8C%E6%8F%A1-Ant-Design-Pro%EF%BC%9A%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E3%80%81%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%94%B9%E9%80%A0%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h4 id="Ant-Design-Pro"><a href="#Ant-Design-Pro" class="headerlink" title="Ant Design Pro"></a>Ant Design Pro</h4><ul><li><h5 id="什么是Ant-Design-Pro？按我的理解，这是一个前端框架，却又不仅仅是一个前端框架"><a href="#什么是Ant-Design-Pro？按我的理解，这是一个前端框架，却又不仅仅是一个前端框架" class="headerlink" title="什么是Ant Design Pro？按我的理解，这是一个前端框架，却又不仅仅是一个前端框架"></a>什么是Ant Design Pro？按我的理解，这是一个前端框架，却又不仅仅是一个前端框架</h5></li><li><h5 id="Ant-Design-Pro的语言是React，它基于Ant-Design设计体系，提供了丰富的页面模板、组件和功能，非常适合快速搭建前台页面"><a href="#Ant-Design-Pro的语言是React，它基于Ant-Design设计体系，提供了丰富的页面模板、组件和功能，非常适合快速搭建前台页面" class="headerlink" title="Ant Design Pro的语言是React，它基于Ant Design设计体系，提供了丰富的页面模板、组件和功能，非常适合快速搭建前台页面"></a>Ant Design Pro的语言是React，它基于Ant Design设计体系，提供了丰富的页面模板、组件和功能，非常适合快速搭建前台页面</h5></li><li><h5 id="Ant-Design组件库：分页-Pagination-Ant-Design"><a href="#Ant-Design组件库：分页-Pagination-Ant-Design" class="headerlink" title="Ant Design组件库：分页 Pagination - Ant Design"></a>Ant Design组件库：<a href="https://ant.design/components/pagination-cn">分页 Pagination - Ant Design</a></h5></li><li><h5 id="Ant-Design-Pro脚手架：文档总览-Ant-Design-Pro"><a href="#Ant-Design-Pro脚手架：文档总览-Ant-Design-Pro" class="headerlink" title="Ant Design Pro脚手架：文档总览 - Ant Design Pro"></a>Ant Design Pro脚手架：<a href="https://pro.ant.design/zh-CN/docs/overview/">文档总览 - Ant Design Pro</a></h5></li><li><h5 id="下面是比较官方的定义："><a href="#下面是比较官方的定义：" class="headerlink" title="下面是比较官方的定义："></a>下面是比较官方的定义：</h5></li></ul><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">Ant <span class="hljs-built_in">Design</span> Pro 是一个开箱即用的企业级中后台前端/设计解决方案，基于 Ant <span class="hljs-built_in">Design</span> 设计体系，内置了丰富的页面模板、组件和功能，旨在帮助开发者快速搭建企业级中后台应用。<br></code></pre></td></tr></table></figure><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">Ant <span class="hljs-built_in">Design</span> Pro 提供了完整的前端开发工作流和最佳实践，具有以下特点和优势：<br><span class="hljs-number">1.</span>高度定制化：Ant <span class="hljs-built_in">Design</span> Pro 提供了可灵活配置的模板，可以根据项目需求自定义布局和功能，非常适合快速定制企业级应用。<br><span class="hljs-number">2.</span>丰富的模板和组件：Ant <span class="hljs-built_in">Design</span> Pro 内置了多个精心设计的页面模板和丰富的 UI 组件，包括表单、表格、图表、地图等，使开发者可 以快速构建复杂的中后台应用。<br><span class="hljs-number">3.</span>系统化的工作流程：Ant <span class="hljs-built_in">Design</span> Pro 提供了完善的开发工作流程，包括开发环境、测试环境和生产环境的配置、代码检查、测试和构建   等，使开发者能够便捷地进行前端开发。<br><span class="hljs-number">4.</span>功能丰富的插件集成：Ant <span class="hljs-built_in">Design</span> Pro 集成了常用的中后台应用所需的功能，包括菜单权限管理、数据请求、国际化、登录认证等，可       以快速构建完整的、稳定的企业级应用。<br></code></pre></td></tr></table></figure><h4 id="快速搭建"><a href="#快速搭建" class="headerlink" title="快速搭建"></a>快速搭建</h4><ul><li><h5 id="官网：开始使用-Ant-Design-Pro"><a href="#官网：开始使用-Ant-Design-Pro" class="headerlink" title="官网：开始使用 - Ant Design Pro"></a>官网：<a href="https://pro.ant.design/zh-CN/docs/getting-started">开始使用 - Ant Design Pro</a></h5></li><li><h5 id="我们可以按以下步骤，快速搭建Ant-Design-Pro脚手架："><a href="#我们可以按以下步骤，快速搭建Ant-Design-Pro脚手架：" class="headerlink" title="我们可以按以下步骤，快速搭建Ant Design Pro脚手架："></a>我们可以按以下步骤，快速搭建Ant Design Pro脚手架：</h5></li><li><h5 id="在正确安装Node-js环境下的前提下，依次执行以下命令："><a href="#在正确安装Node-js环境下的前提下，依次执行以下命令：" class="headerlink" title="在正确安装Node.js环境下的前提下，依次执行以下命令："></a>在正确安装Node.js环境下的前提下，依次执行以下命令：</h5></li><li><h5 id="使用npm全局安装-pro-cli-构建工具（脚手架）："><a href="#使用npm全局安装-pro-cli-构建工具（脚手架）：" class="headerlink" title="使用npm全局安装 pro-cli 构建工具（脚手架）："></a>使用npm全局安装 pro-cli 构建工具（脚手架）：</h5></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i @ant-design/pro-cli -g<br></code></pre></td></tr></table></figure><ul><li><h5 id="使用脚手架，在指定目录下快速搭建前端框架："><a href="#使用脚手架，在指定目录下快速搭建前端框架：" class="headerlink" title="使用脚手架，在指定目录下快速搭建前端框架："></a>使用脚手架，在指定目录下快速搭建前端框架：</h5></li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">pro</span> create <span class="hljs-keyword">memory</span>-api <br></code></pre></td></tr></table></figure><ul><li><h5 id="项目下安装yarn包管理工具："><a href="#项目下安装yarn包管理工具：" class="headerlink" title="项目下安装yarn包管理工具："></a>项目下安装yarn包管理工具：</h5></li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yarn -V</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="至此，前端项目框架搭建完成，启动项目："><a href="#至此，前端项目框架搭建完成，启动项目：" class="headerlink" title="至此，前端项目框架搭建完成，启动项目："></a>至此，前端项目框架搭建完成，启动项目：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yarn <span class="hljs-built_in">run</span> start<br></code></pre></td></tr></table></figure><h4 id="写作目标"><a href="#写作目标" class="headerlink" title="写作目标"></a>写作目标</h4><ul><li><h5 id="脚手架的搭建固然简单，在脚手架的基础上，我们可以更方便地改造代码、对接后端代码、编写我们自己的业务逻辑"><a href="#脚手架的搭建固然简单，在脚手架的基础上，我们可以更方便地改造代码、对接后端代码、编写我们自己的业务逻辑" class="headerlink" title="脚手架的搭建固然简单，在脚手架的基础上，我们可以更方便地改造代码、对接后端代码、编写我们自己的业务逻辑"></a>脚手架的搭建固然简单，在脚手架的基础上，我们可以更方便地改造代码、对接后端代码、编写我们自己的业务逻辑</h5></li><li><h5 id="但前提是我们要理清框架的目录结构，以及相关的逻辑代码"><a href="#但前提是我们要理清框架的目录结构，以及相关的逻辑代码" class="headerlink" title="但前提是我们要理清框架的目录结构，以及相关的逻辑代码"></a>但前提是我们要理清框架的目录结构，以及相关的逻辑代码</h5></li><li><h5 id="Ant-Design-Pro内置了独特的登录页面、欢迎页面、表格页面，我们要理清登录校验逻辑、发送请求到自己的后端接口、重定向到login页的逻辑、管理员校验、页面路由配置等等，这些都是必须熟练掌握的"><a href="#Ant-Design-Pro内置了独特的登录页面、欢迎页面、表格页面，我们要理清登录校验逻辑、发送请求到自己的后端接口、重定向到login页的逻辑、管理员校验、页面路由配置等等，这些都是必须熟练掌握的" class="headerlink" title="Ant Design Pro内置了独特的登录页面、欢迎页面、表格页面，我们要理清登录校验逻辑、发送请求到自己的后端接口、重定向到login页的逻辑、管理员校验、页面路由配置等等，这些都是必须熟练掌握的"></a>Ant Design Pro内置了独特的登录页面、欢迎页面、表格页面，我们要理清登录校验逻辑、发送请求到自己的后端接口、重定向到login页的逻辑、管理员校验、页面路由配置等等，这些都是必须熟练掌握的</h5></li><li><h5 id="参考官网：启动项目-Ant-Design-Pro"><a href="#参考官网：启动项目-Ant-Design-Pro" class="headerlink" title="参考官网：启动项目 - Ant Design Pro"></a>参考官网：<a href="https://pro.ant.design/zh-CN/docs/development">启动项目 - Ant Design Pro</a></h5></li><li><h5 id="将来开发个人网站，或者开发个人项目，都可以基于Ant-Design-Pro框架，更快捷、更高效"><a href="#将来开发个人网站，或者开发个人项目，都可以基于Ant-Design-Pro框架，更快捷、更高效" class="headerlink" title="将来开发个人网站，或者开发个人项目，都可以基于Ant Design Pro框架，更快捷、更高效"></a>将来开发个人网站，或者开发个人项目，都可以基于Ant Design Pro框架，更快捷、更高效</h5></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
    <categories>
      
      <category>Ant Design Pro</category>
      
      <category>项目</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>项目</tag>
      
      <tag>Ant Design Pro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>探索算法学习之旅：经验分享与解题思路</title>
    <link href="/blog/2023/07/17/%E6%8E%A2%E7%B4%A2%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%EF%BC%9A%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E4%B8%8E%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/"/>
    <url>/blog/2023/07/17/%E6%8E%A2%E7%B4%A2%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%EF%BC%9A%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E4%B8%8E%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="基础知识（青铜挑战）"><a href="#基础知识（青铜挑战）" class="headerlink" title="基础知识（青铜挑战）"></a>基础知识（青铜挑战）</h3><h4 id="单链表基础及构造方法"><a href="#单链表基础及构造方法" class="headerlink" title="单链表基础及构造方法"></a>单链表基础及构造方法</h4><h5 id="链表的内部结构"><a href="#链表的内部结构" class="headerlink" title="链表的内部结构"></a>链表的内部结构</h5><ul><li><h5 id="以下是我对单链表的理解："><a href="#以下是我对单链表的理解：" class="headerlink" title="以下是我对单链表的理解："></a>以下是我对单链表的理解：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">链表，是用来存储数据的一种数据结构，其由若干个节点依次连接而成。<br>一个节点就是一个数据元素，一个节点由两部分构成：数据域和指针域。<br>数据域存放数据元素的值，指针域存放指针，而该指针用来指向下一个节点。<br></code></pre></td></tr></table></figure><h5 id="链表的构造"><a href="#链表的构造" class="headerlink" title="链表的构造"></a>链表的构造</h5><ul><li><h5 id="链表的构造过程很简单："><a href="#链表的构造过程很简单：" class="headerlink" title="链表的构造过程很简单："></a>链表的构造过程很简单：</h5><ol><li><h5 id="创建头节点，创建head指针指向头节点"><a href="#创建头节点，创建head指针指向头节点" class="headerlink" title="创建头节点，创建head指针指向头节点"></a>创建头节点，创建head指针指向头节点</h5></li><li><h5 id="依次创建每个节点，初始化其数据域，并令前驱节点的指针域指向该节点"><a href="#依次创建每个节点，初始化其数据域，并令前驱节点的指针域指向该节点" class="headerlink" title="依次创建每个节点，初始化其数据域，并令前驱节点的指针域指向该节点"></a>依次创建每个节点，初始化其数据域，并令前驱节点的指针域指向该节点</h5></li><li><h5 id="链表创建完成，返回该链表的head指针"><a href="#链表创建完成，返回该链表的head指针" class="headerlink" title="链表创建完成，返回该链表的head指针"></a>链表创建完成，返回该链表的head指针</h5></li></ol></li><li><h5 id="下面给出具体的代码实现"><a href="#下面给出具体的代码实现" class="headerlink" title="下面给出具体的代码实现"></a>下面给出具体的代码实现</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 单链表节点</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Node</span> &#123;<br>      <span class="hljs-comment">// 数据域</span><br>      <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> val;<br>      <span class="hljs-comment">// 指针域</span><br>      <span class="hljs-keyword">public</span> Node next;<br>      <span class="hljs-comment">// 节点初始化</span><br>      Node(<span class="hljs-type">int</span> x) &#123;<br>          val = x;<br>          next = <span class="hljs-literal">null</span>;<br>      &#125;<br><br>      <span class="hljs-meta">@Override</span><br>      <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Node&#123;&quot;</span> +<br>                  <span class="hljs-string">&quot;val=&quot;</span> + val +<br>                  <span class="hljs-string">&quot;, next=&quot;</span> + next +<br>                  <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用数组构建单链表</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Node <span class="hljs-title function_">initLinkedList</span><span class="hljs-params">(<span class="hljs-type">int</span>[] array)</span> &#123;<br>       <span class="hljs-comment">// 1.定义head指针, cur指针</span><br>       <span class="hljs-type">Node</span> <span class="hljs-variable">head</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>, cur = <span class="hljs-literal">null</span>;<br>       <span class="hljs-comment">// 2.遍历数组, 构建单链表</span><br>       <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; array.length; i++) &#123;<br>           <span class="hljs-comment">// 2.1.新建节点, 依次获取数组元素, 并赋值给该节点的数据域</span><br>           <span class="hljs-type">Node</span> <span class="hljs-variable">newNode</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Node</span>(array[i]);<br>           <span class="hljs-comment">// 2.2.链表为空, 插入头节点</span><br>           <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>) &#123;<br>               <span class="hljs-comment">// 2.2.1.初始化head指针</span><br>               head = newNode;<br>               <span class="hljs-comment">// 2.2.2.更新cur指针, 指向新节点</span><br>               cur = newNode;<br>               <span class="hljs-comment">// 2.3.链表不为空, 插入后继节点</span><br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-comment">// 2.3.1.更新每个结点的指针域, 指向后继节点</span><br>               cur.next = newNode;<br>               <span class="hljs-comment">// 2.3.2.更新cur指针, 指向新节点</span><br>               cur = newNode;<br>           &#125;<br>       &#125;<br>       <span class="hljs-comment">// 3.单链表构建完成, 返回头指针</span><br>       <span class="hljs-keyword">return</span> head;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 测试</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span>[] a = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>&#125;;<br>        <span class="hljs-type">Node</span> <span class="hljs-variable">head</span> <span class="hljs-operator">=</span> initLinkedList(a);<br>        System.out.println(head);<br>    &#125;<br></code></pre></td></tr></table></figure><h5 id="遍历链表"><a href="#遍历链表" class="headerlink" title="遍历链表"></a>遍历链表</h5><ul><li><h5 id="打印链表：头指针依次向后移动，打印每个节点的数据域"><a href="#打印链表：头指针依次向后移动，打印每个节点的数据域" class="headerlink" title="打印链表：头指针依次向后移动，打印每个节点的数据域"></a>打印链表：头指针依次向后移动，打印每个节点的数据域</h5></li><li><h5 id="获取链表长度：头指针依次向后移动，累加节点个数，打印链表长度"><a href="#获取链表长度：头指针依次向后移动，累加节点个数，打印链表长度" class="headerlink" title="获取链表长度：头指针依次向后移动，累加节点个数，打印链表长度"></a>获取链表长度：头指针依次向后移动，累加节点个数，打印链表长度</h5></li><li><h5 id="代码实现如下："><a href="#代码实现如下：" class="headerlink" title="代码实现如下："></a>代码实现如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 打印链表</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head 头节点</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">(Node head)</span> &#123;<br>        <span class="hljs-type">Node</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        <span class="hljs-keyword">while</span> (current != <span class="hljs-literal">null</span>) &#123;<br>            sb.append(current.data).append(<span class="hljs-string">&quot;\t&quot;</span>);<br>            current = current.next;<br>        &#125;<br>        <span class="hljs-keyword">return</span> sb.toString();<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 获取链表长度</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head 链表头节点</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 链表长度</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getLength</span><span class="hljs-params">(Node head)</span> &#123;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-keyword">while</span> (node != <span class="hljs-literal">null</span>) &#123;<br>           length++;<br>           node = node.next;<br>       &#125;<br>       <span class="hljs-keyword">return</span> length;<br>   &#125;<br></code></pre></td></tr></table></figure><h5 id="链表插入"><a href="#链表插入" class="headerlink" title="链表插入"></a>链表插入</h5><ul><li><h5 id="向链表中插入节点分以下三种情况："><a href="#向链表中插入节点分以下三种情况：" class="headerlink" title="向链表中插入节点分以下三种情况："></a>向链表中插入节点分以下三种情况：</h5><ol><li><h5 id="表头插入：创建新节点，新节点指针域指向原头节点；head指针指向新节点"><a href="#表头插入：创建新节点，新节点指针域指向原头节点；head指针指向新节点" class="headerlink" title="表头插入：创建新节点，新节点指针域指向原头节点；head指针指向新节点"></a>表头插入：创建新节点，新节点指针域指向原头节点；head指针指向新节点</h5></li></ol><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717172246434.png" alt="image-20230717172246434"></p><ol><li><h5 id="在表中插入：遍历到插入位置的前驱节点，依次为新节点分配后继节点和前驱节点"><a href="#在表中插入：遍历到插入位置的前驱节点，依次为新节点分配后继节点和前驱节点" class="headerlink" title="在表中插入：遍历到插入位置的前驱节点，依次为新节点分配后继节点和前驱节点"></a>在表中插入：遍历到插入位置的前驱节点，依次为新节点分配后继节点和前驱节点</h5></li></ol><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717172326686.png" alt="image-20230717172326686"></p><ol><li><h5 id="表尾插入：可视为-2-的特殊情况，新节点的后继节点为-NULL"><a href="#表尾插入：可视为-2-的特殊情况，新节点的后继节点为-NULL" class="headerlink" title="表尾插入：可视为 2 的特殊情况，新节点的后继节点为 NULL"></a>表尾插入：可视为 2 的特殊情况，新节点的后继节点为 NULL</h5></li></ol></li><li><h5 id="代码设计如下："><a href="#代码设计如下：" class="headerlink" title="代码设计如下："></a>代码设计如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 链表插入</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head       链表头节点</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> nodeInsert 待插入节点</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> position   待插入位置，取值从2开始</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 插入后得到的链表头节点</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Node <span class="hljs-title function_">insertNode</span><span class="hljs-params">(Node head, Node nodeInsert, <span class="hljs-type">int</span> position)</span> &#123;<br>       <span class="hljs-comment">// 1.头节点判空</span><br>       <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">return</span> nodeInsert;<br>       &#125;<br>       <span class="hljs-comment">// 2.越界判断</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> getLength(head);<br>       <span class="hljs-keyword">if</span> (position &gt; size + <span class="hljs-number">1</span> || position &lt; <span class="hljs-number">1</span>) &#123;<br>           System.out.println(<span class="hljs-string">&quot;位置参数越界&quot;</span>);<br>           <span class="hljs-keyword">return</span> head;<br>       &#125;<br><br>       <span class="hljs-comment">// 3.表头插入</span><br>       <span class="hljs-keyword">if</span> (position == <span class="hljs-number">1</span>) &#123;<br>           nodeInsert.next = head;<br>           head = nodeInsert;<br>           <span class="hljs-keyword">return</span> head;<br>       &#125;<br>       <span class="hljs-comment">// 4.表中/表尾插入</span><br>       <span class="hljs-type">Node</span> <span class="hljs-variable">pNode</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span> (count &lt; position - <span class="hljs-number">1</span>) &#123;<br>           pNode = pNode.next;<br>           count++;<br>       &#125;<br>       nodeInsert.next = pNode.next;<br>       pNode.next = nodeInsert;<br>       <br>       <span class="hljs-comment">// 5.插入完成, 返回头节点</span><br>       <span class="hljs-keyword">return</span> head;<br>   &#125;<br></code></pre></td></tr></table></figure><h5 id="链表删除"><a href="#链表删除" class="headerlink" title="链表删除"></a>链表删除</h5><ul><li><h5 id="删除链表节点同样分三种情况："><a href="#删除链表节点同样分三种情况：" class="headerlink" title="删除链表节点同样分三种情况："></a>删除链表节点同样分三种情况：</h5><ol><li><h5 id="删除表头元素：head指针指向要删除节点的后继节点"><a href="#删除表头元素：head指针指向要删除节点的后继节点" class="headerlink" title="删除表头元素：head指针指向要删除节点的后继节点"></a>删除表头元素：head指针指向要删除节点的后继节点</h5></li></ol><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717172356284.png" alt="image-20230717172356284"></p><ol><li><h5 id="删除表中元素：拿到要删除节点的前驱节点的指针域，指向要删除节点的后继节点"><a href="#删除表中元素：拿到要删除节点的前驱节点的指针域，指向要删除节点的后继节点" class="headerlink" title="删除表中元素：拿到要删除节点的前驱节点的指针域，指向要删除节点的后继节点"></a>删除表中元素：拿到要删除节点的前驱节点的指针域，指向要删除节点的后继节点</h5></li></ol><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717172417498.png" alt="image-20230717172417498"></p><ol><li><h5 id="删除表尾元素：可视为-2-的特殊情况，要删除节点的后继节点为-NULL"><a href="#删除表尾元素：可视为-2-的特殊情况，要删除节点的后继节点为-NULL" class="headerlink" title="删除表尾元素：可视为 2 的特殊情况，要删除节点的后继节点为 NULL"></a>删除表尾元素：可视为 2 的特殊情况，要删除节点的后继节点为 NULL</h5></li></ol></li><li><h5 id="代码设计如下：-1"><a href="#代码设计如下：-1" class="headerlink" title="代码设计如下："></a>代码设计如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除节点</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head     链表头节点</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> position 删除节点位置，取值从1开始</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 删除后的链表头节点</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Node <span class="hljs-title function_">deleteNode</span><span class="hljs-params">(Node head, <span class="hljs-type">int</span> position)</span> &#123;<br>        <span class="hljs-comment">// 1.头节点判空</span><br>        <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-comment">// 2.越界判断</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> getLength(head);<br>        <span class="hljs-keyword">if</span> (position &gt; size || position &lt;= <span class="hljs-number">0</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;输入的参数有误&quot;</span>);<br>            <span class="hljs-keyword">return</span> head;<br>        &#125;<br>        <span class="hljs-comment">// 3.表头删除</span><br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-comment">// head.next就是链表的新head</span><br>            <span class="hljs-keyword">return</span> head.next;<br>        &#125;<br>        <span class="hljs-comment">// 4.表中/表尾删除</span><br>        <span class="hljs-type">Node</span> <span class="hljs-variable">preNode</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (count &lt; position - <span class="hljs-number">1</span>) &#123;<br>            preNode = preNode.next;<br>            count++;<br>        &#125;<br>        <span class="hljs-type">Node</span> <span class="hljs-variable">curNode</span> <span class="hljs-operator">=</span> preNode.next;<br>        preNode.next = curNode.next;<br>        <span class="hljs-comment">// 5.删除成功, 返回头节点</span><br>        <span class="hljs-keyword">return</span> head;<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="双向链表设计"><a href="#双向链表设计" class="headerlink" title="双向链表设计"></a>双向链表设计</h4><h5 id="双向链表的内部结构"><a href="#双向链表的内部结构" class="headerlink" title="双向链表的内部结构"></a>双向链表的内部结构</h5><ul><li><h5 id="以下是我对双向链表的理解"><a href="#以下是我对双向链表的理解" class="headerlink" title="以下是我对双向链表的理解"></a>以下是我对双向链表的理解</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 前驱节点">双向链表与单链表的最大区别，就是每个节点增加了一个前驱指针域，指向前驱节点<br></code></pre></td></tr></table></figure><h5 id="链表的构造-1"><a href="#链表的构造-1" class="headerlink" title="链表的构造"></a>链表的构造</h5><ul><li><h5 id="代码设计如下：-2"><a href="#代码设计如下：-2" class="headerlink" title="代码设计如下："></a>代码设计如下：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h5 id="遍历链表-1"><a href="#遍历链表-1" class="headerlink" title="遍历链表"></a>遍历链表</h5><ul><li><h5 id="head指针依次向后移动，遍历每个节点，输出数据域的值："><a href="#head指针依次向后移动，遍历每个节点，输出数据域的值：" class="headerlink" title="head指针依次向后移动，遍历每个节点，输出数据域的值："></a>head指针依次向后移动，遍历每个节点，输出数据域的值：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h5 id="链表插入-1"><a href="#链表插入-1" class="headerlink" title="链表插入"></a>链表插入</h5><ul><li><h5 id="向链表中插入节点分以下三种情况：-1"><a href="#向链表中插入节点分以下三种情况：-1" class="headerlink" title="向链表中插入节点分以下三种情况："></a>向链表中插入节点分以下三种情况：</h5><ul><li><h5 id="表头插入：新建新节点，原头节点作新节点的后继节点，新节点作为原头结点的前驱节点，head指针指向新节点"><a href="#表头插入：新建新节点，原头节点作新节点的后继节点，新节点作为原头结点的前驱节点，head指针指向新节点" class="headerlink" title="表头插入：新建新节点，原头节点作新节点的后继节点，新节点作为原头结点的前驱节点，head指针指向新节点"></a>表头插入：新建新节点，原头节点作新节点的后继节点，新节点作为原头结点的前驱节点，head指针指向新节点</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717183516334.png" alt="image-20230717183516334"></p><ul><li><h5 id="表尾插入：新建新节点，原尾节点作新节点的前驱节点，新节点作为头结点的后继节点，tail指针指向新节点"><a href="#表尾插入：新建新节点，原尾节点作新节点的前驱节点，新节点作为头结点的后继节点，tail指针指向新节点" class="headerlink" title="表尾插入：新建新节点，原尾节点作新节点的前驱节点，新节点作为头结点的后继节点，tail指针指向新节点"></a>表尾插入：新建新节点，原尾节点作新节点的前驱节点，新节点作为头结点的后继节点，tail指针指向新节点</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717183531962.png" alt="image-20230717183531962"></p><ul><li><h5 id="表中插入"><a href="#表中插入" class="headerlink" title="表中插入"></a>表中插入</h5></li><li><h5 id="代码实现如下：-1"><a href="#代码实现如下：-1" class="headerlink" title="代码实现如下："></a>代码实现如下：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">  <br></code></pre></td></tr></table></figure></li></ul><h5 id="链表删除-1"><a href="#链表删除-1" class="headerlink" title="链表删除"></a>链表删除</h5><ul><li><h5 id="删除双向链表中的节点分以下三种情况："><a href="#删除双向链表中的节点分以下三种情况：" class="headerlink" title="删除双向链表中的节点分以下三种情况："></a>删除双向链表中的节点分以下三种情况：</h5><ul><li><h5 id="表头删除：head指针指向原头节点的后继节点，并将该后继节点的前驱指针置空"><a href="#表头删除：head指针指向原头节点的后继节点，并将该后继节点的前驱指针置空" class="headerlink" title="表头删除：head指针指向原头节点的后继节点，并将该后继节点的前驱指针置空"></a>表头删除：head指针指向原头节点的后继节点，并将该后继节点的前驱指针置空</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717183548124.png" alt="image-20230717183548124"></p><ul><li><h5 id="表尾删除：tail指针指向原尾节点的前驱节点，并将该前驱节点的后继指针置空"><a href="#表尾删除：tail指针指向原尾节点的前驱节点，并将该前驱节点的后继指针置空" class="headerlink" title="表尾删除：tail指针指向原尾节点的前驱节点，并将该前驱节点的后继指针置空"></a>表尾删除：tail指针指向原尾节点的前驱节点，并将该前驱节点的后继指针置空</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230717183601279.png" alt="image-20230717183601279"></p><ul><li><h5 id="表中删除"><a href="#表中删除" class="headerlink" title="表中删除"></a>表中删除</h5></li><li><h5 id="代码实现如下：-2"><a href="#代码实现如下：-2" class="headerlink" title="代码实现如下："></a>代码实现如下：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">  <br></code></pre></td></tr></table></figure></li></ul><h3 id="实战训练（白银挑战）"><a href="#实战训练（白银挑战）" class="headerlink" title="实战训练（白银挑战）"></a>实战训练（白银挑战）</h3><h4 id="两个链表第一个公共子节点"><a href="#两个链表第一个公共子节点" class="headerlink" title="两个链表第一个公共子节点"></a>两个链表第一个公共子节点</h4><ul><li><h5 id="前情提要：什么情况下，两条链表存在公共子节点呢？如下图所示："><a href="#前情提要：什么情况下，两条链表存在公共子节点呢？如下图所示：" class="headerlink" title="前情提要：什么情况下，两条链表存在公共子节点呢？如下图所示："></a>前情提要：什么情况下，两条链表存在公共子节点呢？如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230718205036232.png" alt="image-20230718205036232"></p><ul><li><h5 id="显而易见，c1、c2、c3均为两链表的公共子节点，且c1是两链表的第一个公共子节点"><a href="#显而易见，c1、c2、c3均为两链表的公共子节点，且c1是两链表的第一个公共子节点" class="headerlink" title="显而易见，c1、c2、c3均为两链表的公共子节点，且c1是两链表的第一个公共子节点"></a>显而易见，c1、c2、c3均为两链表的公共子节点，且c1是两链表的第一个公共子节点</h5></li><li><h5 id="我们先废话少说，给出四种解题思路："><a href="#我们先废话少说，给出四种解题思路：" class="headerlink" title="我们先废话少说，给出四种解题思路："></a>我们先废话少说，给出四种解题思路：</h5><ul><li><h5 id="哈希和集合，代码如下："><a href="#哈希和集合，代码如下：" class="headerlink" title="哈希和集合，代码如下："></a>哈希和集合，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法1：通过Hash辅助查找</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pHead1 链表a</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pHead2 链表b</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 第一个公共节点/null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">findFirstCommonNodeByMap</span><span class="hljs-params">(ListNode pHead1, ListNode pHead2)</span> &#123;<br>        <span class="hljs-comment">// 1.判断链表是否为空</span><br>        <span class="hljs-keyword">if</span> (pHead1 == <span class="hljs-literal">null</span> || pHead2 == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-comment">// 2.保存两链表头节点</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">current1</span> <span class="hljs-operator">=</span> pHead1;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">current2</span> <span class="hljs-operator">=</span> pHead2;<br>        <span class="hljs-comment">// 3.通过Hash存储链表a的所有节点</span><br>        HashMap&lt;ListNode, Integer&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;ListNode, Integer&gt;();<br>        <span class="hljs-keyword">while</span> (current1 != <span class="hljs-literal">null</span>) &#123;<br>            hashMap.put(current1, <span class="hljs-literal">null</span>);<br>            current1 = current1.next;<br>        &#125;<br>        <span class="hljs-comment">// 4.从头结点开始, 依次比较hash表中的节点与链表b的节点</span><br>        <span class="hljs-keyword">while</span> (current2 != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (hashMap.containsKey(current2))<br>                <span class="hljs-keyword">return</span> current2;<br>            current2 = current2.next;<br>        &#125;<br>        <span class="hljs-comment">// 5.未发现公共节点</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法2：通过集合辅助查找</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> headA 链表a</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> headB 链表b</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 第一个公共节点/null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">findFirstCommonNodeBySet</span><span class="hljs-params">(ListNode headA, ListNode headB)</span> &#123;<br>        <span class="hljs-comment">// 1.通过Hash存储链表a的所有节点</span><br>        Set&lt;ListNode&gt; set = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>&lt;&gt;();<br>        <span class="hljs-keyword">while</span> (headA != <span class="hljs-literal">null</span>) &#123;<br>            set.add(headA);<br>            headA = headA.next;<br>        &#125;<br>        <span class="hljs-comment">// 2.从头结点开始, 依次比较hash表中的节点与链表b的节点</span><br>        <span class="hljs-keyword">while</span> (headB != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (set.contains(headB))<br>                <span class="hljs-keyword">return</span> headB;<br>            headB = headB.next;<br>        &#125;<br>        <span class="hljs-comment">// 3.未发现公共节点</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="栈，代码如下："><a href="#栈，代码如下：" class="headerlink" title="栈，代码如下："></a>栈，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 方法3：通过栈</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">findFirstCommonNodeByStack</span><span class="hljs-params">(ListNode headA, ListNode headB)</span> &#123;<br>       <span class="hljs-comment">// 1.将两条链表从头节点开始, 分别压入栈中</span><br>       Stack&lt;ListNode&gt; stackA = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Stack</span>&lt;&gt;();<br>       Stack&lt;ListNode&gt; stackB = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Stack</span>&lt;&gt;();<br>       <span class="hljs-keyword">while</span> (headA != <span class="hljs-literal">null</span>) &#123;<br>           stackA.push(headA);<br>           headA = headA.next;<br>       &#125;<br>       <span class="hljs-keyword">while</span> (headB != <span class="hljs-literal">null</span>) &#123;<br>           stackB.push(headB);<br>           headB = headB.next;<br>       &#125;<br>       <span class="hljs-comment">// 2.两栈依次出栈, 当栈顶元素相同时, 保存该元素</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">preNode</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-keyword">while</span> (stackB.size() &gt; <span class="hljs-number">0</span> &amp;&amp; stackA.size() &gt; <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">if</span> (stackA.peek() == stackB.peek()) &#123;<br>               preNode = stackA.pop();<br>               stackB.pop();<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-keyword">break</span>;<br>           &#125;<br>       &#125;<br>       <span class="hljs-comment">// 3.返回第一个公共节点</span><br>       <span class="hljs-keyword">return</span> preNode;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="两条链表拼接，代码如下："><a href="#两条链表拼接，代码如下：" class="headerlink" title="两条链表拼接，代码如下："></a>两条链表拼接，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法4：通过序列拼接</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">findFirstCommonNodeByCombine</span><span class="hljs-params">(ListNode pHead1, ListNode pHead2)</span> &#123;<br><span class="hljs-comment">//        System.out.println(&quot;null == null&quot; + (null == null));</span><br>        <span class="hljs-comment">// 1.判断链表是否为空</span><br>        <span class="hljs-keyword">if</span> (pHead1 == <span class="hljs-literal">null</span> || pHead2 == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span> pHead1;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">p2</span> <span class="hljs-operator">=</span> pHead2;<br>        <span class="hljs-comment">// 2.依次遍历两条链表</span><br>        <span class="hljs-keyword">while</span> (p1 != p2) &#123;<br>            p1 = p1.next;<br>            p2 = p2.next;<br>            <span class="hljs-keyword">if</span> (p1 != p2) &#123;<span class="hljs-comment">// 这个判断不能少</span><br>                <span class="hljs-comment">// 2.1.链表a遍历完, 切换遍历链表b</span><br>                <span class="hljs-keyword">if</span> (p1 == <span class="hljs-literal">null</span>) &#123;<br>                    p1 = pHead2;<br>                &#125;<br>                <span class="hljs-comment">// 2.2.链表b遍历完, 切换遍历链表a</span><br>                <span class="hljs-keyword">if</span> (p2 == <span class="hljs-literal">null</span>) &#123;<br>                    p2 = pHead1;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 3.返回第一个公共节点</span><br>        <span class="hljs-keyword">return</span> p1;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里有必要解释一下这个判断的作用了："><a href="#这里有必要解释一下这个判断的作用了：" class="headerlink" title="这里有必要解释一下这个判断的作用了："></a>这里有必要解释一下这个判断的作用了：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (p1 == <span class="hljs-literal">null</span>) &#123;<br>...............<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="考虑这个问题：当前链表遍历结束后，什么情况下允许切换遍历另一条链表呢？"><a href="#考虑这个问题：当前链表遍历结束后，什么情况下允许切换遍历另一条链表呢？" class="headerlink" title="考虑这个问题：当前链表遍历结束后，什么情况下允许切换遍历另一条链表呢？"></a>考虑这个问题：当前链表遍历结束后，什么情况下允许切换遍历另一条链表呢？</h5></li><li><h5 id="答案包括两种情况：未找到公共节点-第一次切换遍历链表结束"><a href="#答案包括两种情况：未找到公共节点-第一次切换遍历链表结束" class="headerlink" title="答案包括两种情况：未找到公共节点/第一次切换遍历链表结束"></a>答案包括两种情况：未找到公共节点/第一次切换遍历链表结束</h5></li><li><h5 id="未找到公共节点很好理解，只有切换遍历另一条链表，才能判断是否有公共节点"><a href="#未找到公共节点很好理解，只有切换遍历另一条链表，才能判断是否有公共节点" class="headerlink" title="未找到公共节点很好理解，只有切换遍历另一条链表，才能判断是否有公共节点"></a>未找到公共节点很好理解，只有切换遍历另一条链表，才能判断是否有公共节点</h5></li><li><h5 id="第一次切换遍历链表结束，此时p1、p2指针均为null，说明两链表就没有公共节点，我们就结束链表的遍历"><a href="#第一次切换遍历链表结束，此时p1、p2指针均为null，说明两链表就没有公共节点，我们就结束链表的遍历" class="headerlink" title="/第一次切换遍历链表结束，此时p1、p2指针均为null，说明两链表就没有公共节点，我们就结束链表的遍历"></a>/第一次切换遍历链表结束，此时p1、p2指针均为null，说明两链表就没有公共节点，我们就结束链表的遍历</h5></li><li><h5 id="所以结束两链表的遍历（p1-p2）有两种情况：第一个公共节点已找到-不存在公共节点"><a href="#所以结束两链表的遍历（p1-p2）有两种情况：第一个公共节点已找到-不存在公共节点" class="headerlink" title="所以结束两链表的遍历（p1 == p2）有两种情况：第一个公共节点已找到/不存在公共节点"></a>所以结束两链表的遍历（p1 == p2）有两种情况：第一个公共节点已找到/不存在公共节点</h5></li><li><h5 id="差和双指针"><a href="#差和双指针" class="headerlink" title="差和双指针"></a>差和双指针</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法5：通过差值来实现</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pHead1 链表a</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pHead2 链表b</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> </span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">findFirstCommonNodeBySub</span><span class="hljs-params">(ListNode pHead1, ListNode pHead2)</span> &#123;<br>        <span class="hljs-comment">// 1.判断链表是否为空</span><br>        <span class="hljs-keyword">if</span> (pHead1 == <span class="hljs-literal">null</span> || pHead2 == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">current1</span> <span class="hljs-operator">=</span> pHead1;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">current2</span> <span class="hljs-operator">=</span> pHead2;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, l2 = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-comment">// 2.分别拿到两链表的长度</span><br>        <span class="hljs-keyword">while</span> (current1 != <span class="hljs-literal">null</span>) &#123;<br>            current1 = current1.next;<br>            l1++;<br>        &#125;<br><br>        <span class="hljs-keyword">while</span> (current2 != <span class="hljs-literal">null</span>) &#123;<br>            current2 = current2.next;<br>            l2++;<br>        &#125;<br>        current1 = pHead1;<br>        current2 = pHead2;<br><br>        <span class="hljs-comment">// 3.计算两链表长度之差</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">sub</span> <span class="hljs-operator">=</span> l1 &gt; l2 ? l1 - l2 : l2 - l1;<br><br>        <span class="hljs-comment">// 4.长度较大的链表先遍历, 遍历次数即为长度之差</span><br>        <span class="hljs-keyword">if</span> (l1 &gt; l2) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (a &lt; sub) &#123;<br>                current1 = current1.next;<br>                a++;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (l1 &lt; l2) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (a &lt; sub) &#123;<br>                current2 = current2.next;<br>                a++;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 5.同时遍历两链表</span><br>        <span class="hljs-keyword">while</span> (current2 != current1) &#123;<br>            current2 = current2.next;<br>            current1 = current1.next;<br>        &#125;<br><br>        <span class="hljs-comment">// 6.返回第一个公共节点</span><br>        <span class="hljs-keyword">return</span> current1;<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><h5 id="上面代码里的注释，已经把解题思路解释的很清晰了"><a href="#上面代码里的注释，已经把解题思路解释的很清晰了" class="headerlink" title="上面代码里的注释，已经把解题思路解释的很清晰了"></a>上面代码里的注释，已经把解题思路解释的很清晰了</h5></li><li><h5 id="基于我个人的理解，下面讲解一下这些方法的共同点，也就是解题思路的形成过程："><a href="#基于我个人的理解，下面讲解一下这些方法的共同点，也就是解题思路的形成过程：" class="headerlink" title="基于我个人的理解，下面讲解一下这些方法的共同点，也就是解题思路的形成过程："></a>基于我个人的理解，下面讲解一下这些方法的共同点，也就是解题思路的形成过程：</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">我们的目标是：查出两条链表的第一个公共节点<br>公共节点是什么我们已经搞清楚了，那如何拿到第一个公共节点呢？<br>不论是分别正序/倒序遍历两条链表，我们的执行思路始终是：<br>从两链表的头节点/尾节点开始，分别依次向后遍历链表的每个节点，再比较两节点，判断它们是否相同，即是否为两链表的公共节点<br>我们能够判断出两链表的公共节点，那么第一个公共节点就好找了：<br>如果遍历顺序为正序，则选出第一组公共节点；如果遍历顺序为倒序，则选出最后一组公共节点<br>只需要根据正序<span class="hljs-regexp">/倒序遍历链表，选出第一组公共节点/</span>最后一组公共节点，就找到了两链表的第一个公共节点<br>这里问题来了，我们要明确一点，即两链表的长度不一定相同<br>这就带来了问题：<br>我们上面查找两链表公共节点的思路，其实只有在两链表长度相同时，才行得通<br>那我们的目标就是，如何构造出两链表长度相同的环境：<br>哈希和集合：直接消除了链表长度带来的影响，通过开辟了新的空间，判断节点是否相等，进而查找出两链表的公共节点<br>栈、两链表拼接、差和双指针：本质上都是构造出两链表长度相同的环境，进而查找出两链表的公共节点<br></code></pre></td></tr></table></figure><ul><li><h5 id="这就是查找两链表的第一个公共节点的解题思路了，希望对你有帮助"><a href="#这就是查找两链表的第一个公共节点的解题思路了，希望对你有帮助" class="headerlink" title="这就是查找两链表的第一个公共节点的解题思路了，希望对你有帮助"></a>这就是查找两链表的第一个公共节点的解题思路了，希望对你有帮助</h5></li></ul><h4 id="回文链表的判断"><a href="#回文链表的判断" class="headerlink" title="回文链表的判断"></a>回文链表的判断</h4><ul><li><h5 id="给出一个链表，判断其是否为回文链表，那什么是回文链表？"><a href="#给出一个链表，判断其是否为回文链表，那什么是回文链表？" class="headerlink" title="给出一个链表，判断其是否为回文链表，那什么是回文链表？"></a>给出一个链表，判断其是否为回文链表，那什么是回文链表？</h5></li><li><h5 id="以下即为一条回文链表："><a href="#以下即为一条回文链表：" class="headerlink" title="以下即为一条回文链表："></a>以下即为一条回文链表：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230719165410932.png" alt="image-20230719165410932"></p><ul><li><h5 id="即对回文链表正序遍历和倒序遍历，得到的结果是一样的"><a href="#即对回文链表正序遍历和倒序遍历，得到的结果是一样的" class="headerlink" title="即对回文链表正序遍历和倒序遍历，得到的结果是一样的"></a>即对回文链表正序遍历和倒序遍历，得到的结果是一样的</h5></li><li><h5 id="这种题解法很多，我们列举常见的、简单的且容易理解的解法："><a href="#这种题解法很多，我们列举常见的、简单的且容易理解的解法：" class="headerlink" title="这种题解法很多，我们列举常见的、简单的且容易理解的解法："></a>这种题解法很多，我们列举常见的、简单的且容易理解的解法：</h5><ul><li><h5 id="压栈法，具体代码如下："><a href="#压栈法，具体代码如下：" class="headerlink" title="压栈法，具体代码如下："></a>压栈法，具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法1：全部压栈遍历 全部出栈遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isPalindromeByAllStack</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> head;<br>        Stack&lt;Integer&gt; stack = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Stack</span>&lt;&gt;();<br>        <span class="hljs-comment">// 1.压栈 遍历</span><br>        <span class="hljs-keyword">while</span> (temp != <span class="hljs-literal">null</span>) &#123;<br>            stack.push(temp.val);<br>            temp = temp.next;<br>        &#125;<br>        <span class="hljs-comment">// 2.出栈 遍历</span><br>        <span class="hljs-keyword">while</span> (head != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (head.val != stack.pop()) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>            head = head.next;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法2：全部压栈遍历 一半出栈遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isPalindromeByHalfStack</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> head;<br>        Stack&lt;Integer&gt; stack = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Stack</span>&lt;&gt;();<br>        <span class="hljs-comment">//链表的长度</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//把链表节点的值存放到栈中</span><br>        <span class="hljs-keyword">while</span> (temp != <span class="hljs-literal">null</span>) &#123;<br>            stack.push(temp.val);<br>            temp = temp.next;<br>            len++;<br>        &#125;<br>        <span class="hljs-comment">//len长度除以2</span><br>        len &gt;&gt;= <span class="hljs-number">1</span>;<br>        <span class="hljs-comment">//然后再出栈</span><br>        <span class="hljs-keyword">while</span> (len-- &gt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">if</span> (head.val != stack.pop())<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            head = head.next;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="倒序链表法，代码如下："><a href="#倒序链表法，代码如下：" class="headerlink" title="倒序链表法，代码如下："></a>倒序链表法，代码如下：</h5></li><li><h5 id="根据原链表构造一条倒序链表，遍历这两条链表，"><a href="#根据原链表构造一条倒序链表，遍历这两条链表，" class="headerlink" title="根据原链表构造一条倒序链表，遍历这两条链表，"></a>根据原链表构造一条倒序链表，遍历这两条链表，</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 构造倒序链表</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isPalindromeByReverseList</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-comment">// 1.构造反转链表</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">newHead</span> <span class="hljs-operator">=</span> head, temp = head;<br><br>        <span class="hljs-keyword">while</span> (temp != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-type">ListNode</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(temp.val);<br>            node.next = newHead;<br><br>            newHead = node;<br>            temp = temp.next;<br>        &#125;<br><br>        <span class="hljs-comment">// 2.同时遍历两链表</span><br>        <span class="hljs-keyword">while</span> (newHead != <span class="hljs-literal">null</span> &amp;&amp; head != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (head.val != newHead.val)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>            head = head.next;<br>            newHead = newHead.next;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="此外还有双指针法（之后双指针专题练习结束后回来补充）、递归法（不推荐掌握，容易绕晕）"><a href="#此外还有双指针法（之后双指针专题练习结束后回来补充）、递归法（不推荐掌握，容易绕晕）" class="headerlink" title="此外还有双指针法（之后双指针专题练习结束后回来补充）、递归法（不推荐掌握，容易绕晕）"></a>此外还有双指针法（之后双指针专题练习结束后回来补充）、递归法（不推荐掌握，容易绕晕）</h5></li></ul></li></ul><h4 id="合并两条有序链表"><a href="#合并两条有序链表" class="headerlink" title="合并两条有序链表"></a>合并两条有序链表</h4><ul><li><h5 id="常见的解法就是构造第三条链表，然后依次遍历两条有序链表，比较各节点大小，依次连接到新链表中，整个过程如下图所示："><a href="#常见的解法就是构造第三条链表，然后依次遍历两条有序链表，比较各节点大小，依次连接到新链表中，整个过程如下图所示：" class="headerlink" title="常见的解法就是构造第三条链表，然后依次遍历两条有序链表，比较各节点大小，依次连接到新链表中，整个过程如下图所示："></a>常见的解法就是构造第三条链表，然后依次遍历两条有序链表，比较各节点大小，依次连接到新链表中，整个过程如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230719180411312.png" alt="image-20230719180411312"></p><ul><li><h5 id="由于两条链表长度不一定相同，可能出现一条链表遍历完，另一条链表还没有的情况，这其实是一个优化点"><a href="#由于两条链表长度不一定相同，可能出现一条链表遍历完，另一条链表还没有的情况，这其实是一个优化点" class="headerlink" title="由于两条链表长度不一定相同，可能出现一条链表遍历完，另一条链表还没有的情况，这其实是一个优化点"></a>由于两条链表长度不一定相同，可能出现一条链表遍历完，另一条链表还没有的情况，这其实是一个优化点</h5></li><li><h5 id="具体代码如下："><a href="#具体代码如下：" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 方法1：面试时就能写出来的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> list1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> list2</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">mergeTwoLists</span><span class="hljs-params">(ListNode list1, ListNode list2)</span> &#123;<br>        <span class="hljs-comment">// write code here</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">newHead</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(-<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> newHead;<br>        <span class="hljs-keyword">while</span> (list1 != <span class="hljs-literal">null</span> || list2 != <span class="hljs-literal">null</span>) &#123;<br><br>            <span class="hljs-keyword">if</span> (list1 != <span class="hljs-literal">null</span> &amp;&amp; list2 != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">if</span> (list1.val &lt; list2.val) &#123;<br>                    newHead.next = list1;<br>                    list1 = list1.next;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (list1.val &gt; list2.val) &#123;<br>                    newHead.next = list2;<br>                    list2 = list2.next;<br>                &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//相等的情况，分别接两个链</span><br>                    newHead.next = list2;<br>                    list2 = list2.next;<br>                    newHead = newHead.next;<br>                    newHead.next = list1;<br>                    list1 = list1.next;<br>                &#125;<br>                newHead = newHead.next;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (list1 != <span class="hljs-literal">null</span> &amp;&amp; list2 == <span class="hljs-literal">null</span>) &#123;<br>                newHead.next = list1;<br>                list1 = list1.next;<br>                newHead = newHead.next;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (list1 == <span class="hljs-literal">null</span> &amp;&amp; list2 != <span class="hljs-literal">null</span>) &#123;<br>                newHead.next = list2;<br>                list2 = list2.next;<br>                newHead = newHead.next;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> res.next;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="上面的解法当中，我们把两条链表是否都为空-只有一条为空放在了一个循环下，这次我们把它拆开来："><a href="#上面的解法当中，我们把两条链表是否都为空-只有一条为空放在了一个循环下，这次我们把它拆开来：" class="headerlink" title="上面的解法当中，我们把两条链表是否都为空/只有一条为空放在了一个循环下，这次我们把它拆开来："></a>上面的解法当中，我们把两条链表是否都为空/只有一条为空放在了一个循环下，这次我们把它拆开来：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 思路更清晰的写法</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> list1</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> list2</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">mergeTwoLists2</span><span class="hljs-params">(ListNode list1, ListNode list2)</span> &#123;<br>       <span class="hljs-comment">// write code here</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">newHead</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(-<span class="hljs-number">1</span>);<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> newHead;<br>       <span class="hljs-comment">// 1.两链表均不为空</span><br>       <span class="hljs-keyword">while</span> (list1 != <span class="hljs-literal">null</span> &amp;&amp; list2 != <span class="hljs-literal">null</span>) &#123;<br><br>           <span class="hljs-keyword">if</span> (list1.val &lt; list2.val) &#123;<br>               newHead.next = list1;<br>               list1 = list1.next;<br>           &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (list1.val &gt; list2.val) &#123;<br>               newHead.next = list2;<br>               list2 = list2.next;<br>           &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//相等的情况，分别接两个链</span><br>               newHead.next = list2;<br>               list2 = list2.next;<br>               newHead = newHead.next;<br>               newHead.next = list1;<br>               list1 = list1.next;<br>           &#125;<br>           newHead = newHead.next;<br><br>       &#125;<br>       <span class="hljs-comment">// 2.链表a为空</span><br>       <span class="hljs-keyword">while</span> (list1 != <span class="hljs-literal">null</span>) &#123;<br>           newHead.next = list1;<br>           list1 = list1.next;<br>           newHead = newHead.next;<br>       &#125;<br>       <span class="hljs-comment">// 3.链表b为空</span><br>       <span class="hljs-keyword">while</span> (list2 != <span class="hljs-literal">null</span>) &#123;<br>           newHead.next = list2;<br>           list2 = list2.next;<br>           newHead = newHead.next;<br>       &#125;<br><br>       <span class="hljs-keyword">return</span> res.next;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="思路更加清晰了，不过还有优化点："><a href="#思路更加清晰了，不过还有优化点：" class="headerlink" title="思路更加清晰了，不过还有优化点："></a>思路更加清晰了，不过还有优化点：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 方法2：比方法1更加精简的实现方法</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> l1</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> l2</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">mergeTwoListsMoreSimple</span><span class="hljs-params">(ListNode l1, ListNode l2)</span> &#123;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">prehead</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(-<span class="hljs-number">1</span>);<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">prev</span> <span class="hljs-operator">=</span> prehead;<br>       <span class="hljs-comment">// 节点之间的比较，简化为两种情况</span><br>       <span class="hljs-keyword">while</span> (l1 != <span class="hljs-literal">null</span> &amp;&amp; l2 != <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">if</span> (l1.val &lt;= l2.val) &#123;<br>               prev.next = l1;<br>               l1 = l1.next;<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               prev.next = l2;<br>               l2 = l2.next;<br>           &#125;<br>           prev = prev.next;<br>       &#125;<br><br>       <span class="hljs-comment">// 一条链表合并完成，直接拼接剩余链表的节点即可</span><br>       prev.next = l1 == <span class="hljs-literal">null</span> ? l2 : l1;<br>       <span class="hljs-keyword">return</span> prehead.next;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="合并K个链表"><a href="#合并K个链表" class="headerlink" title="合并K个链表"></a>合并K个链表</h4><ul><li><h5 id="这个更简单了，上代码："><a href="#这个更简单了，上代码：" class="headerlink" title="这个更简单了，上代码："></a>这个更简单了，上代码：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 合并K个链表</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> lists</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">mergeKLists</span><span class="hljs-params">(ListNode[] lists)</span> &#123;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-keyword">for</span> (ListNode list : lists) &#123;<br>           res = mergeTwoListsMoreSimple(res, list);<br>       &#125;<br>       <span class="hljs-keyword">return</span> res;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="简单的合并链表"><a href="#简单的合并链表" class="headerlink" title="简单的合并链表"></a>简单的合并链表</h4><ul><li><h5 id="随便给你两条链表，你会怎么连接这两条链表？（比如：将链表b连接到链表a后面）"><a href="#随便给你两条链表，你会怎么连接这两条链表？（比如：将链表b连接到链表a后面）" class="headerlink" title="随便给你两条链表，你会怎么连接这两条链表？（比如：将链表b连接到链表a后面）"></a>随便给你两条链表，你会怎么连接这两条链表？（比如：将链表b连接到链表a后面）</h5></li><li><h5 id="正确的思路只有一个，那就是拿到链表a的尾节点，拿到链表b的头节点，作：a-next-b，连接完成"><a href="#正确的思路只有一个，那就是拿到链表a的尾节点，拿到链表b的头节点，作：a-next-b，连接完成" class="headerlink" title="正确的思路只有一个，那就是拿到链表a的尾节点，拿到链表b的头节点，作：a.next = b，连接完成"></a>正确的思路只有一个，那就是拿到链表a的尾节点，拿到链表b的头节点，作：a.next = b，连接完成</h5></li><li><h5 id="举个例子：将链表a的-a，b-区间删掉，把链表b连接进去，代码如下："><a href="#举个例子：将链表a的-a，b-区间删掉，把链表b连接进去，代码如下：" class="headerlink" title="举个例子：将链表a的[a，b]区间删掉，把链表b连接进去，代码如下："></a>举个例子：将链表a的[a，b]区间删掉，把链表b连接进去，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 简单的合并链表</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> listA</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> a</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> b</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> listB</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">mergeInBetween</span><span class="hljs-params">(ListNode listA, <span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b, ListNode listB)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">preA</span> <span class="hljs-operator">=</span> listA;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">postA</span> <span class="hljs-operator">=</span> listA;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">postB</span> <span class="hljs-operator">=</span> listB;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">while</span> (postA != <span class="hljs-literal">null</span> &amp;&amp; preA != <span class="hljs-literal">null</span> &amp;&amp; j &lt; b) &#123;<br>            <span class="hljs-comment">// 1.拿到listA的前半段preA的尾节点</span><br>            <span class="hljs-keyword">if</span> (i &lt; a - <span class="hljs-number">1</span>) &#123;<br>                preA = preA.next;<br>                i++;<br>            &#125;<br><br>            <span class="hljs-comment">// 2.拿到listA的后半段postA的头节点</span><br>            <span class="hljs-keyword">if</span> (j != b) &#123;<br>                postA = postA.next;<br>                j++;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 3.分别连接preA与listB, postA与listB</span><br>        <span class="hljs-keyword">while</span> (postB.next != <span class="hljs-literal">null</span>) &#123;<br>            postB = postB.next;<br>        &#125;<br><br>        preA.next = listB;<br>        postB.next = postA;<br><br>        <span class="hljs-keyword">return</span> preA;<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h4><ul><li><h5 id="定义快慢指针（slow、fast）"><a href="#定义快慢指针（slow、fast）" class="headerlink" title="定义快慢指针（slow、fast）"></a>定义快慢指针（slow、fast）</h5></li></ul><h4 id="寻找中间节点"><a href="#寻找中间节点" class="headerlink" title="寻找中间节点"></a>寻找中间节点</h4><ul><li><h5 id="快慢指针均指向头节点"><a href="#快慢指针均指向头节点" class="headerlink" title="快慢指针均指向头节点"></a>快慢指针均指向头节点</h5></li><li><h5 id="快指针一次跳俩步，慢指针一次跳一步，两指针同时移动"><a href="#快指针一次跳俩步，慢指针一次跳一步，两指针同时移动" class="headerlink" title="快指针一次跳俩步，慢指针一次跳一步，两指针同时移动"></a>快指针一次跳俩步，慢指针一次跳一步，两指针同时移动</h5></li><li><h5 id="当快指针指向节点为空（偶数个节点）或快指针指向节点的后继节点为空（奇数个节点）时，两指针停止移动"><a href="#当快指针指向节点为空（偶数个节点）或快指针指向节点的后继节点为空（奇数个节点）时，两指针停止移动" class="headerlink" title="当快指针指向节点为空（偶数个节点）或快指针指向节点的后继节点为空（奇数个节点）时，两指针停止移动"></a>当快指针指向节点为空（偶数个节点）或快指针指向节点的后继节点为空（奇数个节点）时，两指针停止移动</h5></li><li><h5 id="此时，慢指针指向链表中间节点"><a href="#此时，慢指针指向链表中间节点" class="headerlink" title="此时，慢指针指向链表中间节点"></a>此时，慢指针指向链表中间节点</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230722225346291.png" alt="image-20230722225346291"></p><ul><li><h5 id="具体代码如下：-1"><a href="#具体代码如下：-1" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 寻找中间节点</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">middleNode</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-comment">// 1.快慢指针</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head, fast = head;<br>        <span class="hljs-comment">// 2.快指针指向尾节点</span><br>        <span class="hljs-keyword">while</span> (fast != <span class="hljs-literal">null</span> &amp;&amp; fast.next != <span class="hljs-literal">null</span>) &#123;<br>            slow = slow.next;<br>            fast = fast.next.next;<br>        &#125;<br>        <span class="hljs-comment">// 3.返回中间节点</span><br>        <span class="hljs-keyword">return</span> slow;<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="寻找倒数第K个节点"><a href="#寻找倒数第K个节点" class="headerlink" title="寻找倒数第K个节点"></a>寻找倒数第K个节点</h4><ul><li><h5 id="快慢指针均指向头节点-1"><a href="#快慢指针均指向头节点-1" class="headerlink" title="快慢指针均指向头节点"></a>快慢指针均指向头节点</h5></li><li><h5 id="快指针跳到第K-1个节点，此时慢指针与快指针相距K个节点"><a href="#快指针跳到第K-1个节点，此时慢指针与快指针相距K个节点" class="headerlink" title="快指针跳到第K+1个节点，此时慢指针与快指针相距K个节点"></a>快指针跳到第K+1个节点，此时慢指针与快指针相距K个节点</h5></li><li><h5 id="快慢指针同时移动，当快指针指向链表末端（即空节点）时，两指针停止移动"><a href="#快慢指针同时移动，当快指针指向链表末端（即空节点）时，两指针停止移动" class="headerlink" title="快慢指针同时移动，当快指针指向链表末端（即空节点）时，两指针停止移动"></a>快慢指针同时移动，当快指针指向链表末端（即空节点）时，两指针停止移动</h5></li><li><h5 id="此时，慢指针指向链表的倒数第K个节点"><a href="#此时，慢指针指向链表的倒数第K个节点" class="headerlink" title="此时，慢指针指向链表的倒数第K个节点"></a>此时，慢指针指向链表的倒数第K个节点</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230722225332136.png" alt="image-20230722225332136"></p><ul><li><h5 id="具体代码如下：-2"><a href="#具体代码如下：-2" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 寻找倒数第K个节点</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> k</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">getKthFromEnd</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> k)</span> &#123;<br>       <span class="hljs-comment">// 1.快慢指针</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">fast</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-comment">// 2.快指针指向 K+1</span><br>       <span class="hljs-keyword">while</span> (fast != <span class="hljs-literal">null</span> &amp;&amp; k &gt; <span class="hljs-number">0</span>) &#123;<br>           fast = fast.next;<br>           k--;<br>       &#125;<br>       <span class="hljs-comment">// 3.快指针指向链表末</span><br>       <span class="hljs-keyword">while</span> (fast != <span class="hljs-literal">null</span>) &#123;<br>           fast = fast.next;<br>           slow = slow.next;<br>       &#125;<br>       <span class="hljs-comment">// 4.返回倒数第K节点</span><br>       <span class="hljs-keyword">return</span> slow;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="寻找倒数第-K-个节点还有两种方法：遍历链表法和压栈法"><a href="#寻找倒数第-K-个节点还有两种方法：遍历链表法和压栈法" class="headerlink" title="寻找倒数第 K 个节点还有两种方法：遍历链表法和压栈法"></a>寻找倒数第 K 个节点还有两种方法：遍历链表法和压栈法</h5></li><li><h5 id="遍历链表：先遍历一遍链表，得到链表长度-L，再遍历一遍链表，取第-L-K-1个节点"><a href="#遍历链表：先遍历一遍链表，得到链表长度-L，再遍历一遍链表，取第-L-K-1个节点" class="headerlink" title="遍历链表：先遍历一遍链表，得到链表长度 L，再遍历一遍链表，取第 L-K+1个节点"></a>遍历链表：先遍历一遍链表，得到链表长度 L，再遍历一遍链表，取第 L-K+1个节点</h5></li><li><h5 id="压栈：将链表压入栈，再出栈，取第-K-个出栈的节点"><a href="#压栈：将链表压入栈，再出栈，取第-K-个出栈的节点" class="headerlink" title="压栈：将链表压入栈，再出栈，取第 K 个出栈的节点"></a>压栈：将链表压入栈，再出栈，取第 K 个出栈的节点</h5></li><li><h5 id="这两种方法很好理解，具体代码择日实现（2023-07-24晚）"><a href="#这两种方法很好理解，具体代码择日实现（2023-07-24晚）" class="headerlink" title="这两种方法很好理解，具体代码择日实现（2023/07/24晚）"></a>这两种方法很好理解，具体代码择日实现（2023/07/24晚）</h5></li></ul><h4 id="旋转链表"><a href="#旋转链表" class="headerlink" title="旋转链表"></a>旋转链表</h4><ul><li><h5 id="常见的情景题：把链表的每个节点，都向右移动K个位置"><a href="#常见的情景题：把链表的每个节点，都向右移动K个位置" class="headerlink" title="常见的情景题：把链表的每个节点，都向右移动K个位置"></a>常见的情景题：把链表的每个节点，都向右移动K个位置</h5></li><li><h5 id="这个是有两种思路的：反转链表、转化为寻找倒数第-K-1-个节点"><a href="#这个是有两种思路的：反转链表、转化为寻找倒数第-K-1-个节点" class="headerlink" title="这个是有两种思路的：反转链表、转化为寻找倒数第 K-1 个节点"></a>这个是有两种思路的：反转链表、转化为寻找倒数第 K-1 个节点</h5></li><li><h5 id="反转链表暂且不表，这里可以看看第二种方法：转化为寻找倒数第-K-1-个节点"><a href="#反转链表暂且不表，这里可以看看第二种方法：转化为寻找倒数第-K-1-个节点" class="headerlink" title="反转链表暂且不表，这里可以看看第二种方法：转化为寻找倒数第 K-1 个节点"></a>反转链表暂且不表，这里可以看看第二种方法：转化为寻找倒数第 K-1 个节点</h5></li><li><h5 id="把链表的每个节点，都向右移动K个位置-gt-把链表的后-K-个节点，都旋转成前-K-个节点"><a href="#把链表的每个节点，都向右移动K个位置-gt-把链表的后-K-个节点，都旋转成前-K-个节点" class="headerlink" title="把链表的每个节点，都向右移动K个位置 =&gt; 把链表的后 K 个节点，都旋转成前 K 个节点"></a>把链表的每个节点，都向右移动K个位置 =&gt; 把链表的后 K 个节点，都旋转成前 K 个节点</h5></li><li><h5 id="那就把问题转换成了：转化为寻找倒数第-K-1-个节点："><a href="#那就把问题转换成了：转化为寻找倒数第-K-1-个节点：" class="headerlink" title="那就把问题转换成了：转化为寻找倒数第 K-1 个节点："></a>那就把问题转换成了：转化为寻找倒数第 K-1 个节点：</h5></li><li><h5 id="此时慢指针指向了倒数第-K-1-个节点，快指针指向了链表的尾节点"><a href="#此时慢指针指向了倒数第-K-1-个节点，快指针指向了链表的尾节点" class="headerlink" title="此时慢指针指向了倒数第 K-1 个节点，快指针指向了链表的尾节点"></a>此时慢指针指向了倒数第 K-1 个节点，快指针指向了链表的尾节点</h5></li><li><h5 id="倒数第-K-个节点为头节点（断掉慢指针指向节点的后继，快指针指向原头节点）"><a href="#倒数第-K-个节点为头节点（断掉慢指针指向节点的后继，快指针指向原头节点）" class="headerlink" title="倒数第 K 个节点为头节点（断掉慢指针指向节点的后继，快指针指向原头节点）"></a>倒数第 K 个节点为头节点（断掉慢指针指向节点的后继，快指针指向原头节点）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230722225315216.png" alt="image-20230722225315216"></p><ul><li><h5 id="具体代码如下：-3"><a href="#具体代码如下：-3" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 旋转链表</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> k</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">rotateRight</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> k)</span> &#123;<br>       <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span> || k == <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">return</span> head;<br>       &#125;<br>       <span class="hljs-comment">// 1.快慢节点</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">fast</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-comment">// 2.获取链表长度</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">while</span> (head != <span class="hljs-literal">null</span>) &#123;<br>           head = head.next;<br>           len++;<br>       &#125;<br>       <span class="hljs-comment">// 3.以首尾旋转</span><br>       <span class="hljs-keyword">if</span> (k % len == <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">return</span> temp;<br>       &#125;<br>       <span class="hljs-comment">// 4.快指针先走K步</span><br>       <span class="hljs-keyword">while</span> ((k % len) &gt; <span class="hljs-number">0</span>) &#123;<br>           k--;<br>           fast = fast.next;<br>       &#125;<br>       <span class="hljs-comment">// 5.快慢指针同时走</span><br>       <span class="hljs-keyword">while</span> (fast.next != <span class="hljs-literal">null</span>) &#123;<br>           fast = fast.next;<br>           slow = slow.next;<br>       &#125;<br>       <span class="hljs-comment">// 6.获得截断处</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> slow.next;<br>       slow.next = <span class="hljs-literal">null</span>;<br>       <span class="hljs-comment">// 7.重置头节点</span><br>       fast.next = temp;<br>       <span class="hljs-keyword">return</span> res;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="删除特定节点"><a href="#删除特定节点" class="headerlink" title="删除特定节点"></a>删除特定节点</h4><ul><li><h5 id="这类型题目本身不难，因为我们之前学过删除节点，但删除节点有两种情况：删除头节点和删除尾节点"><a href="#这类型题目本身不难，因为我们之前学过删除节点，但删除节点有两种情况：删除头节点和删除尾节点" class="headerlink" title="这类型题目本身不难，因为我们之前学过删除节点，但删除节点有两种情况：删除头节点和删除尾节点"></a>这类型题目本身不难，因为我们之前学过删除节点，但删除节点有两种情况：删除头节点和删除尾节点</h5></li><li><h5 id="这两种情况的处理方式是不一样的，所以我们提供一个全新的思路：创建虚拟头节点，消除被删节点可能为头节点的情况"><a href="#这两种情况的处理方式是不一样的，所以我们提供一个全新的思路：创建虚拟头节点，消除被删节点可能为头节点的情况" class="headerlink" title="这两种情况的处理方式是不一样的，所以我们提供一个全新的思路：创建虚拟头节点，消除被删节点可能为头节点的情况"></a>这两种情况的处理方式是不一样的，所以我们提供一个全新的思路：创建虚拟头节点，消除被删节点可能为头节点的情况</h5></li></ul><ul><li><h5 id="具体代码如下：-4"><a href="#具体代码如下：-4" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 删除特定值的结点</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> val</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">removeElements</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> val)</span> &#123;<br>       <span class="hljs-comment">// 虚拟头节点</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">dummyHead</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-number">0</span>);<br>       dummyHead.next = head;<br>       <span class="hljs-comment">// 向后遍历，删除指定节点</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> dummyHead;<br>       <span class="hljs-keyword">while</span> (temp.next != <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">if</span> (temp.next.val == val) &#123;<br>               temp.next = temp.next.next;<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               temp = temp.next;<br>           &#125;<br>       &#125;<br>       <span class="hljs-comment">// 返回头节点</span><br>       <span class="hljs-keyword">return</span> dummyHead.next;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="删除倒数第K个节点"><a href="#删除倒数第K个节点" class="headerlink" title="删除倒数第K个节点"></a>删除倒数第K个节点</h4><ul><li><h5 id="我们之前学过如何查找倒数第K个节点，它们本质上是一样的，我们还是提供三种思路："><a href="#我们之前学过如何查找倒数第K个节点，它们本质上是一样的，我们还是提供三种思路：" class="headerlink" title="我们之前学过如何查找倒数第K个节点，它们本质上是一样的，我们还是提供三种思路："></a>我们之前学过如何查找倒数第K个节点，它们本质上是一样的，我们还是提供三种思路：</h5><ul><li><h5 id="遍历链表法"><a href="#遍历链表法" class="headerlink" title="遍历链表法"></a>遍历链表法</h5></li><li><h5 id="压栈法"><a href="#压栈法" class="headerlink" title="压栈法"></a>压栈法</h5></li><li><h5 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h5></li></ul></li><li><h5 id="具体代码如下：-5"><a href="#具体代码如下：-5" class="headerlink" title="具体代码如下："></a>具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 方法1：遍历链表法</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> n</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">removeNthFromEndByLength</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> n)</span> &#123;<br>       <span class="hljs-comment">// 虚拟头节点</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">dummy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-number">0</span>);<br>       dummy.next = head;<br>       <span class="hljs-comment">// 获取链表长度</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> getLength(head);<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> dummy;<br>       <span class="hljs-comment">// 删除第L-n+1个节点</span><br>       <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; length - n + <span class="hljs-number">1</span>; ++i) &#123;<br>           cur = cur.next;<br>       &#125;<br>       cur.next = cur.next.next;<br>       <span class="hljs-comment">// 返回头节点</span><br>       <span class="hljs-keyword">return</span> dummy.next;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 方法2：压栈法</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> n</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">removeNthFromEndByStack</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> n)</span> &#123;<br>      <span class="hljs-comment">// 虚拟头节点</span><br>      <span class="hljs-type">ListNode</span> <span class="hljs-variable">dummy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-number">0</span>);<br>      dummy.next = head;<br>      <span class="hljs-comment">// 栈</span><br>      Deque&lt;ListNode&gt; stack = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;ListNode&gt;();<br>      <span class="hljs-comment">// 全部压入栈</span><br>      <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> dummy;<br>      <span class="hljs-keyword">while</span> (cur != <span class="hljs-literal">null</span>) &#123;<br>          stack.push(cur);<br>          cur = cur.next;<br>      &#125;<br>      <span class="hljs-comment">// 依次出栈，删除第n个节点</span><br>      <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>          stack.pop();<br>      &#125;<br>      <span class="hljs-type">ListNode</span> <span class="hljs-variable">prev</span> <span class="hljs-operator">=</span> stack.peek();<br>      <span class="hljs-keyword">assert</span> prev != <span class="hljs-literal">null</span>;<br>      prev.next = prev.next.next;<br>      <span class="hljs-comment">// 返回头节点</span><br>      <span class="hljs-keyword">return</span> dummy.next;<br>  &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 方法3：双指针法</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> n</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">removeNthFromEndByTwoPoints</span><span class="hljs-params">(ListNode head, <span class="hljs-type">int</span> n)</span> &#123;<br>       <span class="hljs-comment">// 虚拟头节点</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">dummy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-number">0</span>);<br>       dummy.next = head;<br>       <span class="hljs-comment">// 快慢指针</span><br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">first</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">second</span> <span class="hljs-operator">=</span> dummy;<br>       <span class="hljs-comment">// 快指针先走n步</span><br>       <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>           first = first.next;<br>       &#125;<br>       <span class="hljs-comment">// 快慢指针同时走</span><br>       <span class="hljs-keyword">while</span> (first != <span class="hljs-literal">null</span>) &#123;<br>           first = first.next;<br>           second = second.next;<br>       &#125;<br>       <span class="hljs-comment">// 删除节点</span><br>       <span class="hljs-keyword">assert</span> second.next != <span class="hljs-literal">null</span>;<br>       second.next = second.next.next;<br>       <span class="hljs-keyword">return</span> dummy.next;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="删除重复节点"><a href="#删除重复节点" class="headerlink" title="删除重复节点"></a>删除重复节点</h4><ul><li><h5 id="删除重复节点当然有两种情况了：仅留一个或者删除全部，废话少说，直接上代码："><a href="#删除重复节点当然有两种情况了：仅留一个或者删除全部，废话少说，直接上代码：" class="headerlink" title="删除重复节点当然有两种情况了：仅留一个或者删除全部，废话少说，直接上代码："></a>删除重复节点当然有两种情况了：仅留一个或者删除全部，废话少说，直接上代码：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 重复元素保留一个</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">deleteDuplicate</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> head;<br>        &#125;<br>        <span class="hljs-comment">// 删除重复元素</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-keyword">while</span> (cur.next != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (cur.val == cur.next.val) &#123;<br>                cur.next = cur.next.next;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                cur = cur.next;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 返回头节点</span><br>        <span class="hljs-keyword">return</span> head;<br>    &#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 重复元素都不要</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">deleteDuplicates</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> head;<br>        &#125;<br>        <span class="hljs-comment">//虚拟节点</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">dummy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-number">0</span>);<br>        dummy.next = head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> dummy;<br>        <span class="hljs-comment">// 找到重复元素</span><br>        <span class="hljs-keyword">while</span> (cur.next != <span class="hljs-literal">null</span> &amp;&amp; cur.next.next != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// 删除所有重复元素</span><br>            <span class="hljs-keyword">if</span> (cur.next.val == cur.next.next.val) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> cur.next.val;<br>                <span class="hljs-keyword">while</span> (cur.next != <span class="hljs-literal">null</span> &amp;&amp; cur.next.val == x) &#123;<br>                    cur.next = cur.next.next;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                cur = cur.next;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 返回头节点</span><br>        <span class="hljs-keyword">return</span> dummy.next;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="通关（过关挑战）"><a href="#通关（过关挑战）" class="headerlink" title="通关（过关挑战）"></a>通关（过关挑战）</h3><ul><li><h5 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h5></li><li><h5 id="算法训练营开课了，小伙伴们踊跃报名，请用链表来帮忙统计学员信息："><a href="#算法训练营开课了，小伙伴们踊跃报名，请用链表来帮忙统计学员信息：" class="headerlink" title="算法训练营开课了，小伙伴们踊跃报名，请用链表来帮忙统计学员信息："></a>算法训练营开课了，小伙伴们踊跃报名，请用链表来帮忙统计学员信息：</h5></li><li><h5 id="学院方向不同：Java、Python、C-，仅有一条链表，其前中后三部分，分别是：Java、Python、C-的同学"><a href="#学院方向不同：Java、Python、C-，仅有一条链表，其前中后三部分，分别是：Java、Python、C-的同学" class="headerlink" title="学院方向不同：Java、Python、C++，仅有一条链表，其前中后三部分，分别是：Java、Python、C++的同学"></a>学院方向不同：Java、Python、C++，仅有一条链表，其前中后三部分，分别是：Java、Python、C++的同学</h5></li><li><h5 id="每种语言都会不断有学生进来，每次都要将对应的同学插入到对应的段的末尾"><a href="#每种语言都会不断有学生进来，每次都要将对应的同学插入到对应的段的末尾" class="headerlink" title="每种语言都会不断有学生进来，每次都要将对应的同学插入到对应的段的末尾"></a>每种语言都会不断有学生进来，每次都要将对应的同学插入到对应的段的末尾</h5></li><li><h5 id="具体代码如下：（2023-07-27早）"><a href="#具体代码如下：（2023-07-27早）" class="headerlink" title="具体代码如下：（2023/07/27早）"></a>具体代码如下：（2023/07/27早）</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/7/27 9:17</span><br><span class="hljs-comment"> * Function:</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InsertStudent</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 1&quot;</span>, <span class="hljs-string">&quot;Java&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 2&quot;</span>, <span class="hljs-string">&quot;Python&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 3&quot;</span>, <span class="hljs-string">&quot;C++&quot;</span>);<br>        <span class="hljs-comment">// 创建节点数组并存储节点</span><br>        ListNode[] nodes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>[<span class="hljs-number">3</span>];<br>        nodes[<span class="hljs-number">0</span>] = node1;<br>        nodes[<span class="hljs-number">1</span>] = node2;<br>        nodes[<span class="hljs-number">2</span>] = node3;<br>        <span class="hljs-comment">// 初始化链表</span><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">head</span> <span class="hljs-operator">=</span> initLinkList(nodes);<br><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 4&quot;</span>, <span class="hljs-string">&quot;Java&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 5&quot;</span>, <span class="hljs-string">&quot;C++&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 6&quot;</span>, <span class="hljs-string">&quot;Python&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node8</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 8&quot;</span>, <span class="hljs-string">&quot;C++&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node9</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 9&quot;</span>, <span class="hljs-string">&quot;Python&quot;</span>);<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">node7</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-string">&quot;Node 7&quot;</span>, <span class="hljs-string">&quot;Java&quot;</span>);<br>        <span class="hljs-comment">// 插入学生节点</span><br>        insertStudentByLanguage(node4, head);<br>        insertStudentByLanguage(node5, head);<br>        insertStudentByLanguage(node6, head);<br>        insertStudentByLanguage(node7, head);<br>        insertStudentByLanguage(node8, head);<br>        insertStudentByLanguage(node9, head);<br><br>        printLinkList(head);<br>    &#125;<br>    <span class="hljs-comment">// 插入学生节点</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertStudentByLanguage</span><span class="hljs-params">(ListNode node, ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">language</span> <span class="hljs-operator">=</span> node.language;<br><br>        <span class="hljs-keyword">switch</span> (language) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;Java&quot;</span>:<br>                <span class="hljs-keyword">while</span> (!cur.next.language.equals(<span class="hljs-string">&quot;Python&quot;</span>)) &#123;<br>                    cur = cur.next;<br>                &#125;<br>                node.next = cur.next;<br>                cur.next = node;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;Python&quot;</span>:<br>                <span class="hljs-keyword">while</span> (!cur.next.language.equals(<span class="hljs-string">&quot;C++&quot;</span>)) &#123;<br>                    cur = cur.next;<br>                &#125;<br>                node.next = cur.next;<br>                cur.next = node;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;C++&quot;</span>:<br>                <span class="hljs-keyword">while</span> (cur.next != <span class="hljs-literal">null</span>) &#123;<br>                    cur = cur.next;<br>                &#125;<br>                cur.next = node;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 打印链表</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">printLinkList</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-keyword">while</span> (temp != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(temp + <span class="hljs-string">&quot;--&gt; &quot;</span>);<br>            temp = temp.next;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 初始化链表</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">initLinkList</span><span class="hljs-params">(ListNode[] array)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">head</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>, cur = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">while</span> (i &lt; array.length) &#123;<br>            <span class="hljs-type">ListNode</span> <span class="hljs-variable">newNode</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(array[i].name, array[i].language);<br><br>            <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">null</span>) &#123;<br>                head = newNode;<br>                cur = head;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                cur.next = newNode;<br>                cur = newNode;<br>            &#125;<br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">return</span> head;<br>    &#125;<br><br>    <span class="hljs-comment">// 节点结构</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ListNode</span> &#123;<br>        <span class="hljs-keyword">public</span> String name;<br>        <span class="hljs-keyword">public</span> String language;<br>        <span class="hljs-keyword">public</span> ListNode next;<br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">ListNode</span><span class="hljs-params">(String name, String language)</span> &#123;<br>            <span class="hljs-built_in">this</span>.name = name;<br>            <span class="hljs-built_in">this</span>.language = language;<br>        &#125;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ListNode&#123;&quot;</span> +<br>                    <span class="hljs-string">&quot;name=&#x27;&quot;</span> + name + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                    <span class="hljs-string">&quot;, language=&#x27;&quot;</span> + language + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                    <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="反转链表"><a href="#反转链表" class="headerlink" title="反转链表"></a>反转链表</h2><h3 id="基础知识-基本操作（青铜挑战）"><a href="#基础知识-基本操作（青铜挑战）" class="headerlink" title="基础知识 + 基本操作（青铜挑战）"></a>基础知识 + 基本操作（青铜挑战）</h3><ul><li><h5 id="什么是链表反转呢？如图所示："><a href="#什么是链表反转呢？如图所示：" class="headerlink" title="什么是链表反转呢？如图所示："></a>什么是链表反转呢？如图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230728093653981.png" alt="image-20230728093653981"></p><ul><li><p>常见的链表反转的方法：虚拟头节点、直接反转、递归</p></li><li><h5 id="虚拟头节点，具体代码如下："><a href="#虚拟头节点，具体代码如下：" class="headerlink" title="虚拟头节点，具体代码如下："></a>虚拟头节点，具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 方法1：虚拟头结点</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">reverseListByDummyNotCreate</span><span class="hljs-params">(ListNode head)</span> &#123;<br>      <span class="hljs-type">ListNode</span> <span class="hljs-variable">ans</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(-<span class="hljs-number">1</span>);<br>      <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> head;<br>      <span class="hljs-keyword">while</span> (cur != <span class="hljs-literal">null</span>) &#123;<br>          <span class="hljs-type">ListNode</span> <span class="hljs-variable">next</span> <span class="hljs-operator">=</span> cur.next;<br>          cur.next = ans.next;<br>          ans.next = cur;<br>          cur = next;<br>      &#125;<br>      <span class="hljs-keyword">return</span> ans.next;<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="如图所示："><a href="#如图所示：" class="headerlink" title="如图所示："></a>如图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230728093915867.png" alt="image-20230728093915867"></p><ul><li><h5 id="直接反转，具体代码如下："><a href="#直接反转，具体代码如下：" class="headerlink" title="直接反转，具体代码如下："></a>直接反转，具体代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 方法2：直接反转</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> head</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ListNode <span class="hljs-title function_">reverseListSimple</span><span class="hljs-params">(ListNode head)</span> &#123;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">prev</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-type">ListNode</span> <span class="hljs-variable">curr</span> <span class="hljs-operator">=</span> head;<br>       <span class="hljs-keyword">while</span> (curr != <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-type">ListNode</span> <span class="hljs-variable">next</span> <span class="hljs-operator">=</span> curr.next;<br>           curr.next = prev;<br>           prev = curr;<br>           curr = next;<br>       &#125;<br>       <span class="hljs-keyword">return</span> prev;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="如图所示：-1"><a href="#如图所示：-1" class="headerlink" title="如图所示："></a>如图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230728103908941.png" alt="image-20230728103908941"></p><h3 id="拓展训练（白银挑战）"><a href="#拓展训练（白银挑战）" class="headerlink" title="拓展训练（白银挑战）"></a>拓展训练（白银挑战）</h3><ul><li></li></ul><h3 id="通关（过关挑战）-1"><a href="#通关（过关挑战）-1" class="headerlink" title="通关（过关挑战）"></a>通关（过关挑战）</h3>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决Git远程推送报错的终极指南</title>
    <link href="/blog/2023/07/15/%E8%A7%A3%E5%86%B3Git%E8%BF%9C%E7%A8%8B%E6%8E%A8%E9%80%81%E6%8A%A5%E9%94%99%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/"/>
    <url>/blog/2023/07/15/%E8%A7%A3%E5%86%B3Git%E8%BF%9C%E7%A8%8B%E6%8E%A8%E9%80%81%E6%8A%A5%E9%94%99%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h5 id="日常-git-远程推送代码时，总会遇到莫名其妙的问题，深有感触，决定写下这篇文档，供日后参考使用"><a href="#日常-git-远程推送代码时，总会遇到莫名其妙的问题，深有感触，决定写下这篇文档，供日后参考使用" class="headerlink" title="日常 git 远程推送代码时，总会遇到莫名其妙的问题，深有感触，决定写下这篇文档，供日后参考使用"></a>日常 git 远程推送代码时，总会遇到莫名其妙的问题，深有感触，决定写下这篇文档，供日后参考使用</h5></li><li><h5 id="77条消息-git推送代码到远程仓库失败的问题-git-推送失败-反方向的针的博客-CSDN博客"><a href="#77条消息-git推送代码到远程仓库失败的问题-git-推送失败-反方向的针的博客-CSDN博客" class="headerlink" title="(77条消息) git推送代码到远程仓库失败的问题_git 推送失败_反方向的针的博客-CSDN博客"></a><a href="https://blog.csdn.net/ljkfcs/article/details/127685863">(77条消息) git推送代码到远程仓库失败的问题_git 推送失败_反方向的针的博客-CSDN博客</a></h5></li><li><h5 id="77条消息-git撤销推送-git-取消推送-wxz470960225的博客-CSDN博客"><a href="#77条消息-git撤销推送-git-取消推送-wxz470960225的博客-CSDN博客" class="headerlink" title="(77条消息) git撤销推送_git 取消推送_wxz470960225的博客-CSDN博客"></a><a href="https://blog.csdn.net/u010784833/article/details/131305689">(77条消息) git撤销推送_git 取消推送_wxz470960225的博客-CSDN博客</a></h5></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是版本控制"><a href="#什么是版本控制" class="headerlink" title="什么是版本控制"></a>什么是版本控制</h3><ul><li><h5 id="版本控制最主要的功能就是追踪文件的变更。"><a href="#版本控制最主要的功能就是追踪文件的变更。" class="headerlink" title="版本控制最主要的功能就是追踪文件的变更。"></a>版本控制最主要的功能就是追踪文件的变更。</h5></li><li><h5 id="它将什么时候、什么人更改了文件的什么内容等信息忠实地了记录下来。"><a href="#它将什么时候、什么人更改了文件的什么内容等信息忠实地了记录下来。" class="headerlink" title="它将什么时候、什么人更改了文件的什么内容等信息忠实地了记录下来。"></a>它将什么时候、什么人更改了文件的什么内容等信息忠实地了记录下来。</h5></li><li><h5 id="每一次文件的改变，文件的版本号都将增加。"><a href="#每一次文件的改变，文件的版本号都将增加。" class="headerlink" title="每一次文件的改变，文件的版本号都将增加。"></a>每一次文件的改变，文件的版本号都将增加。</h5></li><li><h5 id="除了记录版本变更外，版本控制的另一个重要功能是并行开发。"><a href="#除了记录版本变更外，版本控制的另一个重要功能是并行开发。" class="headerlink" title="除了记录版本变更外，版本控制的另一个重要功能是并行开发。"></a>除了记录版本变更外，版本控制的另一个重要功能是并行开发。</h5></li><li><h5 id="软件开发往往是多人协同作业，版本控制可以有效地解决版本的同步以及不同开发者之间的开发通信问题，提高协同开发的效率。"><a href="#软件开发往往是多人协同作业，版本控制可以有效地解决版本的同步以及不同开发者之间的开发通信问题，提高协同开发的效率。" class="headerlink" title="软件开发往往是多人协同作业，版本控制可以有效地解决版本的同步以及不同开发者之间的开发通信问题，提高协同开发的效率。"></a>软件开发往往是多人协同作业，版本控制可以有效地解决版本的同步以及不同开发者之间的开发通信问题，提高协同开发的效率。</h5></li><li><h5 id="并行开发中最常见的不同版本软件的错误-Bug-修正问题也可以通过版本控制中分支与合并的方法有效地解决。"><a href="#并行开发中最常见的不同版本软件的错误-Bug-修正问题也可以通过版本控制中分支与合并的方法有效地解决。" class="headerlink" title="并行开发中最常见的不同版本软件的错误(Bug)修正问题也可以通过版本控制中分支与合并的方法有效地解决。"></a>并行开发中最常见的不同版本软件的错误(Bug)修正问题也可以通过版本控制中分支与合并的方法有效地解决。</h5></li></ul><h3 id="Git是干什么的"><a href="#Git是干什么的" class="headerlink" title="Git是干什么的"></a>Git是干什么的</h3><h2 id="远程推送报错"><a href="#远程推送报错" class="headerlink" title="远程推送报错"></a>远程推送报错</h2><ul><li><h5 id="我们在本地向远程仓库推送代码时，总会不可避免地出现报错"><a href="#我们在本地向远程仓库推送代码时，总会不可避免地出现报错" class="headerlink" title="我们在本地向远程仓库推送代码时，总会不可避免地出现报错"></a>我们在本地向远程仓库推送代码时，总会不可避免地出现报错</h5></li><li><h5 id="我们必须要明确的一点是：推送代码，是本地向远程仓库推送"><a href="#我们必须要明确的一点是：推送代码，是本地向远程仓库推送" class="headerlink" title="我们必须要明确的一点是：推送代码，是本地向远程仓库推送"></a>我们必须要明确的一点是：推送代码，是本地向远程仓库推送</h5></li><li><h5 id="远程推送代码，就是把本地的代码同步更新到远程仓库中，使远程代码与本地代码保持一致"><a href="#远程推送代码，就是把本地的代码同步更新到远程仓库中，使远程代码与本地代码保持一致" class="headerlink" title="远程推送代码，就是把本地的代码同步更新到远程仓库中，使远程代码与本地代码保持一致"></a>远程推送代码，就是把本地的代码同步更新到远程仓库中，使远程代码与本地代码保持一致</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">大白话讲，就是允许本地代码比远程代码多一部分，<br>即远程仓库有的代码，本地仓库必须有；远程仓库没有的，本地仓库也可以有<br></code></pre></td></tr></table></figure><ul><li><h5 id="了解了这个，理解远程推送报错原因就比较轻松了"><a href="#了解了这个，理解远程推送报错原因就比较轻松了" class="headerlink" title="了解了这个，理解远程推送报错原因就比较轻松了"></a>了解了这个，理解远程推送报错原因就比较轻松了</h5></li><li><h5 id="引起远程推送错误的原因有很多，接下来我们会一一罗列出引起报错的各种情况，再逐个给出解决方法"><a href="#引起远程推送错误的原因有很多，接下来我们会一一罗列出引起报错的各种情况，再逐个给出解决方法" class="headerlink" title="引起远程推送错误的原因有很多，接下来我们会一一罗列出引起报错的各种情况，再逐个给出解决方法"></a>引起远程推送错误的原因有很多，接下来我们会一一罗列出引起报错的各种情况，再逐个给出解决方法</h5></li></ul><h3 id="远程仓库未同步"><a href="#远程仓库未同步" class="headerlink" title="远程仓库未同步"></a>远程仓库未同步</h3><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><ul><li><h5 id="情景："><a href="#情景：" class="headerlink" title="情景："></a>情景：</h5></li></ul><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li><h5 id="在-push-之前执行下面的代码："><a href="#在-push-之前执行下面的代码：" class="headerlink" title="在 push 之前执行下面的代码："></a>在 push 之前执行下面的代码：</h5></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git pull origin <span class="hljs-keyword">master</span> <span class="hljs-title">--allow-unrelated-histories</span><br></code></pre></td></tr></table></figure><h3 id="本地仓库未同步"><a href="#本地仓库未同步" class="headerlink" title="本地仓库未同步"></a>本地仓库未同步</h3><h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><ul><li><h5 id="情景：我们希望将本地已经写好的代码，推送到远程仓库托管"><a href="#情景：我们希望将本地已经写好的代码，推送到远程仓库托管" class="headerlink" title="情景：我们希望将本地已经写好的代码，推送到远程仓库托管"></a>情景：我们希望将本地已经写好的代码，推送到远程仓库托管</h5></li><li><h5 id="那我们就需要在新建仓库，而新增的仓库，我们一般都勾选添加-readMe-md文件"><a href="#那我们就需要在新建仓库，而新增的仓库，我们一般都勾选添加-readMe-md文件" class="headerlink" title="那我们就需要在新建仓库，而新增的仓库，我们一般都勾选添加 readMe.md文件"></a>那我们就需要在新建仓库，而新增的仓库，我们一般都勾选添加 readMe.md文件</h5></li><li><h5 id="这时，我们在本地当然是这样操作了："><a href="#这时，我们在本地当然是这样操作了：" class="headerlink" title="这时，我们在本地当然是这样操作了："></a>这时，我们在本地当然是这样操作了：</h5></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">git remote <span class="hljs-keyword">add </span><span class="hljs-keyword">origin </span>【远程仓库地址】<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> .<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> master<br></code></pre></td></tr></table></figure><ul><li><h5 id="但这时，会报错："><a href="#但这时，会报错：" class="headerlink" title="但这时，会报错："></a>但这时，会报错：</h5></li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">! [rejected] master -&gt; master (fetch <span class="hljs-built_in">first</span>) <span class="hljs-built_in">error</span>: fail to <span class="hljs-built_in">push</span> <span class="hljs-built_in">some</span> refs<br></code></pre></td></tr></table></figure><ul><li><h5 id="导致问题出现的原因是因为：远程代码里存在readMe-md文件"><a href="#导致问题出现的原因是因为：远程代码里存在readMe-md文件" class="headerlink" title="导致问题出现的原因是因为：远程代码里存在readMe.md文件"></a>导致问题出现的原因是因为：远程代码里存在readMe.md文件</h5></li><li><h5 id="什么意思呢？我们在前面提到过，仅允许本地代码比远程代码多一部分，而现在，远程代码存在readMe-md文件，但本地没有"><a href="#什么意思呢？我们在前面提到过，仅允许本地代码比远程代码多一部分，而现在，远程代码存在readMe-md文件，但本地没有" class="headerlink" title="什么意思呢？我们在前面提到过，仅允许本地代码比远程代码多一部分，而现在，远程代码存在readMe.md文件，但本地没有"></a>什么意思呢？我们在前面提到过，仅允许本地代码比远程代码多一部分，而现在，远程代码存在readMe.md文件，但本地没有</h5></li><li><h5 id="此时，我们把远程仓库的readMe-md文件理解为多余文件，这种远程推送报错原因归类为本地仓库未同步"><a href="#此时，我们把远程仓库的readMe-md文件理解为多余文件，这种远程推送报错原因归类为本地仓库未同步" class="headerlink" title="此时，我们把远程仓库的readMe.md文件理解为多余文件，这种远程推送报错原因归类为本地仓库未同步"></a>此时，我们把远程仓库的readMe.md文件理解为多余文件，这种远程推送报错原因归类为本地仓库未同步</h5></li><li><h5 id="我们的解决方法是：在远程推送之前，先将远程仓库的多余文件拉取至本地，同步两个仓库"><a href="#我们的解决方法是：在远程推送之前，先将远程仓库的多余文件拉取至本地，同步两个仓库" class="headerlink" title="我们的解决方法是：在远程推送之前，先将远程仓库的多余文件拉取至本地，同步两个仓库"></a>我们的解决方法是：在远程推送之前，先将远程仓库的多余文件拉取至本地，同步两个仓库</h5></li></ul><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li><h5 id="在执行-push-之前，执行以下代码即可："><a href="#在执行-push-之前，执行以下代码即可：" class="headerlink" title="在执行 push 之前，执行以下代码即可："></a>在执行 push 之前，执行以下代码即可：</h5></li><li><h5 id="在-push-之前执行下面的代码：-1"><a href="#在-push-之前执行下面的代码：-1" class="headerlink" title="在 push 之前执行下面的代码："></a>在 push 之前执行下面的代码：</h5></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git pull <span class="hljs-comment">--rebase origin master</span><br></code></pre></td></tr></table></figure><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230723160919462.png" alt="image-20230723160919462"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot配置</title>
    <link href="/blog/2023/07/15/SpringBoot%E9%85%8D%E7%BD%AE/"/>
    <url>/blog/2023/07/15/SpringBoot%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h3 id="配置属性映射成员变量-实体类"><a href="#配置属性映射成员变量-实体类" class="headerlink" title="配置属性映射成员变量/实体类"></a>配置属性映射成员变量/实体类</h3><ul><li><h5 id="我们在配置文件-application-yaml-中，填写如下配置："><a href="#我们在配置文件-application-yaml-中，填写如下配置：" class="headerlink" title="我们在配置文件 application.yaml 中，填写如下配置："></a>我们在配置文件 application.yaml 中，填写如下配置：</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">pattern:</span><br>    <span class="hljs-attr">dateformat:</span> <span class="hljs-string">yyyy-MM-dd</span> <span class="hljs-string">HH:mm:ss</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="我们希望将该配置映射至成员变量-Java-实体类中使用，有以下两种方法："><a href="#我们希望将该配置映射至成员变量-Java-实体类中使用，有以下两种方法：" class="headerlink" title="我们希望将该配置映射至成员变量/ Java 实体类中使用，有以下两种方法："></a>我们希望将该配置映射至成员变量/ Java 实体类中使用，有以下两种方法：</h5></li></ul><h4 id="Value注解（成员变量）"><a href="#Value注解（成员变量）" class="headerlink" title="@Value注解（成员变量）"></a>@Value注解（成员变量）</h4><ul><li><h5 id="只需在变量上方添加-Value注解，使用-“-”-符号将指定配置属性映射至该变量即可，如下所示："><a href="#只需在变量上方添加-Value注解，使用-“-”-符号将指定配置属性映射至该变量即可，如下所示：" class="headerlink" title="只需在变量上方添加@Value注解，使用 “$” 符号将指定配置属性映射至该变量即可，如下所示："></a>只需在变量上方添加@Value注解，使用 “$” 符号将指定配置属性映射至该变量即可，如下所示：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/order&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderController</span> &#123;<br>    <span class="hljs-comment">// 日期格式</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;pattern.dateformat&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String dataformat;<br><span class="hljs-comment">// 获取当前日期</span><br>    <span class="hljs-meta">@GetMapping(&quot;/now&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">now</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;@Value: &quot;</span> + LocalDateTime.now().format(DateTimeFormatter.ofPattern(dataformat)；<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="如上，配置文件中的-pattern-dateformat-属性成功映射至变量-dataformat，其值为-“yyyy-MM-dd-HH-mm-ss”"><a href="#如上，配置文件中的-pattern-dateformat-属性成功映射至变量-dataformat，其值为-“yyyy-MM-dd-HH-mm-ss”" class="headerlink" title="如上，配置文件中的 pattern.dateformat 属性成功映射至变量 dataformat，其值为 “yyyy-MM-dd HH:mm:ss”"></a>如上，配置文件中的 pattern.dateformat 属性成功映射至变量 dataformat，其值为 “yyyy-MM-dd HH:mm:ss”</h5></li></ul><h4 id="ConfigurationProperties注解（实体类）"><a href="#ConfigurationProperties注解（实体类）" class="headerlink" title="@ConfigurationProperties注解（实体类）"></a>@ConfigurationProperties注解（实体类）</h4><ul><li><h5 id="只需在实体类上方添加-ConfigurationProperties-注解，设置参数-premix-的值为pattern，并声明成员变量-dateformat"><a href="#只需在实体类上方添加-ConfigurationProperties-注解，设置参数-premix-的值为pattern，并声明成员变量-dateformat" class="headerlink" title="只需在实体类上方添加 @ConfigurationProperties 注解，设置参数 premix 的值为pattern，并声明成员变量 dateformat"></a>只需在实体类上方添加 @ConfigurationProperties 注解，设置参数 premix 的值为pattern，并声明成员变量 dateformat</h5></li><li><h5 id="如下所示："><a href="#如下所示：" class="headerlink" title="如下所示："></a>如下所示：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;pattern&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PatternProperties</span> &#123;<br><span class="hljs-comment">// 日期格式</span><br>    <span class="hljs-keyword">private</span> String dateformat;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/order&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderController</span> &#123;<br><span class="hljs-comment">// 注入Bean</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> PatternProperties patternProperties;<br><span class="hljs-comment">// 获取当前日期</span><br>    <span class="hljs-meta">@GetMapping(&quot;/now&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">now</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;@Configuration: &quot;</span> + LocalDateTime.now().format(DateTimeFormatter.<br>        ofPattern(patternProperties.getDateformat()));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="如上，配置文件中的-pattern-已经成功映射至实体类-PatternProperties，其配置属性分别映射至实体类的同名成员变量"><a href="#如上，配置文件中的-pattern-已经成功映射至实体类-PatternProperties，其配置属性分别映射至实体类的同名成员变量" class="headerlink" title="如上，配置文件中的 pattern 已经成功映射至实体类 PatternProperties，其配置属性分别映射至实体类的同名成员变量"></a>如上，配置文件中的 pattern 已经成功映射至实体类 PatternProperties，其配置属性分别映射至实体类的同名成员变量</h5></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
    <categories>
      
      <category>SpringBoot</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深度解析Web开发中的跨域问题</title>
    <link href="/blog/2023/07/15/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90Web%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2023/07/15/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90Web%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h2 id=""><a href="#" class="headerlink" title=""></a></h2></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h2><h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><ul><li><h5 id="以下是跨域的标准定义："><a href="#以下是跨域的标准定义：" class="headerlink" title="以下是跨域的标准定义："></a>以下是跨域的标准定义：</h5></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">跨域指的是在浏览器中，当一个网页（或者Web应用）尝试访问不同域名、不同端口或不同协议的资源时，浏览器会限制该行为，防止潜在的安全风险。跨域问题是由浏览器的同源策略（Same-Origin <span class="hljs-keyword">Policy</span>）所引起的。<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">同源策略是一种安全策略，是浏览器的一项重要基础安全机制。它要求网页只能与同一域名、协议和端口的资源进行交互。同源策略的存在是为了防止恶意网站获取用户的敏感信息或进行中间人攻击等安全问题。<br></code></pre></td></tr></table></figure><ul><li><h5 id="很显然，跨域就是在浏览器请求资源的过程中发生的"><a href="#很显然，跨域就是在浏览器请求资源的过程中发生的" class="headerlink" title="很显然，跨域就是在浏览器请求资源的过程中发生的"></a>很显然，跨域就是在浏览器请求资源的过程中发生的</h5></li><li><h5 id="浏览器请求资源时，如果请求的目标和当前页面的域名、端口或协议不一致，就会触发跨域问题"><a href="#浏览器请求资源时，如果请求的目标和当前页面的域名、端口或协议不一致，就会触发跨域问题" class="headerlink" title="浏览器请求资源时，如果请求的目标和当前页面的域名、端口或协议不一致，就会触发跨域问题"></a>浏览器请求资源时，如果请求的目标和当前页面的域名、端口或协议不一致，就会触发跨域问题</h5></li><li><h5 id="具体来说，以下情况被认为是跨域访问："><a href="#具体来说，以下情况被认为是跨域访问：" class="headerlink" title="具体来说，以下情况被认为是跨域访问："></a>具体来说，以下情况被认为是跨域访问：</h5><ol><li><h5 id="不同域名：例如，www-example-com-和-api-example-com。"><a href="#不同域名：例如，www-example-com-和-api-example-com。" class="headerlink" title="不同域名：例如，www.example.com 和 api.example.com。"></a>不同域名：例如，<a href="http://www.example.com/">www.example.com</a> 和 api.example.com。</h5></li><li><h5 id="不同端口：例如，www-example-com-和-www-example-com-8080。"><a href="#不同端口：例如，www-example-com-和-www-example-com-8080。" class="headerlink" title="不同端口：例如，www.example.com 和 www.example.com:8080。"></a>不同端口：例如，<a href="http://www.example.com/">www.example.com</a> 和 <a href="http://www.example.com:8080。/">www.example.com:8080。</a></h5></li><li><h5 id="不同协议：例如，http-example-com-和-https-example-com。"><a href="#不同协议：例如，http-example-com-和-https-example-com。" class="headerlink" title="不同协议：例如，http://example.com 和 https://example.com。"></a>不同协议：例如，<a href="http://example.com/">http://example.com</a> 和 <a href="https://example.com./">https://example.com。</a></h5></li></ol></li><li><h5 id="现在的Web开发中都是前后端分离的开发模式，数据的获取并非同源，所以跨域的问题在我们日常开发中特别常见"><a href="#现在的Web开发中都是前后端分离的开发模式，数据的获取并非同源，所以跨域的问题在我们日常开发中特别常见" class="headerlink" title="现在的Web开发中都是前后端分离的开发模式，数据的获取并非同源，所以跨域的问题在我们日常开发中特别常见"></a>现在的Web开发中都是前后端分离的开发模式，数据的获取并非同源，所以跨域的问题在我们日常开发中特别常见</h5></li><li><h5 id="一般而言，跨域问题是在以下情况下产生的："><a href="#一般而言，跨域问题是在以下情况下产生的：" class="headerlink" title="一般而言，跨域问题是在以下情况下产生的："></a>一般而言，跨域问题是在以下情况下产生的：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">AJAX请求：当通过XMLHttpRequest对象发送异步请求时，如果请求的目标和当前页面的域名、端口或协议不一致，就会触发跨域问题。<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">资源加载：在网页中引入了来自不同域的外部资源，比如CSS、JavaScript、图片等文件时，如果资源服务器不允许跨域访问，也会产生跨域问题<br></code></pre></td></tr></table></figure><h3 id="广义的跨域"><a href="#广义的跨域" class="headerlink" title="广义的跨域"></a>广义的跨域</h3><ul><li><h5 id="其实浏览器加载的资源很多都是跨域的，只是有些资源的加载浏览器是允许的"><a href="#其实浏览器加载的资源很多都是跨域的，只是有些资源的加载浏览器是允许的" class="headerlink" title="其实浏览器加载的资源很多都是跨域的，只是有些资源的加载浏览器是允许的"></a>其实浏览器加载的资源很多都是跨域的，只是有些资源的加载浏览器是允许的</h5></li><li><h5 id="图片、CSS、Script等资源是不受同源策略限制的，一般不会触发跨域跨问题"><a href="#图片、CSS、Script等资源是不受同源策略限制的，一般不会触发跨域跨问题" class="headerlink" title="图片、CSS、Script等资源是不受同源策略限制的，一般不会触发跨域跨问题"></a>图片、CSS、Script等资源是不受同源策略限制的，一般不会触发跨域跨问题</h5></li></ul><h3 id="狭义的跨域"><a href="#狭义的跨域" class="headerlink" title="狭义的跨域"></a>狭义的跨域</h3><ul><li><h5 id="这里的跨域主要说的是-ajax-请求无法完成"><a href="#这里的跨域主要说的是-ajax-请求无法完成" class="headerlink" title="这里的跨域主要说的是 ajax 请求无法完成"></a>这里的跨域主要说的是 ajax 请求无法完成</h5></li><li><h5 id="跨域问题主要是在浏览器环境下出现的，当浏览器发现请求跨域时，会在请求头中加上一个Origin字段，目标服务器会返回一个Access-Control-Allow-Origin的响应头，确定是否允许跨域访问"><a href="#跨域问题主要是在浏览器环境下出现的，当浏览器发现请求跨域时，会在请求头中加上一个Origin字段，目标服务器会返回一个Access-Control-Allow-Origin的响应头，确定是否允许跨域访问" class="headerlink" title="跨域问题主要是在浏览器环境下出现的，当浏览器发现请求跨域时，会在请求头中加上一个Origin字段，目标服务器会返回一个Access-Control-Allow-Origin的响应头，确定是否允许跨域访问"></a>跨域问题主要是在浏览器环境下出现的，当浏览器发现请求跨域时，会在请求头中加上一个Origin字段，目标服务器会返回一个Access-Control-Allow-Origin的响应头，确定是否允许跨域访问</h5></li></ul><h2 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h2><h3 id="古老的JSONP"><a href="#古老的JSONP" class="headerlink" title="古老的JSONP"></a>古老的JSONP</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li><h5 id="JSONP（JSON-with-Padding）"><a href="#JSONP（JSON-with-Padding）" class="headerlink" title="JSONP（JSON with Padding）"></a>JSONP（JSON with Padding）</h5></li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ul><li><h5 id="JSONP的优点就是因为他够老，能兼容各种浏览器，无兼容问题，众生平等"><a href="#JSONP的优点就是因为他够老，能兼容各种浏览器，无兼容问题，众生平等" class="headerlink" title="JSONP的优点就是因为他够老，能兼容各种浏览器，无兼容问题，众生平等"></a>JSONP的优点就是因为他够老，能兼容各种浏览器，无兼容问题，众生平等</h5></li><li><h5 id="他发送的不是ajax请求，而是利用了script标签加载机制。他发送的不是ajax请求"><a href="#他发送的不是ajax请求，而是利用了script标签加载机制。他发送的不是ajax请求" class="headerlink" title="他发送的不是ajax请求，而是利用了script标签加载机制。他发送的不是ajax请求"></a>他发送的不是ajax请求，而是利用了script标签加载机制。他发送的不是ajax请求</h5></li><li><h5 id="了解了相关机制，我们看一下具体实现："><a href="#了解了相关机制，我们看一下具体实现：" class="headerlink" title="了解了相关机制，我们看一下具体实现："></a>了解了相关机制，我们看一下具体实现：</h5></li><li><h5 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">jsonp</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> script = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br>    script.<span class="hljs-property">type</span> = <span class="hljs-string">&#x27;text/javascript&#x27;</span>;<br><br>    <span class="hljs-comment">// 传参并指定回调执行函数为backFn</span><br>    script.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;http://localhost:8100/getUserInfo?uid=100&amp;callback=backFn&#x27;</span>;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(script);<br>&#125;<br><br><span class="hljs-comment">// 回调执行函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">backFn</span>(<span class="hljs-params">res</span>) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(res));<br>&#125;<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;btn_get_data&#x27;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-title function_">jsonp</span>();<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> uid = ctx.<span class="hljs-property">query</span>.<span class="hljs-property">uid</span>;<br><span class="hljs-keyword">let</span> callback=ctx.<span class="hljs-property">query</span>.<span class="hljs-property">callback</span>;<br>ctx.<span class="hljs-property">body</span> = <span class="hljs-string">&#x27;backFn(&#123;&quot;code&quot;: 0, &quot;user&quot;: &quot;admin&quot;&#125;)&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这种跨域解决方法只支持get，而且存在安全问题，技术发展至今，jsonp这种前后端耦合的方式肯定要被代替"><a href="#这种跨域解决方法只支持get，而且存在安全问题，技术发展至今，jsonp这种前后端耦合的方式肯定要被代替" class="headerlink" title="这种跨域解决方法只支持get，而且存在安全问题，技术发展至今，jsonp这种前后端耦合的方式肯定要被代替"></a>这种跨域解决方法只支持get，而且存在安全问题，技术发展至今，jsonp这种前后端耦合的方式肯定要被代替</h5></li><li><h5 id="有关JSONP跨域解决方案的具体介绍，可以看这篇博客："><a href="#有关JSONP跨域解决方案的具体介绍，可以看这篇博客：" class="headerlink" title="有关JSONP跨域解决方案的具体介绍，可以看这篇博客："></a>有关JSONP跨域解决方案的具体介绍，可以看这篇博客：</h5></li><li><h5 id="77条消息-jsonp原理详解——终于搞清楚jsonp是啥了-哪-吒的博客-CSDN博客"><a href="#77条消息-jsonp原理详解——终于搞清楚jsonp是啥了-哪-吒的博客-CSDN博客" class="headerlink" title="(77条消息) jsonp原理详解——终于搞清楚jsonp是啥了_哪 吒的博客-CSDN博客"></a><a href="https://blog.csdn.net/guorui_java/article/details/107345499">(77条消息) jsonp原理详解——终于搞清楚jsonp是啥了_哪 吒的博客-CSDN博客</a></h5></li></ul><h3 id="CORS跨域解决方案"><a href="#CORS跨域解决方案" class="headerlink" title="CORS跨域解决方案"></a>CORS跨域解决方案</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><ul><li><h5 id="CORS（Cross-origin-resource-sharing）即“跨域资源共享“"><a href="#CORS（Cross-origin-resource-sharing）即“跨域资源共享“" class="headerlink" title="CORS（Cross-origin resource sharing）即“跨域资源共享“"></a>CORS（Cross-origin resource sharing）即“跨域资源共享“</h5></li><li><h5 id="在出现CORS标准之前，-我们还只能通过jsonp（jsonp跨域请求详解）的形式去向“跨源”服务器去发送-XMLHttpRequest-请求，这种方式吃力不讨好，在请求方与接收方都需要做处理，而且请求的方式仅仅局限于GET。所以-，CORS标准必然是大势所趋，并且市场上绝大多数浏览器都已经支持CORS。"><a href="#在出现CORS标准之前，-我们还只能通过jsonp（jsonp跨域请求详解）的形式去向“跨源”服务器去发送-XMLHttpRequest-请求，这种方式吃力不讨好，在请求方与接收方都需要做处理，而且请求的方式仅仅局限于GET。所以-，CORS标准必然是大势所趋，并且市场上绝大多数浏览器都已经支持CORS。" class="headerlink" title="在出现CORS标准之前， 我们还只能通过jsonp（jsonp跨域请求详解）的形式去向“跨源”服务器去发送 XMLHttpRequest 请求，这种方式吃力不讨好，在请求方与接收方都需要做处理，而且请求的方式仅仅局限于GET。所以 ，CORS标准必然是大势所趋，并且市场上绝大多数浏览器都已经支持CORS。"></a>在出现CORS标准之前， 我们还只能通过<a href="https://zhuanlan.zhihu.com/p/24390509">jsonp（jsonp跨域请求详解）</a>的形式去向“跨源”服务器去发送 XMLHttpRequest 请求，这种方式吃力不讨好，在请求方与接收方都需要做处理，而且请求的方式仅仅局限于GET。所以 ，CORS标准必然是大势所趋，并且市场上绝大多数浏览器都已经支持CORS。</h5></li></ul><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><ul><li><h5 id="支持CORS请求的浏览器一旦发现-ajax-请求跨域，会对请求做一些特殊处理，对于已经实现CORS接口的服务端，接受请求，并做出回应"><a href="#支持CORS请求的浏览器一旦发现-ajax-请求跨域，会对请求做一些特殊处理，对于已经实现CORS接口的服务端，接受请求，并做出回应" class="headerlink" title="支持CORS请求的浏览器一旦发现 ajax 请求跨域，会对请求做一些特殊处理，对于已经实现CORS接口的服务端，接受请求，并做出回应"></a>支持CORS请求的浏览器一旦发现 ajax 请求跨域，会对请求做一些特殊处理，对于已经实现CORS接口的服务端，接受请求，并做出回应</h5></li><li><h5 id="有一种情况比较特殊，如果我们发送的跨域请求为“非简单请求”，浏览器会在发出此请求之前首先发送一个请求类型为OPTIONS的“预检请求”，验证请求源是否为服务端允许源，这些对于开发这来说是感觉不到的，由浏览器代理"><a href="#有一种情况比较特殊，如果我们发送的跨域请求为“非简单请求”，浏览器会在发出此请求之前首先发送一个请求类型为OPTIONS的“预检请求”，验证请求源是否为服务端允许源，这些对于开发这来说是感觉不到的，由浏览器代理" class="headerlink" title="有一种情况比较特殊，如果我们发送的跨域请求为“非简单请求”，浏览器会在发出此请求之前首先发送一个请求类型为OPTIONS的“预检请求”，验证请求源是否为服务端允许源，这些对于开发这来说是感觉不到的，由浏览器代理"></a>有一种情况比较特殊，如果我们发送的跨域请求为“非简单请求”，浏览器会在发出此请求之前首先发送一个请求类型为OPTIONS的“预检请求”，验证请求源是否为服务端允许源，这些对于开发这来说是感觉不到的，由浏览器代理</h5></li><li><h5 id="总而言之，客户端不需要对跨域请求做任何特殊处理"><a href="#总而言之，客户端不需要对跨域请求做任何特殊处理" class="headerlink" title="总而言之，客户端不需要对跨域请求做任何特殊处理"></a>总而言之，客户端不需要对跨域请求做任何特殊处理</h5></li><li><h5 id="有关CORS跨域解决方案的具体介绍，可以看这篇博客："><a href="#有关CORS跨域解决方案的具体介绍，可以看这篇博客：" class="headerlink" title="有关CORS跨域解决方案的具体介绍，可以看这篇博客："></a>有关CORS跨域解决方案的具体介绍，可以看这篇博客：</h5></li><li><h5 id="彻底理解CORS跨域原理-喵小Q-博客园-cnblogs-com"><a href="#彻底理解CORS跨域原理-喵小Q-博客园-cnblogs-com" class="headerlink" title="彻底理解CORS跨域原理 - 喵小Q - 博客园 (cnblogs.com)"></a><a href="https://www.cnblogs.com/qiujianmei/p/11649905.html">彻底理解CORS跨域原理 - 喵小Q - 博客园 (cnblogs.com)</a></h5></li><li><h5 id="我们在开发过程中，只需作这两个步骤，即可解决跨域问题："><a href="#我们在开发过程中，只需作这两个步骤，即可解决跨域问题：" class="headerlink" title="我们在开发过程中，只需作这两个步骤，即可解决跨域问题："></a>我们在开发过程中，只需作这两个步骤，即可解决跨域问题：</h5></li></ul><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><h5 id="总之，跨域问题在Web开发过程中很常见，只要搞清楚跨域产生的原因，解决跨域问题并不困难"><a href="#总之，跨域问题在Web开发过程中很常见，只要搞清楚跨域产生的原因，解决跨域问题并不困难" class="headerlink" title="总之，跨域问题在Web开发过程中很常见，只要搞清楚跨域产生的原因，解决跨域问题并不困难"></a>总之，跨域问题在Web开发过程中很常见，只要搞清楚跨域产生的原因，解决跨域问题并不困难</h5></li><li><h5 id="这里补充几种常见的跨域解决方法："><a href="#这里补充几种常见的跨域解决方法：" class="headerlink" title="这里补充几种常见的跨域解决方法："></a>这里补充几种常见的跨域解决方法：</h5></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml">要解决跨域问题，可以采取以下常见方法：<br><br>JSONP（JSON with Padding）：通过动态创建<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">标签，利用<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">标签没有跨域限制的特性，实现跨域请求。</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="language-handlebars"><span class="hljs-variable constant_">CORS</span>（<span class="hljs-title class_">Cross</span>-<span class="hljs-title class_">Origin</span> <span class="hljs-title class_">Resource</span> <span class="hljs-title class_">Sharing</span>）：在服务器端设置响应头，允许指定的域名或所有域名进行跨域访问。</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="language-handlebars">代理（<span class="hljs-title class_">Proxy</span>）：在自己的服务器上设置一个代理接口，将跨域请求转发到目标服务器上。</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="language-handlebars"><span class="hljs-title class_">WebSocket</span>：使用<span class="hljs-title class_">WebSocket</span>协议进行双向通信，不受同源策略限制。</span></span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>API开放平台-开发文档</title>
    <link href="/blog/2023/07/11/API%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <url>/blog/2023/07/11/API%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="前端框架搭建"><a href="#前端框架搭建" class="headerlink" title="前端框架搭建"></a>前端框架搭建</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li><h5 id="前端框架使用-ant-desigin-pro-快速搭建"><a href="#前端框架使用-ant-desigin-pro-快速搭建" class="headerlink" title="前端框架使用 ant desigin pro 快速搭建"></a>前端框架使用 ant desigin pro 快速搭建</h5></li><li><h5 id="官网：开始使用-Ant-Design-Pro"><a href="#官网：开始使用-Ant-Design-Pro" class="headerlink" title="官网：开始使用 - Ant Design Pro"></a>官网：<a href="https://pro.ant.design/zh-CN/docs/getting-started">开始使用 - Ant Design Pro</a></h5></li></ul><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><ul><li><h5 id="在正确安装Node-js环境下的前提下，依次执行以下命令："><a href="#在正确安装Node-js环境下的前提下，依次执行以下命令：" class="headerlink" title="在正确安装Node.js环境下的前提下，依次执行以下命令："></a>在正确安装Node.js环境下的前提下，依次执行以下命令：</h5></li><li><h5 id="使用npm全局安装-pro-cli-构建工具（脚手架）："><a href="#使用npm全局安装-pro-cli-构建工具（脚手架）：" class="headerlink" title="使用npm全局安装 pro-cli 构建工具（脚手架）："></a>使用npm全局安装 pro-cli 构建工具（脚手架）：</h5></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i @ant-design/pro-cli -g<br></code></pre></td></tr></table></figure><ul><li><h5 id="使用脚手架，在指定目录下快速搭建前端框架："><a href="#使用脚手架，在指定目录下快速搭建前端框架：" class="headerlink" title="使用脚手架，在指定目录下快速搭建前端框架："></a>使用脚手架，在指定目录下快速搭建前端框架：</h5></li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">pro</span> create <span class="hljs-keyword">memory</span>-api <br></code></pre></td></tr></table></figure><ul><li><h5 id="项目下安装yarn包管理工具："><a href="#项目下安装yarn包管理工具：" class="headerlink" title="项目下安装yarn包管理工具："></a>项目下安装yarn包管理工具：</h5></li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yarn -V</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="至此，前端项目框架搭建完成，启动项目："><a href="#至此，前端项目框架搭建完成，启动项目：" class="headerlink" title="至此，前端项目框架搭建完成，启动项目："></a>至此，前端项目框架搭建完成，启动项目：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yarn <span class="hljs-built_in">run</span> start<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230711232614130.png" alt="image-20230711232614130"></p><ul><li><h5 id="执行效果如下："><a href="#执行效果如下：" class="headerlink" title="执行效果如下："></a>执行效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230711232655300.png" alt="image-20230711232655300"></p><ul><li><h5 id="登录页面，效果如下："><a href="#登录页面，效果如下：" class="headerlink" title="登录页面，效果如下："></a>登录页面，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230711232732396.png" alt="image-20230711232732396"></p><h3 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h3><ul><li><h5 id="如果未安装yarn工具，而直接启动项目，会报如下错误："><a href="#如果未安装yarn工具，而直接启动项目，会报如下错误：" class="headerlink" title="如果未安装yarn工具，而直接启动项目，会报如下错误："></a>如果未安装yarn工具，而直接启动项目，会报如下错误：</h5></li></ul><ul><li><h5 id="如上所示，这是因为项目启动时，会使用到yarn包管理工具"><a href="#如上所示，这是因为项目启动时，会使用到yarn包管理工具" class="headerlink" title="如上所示，这是因为项目启动时，会使用到yarn包管理工具"></a>如上所示，这是因为项目启动时，会使用到yarn包管理工具</h5></li><li><h5 id="当我使用如下start-dev启动项目时，项目启动无误但登录不成功，这里先不深究，放一篇解决方法作为参照："><a href="#当我使用如下start-dev启动项目时，项目启动无误但登录不成功，这里先不深究，放一篇解决方法作为参照：" class="headerlink" title="当我使用如下start:dev启动项目时，项目启动无误但登录不成功，这里先不深究，放一篇解决方法作为参照："></a>当我使用如下start:dev启动项目时，项目启动无误但登录不成功，这里先不深究，放一篇解决方法作为参照：</h5></li><li><h5 id="🧐问题-【关于登录】本地新项目，使用隐身模式打开无法登录，一直跳-login页面-·-Issue-5573-·-ant-design-ant-design-pro-·-GitHub"><a href="#🧐问题-【关于登录】本地新项目，使用隐身模式打开无法登录，一直跳-login页面-·-Issue-5573-·-ant-design-ant-design-pro-·-GitHub" class="headerlink" title="[🧐问题]【关于登录】本地新项目，使用隐身模式打开无法登录，一直跳/login页面 · Issue #5573 · ant-design/ant-design-pro · GitHub"></a>[🧐<a href="https://github.com/ant-design/ant-design-pro/issues/5573">问题]【关于登录】本地新项目，使用隐身模式打开无法登录，一直跳/login页面 · Issue #5573 · ant-design/ant-design-pro · GitHub</a></h5></li></ul><h2 id="后端框架搭建"><a href="#后端框架搭建" class="headerlink" title="后端框架搭建"></a>后端框架搭建</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><ul><li><h5 id="后端框架直接拉取-springboot-init-项目模板，完成了后端框架的快速搭建"><a href="#后端框架直接拉取-springboot-init-项目模板，完成了后端框架的快速搭建" class="headerlink" title="后端框架直接拉取 springboot-init 项目模板，完成了后端框架的快速搭建"></a>后端框架直接拉取 springboot-init 项目模板，完成了后端框架的快速搭建</h5></li><li><h5 id="有关具体的模板功能介绍，请移步至：SQL之父：sql-father-backend-public"><a href="#有关具体的模板功能介绍，请移步至：SQL之父：sql-father-backend-public" class="headerlink" title="有关具体的模板功能介绍，请移步至：SQL之父：sql-father-backend-public"></a>有关具体的模板功能介绍，请移步至：<a href="https://github.com/liyupi/sql-father-backend-public">SQL之父：sql-father-backend-public</a></h5></li></ul><h3 id="建库建表"><a href="#建库建表" class="headerlink" title="建库建表"></a>建库建表</h3><ul><li><h5 id="新建接口信息表，建表信息如下：（2023-07-15晚）"><a href="#新建接口信息表，建表信息如下：（2023-07-15晚）" class="headerlink" title="新建接口信息表，建表信息如下：（2023/07/15晚）"></a>新建接口信息表，建表信息如下：（2023/07/15晚）</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 接口信息表</span><br>use memory_api;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> interface_info<br>(<br>    `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment comment <span class="hljs-string">&#x27;主键&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户名&#x27;</span>,<br>    `description` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;描述&#x27;</span>,<br>    `url` <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;接口地址&#x27;</span>,<br>    `requestHeader` text <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;请求头&#x27;</span>,<br>    `responseHeader` text <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;响应头&#x27;</span>,<br>    `userId` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>    `status` <span class="hljs-type">int</span> <span class="hljs-keyword">default</span> <span class="hljs-number">0</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;接口状态（0 - 关闭， 1 - 开启））&#x27;</span>,<br>    `<span class="hljs-keyword">method</span>` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;请求类型&#x27;</span>,<br>    `createTime` datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    `updateTime` datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    `isDelete` tinyint <span class="hljs-keyword">default</span> <span class="hljs-number">0</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除(0-未删, 1-已删)&#x27;</span><br>) comment <span class="hljs-string">&#x27;接口信息表&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="实体类映射"><a href="#实体类映射" class="headerlink" title="实体类映射"></a>实体类映射</h3><ul><li><h5 id="将interface-info表映射为实体类，"><a href="#将interface-info表映射为实体类，" class="headerlink" title="将interface_info表映射为实体类，"></a>将interface_info表映射为实体类，</h5></li><li><h5 id="这一步我们借助MybatisX-Generator插件来完成（具体使用方法可移步至《掌握-JetBrains-IntelliJ-IDEA：使用心得与技巧》一文中学习了解）"><a href="#这一步我们借助MybatisX-Generator插件来完成（具体使用方法可移步至《掌握-JetBrains-IntelliJ-IDEA：使用心得与技巧》一文中学习了解）" class="headerlink" title="这一步我们借助MybatisX-Generator插件来完成（具体使用方法可移步至《掌握-JetBrains-IntelliJ-IDEA：使用心得与技巧》一文中学习了解）"></a>这一步我们借助MybatisX-Generator插件来完成（具体使用方法可移步至《掌握-JetBrains-IntelliJ-IDEA：使用心得与技巧》一文中学习了解）</h5></li><li><h5 id="InterfaceInfo接口信息类："><a href="#InterfaceInfo接口信息类：" class="headerlink" title="InterfaceInfo接口信息类："></a>InterfaceInfo接口信息类：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接口信息表</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@TableName</span> interface_info</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@TableName(value =&quot;interface_info&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InterfaceInfo</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 主键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;name&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;description&quot;)</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;url&quot;)</span><br>    <span class="hljs-keyword">private</span> String url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;requestHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String requestHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 响应头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;responseHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String responseHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建人</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;userId&quot;)</span><br>    <span class="hljs-keyword">private</span> String userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口状态（0 - 关闭， 1 - 开启））</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;status&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求类型</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;method&quot;)</span><br>    <span class="hljs-keyword">private</span> String method;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;createTime&quot;)</span><br>    <span class="hljs-keyword">private</span> Date createTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;updateTime&quot;)</span><br>    <span class="hljs-keyword">private</span> Date updateTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否删除(0-未删, 1-已删)</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;isDelete&quot;)</span><br>    <span class="hljs-meta">@TableLogic</span><br>    <span class="hljs-keyword">private</span> Integer isDelete;<br><br>    <span class="hljs-meta">@TableField(exist = false)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="前端请求参数封装"><a href="#前端请求参数封装" class="headerlink" title="前端请求参数封装"></a>前端请求参数封装</h3><ul><li><h5 id="在实体类基础上，封装前端请求参数类，处理前端发送的HTTP请求，前端人员使用接口文档调试更加方便："><a href="#在实体类基础上，封装前端请求参数类，处理前端发送的HTTP请求，前端人员使用接口文档调试更加方便：" class="headerlink" title="在实体类基础上，封装前端请求参数类，处理前端发送的HTTP请求，前端人员使用接口文档调试更加方便："></a>在实体类基础上，封装前端请求参数类，处理前端发送的HTTP请求，前端人员使用接口文档调试更加方便：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建请求</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;https://github.com/liyupi&quot;&gt;程序员鱼皮&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@from</span> &lt;a href=&quot;https://yupi.icu&quot;&gt;编程导航知识星球&lt;/a&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InterfaceInfoAddRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;name&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;description&quot;)</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;url&quot;)</span><br>    <span class="hljs-keyword">private</span> String url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;requestHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String requestHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 响应头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;responseHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String responseHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建人</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;userId&quot;)</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求类型</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;method&quot;)</span><br>    <span class="hljs-keyword">private</span> String method;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询请求</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;https://github.com/liyupi&quot;&gt;程序员鱼皮&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@from</span> &lt;a href=&quot;https://yupi.icu&quot;&gt;编程导航知识星球&lt;/a&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InterfaceInfoQueryRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PageRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 主键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;name&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;description&quot;)</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;url&quot;)</span><br>    <span class="hljs-keyword">private</span> String url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;requestHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String requestHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 响应头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;responseHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String responseHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建人</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;userId&quot;)</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口状态（0 - 关闭， 1 - 开启））</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;status&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求类型</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;method&quot;)</span><br>    <span class="hljs-keyword">private</span> String method;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 更新请求</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> &lt;a href=&quot;https://github.com/liyupi&quot;&gt;程序员鱼皮&lt;/a&gt;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@from</span> &lt;a href=&quot;https://yupi.icu&quot;&gt;编程导航知识星球&lt;/a&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InterfaceInfoUpdateRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 主键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;name&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;description&quot;)</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;url&quot;)</span><br>    <span class="hljs-keyword">private</span> String url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;requestHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String requestHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 响应头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;responseHeader&quot;)</span><br>    <span class="hljs-keyword">private</span> String responseHeader;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口状态（0 - 关闭， 1 - 开启））</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;status&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求类型</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableField(value = &quot;method&quot;)</span><br>    <span class="hljs-keyword">private</span> String method;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="后端接口实现"><a href="#后端接口实现" class="headerlink" title="后端接口实现"></a>后端接口实现</h3><ul><li><h5 id="service层："><a href="#service层：" class="headerlink" title="service层："></a>service层：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 参数校验</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> interfaceInfo</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> add</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validInterfaceInfo</span><span class="hljs-params">(InterfaceInfo interfaceInfo, <span class="hljs-type">boolean</span> add)</span> &#123;<br>       <span class="hljs-keyword">if</span> (interfaceInfo == <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层：（处理增、删、改、查需求）"><a href="#controller层：（处理增、删、改、查需求）" class="headerlink" title="controller层：（处理增、删、改、查需求）"></a>controller层：（处理增、删、改、查需求）</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 创建接口</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> interfaceInfoAddRequest 创建接口参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request                 request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 创建接口成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">addInterfaceInfo</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> InterfaceInfoAddRequest interfaceInfoAddRequest,</span><br><span class="hljs-params">                                              HttpServletRequest request)</span> &#123;<br>       <span class="hljs-keyword">if</span> (interfaceInfoAddRequest == <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>       &#125;<br><br>       <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">interfaceInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InterfaceInfo</span>();<br>       BeanUtils.copyProperties(interfaceInfoAddRequest, interfaceInfo);<br>       interfaceInfoService.validInterfaceInfo(interfaceInfo, <span class="hljs-literal">true</span>);<br><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>       interfaceInfo.setUserId(loginUser.getId());<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> interfaceInfoService.save(interfaceInfo);<br>       ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br><br>       <span class="hljs-type">long</span> <span class="hljs-variable">newInterfaceInfoId</span> <span class="hljs-operator">=</span> interfaceInfo.getId();<br>       <span class="hljs-keyword">return</span> ResultUtils.success(newInterfaceInfoId);<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 删除接口</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> deleteRequest 删除接口参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request       request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 删除接口成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/delete&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">deleteInterfaceInfo</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> DeleteRequest deleteRequest, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-keyword">if</span> (deleteRequest == <span class="hljs-literal">null</span> || deleteRequest.getId() &lt;= <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>       &#125;<br><br>       <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>       <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> deleteRequest.getId();<br><br>       <span class="hljs-comment">// 判断是否存在</span><br>       <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">oldInterfaceInfo</span> <span class="hljs-operator">=</span> interfaceInfoService.getById(id);<br>       ThrowUtils.throwIf(oldInterfaceInfo == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br><br>       <span class="hljs-comment">// 仅本人或管理员可删除</span><br>       <span class="hljs-keyword">if</span> (!oldInterfaceInfo.getUserId().equals(user.getId()) &amp;&amp; !userService.isAdmin(request)) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>       &#125;<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> interfaceInfoService.removeById(id);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(b);<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 更新接口（仅管理员）</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> interfaceInfoUpdateRequest 更新接口参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 更新接口成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br>   <span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">updateInterfaceInfo</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> InterfaceInfoUpdateRequest interfaceInfoUpdateRequest)</span> &#123;<br>       <span class="hljs-keyword">if</span> (interfaceInfoUpdateRequest == <span class="hljs-literal">null</span> || interfaceInfoUpdateRequest.getId() &lt;= <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>       &#125;<br><br>       <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">interfaceInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InterfaceInfo</span>();<br>       BeanUtils.copyProperties(interfaceInfoUpdateRequest, interfaceInfo);<br>       interfaceInfoService.validInterfaceInfo(interfaceInfo, <span class="hljs-literal">false</span>);<br><br>       <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> interfaceInfoUpdateRequest.getId();<br>       <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">oldInterfaceInfo</span> <span class="hljs-operator">=</span> interfaceInfoService.getById(id);<br>       ThrowUtils.throwIf(oldInterfaceInfo == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> interfaceInfoService.updateById(interfaceInfo);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(result);<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 根据id获取接口信息</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> id 接口id</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 接口信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@GetMapping(&quot;/get&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;InterfaceInfo&gt; <span class="hljs-title function_">getInterfaceInfoById</span><span class="hljs-params">(<span class="hljs-type">long</span> id, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-keyword">if</span> (id &lt;= <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>       &#125;<br><br>       <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">interfaceInfo</span> <span class="hljs-operator">=</span> interfaceInfoService.getById(id);<br><br>       <span class="hljs-keyword">if</span> (interfaceInfo == <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_FOUND_ERROR);<br>       &#125;<br><br>       <span class="hljs-keyword">return</span> ResultUtils.success(interfaceInfo);<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取接口信息列表</span><br><span class="hljs-comment">     * 分页查询</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> interfaceInfoQueryRequest 查询参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request                   request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 接口信息列表</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/list/page&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;InterfaceInfo&gt;&gt; <span class="hljs-title function_">listInterfaceInfoByPage</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> InterfaceInfoQueryRequest interfaceInfoQueryRequest,</span><br><span class="hljs-params">                                                                     HttpServletRequest request)</span> &#123;<br>        <span class="hljs-keyword">if</span> (interfaceInfoQueryRequest == <span class="hljs-literal">null</span> || interfaceInfoQueryRequest.getId() &lt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">long</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> interfaceInfoQueryRequest.getCurrent();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> interfaceInfoQueryRequest.getPageSize();<br><br>        <span class="hljs-type">InterfaceInfo</span> <span class="hljs-variable">interfaceInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InterfaceInfo</span>();<br>        BeanUtils.copyProperties(interfaceInfoQueryRequest, interfaceInfo);<br>        interfaceInfoService.validInterfaceInfo(interfaceInfo, <span class="hljs-literal">false</span>);<br><br>        <span class="hljs-comment">// 限制爬虫</span><br>        ThrowUtils.throwIf(size &gt; <span class="hljs-number">20</span>, ErrorCode.PARAMS_ERROR);<br><br>        Page&lt;InterfaceInfo&gt; interfaceInfoPage = interfaceInfoService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size));<br>        <span class="hljs-keyword">return</span> ResultUtils.success(interfaceInfoPage);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="成功运行项目，接口文档调试页面正常：（2023-07-19晚）"><a href="#成功运行项目，接口文档调试页面正常：（2023-07-19晚）" class="headerlink" title="成功运行项目，接口文档调试页面正常：（2023/07/19晚）"></a>成功运行项目，接口文档调试页面正常：（2023/07/19晚）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230719101803347.png" alt="image-20230719101803347"></p><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><ul><li><h5 id="他奶奶的，早上启动前端项目时，发现报错了："><a href="#他奶奶的，早上启动前端项目时，发现报错了：" class="headerlink" title="他奶奶的，早上启动前端项目时，发现报错了："></a>他奶奶的，早上启动前端项目时，发现报错了：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230720104434926.png" alt="image-20230720104434926"></p><ul><li><h5 id="看起来好像是少了什么依赖，但我也没动这依赖啊，不好搞。"><a href="#看起来好像是少了什么依赖，但我也没动这依赖啊，不好搞。" class="headerlink" title="看起来好像是少了什么依赖，但我也没动这依赖啊，不好搞。"></a>看起来好像是少了什么依赖，但我也没动这依赖啊，不好搞。</h5></li><li><h5 id="于是我直接全部重新构建了下前端项目，可以跑起来了"><a href="#于是我直接全部重新构建了下前端项目，可以跑起来了" class="headerlink" title="于是我直接全部重新构建了下前端项目，可以跑起来了"></a>于是我直接全部重新构建了下前端项目，可以跑起来了</h5></li><li><h5 id="拿到-Ant-Design-Pro前端框架后，要做四件事："><a href="#拿到-Ant-Design-Pro前端框架后，要做四件事：" class="headerlink" title="拿到 Ant Design Pro前端框架后，要做四件事："></a>拿到 Ant Design Pro前端框架后，要做四件事：</h5><ul><li><h5 id="修改登录页面"><a href="#修改登录页面" class="headerlink" title="修改登录页面"></a>修改登录页面</h5></li><li><h5 id="新增注册页面"><a href="#新增注册页面" class="headerlink" title="新增注册页面"></a>新增注册页面</h5></li><li><h5 id="生成请求接口"><a href="#生成请求接口" class="headerlink" title="生成请求接口"></a>生成请求接口</h5></li><li><h5 id="保存用户登录态"><a href="#保存用户登录态" class="headerlink" title="保存用户登录态"></a>保存用户登录态</h5></li><li><h5 id="修改表单获取后台信息"><a href="#修改表单获取后台信息" class="headerlink" title="修改表单获取后台信息"></a>修改表单获取后台信息</h5></li></ul></li></ul><h4 id="修改登录页面-1"><a href="#修改登录页面-1" class="headerlink" title="修改登录页面"></a>修改登录页面</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">LoginForm</span><br>         contentStyle=&#123;&#123;<br>           <span class="hljs-attr">minWidth</span>: <span class="hljs-number">280</span>,<br>           <span class="hljs-attr">maxWidth</span>: <span class="hljs-string">&#x27;75vw&#x27;</span>,<br>         &#125;&#125;<br>         logo=&#123;<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;logo&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/logo.svg&quot;</span> /&gt;</span></span>&#125;<br>         title=<span class="hljs-string">&quot;Memory API&quot;</span><br>         subTitle=&#123;intl.<span class="hljs-title function_">formatMessage</span>(&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;pages.layouts.userLayout.title&#x27;</span> &#125;)&#125;<br>         initialValues=&#123;&#123;<br>           <span class="hljs-attr">autoLogin</span>: <span class="hljs-literal">true</span>,<br>         &#125;&#125;<br>         actions=&#123;[<br>           <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;loginWith&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.login.loginWith&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;其他登录方式&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           /&gt;</span></span>,<br>           <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ActionIcons</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;icons&quot;</span> /&gt;</span></span>,<br>         ]&#125;<br>         onFinish=&#123;<span class="hljs-keyword">async</span> (values) =&gt; &#123;<br>           <span class="hljs-keyword">await</span> <span class="hljs-title function_">handleSubmit</span>(values <span class="hljs-keyword">as</span> <span class="hljs-variable constant_">API</span>.<span class="hljs-property">LoginParams</span>);<br>         &#125;&#125;<br>       &gt;<br></code></pre></td></tr></table></figure><h4 id="新增注册页面-1"><a href="#新增注册页面-1" class="headerlink" title="新增注册页面"></a>新增注册页面</h4><ul><li><h5 id="基本仿照登录页面，在Page-User下新增Register-index-tsx文件，开发注册页面"><a href="#基本仿照登录页面，在Page-User下新增Register-index-tsx文件，开发注册页面" class="headerlink" title="基本仿照登录页面，在Page/User下新增Register/index.tsx文件，开发注册页面"></a>基本仿照登录页面，在Page/User下新增Register/index.tsx文件，开发注册页面</h5></li><li><h5 id="在config-routes-ts下新增Register页面路由："><a href="#在config-routes-ts下新增Register页面路由：" class="headerlink" title="在config/routes.ts下新增Register页面路由："></a>在config/routes.ts下新增Register页面路由：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span>,<br>    <span class="hljs-attr">layout</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">routes</span>: [<br>      <span class="hljs-comment">// 登录页</span><br>      &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;login&#x27;</span>,<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/login&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./User/Login&#x27;</span>,<br>      &#125;,<br>      <span class="hljs-comment">// 注册页</span><br>      &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;register&#x27;</span>,<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/register&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./User/Register&#x27;</span>,<br>      &#125;,<br>    ],<br>    <br>    ..............................<br>  &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改app-tsx文件，修改跳转login页的逻辑："><a href="#修改app-tsx文件，修改跳转login页的逻辑：" class="headerlink" title="修改app.tsx文件，修改跳转login页的逻辑："></a>修改app.tsx文件，修改跳转login页的逻辑：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> isDev = process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;development&#x27;</span>;<br><span class="hljs-keyword">const</span> loginPath = <span class="hljs-string">&#x27;/user/login&#x27;</span>;<br><span class="hljs-keyword">const</span> registerPath = <span class="hljs-string">&#x27;/user/register&#x27;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getInitialState</span>(<span class="hljs-params"></span>): <span class="hljs-title class_">Promise</span>&lt;&#123;<br>  settings?: <span class="hljs-title class_">Partial</span>&lt;<span class="hljs-title class_">LayoutSettings</span>&gt;;<br>  currentUser?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>;<br>  loading?: <span class="hljs-built_in">boolean</span>;<br>  fetchUserInfo?: <span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span> | <span class="hljs-literal">undefined</span>&gt;;<br>&#125;&gt; &#123;<br>  <span class="hljs-comment">// 1.获取当前用户登录态</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchUserInfo</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">const</span> msg = <span class="hljs-keyword">await</span> <span class="hljs-title function_">queryCurrentUser</span>(&#123;<br>        <span class="hljs-attr">skipErrorHandler</span>: <span class="hljs-literal">true</span>,<br>      &#125;);<br>      <span class="hljs-keyword">return</span> msg.<span class="hljs-property">data</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>      history.<span class="hljs-title function_">push</span>(loginPath);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;<br>  &#125;;<br><br>  <span class="hljs-comment">// 2.1.非登录/注册页，执行</span><br>  <span class="hljs-keyword">const</span> &#123; location &#125; = history;<br>  <span class="hljs-keyword">if</span> (location.<span class="hljs-property">pathname</span> !== loginPath &amp;&amp; location.<span class="hljs-property">pathname</span> !== registerPath) &#123;<br>    <span class="hljs-keyword">const</span> currentUser = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetchUserInfo</span>();<br>    <span class="hljs-keyword">return</span> &#123;<br>      fetchUserInfo,<br>      currentUser,<br>      <span class="hljs-attr">settings</span>: defaultSettings <span class="hljs-keyword">as</span> <span class="hljs-title class_">Partial</span>&lt;<span class="hljs-title class_">LayoutSettings</span>&gt;,<br>    &#125;;<br>  &#125;<br><br>  <span class="hljs-comment">//2.2.登录/注册页，执行</span><br>  <span class="hljs-keyword">return</span> &#123;<br>    fetchUserInfo,<br>    <span class="hljs-attr">settings</span>: defaultSettings <span class="hljs-keyword">as</span> <span class="hljs-title class_">Partial</span>&lt;<span class="hljs-title class_">LayoutSettings</span>&gt;,<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">// 构建页面时</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">layout</span>: <span class="hljs-title class_">RunTimeLayoutConfig</span> = <span class="hljs-function">(<span class="hljs-params">&#123; initialState, setInitialState &#125;</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">actionsRender</span>: <span class="hljs-function">() =&gt;</span> [<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Question</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;doc&quot;</span> /&gt;</span></span>, <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">SelectLang</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;SelectLang&quot;</span> /&gt;</span></span>],<br>    <span class="hljs-comment">// 获取头像</span><br>    <span class="hljs-attr">avatarProps</span>: &#123;<br>      <span class="hljs-attr">src</span>: initialState?.<span class="hljs-property">currentUser</span>?.<span class="hljs-property">avatar</span>,<br>      <span class="hljs-attr">title</span>: <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">AvatarName</span> /&gt;</span></span>,<br>      <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">_, avatarChildren</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">AvatarDropdown</span>&gt;</span>&#123;avatarChildren&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">AvatarDropdown</span>&gt;</span></span>;<br>      &#125;,<br>    &#125;,<br>    <span class="hljs-comment">// 获取水印</span><br>    <span class="hljs-attr">waterMarkProps</span>: &#123;<br>      <span class="hljs-attr">content</span>: initialState?.<span class="hljs-property">currentUser</span>?.<span class="hljs-property">name</span>,<br>    &#125;,<br>    <span class="hljs-comment">// 获取脚标</span><br>    <span class="hljs-attr">footerRender</span>: <span class="hljs-function">() =&gt;</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Footer</span> /&gt;</span></span>,<br>    <span class="hljs-comment">// 监测登录状态</span><br>    <span class="hljs-attr">onPageChange</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> &#123; location &#125; = history;<br>      <span class="hljs-comment">// 如果没有登录，且非登录/注册页面，重定向到 login</span><br>      <span class="hljs-keyword">if</span> (<br>        !initialState?.<span class="hljs-property">currentUser</span> &amp;&amp;<br>        location.<span class="hljs-property">pathname</span> !== loginPath &amp;&amp;<br>        location.<span class="hljs-property">pathname</span> !== registerPath<br>      ) &#123;<br>        history.<span class="hljs-title function_">push</span>(loginPath);<br>      &#125;<br>    &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="成功请求到register页面"><a href="#成功请求到register页面" class="headerlink" title="成功请求到register页面"></a>成功请求到register页面</h5></li><li><h5 id="下午又更新了下前端对-InterfaceInfo-增、删、改、查的参数校验逻辑"><a href="#下午又更新了下前端对-InterfaceInfo-增、删、改、查的参数校验逻辑" class="headerlink" title="下午又更新了下前端对 InterfaceInfo 增、删、改、查的参数校验逻辑"></a>下午又更新了下前端对 InterfaceInfo 增、删、改、查的参数校验逻辑</h5></li><li><h5 id="这里实现了两个枚举类，分别用来判断接口信息的状态和接口的请求方法是否正确："><a href="#这里实现了两个枚举类，分别用来判断接口信息的状态和接口的请求方法是否正确：" class="headerlink" title="这里实现了两个枚举类，分别用来判断接口信息的状态和接口的请求方法是否正确："></a>这里实现了两个枚举类，分别用来判断接口信息的状态和接口的请求方法是否正确：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接口请求方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">InterfaceInfoMethodEnum</span> &#123;<br>    GET(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;GET方法&quot;</span>),<br><br>    POST(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;POST方法&quot;</span>);<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String value;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String text;<br><br>    InterfaceInfoMethodEnum(String value, String text) &#123;<br>        <span class="hljs-built_in">this</span>.value = value;<br>        <span class="hljs-built_in">this</span>.text = text;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断接口请求方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> value 接口请求方法</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 存在与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> InterfaceInfoMethodEnum <span class="hljs-title function_">getEnumByValue</span><span class="hljs-params">(String value)</span> &#123;<br>        <span class="hljs-keyword">if</span> (value == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        InterfaceInfoMethodEnum[] values = InterfaceInfoMethodEnum.values();<br>        <span class="hljs-keyword">for</span> (InterfaceInfoMethodEnum infoStatusEnum : values) &#123;<br>            <span class="hljs-keyword">if</span> (infoStatusEnum.getValue().equals(value)) &#123;<br>                <span class="hljs-keyword">return</span> infoStatusEnum;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getText</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> text;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接口状态</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">InterfaceInfoStatusEnum</span> &#123;<br>    USUAL(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;正常&quot;</span>),<br><br>    ERROR(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;错误&quot;</span>);<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> value;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String text;<br><br>    InterfaceInfoStatusEnum(<span class="hljs-type">int</span> value, String text) &#123;<br>        <span class="hljs-built_in">this</span>.value = value;<br>        <span class="hljs-built_in">this</span>.text = text;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断接口状态</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> value 接口状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 存在与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> InterfaceInfoStatusEnum <span class="hljs-title function_">getEnumByValue</span><span class="hljs-params">(Integer value)</span> &#123;<br>        <span class="hljs-keyword">if</span> (value == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        InterfaceInfoStatusEnum[] values = InterfaceInfoStatusEnum.values();<br>        <span class="hljs-keyword">for</span> (InterfaceInfoStatusEnum infoStatusEnum : values) &#123;<br>            <span class="hljs-keyword">if</span> (infoStatusEnum.getValue() == value) &#123;<br>                <span class="hljs-keyword">return</span> infoStatusEnum;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getText</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> text;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="生成请求接口-1"><a href="#生成请求接口-1" class="headerlink" title="生成请求接口"></a>生成请求接口</h3><ul><li><h5 id="Ant-Design-Pro为我们提供了快速编写请求接口的方法，更加方便前端调用后端接口："><a href="#Ant-Design-Pro为我们提供了快速编写请求接口的方法，更加方便前端调用后端接口：" class="headerlink" title="Ant Design Pro为我们提供了快速编写请求接口的方法，更加方便前端调用后端接口："></a>Ant Design Pro为我们提供了快速编写请求接口的方法，更加方便前端调用后端接口：</h5></li><li><h5 id="首先拿到后端生成的接口文档的-json-信息："><a href="#首先拿到后端生成的接口文档的-json-信息：" class="headerlink" title="首先拿到后端生成的接口文档的 json 信息："></a>首先拿到后端生成的接口文档的 json 信息：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230720232106758.png" alt="image-20230720232106758"></p><ul><li><h5 id="访问这个地址："><a href="#访问这个地址：" class="headerlink" title="访问这个地址："></a>访问这个地址：</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">localhost:<span class="hljs-number">8101</span><span class="hljs-regexp">/api/</span>v2/api<br></code></pre></td></tr></table></figure><ul><li><h5 id="可以看到该接口文档的所有-json-信息，如下图所示："><a href="#可以看到该接口文档的所有-json-信息，如下图所示：" class="headerlink" title="可以看到该接口文档的所有 json 信息，如下图所示："></a>可以看到该接口文档的所有 json 信息，如下图所示：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230720232255418.png" alt="image-20230720232255418"></p><ul><li><h5 id="在前端config-config-ts下，修改相关信息，自动对接后端，生成可调用的接口方法："><a href="#在前端config-config-ts下，修改相关信息，自动对接后端，生成可调用的接口方法：" class="headerlink" title="在前端config/config.ts下，修改相关信息，自动对接后端，生成可调用的接口方法："></a>在前端config/config.ts下，修改相关信息，自动对接后端，生成可调用的接口方法：</h5></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">openAPI: [<br>    &#123;<br>      requestLibPath: <span class="hljs-string">&quot;import &#123; request &#125; from &#x27;@umijs/max&#x27;&quot;</span>,<br>      schemaPath: <span class="hljs-string">&#x27;http://localhost:8101/api//v2/api-docs&#x27;</span>,<br>      projectName: <span class="hljs-string">&#x27;memory-api&#x27;</span>,<br>    &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="输入以下命令，启动项目："><a href="#输入以下命令，启动项目：" class="headerlink" title="输入以下命令，启动项目："></a>输入以下命令，启动项目：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yarn <span class="hljs-built_in">run</span> openapi<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230720232623522.png" alt="image-20230720232623522"></p><ul><li><h5 id="在services-memory-api下，生成了与后端对应的接口方法（2023-07-20晚）"><a href="#在services-memory-api下，生成了与后端对应的接口方法（2023-07-20晚）" class="headerlink" title="在services/memory-api下，生成了与后端对应的接口方法（2023/07/20晚）"></a>在services/memory-api下，生成了与后端对应的接口方法（2023/07/20晚）</h5></li><li><h5 id="利用SQL之父工具，快速生成了模拟数据"><a href="#利用SQL之父工具，快速生成了模拟数据" class="headerlink" title="利用SQL之父工具，快速生成了模拟数据"></a>利用SQL之父工具，快速生成了模拟数据</h5></li></ul><h3 id="保存用户登录态-1"><a href="#保存用户登录态-1" class="headerlink" title="保存用户登录态"></a>保存用户登录态</h3><ul><li><h5 id="改造了Ant-Design-Pro的代码结构，详情可看《掌握-Ant-Design-Pro：目录结构、业务逻辑与代码改造技巧》（2023-07-21午）"><a href="#改造了Ant-Design-Pro的代码结构，详情可看《掌握-Ant-Design-Pro：目录结构、业务逻辑与代码改造技巧》（2023-07-21午）" class="headerlink" title="改造了Ant Design Pro的代码结构，详情可看《掌握-Ant-Design-Pro：目录结构、业务逻辑与代码改造技巧》（2023/07/21午）"></a>改造了Ant Design Pro的代码结构，详情可看《掌握-Ant-Design-Pro：目录结构、业务逻辑与代码改造技巧》（2023/07/21午）</h5></li></ul><h2 id="获取在线用户信息"><a href="#获取在线用户信息" class="headerlink" title="获取在线用户信息"></a>获取在线用户信息</h2><ul><li><h5 id="他爷爷的，之前提到过的跨域问题，可算解决了，仅仅在-requestErrorConfig-下加一行代码："><a href="#他爷爷的，之前提到过的跨域问题，可算解决了，仅仅在-requestErrorConfig-下加一行代码：" class="headerlink" title="他爷爷的，之前提到过的跨域问题，可算解决了，仅仅在 requestErrorConfig 下加一行代码："></a>他爷爷的，之前提到过的跨域问题，可算解决了，仅仅在 requestErrorConfig 下加一行代码：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">errorConfig</span>: <span class="hljs-title class_">RequestConfig</span> = &#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;http://localhost:8101&#x27;</span>,<br>  <span class="hljs-attr">withCredentials</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// 错误处理： umi@3 的错误处理方案。</span><br>  <span class="hljs-attr">errorConfig</span>: &#123;<br>  ..................<br>  &#125;<br>  ........................<br>  &#125;<br></code></pre></td></tr></table></figure><h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="注册页"><a href="#注册页" class="headerlink" title="注册页"></a>注册页</h3><ul><li><h5 id="这个目前还没做好，日后安排（2023-07-23早）"><a href="#这个目前还没做好，日后安排（2023-07-23早）" class="headerlink" title="这个目前还没做好，日后安排（2023/07/23早）"></a>这个目前还没做好，日后安排（2023/07/23早）</h5></li></ul><h3 id="用户信息页"><a href="#用户信息页" class="headerlink" title="用户信息页"></a>用户信息页</h3><ul><li><h5 id="添加页面很简单，新增路由，在指定路径下新增对应页面即可"><a href="#添加页面很简单，新增路由，在指定路径下新增对应页面即可" class="headerlink" title="添加页面很简单，新增路由，在指定路径下新增对应页面即可"></a>添加页面很简单，新增路由，在指定路径下新增对应页面即可</h5></li><li><h5 id="在-config-routes-ts-下新增-User-路由"><a href="#在-config-routes-ts-下新增-User-路由" class="headerlink" title="在 config/routes.ts 下新增 User 路由"></a>在 config/routes.ts 下新增 User 路由</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//用户信息页</span><br> &#123;<br>   <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户信息&#x27;</span>,<br>   <span class="hljs-attr">access</span>: <span class="hljs-string">&#x27;canAdmin&#x27;</span>,<br>   <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;user&#x27;</span>,<br>   <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/list&#x27;</span>,<br>   <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./TableList/User&#x27;</span>,<br> &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里，我把该页面查看权限设置为：管理员可查看"><a href="#这里，我把该页面查看权限设置为：管理员可查看" class="headerlink" title="这里，我把该页面查看权限设置为：管理员可查看"></a>这里，我把该页面查看权限设置为：管理员可查看</h5></li><li><h5 id="在-pages-TableList-下新增-User-页面"><a href="#在-pages-TableList-下新增-User-页面" class="headerlink" title="在 pages/TableList 下新增 User 页面"></a>在 pages/TableList 下新增 User 页面</h5></li><li><h5 id="这里展示下请求发送逻辑和信息展示表格："><a href="#这里展示下请求发送逻辑和信息展示表格：" class="headerlink" title="这里展示下请求发送逻辑和信息展示表格："></a>这里展示下请求发送逻辑和信息展示表格：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> <span class="hljs-attr">columns</span>: <span class="hljs-title class_">ProColumns</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">User</span>&gt;[] = [<br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>     <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">tip</span>: <span class="hljs-string">&#x27;用户id是唯一的&#x27;</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;账户&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userAccount&#x27;</span>,<br>     <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;textarea&#x27;</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;昵称&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userName&#x27;</span>,<br>     <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;textarea&#x27;</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;头像&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userAvater&#x27;</span>,<br>     <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;textarea&#x27;</span>,<br>     <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">_, record</span>) =&gt;</span> &#123;<br>       <span class="hljs-keyword">const</span> url = record.<span class="hljs-property">userAvatar</span>;<br><br>       <span class="hljs-keyword">return</span> (<br>         <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Space</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&#123;url&#125;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;img&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">width:</span> &#x27;<span class="hljs-attr">30px</span>&#x27;, <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">30px</span>&#x27; &#125;&#125; /&gt;</span></span><br><span class="language-xml">         <span class="hljs-tag">&lt;/<span class="hljs-name">Space</span>&gt;</span></span><br>       );<br>     &#125;,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;微信开放平台id&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;unionId&#x27;</span>,<br>     <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;公众号id&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;mpOpenId&#x27;</span>,<br>     <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;角色&#x27;</span>,<br>     <span class="hljs-attr">disable</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userRole&#x27;</span>,<br>     <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>     <span class="hljs-attr">filters</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-attr">onFilter</span>: <span class="hljs-literal">true</span>,<br><br>     <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">_, record</span>) =&gt;</span> &#123;<br>       <span class="hljs-keyword">let</span> tagColor = <span class="hljs-string">&#x27;grey&#x27;</span>;<br>       <span class="hljs-keyword">let</span> userRole = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>       <span class="hljs-keyword">switch</span> (record?.<span class="hljs-property">userRole</span>) &#123;<br>         <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;admin&#x27;</span>:<br>           tagColor = <span class="hljs-string">&#x27;green&#x27;</span>;<br>           userRole = <span class="hljs-string">&#x27;管理员&#x27;</span>;<br>           <span class="hljs-keyword">break</span>;<br>         <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;user&#x27;</span>:<br>           tagColor = <span class="hljs-string">&#x27;blue&#x27;</span>;<br>           userRole = <span class="hljs-string">&#x27;普通用户&#x27;</span>;<br>           <span class="hljs-keyword">break</span>;<br>         <span class="hljs-attr">default</span>:<br>           tagColor = <span class="hljs-string">&#x27;default&#x27;</span>;<br>       &#125;<br><br>       <span class="hljs-keyword">return</span> (<br>         <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Space</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&#123;tagColor&#125;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;record?.userRole&#125;</span>&gt;</span></span><br><span class="language-xml">             &#123;userRole&#125;</span><br><span class="language-xml">           <span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span></span><br><span class="language-xml">         <span class="hljs-tag">&lt;/<span class="hljs-name">Space</span>&gt;</span></span><br>       );<br>     &#125;,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;介绍&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userProfile&#x27;</span>,<br>     <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;注册时间&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>     <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;状态&#x27;</span>,<br>     <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;isDelete&#x27;</span>,<br>     <span class="hljs-attr">valueEnum</span>: &#123;<br>       <span class="hljs-number">0</span>: &#123;<br>         <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;正常&#x27;</span>,<br>         <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>       &#125;,<br>       <span class="hljs-attr">user</span>: &#123;<br>         <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;异常&#x27;</span>,<br>         <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;error&#x27;</span>,<br>       &#125;,<br>     &#125;,<br>   &#125;,<br><br>   &#123;<br>     <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;操作&#x27;</span>,<br>     <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;option&#x27;</span>,<br>     <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;option&#x27;</span>,<br>     <span class="hljs-attr">render</span>: <span class="hljs-function">() =&gt;</span> [<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;update&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">           // action?.startEditable?.(record.id);</span><br><span class="language-xml">         &#125;&#125;</span><br><span class="language-xml">       &gt;</span><br><span class="language-xml">         更新</span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;delete&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">           // action?.startEditable?.(record.id);</span><br><span class="language-xml">         &#125;&#125;</span><br><span class="language-xml">       &gt;</span><br><span class="language-xml">         删除</span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>     ],<br>   &#125;,<br> ];<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx">request=&#123;<span class="hljs-keyword">async</span> (<span class="hljs-attr">params</span>: &#123; pageSize?: <span class="hljs-built_in">number</span>; current?: <span class="hljs-built_in">number</span>; keyword?: <span class="hljs-built_in">string</span> &#125;) =&gt; &#123;<br>         <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listUserByPageUsingPOST</span>(&#123;<br>           ...params,<br>         &#125;);<br><br>         <span class="hljs-keyword">if</span> (res?.<span class="hljs-property">data</span>) &#123;<br>           <span class="hljs-keyword">return</span> &#123;<br>             <span class="hljs-attr">data</span>: res?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> || [],<br>             <span class="hljs-attr">success</span>: <span class="hljs-literal">true</span>,<br>             <span class="hljs-attr">total</span>: res?.<span class="hljs-property">data</span>.<span class="hljs-property">total</span>,<br>           &#125;;<br>         &#125;<br>       &#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230723143312368.png" alt="image-20230723143312368"></p><h3 id="接口信息页"><a href="#接口信息页" class="headerlink" title="接口信息页"></a>接口信息页</h3><ul><li><h5 id="在-config-routes-ts-下新增-InterfaceInfo-路由"><a href="#在-config-routes-ts-下新增-InterfaceInfo-路由" class="headerlink" title="在 config/routes.ts 下新增 InterfaceInfo 路由"></a>在 config/routes.ts 下新增 InterfaceInfo 路由</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//接口信息页</span><br>  &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;接口信息&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;user&#x27;</span>,<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/interfaceInfo/list&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./TableList/InterfaceInfo&#x27;</span>,<br>  &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="在-pages-TableList-下新增-User-页面-1"><a href="#在-pages-TableList-下新增-User-页面-1" class="headerlink" title="在 pages/TableList 下新增 User 页面"></a>在 pages/TableList 下新增 User 页面</h5></li><li><h5 id="这里展示下请求发送逻辑和信息展示表格：-1"><a href="#这里展示下请求发送逻辑和信息展示表格：-1" class="headerlink" title="这里展示下请求发送逻辑和信息展示表格："></a>这里展示下请求发送逻辑和信息展示表格：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> <span class="hljs-attr">columns</span>: <span class="hljs-title class_">ProColumns</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfoQueryRequest</span>&gt;[] = [<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;接口名称&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;name&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;接口描述&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;description&#x27;</span>,<br>    <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>  &#125;,<br><br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;接口状态&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;status&#x27;</span>,<br>    <span class="hljs-attr">filters</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">onFilter</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">valueEnum</span>: &#123;<br>      <span class="hljs-number">0</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;开放&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>      &#125;,<br>      <span class="hljs-number">1</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;异常&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;error&#x27;</span>,<br>        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,<br>      &#125;,<br>      <span class="hljs-number">2</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;解决中&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Processing&#x27;</span>,<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;接口方法&#x27;</span>,<br>    <span class="hljs-attr">disable</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;method&#x27;</span>,<br>    <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>    <span class="hljs-attr">filters</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">onFilter</span>: <span class="hljs-literal">true</span>,<br><br>    <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">_, record</span>) =&gt;</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Space</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&#123;</span>&#x27;<span class="hljs-attr">green</span>&#x27;&#125; <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;record?.method&#125;</span>&gt;</span></span><br><span class="language-xml">          &#123;record?.method&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Space</span>&gt;</span></span><br>    ),<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userId&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>    <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;date&#x27;</span>,<br>    <span class="hljs-attr">hideInSearch</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br><br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;操作&#x27;</span>,<br>    <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;option&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;option&#x27;</span>,<br>    <span class="hljs-attr">render</span>: <span class="hljs-function">() =&gt;</span> [<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;editable&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">          // action?.startEditable?.(record.id);</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;</span><br><span class="language-xml">        更新</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;noopener noreferrer&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;view&quot;</span>&gt;</span></span><br><span class="language-xml">        删除</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>    ],<br>  &#125;,<br>];<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里使用了高级表格组件"><a href="#这里使用了高级表格组件" class="headerlink" title="这里使用了高级表格组件"></a>这里使用了高级表格组件</h5></li><li><h5 id="优化了表格展现效果：可复制、省略、可过滤等等（2023-07-23午）"><a href="#优化了表格展现效果：可复制、省略、可过滤等等（2023-07-23午）" class="headerlink" title="优化了表格展现效果：可复制、省略、可过滤等等（2023/07/23午）"></a>优化了表格展现效果：可复制、省略、可过滤等等（2023/07/23午）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230723120419634.png" alt="image-20230723120419634"></p><h2 id="新增接口"><a href="#新增接口" class="headerlink" title="新增接口"></a>新增接口</h2><ul><li><h5 id="用户信息页的这些完成批量处理的代码可以删除："><a href="#用户信息页的这些完成批量处理的代码可以删除：" class="headerlink" title="用户信息页的这些完成批量处理的代码可以删除："></a>用户信息页的这些完成批量处理的代码可以删除：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs tsx">actionRef=&#123;actionRef&#125;<br>      rowKey=<span class="hljs-string">&quot;key&quot;</span><br>      search=&#123;&#123;<br>        <span class="hljs-attr">labelWidth</span>: <span class="hljs-number">120</span>,<br>      &#125;&#125;<br>      toolBarRender=&#123;<span class="hljs-function">() =&gt;</span> [<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">            handleModalOpen(true);</span><br><span class="language-xml">          &#125;&#125;</span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">PlusOutlined</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.new&quot;</span> <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;New&quot;</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,<br>      ]&#125;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#123;<span class="hljs-comment">/* 选中记录 批量处理记录*/</span>&#125;<br>     &#123;selectedRowsState?.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span> &amp;&amp; (<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">FooterToolbar</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">extra</span>=<span class="hljs-string">&#123;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           &lt;<span class="hljs-attr">div</span>&gt;</span></span><br><span class="language-xml">             <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.chosen&quot;</span> <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;Chosen&quot;</span> /&gt;</span>&#123;&#x27; &#x27;&#125;</span><br><span class="language-xml">             <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">fontWeight:</span> <span class="hljs-attr">600</span> &#125;&#125;&gt;</span>&#123;selectedRowsState.length&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&#123;&#x27; &#x27;&#125;</span><br><span class="language-xml">             <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.createForm.newRule&quot;</span> <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;项&quot;</span> /&gt;</span></span><br><span class="language-xml">             <span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-symbol">&amp;nbsp;</span></span><br><span class="language-xml">             <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">               <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span></span></span><br><span class="hljs-tag"><span class="language-xml">                 <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.totalServiceCalls&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">                 <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;Total number of service calls&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">               /&gt;</span>&#123;&#x27; &#x27;&#125;</span><br><span class="language-xml">               &#123;selectedRowsState.reduce((pre, item) =&gt; pre + item.callNo!, 0)&#125;&#123;&#x27; &#x27;&#125;</span><br><span class="language-xml">               <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.tenThousand&quot;</span> <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;万&quot;</span> /&gt;</span></span><br><span class="language-xml">             <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">         &#125;</span><br><span class="language-xml">       &gt;</span><br><span class="language-xml">         &#123;/* 批量删除 */&#125;</span><br><span class="language-xml">         <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="language-xml">           <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;async</span> () =&gt;</span> &#123;</span><br><span class="language-xml">             await handleRemove(selectedRowsState);</span><br><span class="language-xml">             setSelectedRows([]);</span><br><span class="language-xml">             actionRef.current?.reloadAndRest?.();</span><br><span class="language-xml">           &#125;&#125;</span><br><span class="language-xml">         &gt;</span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.batchDeletion&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;Batch deletion&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           /&gt;</span></span><br><span class="language-xml">         <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="language-xml">         &#123;/* 批量审批 */&#125;</span><br><span class="language-xml">         <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span></span><br><span class="language-xml">           <span class="hljs-tag">&lt;<span class="hljs-name">FormattedMessage</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pages.searchTable.batchApproval&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">             <span class="hljs-attr">defaultMessage</span>=<span class="hljs-string">&quot;Batch approval&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           /&gt;</span></span><br><span class="language-xml">         <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="language-xml">       <span class="hljs-tag">&lt;/<span class="hljs-name">FooterToolbar</span>&gt;</span></span><br>     )&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="优化了用户信息页表格的展现方式，解决了登录用户头像获取不成功的问题："><a href="#优化了用户信息页表格的展现方式，解决了登录用户头像获取不成功的问题：" class="headerlink" title="优化了用户信息页表格的展现方式，解决了登录用户头像获取不成功的问题："></a>优化了用户信息页表格的展现方式，解决了登录用户头像获取不成功的问题：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230726180123695.png" alt="image-20230726180123695"></p><ul><li><h5 id="做了一下午，仅仅完成了接口信息的新增功能（—-—）（2023-07-26）"><a href="#做了一下午，仅仅完成了接口信息的新增功能（—-—）（2023-07-26）" class="headerlink" title="做了一下午，仅仅完成了接口信息的新增功能（—_—）（2023/07/26）"></a>做了一下午，仅仅完成了接口信息的新增功能（—_—）（2023/07/26）</h5></li><li><h5 id="本来一切都很顺利，但是在设计新增接口表单时，我犯难了：简单来讲，有两种表单的写法，均可实现新增接口功能"><a href="#本来一切都很顺利，但是在设计新增接口表单时，我犯难了：简单来讲，有两种表单的写法，均可实现新增接口功能" class="headerlink" title="本来一切都很顺利，但是在设计新增接口表单时，我犯难了：简单来讲，有两种表单的写法，均可实现新增接口功能"></a>本来一切都很顺利，但是在设计新增接口表单时，我犯难了：简单来讲，有两种表单的写法，均可实现新增接口功能</h5></li><li><h5 id="在-TableList-InterfaceInfo-下新增-CreateForm-tsx文件："><a href="#在-TableList-InterfaceInfo-下新增-CreateForm-tsx文件：" class="headerlink" title="在 TableList/InterfaceInfo 下新增 CreateForm.tsx文件："></a>在 TableList/InterfaceInfo 下新增 CreateForm.tsx文件：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">Props</span> = &#123;<br>  <span class="hljs-attr">columns</span>: <span class="hljs-title class_">ProColumns</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfo</span>&gt;[];<br>  <span class="hljs-attr">onCancel</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>  <span class="hljs-attr">onSubmit</span>: <span class="hljs-function">(<span class="hljs-params">values: API.InterfaceInfo</span>) =&gt;</span> <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-built_in">void</span>&gt;;<br>  <span class="hljs-attr">visible</span>: <span class="hljs-built_in">boolean</span>;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CreateModal</span>: <span class="hljs-title class_">React</span>.<span class="hljs-property">FC</span>&lt;<span class="hljs-title class_">Props</span>&gt; = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> &#123; visible, columns, onCancel, onSubmit &#125; = props;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Modal</span> <span class="hljs-attr">visible</span>=<span class="hljs-string">&#123;visible&#125;</span> <span class="hljs-attr">footer</span>=<span class="hljs-string">&#123;null&#125;</span> <span class="hljs-attr">onCancel</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> onCancel?.()&#125; title=&quot;查询接口信息&quot;&gt;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">ProTable</span></span></span><br><span class="hljs-tag"><span class="language-xml">        // <span class="hljs-attr">设置表单的标题</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;form&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">columns</span>=<span class="hljs-string">&#123;columns&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onSubmit</span>=<span class="hljs-string">&#123;(value)</span> =&gt;</span> &#123;</span><br><span class="language-xml">          onSubmit?.(value);</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">        onReset=&#123;() =&gt; &#123;</span><br><span class="language-xml">          console.log(&#x27;表单已重置&#x27;); // 表单重置的回调函数</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      /&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Modal</span>&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">CreateModal</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="然后在-index-tsx-下-引入上面导出的表单"><a href="#然后在-index-tsx-下-引入上面导出的表单" class="headerlink" title="然后在 index.tsx 下 引入上面导出的表单:"></a>然后在 index.tsx 下 引入上面导出的表单:</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#123;<span class="hljs-comment">/* 新增记录表单 */</span>&#125;<br>     &lt;<span class="hljs-title class_">CreateModal</span><br>      columns=&#123;columns&#125;<br>      onCancel=&#123;<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">handleModalVisible</span>(<span class="hljs-literal">false</span>);<br>      &#125;&#125;<br>      onSubmit=&#123;<span class="hljs-function">(<span class="hljs-params">values</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">handleModalVisible</span>(<span class="hljs-literal">false</span>);<br>        <span class="hljs-title function_">addInterfaceInfoUsingPOST</span>(values);<br>      &#125;&#125;<br>      visible=&#123;createModalVisible&#125;<br>    /&gt; <br></code></pre></td></tr></table></figure><ul><li><h5 id="这个很方便，自动识别字段，并填充表单，但对于各个字段的校验和单独处理，不是很方便（目前我这么认为）"><a href="#这个很方便，自动识别字段，并填充表单，但对于各个字段的校验和单独处理，不是很方便（目前我这么认为）" class="headerlink" title="这个很方便，自动识别字段，并填充表单，但对于各个字段的校验和单独处理，不是很方便（目前我这么认为）"></a>这个很方便，自动识别字段，并填充表单，但对于各个字段的校验和单独处理，不是很方便（目前我这么认为）</h5></li><li><h5 id="所以我选择第二种方法，所有表单的校验都手动处理，简单粗暴，更适合我这种偏后端的程序员，设计表单更好理解："><a href="#所以我选择第二种方法，所有表单的校验都手动处理，简单粗暴，更适合我这种偏后端的程序员，设计表单更好理解：" class="headerlink" title="所以我选择第二种方法，所有表单的校验都手动处理，简单粗暴，更适合我这种偏后端的程序员，设计表单更好理解："></a>所以我选择第二种方法，所有表单的校验都手动处理，简单粗暴，更适合我这种偏后端的程序员，设计表单更好理解：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">ModalForm</span><br>       title=<span class="hljs-string">&quot;新增接口表单&quot;</span><br>       width=<span class="hljs-string">&quot;600px&quot;</span><br>       open=&#123;createModalOpen&#125;<br>       onOpenChange=&#123;handleModalOpen&#125;<br>       onFinish=&#123;<span class="hljs-keyword">async</span> (value) =&gt; &#123;<br>         <span class="hljs-keyword">const</span> success = <span class="hljs-keyword">await</span> <span class="hljs-title function_">addInterfaceInfoUsingPOST</span>(value <span class="hljs-keyword">as</span> <span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfo</span>);<br>         <span class="hljs-keyword">if</span> (success) &#123;<br>           message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;新增接口成功&#x27;</span>);<br>           <span class="hljs-title function_">handleModalOpen</span>(<span class="hljs-literal">false</span>);<br>           <span class="hljs-keyword">if</span> (actionRef.<span class="hljs-property">current</span>) &#123;<br>             actionRef.<span class="hljs-property">current</span>.<span class="hljs-title function_">reload</span>();<br>           &#125;<br>         &#125;<br>       &#125;&#125;<br>     &gt;<br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口名称&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口名称&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">接口名称不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormTextArea</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口描述&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口描述&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">接口描述不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口地址&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口地址&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">账户不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;requestHeader&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">请求头不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;responseHeader&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;响应头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">响应头不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userTd&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;创建人&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入创建人&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">创建人不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>       <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormRadio.Group</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;method&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;请求类型&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择请求类型&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">options</span>=<span class="hljs-string">&#123;[</span>&#x27;<span class="hljs-attr">GET</span>&#x27;, &#x27;<span class="hljs-attr">POST</span>&#x27;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">         <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">请求类型不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">       /&gt;</span></span><br>     &lt;/<span class="hljs-title class_">ModalForm</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230727130821670.png" alt="image-20230727130821670"></p><ul><li><h5 id="对于用户信息的增删改，我觉得不是很现实，哪有管理员直接在后台改人家信息的，我就不做了"><a href="#对于用户信息的增删改，我觉得不是很现实，哪有管理员直接在后台改人家信息的，我就不做了" class="headerlink" title="对于用户信息的增删改，我觉得不是很现实，哪有管理员直接在后台改人家信息的，我就不做了"></a>对于用户信息的增删改，我觉得不是很现实，哪有管理员直接在后台改人家信息的，我就不做了</h5></li><li><h5 id="另外，鱼聪明真是我的得力干将，有不懂的代码直接问它就完事了"><a href="#另外，鱼聪明真是我的得力干将，有不懂的代码直接问它就完事了" class="headerlink" title="另外，鱼聪明真是我的得力干将，有不懂的代码直接问它就完事了"></a>另外，鱼聪明真是我的得力干将，有不懂的代码直接问它就完事了</h5></li><li><h5 id="晚上继续快速开发剩下的修改和删除接口功能，再做后端调用接口的开发"><a href="#晚上继续快速开发剩下的修改和删除接口功能，再做后端调用接口的开发" class="headerlink" title="晚上继续快速开发剩下的修改和删除接口功能，再做后端调用接口的开发"></a>晚上继续快速开发剩下的修改和删除接口功能，再做后端调用接口的开发</h5></li></ul><h2 id="更新接口"><a href="#更新接口" class="headerlink" title="更新接口"></a>更新接口</h2><ul><li><h5 id="这个功能很好做，想明白思路即可：获取本行信息，回显在更新接口表单中，更新完成后执行提交"><a href="#这个功能很好做，想明白思路即可：获取本行信息，回显在更新接口表单中，更新完成后执行提交" class="headerlink" title="这个功能很好做，想明白思路即可：获取本行信息，回显在更新接口表单中，更新完成后执行提交"></a>这个功能很好做，想明白思路即可：获取本行信息，回显在更新接口表单中，更新完成后执行提交</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">/** getInterfaceInfoById GET /api/interfaceInfo/get */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getInterfaceInfoByIdUsingGET</span>(<span class="hljs-params"></span><br><span class="hljs-params">  <span class="hljs-comment">// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)</span></span><br><span class="hljs-params">  id: <span class="hljs-built_in">number</span>,</span><br><span class="hljs-params">  options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;,</span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponseInterfaceInfo_</span>&gt;(<span class="hljs-string">&#x27;/api/interfaceInfo/get&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-attr">params</span>: &#123;<br>      id,<br>    &#125;,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;a<br>  key=<span class="hljs-string">&quot;editable&quot;</span><br>onClick=&#123;<span class="hljs-keyword">async</span> () =&gt; &#123;<br> <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getInterfaceInfoByIdUsingGET</span>(<span class="hljs-title class_">Number</span>(record.<span class="hljs-property">id</span>));<br>   <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>) &#123;<br>   <span class="hljs-title function_">setInterfaceInfo</span>(res.<span class="hljs-property">data</span>);<br> &#125;<br>   <span class="hljs-title function_">handleUpdateModalOpen</span>(<span class="hljs-literal">true</span>);<br>   &#125;&#125; <br>&gt;<br>更新<br>&lt;/a&gt;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> [createUpdateModalOpen, handleUpdateModalOpen] = useState&lt;<span class="hljs-built_in">boolean</span>&gt;(<span class="hljs-literal">false</span>);<br><br><span class="hljs-keyword">const</span> [interfaceInfo, setInterfaceInfo] = useState&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfo</span> | <span class="hljs-literal">null</span>&gt;(<span class="hljs-literal">null</span>);<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">ModalForm</span><br>        name=<span class="hljs-string">&quot;updateInterfaceInfo&quot;</span><br>        title=<span class="hljs-string">&quot;更新接口表单&quot;</span><br>        width=<span class="hljs-string">&quot;600px&quot;</span><br>        open=&#123;createUpdateModalOpen&#125;<br>        onOpenChange=&#123;handleUpdateModalOpen&#125;<br>        onFinish=&#123;<span class="hljs-keyword">async</span> (value) =&gt; &#123;<br>          <span class="hljs-keyword">const</span> additionalData = &#123;<br>            <span class="hljs-comment">// 添加额外的数据</span><br>            <span class="hljs-attr">id</span>: interfaceInfo?.<span class="hljs-property">id</span>,<br>          &#125;;<br><br>          <span class="hljs-keyword">const</span> formData = &#123;<br>            ...value, <span class="hljs-comment">// 表单数据</span><br>            ...additionalData, <span class="hljs-comment">// 额外的数据</span><br>          &#125;;<br>          <span class="hljs-keyword">const</span> success = <span class="hljs-keyword">await</span> <span class="hljs-title function_">updateInterfaceInfoUsingPOST</span>(formData <span class="hljs-keyword">as</span> <span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfo</span>);<br>          <span class="hljs-keyword">if</span> (success) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;updateInterfaceInfo表单提交&#x27;</span>);<br>            message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;更新接口成功&#x27;</span>);<br><br>            <span class="hljs-title function_">handleUpdateModalOpen</span>(<span class="hljs-literal">false</span>);<br>            <span class="hljs-keyword">if</span> (actionRef.<span class="hljs-property">current</span>) &#123;<br>              actionRef.<span class="hljs-property">current</span>.<span class="hljs-title function_">reload</span>();<br>            &#125;<br>          &#125;<br>          <span class="hljs-comment">// window.location.reload(); // 刷新页面</span><br>        &#125;&#125;<br>      &gt;<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口名称&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.name&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口名称&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">接口名称不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormTextArea</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口描述&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.description&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口描述&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">接口描述不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;接口地址&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.url&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入接口地址&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">账户不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;requestHeader&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.requestHeader&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">请求头不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;responseHeader&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;响应头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.responseHeader&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入请求头&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">响应头不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormText</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userTd&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;创建人&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">initialValue</span>=<span class="hljs-string">&#123;interfaceInfo?.userId&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入创建人&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">required</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">创建人不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ProFormRadio.Group</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;method&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;请求类型&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择请求类型&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;interfaceInfo?.method&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">options</span>=<span class="hljs-string">&#123;[</span>&#x27;<span class="hljs-attr">GET</span>&#x27;, &#x27;<span class="hljs-attr">POST</span>&#x27;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">请求类型不能为空</span>&#x27; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">        /&gt;</span></span><br>      &lt;/<span class="hljs-title class_">ModalForm</span>&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="短短的几行代码，埋藏了不少坑，我前端也不扎实，太难搞了："><a href="#短短的几行代码，埋藏了不少坑，我前端也不扎实，太难搞了：" class="headerlink" title="短短的几行代码，埋藏了不少坑，我前端也不扎实，太难搞了："></a>短短的几行代码，埋藏了不少坑，我前端也不扎实，太难搞了：</h5></li><li><h5 id="点击更新后携带id查询本行数据，那个id一直显示不是number值，record-id明明是string却用不了任何API，均报错，不知道怎么封装的"><a href="#点击更新后携带id查询本行数据，那个id一直显示不是number值，record-id明明是string却用不了任何API，均报错，不知道怎么封装的" class="headerlink" title="点击更新后携带id查询本行数据，那个id一直显示不是number值，record.id明明是string却用不了任何API，均报错，不知道怎么封装的"></a>点击更新后携带id查询本行数据，那个id一直显示不是number值，record.id明明是string却用不了任何API，均报错，不知道怎么封装的</h5></li><li><h5 id="拿到本行数据后，又不会搞怎么接收返回值了，发现使用useState可以解决这个问题："><a href="#拿到本行数据后，又不会搞怎么接收返回值了，发现使用useState可以解决这个问题：" class="headerlink" title="拿到本行数据后，又不会搞怎么接收返回值了，发现使用useState可以解决这个问题："></a>拿到本行数据后，又不会搞怎么接收返回值了，发现使用useState可以解决这个问题：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> [interfaceInfo, setInterfaceInfo] = useState&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">InterfaceInfo</span> | <span class="hljs-literal">null</span>&gt;(<span class="hljs-literal">null</span>);<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getInterfaceInfoByIdUsingGET</span>(<span class="hljs-title class_">Number</span>(record.<span class="hljs-property">id</span>));<br>          <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>) &#123;<br>              <span class="hljs-title function_">setInterfaceInfo</span>(res.<span class="hljs-property">data</span>);<br>       &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="使用-setInterfaceInfo-设置-Interface的值后，竟然可以直接在表单里用了："><a href="#使用-setInterfaceInfo-设置-Interface的值后，竟然可以直接在表单里用了：" class="headerlink" title="使用 setInterfaceInfo 设置 Interface的值后，竟然可以直接在表单里用了："></a>使用 setInterfaceInfo 设置 Interface的值后，竟然可以直接在表单里用了：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">ProFormText</span><br>          name=<span class="hljs-string">&quot;name&quot;</span><br>          label=<span class="hljs-string">&quot;接口名称&quot;</span><br>          initialValue=&#123;interfaceInfo?.<span class="hljs-property">name</span>&#125;<br>          placeholder=<span class="hljs-string">&quot;请输入接口名称&quot;</span><br>          required<br>          rules=&#123;[&#123; <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;接口名称不能为空&#x27;</span> &#125;]&#125;<br>        /&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="前端真几把神奇，啥玩意儿都给封装好了"><a href="#前端真几把神奇，啥玩意儿都给封装好了" class="headerlink" title="前端真几把神奇，啥玩意儿都给封装好了"></a>前端真几把神奇，啥玩意儿都给封装好了</h5></li><li><h5 id="单选框这里实现默认勾选值，挺莫名其妙的，就这么实现的："><a href="#单选框这里实现默认勾选值，挺莫名其妙的，就这么实现的：" class="headerlink" title="单选框这里实现默认勾选值，挺莫名其妙的，就这么实现的："></a>单选框这里实现默认勾选值，挺莫名其妙的，就这么实现的：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">ProFormRadio</span>.<span class="hljs-property">Group</span><br>         name=<span class="hljs-string">&quot;method&quot;</span><br>         label=<span class="hljs-string">&quot;请求类型&quot;</span><br>         placeholder=<span class="hljs-string">&quot;请选择请求类型&quot;</span><br>         value=&#123;interfaceInfo?.<span class="hljs-property">method</span>&#125;<br>         options=&#123;[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]&#125;<br>         rules=&#123;[&#123; <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;请求类型不能为空&#x27;</span> &#125;]&#125;<br>       /&gt;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230727133607574.png" alt="image-20230727133607574"></p><h2 id="删除接口"><a href="#删除接口" class="headerlink" title="删除接口"></a>删除接口</h2><ul><li><h5 id="这个功能可太好做了："><a href="#这个功能可太好做了：" class="headerlink" title="这个功能可太好做了："></a>这个功能可太好做了：</h5></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">/** deleteInterfaceInfo POST /api/interfaceInfo/delete */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">deleteInterfaceInfoUsingPOST</span>(<span class="hljs-params">id: <span class="hljs-built_in">number</span>, options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponseBoolean_</span>&gt;(<span class="hljs-string">&#x27;/api/interfaceInfo/delete&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>      <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">data</span>: &#123; id &#125;,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;a<br>   onClick=&#123;<span class="hljs-keyword">async</span> () =&gt; &#123;<br>     <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">deleteInterfaceInfoUsingPOST</span>(<span class="hljs-title class_">Number</span>(record.<span class="hljs-property">id</span>));<br>         <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>) &#123;<br>              message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;删除接口信息成功&#x27;</span>);<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>              message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;删除接口信息失败&#x27;</span>);<br>           &#125;<br>    &#125;&#125;<br>  &gt;<br>     删除<br> &lt;/a&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="发送-POST-请求，data-一定是一个对象，像上面写的那样"><a href="#发送-POST-请求，data-一定是一个对象，像上面写的那样" class="headerlink" title="发送 POST 请求，data 一定是一个对象，像上面写的那样"></a>发送 POST 请求，data 一定是一个对象，像上面写的那样</h5></li><li><h5 id="没有弹窗告警，现在先不加这玩意儿了，日后优化再加，先往后做功能，增删改查写的人犯恶心"><a href="#没有弹窗告警，现在先不加这玩意儿了，日后优化再加，先往后做功能，增删改查写的人犯恶心" class="headerlink" title="没有弹窗告警，现在先不加这玩意儿了，日后优化再加，先往后做功能，增删改查写的人犯恶心"></a>没有弹窗告警，现在先不加这玩意儿了，日后优化再加，先往后做功能，增删改查写的人犯恶心</h5></li></ul><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><h5 id="注册页面的开发"><a href="#注册页面的开发" class="headerlink" title="注册页面的开发"></a>注册页面的开发</h5></li><li><h5 id="接口信息增、删、改、查的后端业务逻辑，待完善"><a href="#接口信息增、删、改、查的后端业务逻辑，待完善" class="headerlink" title="接口信息增、删、改、查的后端业务逻辑，待完善"></a>接口信息增、删、改、查的后端业务逻辑，待完善</h5></li><li><h5 id="前端表格信息的增、删、改，待完善（√）"><a href="#前端表格信息的增、删、改，待完善（√）" class="headerlink" title="前端表格信息的增、删、改，待完善（√）"></a>前端表格信息的增、删、改，待完善（√）</h5></li><li><h5 id="增、删、改接口信息后，不能立刻刷新，老问题"><a href="#增、删、改接口信息后，不能立刻刷新，老问题" class="headerlink" title="增、删、改接口信息后，不能立刻刷新，老问题"></a>增、删、改接口信息后，不能立刻刷新，老问题</h5></li><li><h5 id="接口信息的删除，没有弹窗告警"><a href="#接口信息的删除，没有弹窗告警" class="headerlink" title="接口信息的删除，没有弹窗告警"></a>接口信息的删除，没有弹窗告警</h5></li><li><h5 id="前端操作不当，没有得到清楚的提示"><a href="#前端操作不当，没有得到清楚的提示" class="headerlink" title="前端操作不当，没有得到清楚的提示"></a>前端操作不当，没有得到清楚的提示</h5></li><li><h5 id="未登录用户可以选择登录，目前还没有添加这个按钮"><a href="#未登录用户可以选择登录，目前还没有添加这个按钮" class="headerlink" title="未登录用户可以选择登录，目前还没有添加这个按钮"></a>未登录用户可以选择登录，目前还没有添加这个按钮</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>开发经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>开发经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker</title>
    <link href="/blog/2023/07/11/docker/"/>
    <url>/blog/2023/07/11/docker/</url>
    
    <content type="html"><![CDATA[<p>Docker是容器的一种，容器相较于虚拟器，不需要安装完整的操作系统，占用的物理资源更少，充分利用服务器的资源，减少资源的闲置和浪费 -》 一台物理机运行几个虚拟机、上百个容器</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从IP到Ping命令：了解计算机网络连接的基础</title>
    <link href="/blog/2023/07/11/%E4%BB%8EIP%E5%88%B0Ping%E5%91%BD%E4%BB%A4%EF%BC%9A%E4%BA%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%9F%BA%E7%A1%80/"/>
    <url>/blog/2023/07/11/%E4%BB%8EIP%E5%88%B0Ping%E5%91%BD%E4%BB%A4%EF%BC%9A%E4%BA%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="当今世界已经变得日益连接，而在这个连接的网络中，IP（Internet-Protocol）扮演着至关重要的角色。无论是浏览网页、发送电子邮件，还是进行网络游戏，我们都要依赖IP地址来建立和维持网络连接。在这篇博客中，我们将深入探讨IP的概念，并重点介绍公网IP和内网IP的区别及其在网络通信中的作用。"><a href="#当今世界已经变得日益连接，而在这个连接的网络中，IP（Internet-Protocol）扮演着至关重要的角色。无论是浏览网页、发送电子邮件，还是进行网络游戏，我们都要依赖IP地址来建立和维持网络连接。在这篇博客中，我们将深入探讨IP的概念，并重点介绍公网IP和内网IP的区别及其在网络通信中的作用。" class="headerlink" title="当今世界已经变得日益连接，而在这个连接的网络中，IP（Internet Protocol）扮演着至关重要的角色。无论是浏览网页、发送电子邮件，还是进行网络游戏，我们都要依赖IP地址来建立和维持网络连接。在这篇博客中，我们将深入探讨IP的概念，并重点介绍公网IP和内网IP的区别及其在网络通信中的作用。"></a>当今世界已经变得日益连接，而在这个连接的网络中，IP（Internet Protocol）扮演着至关重要的角色。无论是浏览网页、发送电子邮件，还是进行网络游戏，我们都要依赖IP地址来建立和维持网络连接。在这篇博客中，我们将深入探讨IP的概念，并重点介绍公网IP和内网IP的区别及其在网络通信中的作用。</h5></li><li><h5 id="首先，我们将从IP的基础知识开始，探索什么是IP地址以及它们的结构和分类方式。我们将了解IP地址包含的信息，以及如何将其分配给计算机和设备来实现通信。不仅如此，我们还将深入了解网络连接中的公网IP和内网IP的区别，以及它们在不同网络环境中的应用。"><a href="#首先，我们将从IP的基础知识开始，探索什么是IP地址以及它们的结构和分类方式。我们将了解IP地址包含的信息，以及如何将其分配给计算机和设备来实现通信。不仅如此，我们还将深入了解网络连接中的公网IP和内网IP的区别，以及它们在不同网络环境中的应用。" class="headerlink" title="首先，我们将从IP的基础知识开始，探索什么是IP地址以及它们的结构和分类方式。我们将了解IP地址包含的信息，以及如何将其分配给计算机和设备来实现通信。不仅如此，我们还将深入了解网络连接中的公网IP和内网IP的区别，以及它们在不同网络环境中的应用。"></a>首先，我们将从IP的基础知识开始，探索什么是IP地址以及它们的结构和分类方式。我们将了解IP地址包含的信息，以及如何将其分配给计算机和设备来实现通信。不仅如此，我们还将深入了解网络连接中的公网IP和内网IP的区别，以及它们在不同网络环境中的应用。</h5></li><li><h5 id="在接下来的部分，我们将带您一起了解Ping命令的重要性和用途。Ping命令作为一种网络诊断工具，可以帮助我们测试网络连接的可靠性和性能。我们将探究Ping命令的出处和使用方式，了解如何通过Ping命令来检测网络的故障和延迟问题。"><a href="#在接下来的部分，我们将带您一起了解Ping命令的重要性和用途。Ping命令作为一种网络诊断工具，可以帮助我们测试网络连接的可靠性和性能。我们将探究Ping命令的出处和使用方式，了解如何通过Ping命令来检测网络的故障和延迟问题。" class="headerlink" title="在接下来的部分，我们将带您一起了解Ping命令的重要性和用途。Ping命令作为一种网络诊断工具，可以帮助我们测试网络连接的可靠性和性能。我们将探究Ping命令的出处和使用方式，了解如何通过Ping命令来检测网络的故障和延迟问题。"></a>在接下来的部分，我们将带您一起了解Ping命令的重要性和用途。Ping命令作为一种网络诊断工具，可以帮助我们测试网络连接的可靠性和性能。我们将探究Ping命令的出处和使用方式，了解如何通过Ping命令来检测网络的故障和延迟问题。</h5></li><li><h5 id="作为这篇博客的第一部分，我们希望通过介绍IP的概念、公网IP和内网IP，以及Ping命令的出处和使用，为读者提供计算机网络基础知识。未来，我们还将分享更多类似的计算机网络方面的内容，以帮助读者深入了解和掌握网络连接的要点。"><a href="#作为这篇博客的第一部分，我们希望通过介绍IP的概念、公网IP和内网IP，以及Ping命令的出处和使用，为读者提供计算机网络基础知识。未来，我们还将分享更多类似的计算机网络方面的内容，以帮助读者深入了解和掌握网络连接的要点。" class="headerlink" title="作为这篇博客的第一部分，我们希望通过介绍IP的概念、公网IP和内网IP，以及Ping命令的出处和使用，为读者提供计算机网络基础知识。未来，我们还将分享更多类似的计算机网络方面的内容，以帮助读者深入了解和掌握网络连接的要点。"></a>作为这篇博客的第一部分，我们希望通过介绍IP的概念、公网IP和内网IP，以及Ping命令的出处和使用，为读者提供计算机网络基础知识。未来，我们还将分享更多类似的计算机网络方面的内容，以帮助读者深入了解和掌握网络连接的要点。</h5></li><li><h5 id="随着技术的不断进步和网络的不断发展，了解IP的基础知识和掌握Ping命令的使用变得愈发重要。我们相信通过这篇博客，读者将能够更好地理解网络连接的基本原理，并能够自信地使用Ping命令进行网络诊断。让我们一起探索计算机网络的奥秘吧！"><a href="#随着技术的不断进步和网络的不断发展，了解IP的基础知识和掌握Ping命令的使用变得愈发重要。我们相信通过这篇博客，读者将能够更好地理解网络连接的基本原理，并能够自信地使用Ping命令进行网络诊断。让我们一起探索计算机网络的奥秘吧！" class="headerlink" title="随着技术的不断进步和网络的不断发展，了解IP的基础知识和掌握Ping命令的使用变得愈发重要。我们相信通过这篇博客，读者将能够更好地理解网络连接的基本原理，并能够自信地使用Ping命令进行网络诊断。让我们一起探索计算机网络的奥秘吧！"></a>随着技术的不断进步和网络的不断发展，了解IP的基础知识和掌握Ping命令的使用变得愈发重要。我们相信通过这篇博客，读者将能够更好地理解网络连接的基本原理，并能够自信地使用Ping命令进行网络诊断。让我们一起探索计算机网络的奥秘吧！</h5></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="什么是-IP-？"><a href="#什么是-IP-？" class="headerlink" title="什么是 IP ？"></a>什么是 IP ？</h4><ul><li><h5 id="在庞大的计算机网络当中，每一台计算机都需要一个唯一标识来确定自己在网络中的位置，这个标识就叫-IP"><a href="#在庞大的计算机网络当中，每一台计算机都需要一个唯一标识来确定自己在网络中的位置，这个标识就叫-IP" class="headerlink" title="在庞大的计算机网络当中，每一台计算机都需要一个唯一标识来确定自己在网络中的位置，这个标识就叫 IP"></a>在庞大的计算机网络当中，每一台计算机都需要一个唯一标识来确定自己在网络中的位置，这个标识就叫 IP</h5></li><li><h5 id="以上是我对-IP-的理解，下面给出-IP-标准定义："><a href="#以上是我对-IP-的理解，下面给出-IP-标准定义：" class="headerlink" title="以上是我对 IP 的理解，下面给出 IP 标准定义："></a>以上是我对 IP 的理解，下面给出 IP 标准定义：</h5></li></ul><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-built_in">IP</span>地址，全称（Internet Protocol Address）翻译成中文就是指互联网协议地址，所有的计算机分配一个统一格式的、唯一的虚拟地址编号。就像每个人都有一个身份证一样，<span class="hljs-built_in">IP</span>地址就是每台计算机都有自己上网用的身份编号，在网络上交互时，不管是发送数据还是接收数据，通过<span class="hljs-built_in">IP</span>地址互相访问。<br></code></pre></td></tr></table></figure><h4 id="IP-查询"><a href="#IP-查询" class="headerlink" title="IP 查询"></a>IP 查询</h4><ul><li><h5 id="我们直接百度“-IP-”关键词，页面显示-IP-如下："><a href="#我们直接百度“-IP-”关键词，页面显示-IP-如下：" class="headerlink" title="我们直接百度“ IP ”关键词，页面显示 IP 如下："></a>我们直接百度“ IP ”关键词，页面显示 IP 如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230711115126654.png" alt="image-20230711115126654"></p><ul><li><h5 id="注意，该-IP-为该计算机所连接的网络IP地址，并非本机-IP-，可以简单理解为路由器-IP"><a href="#注意，该-IP-为该计算机所连接的网络IP地址，并非本机-IP-，可以简单理解为路由器-IP" class="headerlink" title="注意，该 IP 为该计算机所连接的网络IP地址，并非本机 IP ，可以简单理解为路由器 IP"></a>注意，该 IP 为该计算机所连接的网络IP地址，并非本机 IP ，可以简单理解为路由器 IP</h5></li><li><h5 id="查询本机-IP-，只需在命令行下执行以下命令-Windows-："><a href="#查询本机-IP-，只需在命令行下执行以下命令-Windows-：" class="headerlink" title="查询本机 IP ，只需在命令行下执行以下命令(Windows)："></a>查询本机 IP ，只需在命令行下执行以下命令(Windows)：</h5></li></ul><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">ipconfig</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="查询结果如下："><a href="#查询结果如下：" class="headerlink" title="查询结果如下："></a>查询结果如下：</h5></li></ul><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext">C:\WINDOWS\system32&gt;ipconfig<br><br><span class="hljs-attribute">Windows IP 配置</span><br><span class="hljs-attribute"></span><br><span class="hljs-attribute">未知适配器 本地连接</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">媒体状态  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">媒体已断开连接</span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br><span class="hljs-attribute">无线局域网适配器 本地连接* 9</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">媒体状态  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">媒体已断开连接</span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br><span class="hljs-attribute">无线局域网适配器 本地连接* 10</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">媒体状态  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">媒体已断开连接</span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br><span class="hljs-attribute">以太网适配器 VMware Network Adapter VMnet1</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br>   <span class="hljs-attribute">本地链接 IPv6 地址. . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">fe80::7f58:5e0:a3cf:b38%4</span><br>   <span class="hljs-attribute">IPv4 地址 . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">192.168.152.1</span><br>   <span class="hljs-attribute">子网掩码  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">255.255.255.0</span><br>   <span class="hljs-attribute">默认网关. . . . . . . . . . . . . </span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br><span class="hljs-attribute">以太网适配器 VMware Network Adapter VMnet8</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br>   <span class="hljs-attribute">本地链接 IPv6 地址. . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">fe80::261:257a:b98e:6653%14</span><br>   <span class="hljs-attribute">IPv4 地址 . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">192.168.88.1</span><br>   <span class="hljs-attribute">子网掩码  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">255.255.255.0</span><br>   <span class="hljs-attribute">默认网关. . . . . . . . . . . . . </span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br><span class="hljs-attribute">无线局域网适配器 WLAN</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br>   <span class="hljs-attribute">连接特定的 DNS 后缀 . . . . . . . </span><span class="hljs-punctuation">:</span><br>   <span class="hljs-attribute">本地链接 IPv6 地址. . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">fe80::e579:8da4:ddea:b21d%12</span><br>   <span class="hljs-attribute">IPv4 地址 . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">192.168.0.102</span><br>   <span class="hljs-attribute">子网掩码  . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">255.255.255.0</span><br>   <span class="hljs-attribute">默认网关. . . . . . . . . . . . .</span><span class="hljs-punctuation"> :</span> <span class="hljs-string">192.168.0.1</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="很显然，查询到的本机-IP-地址为："><a href="#很显然，查询到的本机-IP-地址为：" class="headerlink" title="很显然，查询到的本机 IP 地址为："></a>很显然，查询到的本机 IP 地址为：</h5></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">IPv4</span> 地址 . . . . . . . . . . . . : <span class="hljs-number">192.168.0.102</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="注意这个-IP-是在动态变化着的"><a href="#注意这个-IP-是在动态变化着的" class="headerlink" title="注意这个 IP 是在动态变化着的"></a>注意这个 IP 是在动态变化着的</h5></li></ul><h3 id="公网-IP-和内网-IP"><a href="#公网-IP-和内网-IP" class="headerlink" title="公网 IP 和内网 IP"></a>公网 IP 和内网 IP</h3><ul><li><h5 id="有关这部分内容的介绍，可以先看下面几篇文章："><a href="#有关这部分内容的介绍，可以先看下面几篇文章：" class="headerlink" title="有关这部分内容的介绍，可以先看下面几篇文章："></a>有关这部分内容的介绍，可以先看下面几篇文章：</h5></li><li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MzY0MzYwMA==&mid=2649600872&idx=1&sn=643117bd7e4f1362ca485a75f5593104&chksm=be8afe5789fd77418f7334949d69981a3e66080393d17667bea2489edcc47b3fd926c2661142&scene=27">什么是公网ip？什么是内网ip？为什么ip地址通常以192.168开头？ (qq.com)</a></p></li><li><p><a href="https://product.pconline.com.cn/itbk/top/1353/13530428.html">公网ip和内网ip的区别-太平洋IT百科 (pconline.com.cn)</a></p></li><li><p><a href="https://baijiahao.baidu.com/s?id=1769954307351702568&wfr=spider&for=pc">什么是公网IP和内网IP？ (baidu.com)</a></p></li><li><p><a href="https://baijiahao.baidu.com/s?id=1741477061003871360&wfr=spider&for=pc">什么是公网IP？公网IP和内网IP的区别 (baidu.com)</a></p></li><li><p><a href="https://baijiahao.baidu.com/s?id=1729343971973857666&wfr=spider&for=pc">网络常识：公网、私网、内网等 (baidu.com)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/588101251">什么是内网IP，公网IP？他们有什么区别？ - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/zacji/article/details/121904386">(74条消息) 公网IP和内网IP如何分辨?_如何判断公网ip内网ip_聚名网的博客-CSDN博客</a></p></li></ul><h4 id="公网-内网"><a href="#公网-内网" class="headerlink" title="公网/内网"></a>公网/内网</h4><ul><li><h5 id="在解释公网-IP-和内网-IP-之前，我们首先要了解两个概念：公网-内网"><a href="#在解释公网-IP-和内网-IP-之前，我们首先要了解两个概念：公网-内网" class="headerlink" title="在解释公网 IP 和内网 IP 之前，我们首先要了解两个概念：公网/内网"></a>在解释公网 IP 和内网 IP 之前，我们首先要了解两个概念：公网/内网</h5></li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">公网：又名外网、广域网(Wide <span class="hljs-built_in">Area</span> Network，WAN)，是连接不同地区局域网或城域网计算机通信的远程网。它能连接多个地区、城市和国家，或横跨几个州并能提供远距离通信，形成国际性的远程网络。<br></code></pre></td></tr></table></figure><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">内网：又名私网、局域网（Local <span class="hljs-built_in">Area</span> Network，LAN）是指在某一区域内由多台计算机互联成的计算机组。一般是方圆几千米以内。局域网可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮件和传真通信服务等功能。局域网是封闭型的，可以由办公室内的两台计算机组成，也可以由一个公司内的上千台计算机组成。<br></code></pre></td></tr></table></figure><ul><li><h5 id="简单来讲，公网就是大范围的网络，内网就是小区域内的网络"><a href="#简单来讲，公网就是大范围的网络，内网就是小区域内的网络" class="headerlink" title="简单来讲，公网就是大范围的网络，内网就是小区域内的网络"></a>简单来讲，公网就是大范围的网络，内网就是小区域内的网络</h5></li><li><h5 id="内、外网是相对于防火墙而言的，在防火墙内部叫做内网，反之就是外网"><a href="#内、外网是相对于防火墙而言的，在防火墙内部叫做内网，反之就是外网" class="headerlink" title="内、外网是相对于防火墙而言的，在防火墙内部叫做内网，反之就是外网"></a>内、外网是相对于防火墙而言的，在防火墙内部叫做内网，反之就是外网</h5></li></ul><h4 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h4><ul><li><h5 id="当今时代，我们每天无时不刻都在上网：玩网络游戏、刷短视频、视频聊天、点外卖等等，这些都属于网络通信的范畴"><a href="#当今时代，我们每天无时不刻都在上网：玩网络游戏、刷短视频、视频聊天、点外卖等等，这些都属于网络通信的范畴" class="headerlink" title="当今时代，我们每天无时不刻都在上网：玩网络游戏、刷短视频、视频聊天、点外卖等等，这些都属于网络通信的范畴"></a>当今时代，我们每天无时不刻都在上网：玩网络游戏、刷短视频、视频聊天、点外卖等等，这些都属于网络通信的范畴</h5></li><li><h5 id="不论是浏览玩网络游戏，还是刷视频，本质上我们都是在对后台的服务器发送请求，获取资源，也就是访问服务器"><a href="#不论是浏览玩网络游戏，还是刷视频，本质上我们都是在对后台的服务器发送请求，获取资源，也就是访问服务器" class="headerlink" title="不论是浏览玩网络游戏，还是刷视频，本质上我们都是在对后台的服务器发送请求，获取资源，也就是访问服务器"></a>不论是浏览玩网络游戏，还是刷视频，本质上我们都是在对后台的服务器发送请求，获取资源，也就是访问服务器</h5></li><li><h5 id="而网络之间通信是以公网-IP-地址进行识别，所以联网必须使用公网-IP-地址，也就是说，我们要上网，必须要使用公网-IP-去访问服务器"><a href="#而网络之间通信是以公网-IP-地址进行识别，所以联网必须使用公网-IP-地址，也就是说，我们要上网，必须要使用公网-IP-去访问服务器" class="headerlink" title="而网络之间通信是以公网 IP 地址进行识别，所以联网必须使用公网 IP 地址，也就是说，我们要上网，必须要使用公网 IP 去访问服务器"></a>而网络之间通信是以公网 IP 地址进行识别，所以联网必须使用公网 IP 地址，也就是说，我们要上网，必须要使用公网 IP 去访问服务器</h5></li></ul><h4 id="内网-IP"><a href="#内网-IP" class="headerlink" title="内网 IP"></a>内网 IP</h4><ul><li><h5 id="我们使用手机、电脑等电子设备来上网，那我们为什么能联网呢？"><a href="#我们使用手机、电脑等电子设备来上网，那我们为什么能联网呢？" class="headerlink" title="我们使用手机、电脑等电子设备来上网，那我们为什么能联网呢？"></a>我们使用手机、电脑等电子设备来上网，那我们为什么能联网呢？</h5></li><li><h5 id="简单的回答当然是家里有路由器了！有了路由器，我们的电脑手机就能联网，就能上网了"><a href="#简单的回答当然是家里有路由器了！有了路由器，我们的电脑手机就能联网，就能上网了" class="headerlink" title="简单的回答当然是家里有路由器了！有了路由器，我们的电脑手机就能联网，就能上网了"></a>简单的回答当然是家里有路由器了！有了路由器，我们的电脑手机就能联网，就能上网了</h5></li><li><h5 id="这样的回答没有问题，路由器确实给我们提供了网络环境，但是路由器给我们我们使用的是局域网，即内网，那分配给我们的电子设备的-IP-就是内网-IP"><a href="#这样的回答没有问题，路由器确实给我们提供了网络环境，但是路由器给我们我们使用的是局域网，即内网，那分配给我们的电子设备的-IP-就是内网-IP" class="headerlink" title="这样的回答没有问题，路由器确实给我们提供了网络环境，但是路由器给我们我们使用的是局域网，即内网，那分配给我们的电子设备的 IP 就是内网 IP"></a>这样的回答没有问题，路由器确实给我们提供了网络环境，但是路由器给我们我们使用的是局域网，即内网，那分配给我们的电子设备的 IP 就是内网 IP</h5></li><li><h5 id="前面谈到，要进行网络通信，必须使用公网-IP-，那这中间必然存在一个内网-IP-转公网-IP-的过程"><a href="#前面谈到，要进行网络通信，必须使用公网-IP-，那这中间必然存在一个内网-IP-转公网-IP-的过程" class="headerlink" title="前面谈到，要进行网络通信，必须使用公网 IP ，那这中间必然存在一个内网 IP 转公网 IP 的过程"></a>前面谈到，要进行网络通信，必须使用公网 IP ，那这中间必然存在一个内网 IP 转公网 IP 的过程</h5></li><li><h5 id="我们在使用内网-IP-进行网络通信时，通过NAT-Network-Address-Translation-网络地址转换-技术，将内网-IP-地址修改为公网-IP-地址，如此一来，内网计算机就可以向-Internet-请求数据了"><a href="#我们在使用内网-IP-进行网络通信时，通过NAT-Network-Address-Translation-网络地址转换-技术，将内网-IP-地址修改为公网-IP-地址，如此一来，内网计算机就可以向-Internet-请求数据了" class="headerlink" title="我们在使用内网 IP 进行网络通信时，通过NAT(Network Address Translation 网络地址转换)技术，将内网 IP 地址修改为公网 IP 地址，如此一来，内网计算机就可以向 Internet 请求数据了"></a>我们在使用内网 IP 进行网络通信时，通过NAT(Network Address Translation 网络地址转换)技术，将内网 IP 地址修改为公网 IP 地址，如此一来，内网计算机就可以向 Internet 请求数据了</h5></li><li><h5 id="这个转换过程，我们称为端口映射"><a href="#这个转换过程，我们称为端口映射" class="headerlink" title="这个转换过程，我们称为端口映射"></a>这个转换过程，我们称为端口映射</h5></li></ul><h4 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h4><ul><li><h5 id="什么是端口映射？下面给出定义："><a href="#什么是端口映射？下面给出定义：" class="headerlink" title="什么是端口映射？下面给出定义："></a>什么是端口映射？下面给出定义：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">端口映射是<span class="hljs-built_in"> NAT </span>的一种，它将外网主机的<span class="hljs-built_in"> IP </span>地址的一个端口映射到内网中的一台机器，提供相应的服务。当用户访问该<span class="hljs-built_in"> IP </span>的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。<br></code></pre></td></tr></table></figure><ul><li><h5 id="现在市场上的家庭路由器都具备-NAT-功能，也可以实现端口映射，这就是我们使用内网-IP-也能联网的原因"><a href="#现在市场上的家庭路由器都具备-NAT-功能，也可以实现端口映射，这就是我们使用内网-IP-也能联网的原因" class="headerlink" title="现在市场上的家庭路由器都具备 NAT 功能，也可以实现端口映射，这就是我们使用内网 IP 也能联网的原因"></a>现在市场上的家庭路由器都具备 NAT 功能，也可以实现端口映射，这就是我们使用内网 IP 也能联网的原因</h5></li></ul><h4 id="公网-IP"><a href="#公网-IP" class="headerlink" title="公网 IP"></a>公网 IP</h4><ul><li><h5 id="上面反复提到，任何设备只有使用公网-IP-地址，才能进行网络通信，那究竟什么是公网-IP-呢？"><a href="#上面反复提到，任何设备只有使用公网-IP-地址，才能进行网络通信，那究竟什么是公网-IP-呢？" class="headerlink" title="上面反复提到，任何设备只有使用公网 IP 地址，才能进行网络通信，那究竟什么是公网 IP 呢？"></a>上面反复提到，任何设备只有使用公网 IP 地址，才能进行网络通信，那究竟什么是公网 IP 呢？</h5></li><li><h5 id="首先了解下公网-IP-内网-IP-地址是怎么分配的："><a href="#首先了解下公网-IP-内网-IP-地址是怎么分配的：" class="headerlink" title="首先了解下公网 IP /内网 IP 地址是怎么分配的："></a>首先了解下公网 IP /内网 IP 地址是怎么分配的：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">公有地址（Public address）：由 Inter NIC（Internet<span class="hljs-built_in"> Network </span>Information Center 因特网信息中心）负责。这些<span class="hljs-built_in"> IP </span>地址分配给注册并向Inter NIC提出申请的组织机构，公有<span class="hljs-built_in"> IP </span>全球唯一，通过它直接访问因特网<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">私有地址（<span class="hljs-keyword">Private</span> address）：属于非注册地址，专门为组织机构内部使用，说白了，私有 IP 不能直接上网。<br></code></pre></td></tr></table></figure><ul><li><h5 id="总的来说，公网-IP-是运营商分配的，是唯一的，使用公网-IP-可直接进行网络通信"><a href="#总的来说，公网-IP-是运营商分配的，是唯一的，使用公网-IP-可直接进行网络通信" class="headerlink" title="总的来说，公网 IP 是运营商分配的，是唯一的，使用公网 IP 可直接进行网络通信"></a>总的来说，公网 IP 是运营商分配的，是唯一的，使用公网 IP 可直接进行网络通信</h5></li><li><h5 id="内网-IP-是由路由器-交换机分配的，内网的所有-IP-地址都是通过同一个公网-IP-进行上网的"><a href="#内网-IP-是由路由器-交换机分配的，内网的所有-IP-地址都是通过同一个公网-IP-进行上网的" class="headerlink" title="内网 IP 是由路由器/交换机分配的，内网的所有 IP 地址都是通过同一个公网 IP 进行上网的"></a>内网 IP 是由路由器/交换机分配的，内网的所有 IP 地址都是通过同一个公网 IP 进行上网的</h5></li><li><h5 id="内网-IP-只在局域网中有效，互联网上无法直接访问到内网的-IP-地址用户，即我们在自己电脑上查到的都是私有IP"><a href="#内网-IP-只在局域网中有效，互联网上无法直接访问到内网的-IP-地址用户，即我们在自己电脑上查到的都是私有IP" class="headerlink" title="内网 IP 只在局域网中有效，互联网上无法直接访问到内网的 IP 地址用户，即我们在自己电脑上查到的都是私有IP"></a>内网 IP 只在局域网中有效，互联网上无法直接访问到内网的 IP 地址用户，即我们在自己电脑上查到的都是私有IP</h5></li><li><h5 id="两个-IP-同时存在，一个对内，一个对外"><a href="#两个-IP-同时存在，一个对内，一个对外" class="headerlink" title="两个 IP 同时存在，一个对内，一个对外"></a>两个 IP 同时存在，一个对内，一个对外</h5></li><li><h5 id="那有人可能会问，如何判断一个-IP-是公网-IP-还是内网-IP-呢？当然，公网-IP-和内网-IP-也很好分辨："><a href="#那有人可能会问，如何判断一个-IP-是公网-IP-还是内网-IP-呢？当然，公网-IP-和内网-IP-也很好分辨：" class="headerlink" title="那有人可能会问，如何判断一个 IP 是公网 IP 还是内网 IP 呢？当然，公网 IP 和内网 IP 也很好分辨："></a>那有人可能会问，如何判断一个 IP 是公网 IP 还是内网 IP 呢？当然，公网 IP 和内网 IP 也很好分辨：</h5></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">如下3个区域就是处于私网：<br>1：10.<span class="hljs-strong">*.*</span>.*<br>2：172.16.<span class="hljs-strong">*.*</span>至172.31.<span class="hljs-strong">*.*</span><br>3：192.168.<span class="hljs-strong">*.*</span> （*为0到255之间的任意数字）<br>以上3个区域外的就是处于公网之中了<br></code></pre></td></tr></table></figure><h4 id="公网IP申请"><a href="#公网IP申请" class="headerlink" title="公网IP申请"></a>公网IP申请</h4><ul><li><h5 id="国内有很多厂商提供云服务，如阿里云、腾讯云、百度云、华为云、亚马逊云等等"><a href="#国内有很多厂商提供云服务，如阿里云、腾讯云、百度云、华为云、亚马逊云等等" class="headerlink" title="国内有很多厂商提供云服务，如阿里云、腾讯云、百度云、华为云、亚马逊云等等"></a>国内有很多厂商提供云服务，如阿里云、腾讯云、百度云、华为云、亚马逊云等等</h5></li><li><h5 id="我们在购买云服务器后，能够注意到该服务器已经被分配了一个公网-IP-，并且是唯一的"><a href="#我们在购买云服务器后，能够注意到该服务器已经被分配了一个公网-IP-，并且是唯一的" class="headerlink" title="我们在购买云服务器后，能够注意到该服务器已经被分配了一个公网 IP ，并且是唯一的"></a>我们在购买云服务器后，能够注意到该服务器已经被分配了一个公网 IP ，并且是唯一的</h5></li><li><h5 id="即购买相关服务或者租用服务器后，即可向服务提供商申请独立-IP-地址，所申请的-IP-地址为“公网-IP-”"><a href="#即购买相关服务或者租用服务器后，即可向服务提供商申请独立-IP-地址，所申请的-IP-地址为“公网-IP-”" class="headerlink" title="即购买相关服务或者租用服务器后，即可向服务提供商申请独立 IP 地址，所申请的 IP 地址为“公网 IP ”"></a>即购买相关服务或者租用服务器后，即可向服务提供商申请独立 IP 地址，所申请的 IP 地址为“公网 IP ”</h5></li></ul><h4 id="运营商"><a href="#运营商" class="headerlink" title="运营商"></a>运营商</h4><ul><li><h5 id="国内三大运营商：移动、电信、联通"><a href="#国内三大运营商：移动、电信、联通" class="headerlink" title="国内三大运营商：移动、电信、联通"></a>国内三大运营商：移动、电信、联通</h5></li><li><h5 id="我们之前提到过，通过-NAT-技术，可以将我们的内网-IP-转换成公网-IP-来进行网络通信，这个过程的详细流程是这样的："><a href="#我们之前提到过，通过-NAT-技术，可以将我们的内网-IP-转换成公网-IP-来进行网络通信，这个过程的详细流程是这样的：" class="headerlink" title="我们之前提到过，通过 NAT 技术，可以将我们的内网 IP 转换成公网 IP 来进行网络通信，这个过程的详细流程是这样的："></a>我们之前提到过，通过 NAT 技术，可以将我们的内网 IP 转换成公网 IP 来进行网络通信，这个过程的详细流程是这样的：</h5></li><li><h5 id="国内的三大运营商向-Inter-NIC-申请并购买了一些公网-IP，然后通过这些公网-IP-，再分给国内用户使用"><a href="#国内的三大运营商向-Inter-NIC-申请并购买了一些公网-IP，然后通过这些公网-IP-，再分给国内用户使用" class="headerlink" title="国内的三大运营商向 Inter NIC 申请并购买了一些公网 IP，然后通过这些公网 IP ，再分给国内用户使用"></a>国内的三大运营商向 Inter NIC 申请并购买了一些公网 IP，然后通过这些公网 IP ，再分给国内用户使用</h5></li><li><h5 id="我们在家里安装了宽带，在局域网下，通过路由器分出几个-IP-，让家里的手机、电脑都能联网"><a href="#我们在家里安装了宽带，在局域网下，通过路由器分出几个-IP-，让家里的手机、电脑都能联网" class="headerlink" title="我们在家里安装了宽带，在局域网下，通过路由器分出几个 IP ，让家里的手机、电脑都能联网"></a>我们在家里安装了宽带，在局域网下，通过路由器分出几个 IP ，让家里的手机、电脑都能联网</h5></li><li><h5 id="只不过我们平时上网用的都是内网-IP-，或者说是私有-IP-，真正拥有公网-IP-的是运营商（当然，我们可以租用一个公网-IP-，就是上面提到的购买云服务器的方法）"><a href="#只不过我们平时上网用的都是内网-IP-，或者说是私有-IP-，真正拥有公网-IP-的是运营商（当然，我们可以租用一个公网-IP-，就是上面提到的购买云服务器的方法）" class="headerlink" title="只不过我们平时上网用的都是内网 IP ，或者说是私有 IP ，真正拥有公网 IP 的是运营商（当然，我们可以租用一个公网 IP ，就是上面提到的购买云服务器的方法）"></a>只不过我们平时上网用的都是内网 IP ，或者说是私有 IP ，真正拥有公网 IP 的是运营商（当然，我们可以租用一个公网 IP ，就是上面提到的购买云服务器的方法）</h5></li><li><h5 id="这里注意到，两个家庭的局域网-IP-相同是有可能的也很正常，因为这两个家庭上网还是通过运营商的公网-IP-，而公网-IP-是唯一的"><a href="#这里注意到，两个家庭的局域网-IP-相同是有可能的也很正常，因为这两个家庭上网还是通过运营商的公网-IP-，而公网-IP-是唯一的" class="headerlink" title="这里注意到，两个家庭的局域网 IP 相同是有可能的也很正常，因为这两个家庭上网还是通过运营商的公网 IP ，而公网 IP 是唯一的"></a>这里注意到，两个家庭的局域网 IP 相同是有可能的也很正常，因为这两个家庭上网还是通过运营商的公网 IP ，而公网 IP 是唯一的</h5></li><li><h5 id="那么我们的上网过程就是这样的：我们平时经过路由器，通过宽带，最终去到运营商那边，数据是从运营商出去，最终数据是回到运营商那边，运营商再把数据发送到用户的电脑"><a href="#那么我们的上网过程就是这样的：我们平时经过路由器，通过宽带，最终去到运营商那边，数据是从运营商出去，最终数据是回到运营商那边，运营商再把数据发送到用户的电脑" class="headerlink" title="那么我们的上网过程就是这样的：我们平时经过路由器，通过宽带，最终去到运营商那边，数据是从运营商出去，最终数据是回到运营商那边，运营商再把数据发送到用户的电脑"></a>那么我们的上网过程就是这样的：我们平时经过路由器，通过宽带，最终去到运营商那边，数据是从运营商出去，最终数据是回到运营商那边，运营商再把数据发送到用户的电脑</h5></li></ul><h2 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h2><h3 id="出处"><a href="#出处" class="headerlink" title="出处"></a>出处</h3><ul><li><h5 id="众所周知，声纳音是是各国海军进行水下监视使用的主要技术，它利用声波在水中的传播和反射来进行导航和测距"><a href="#众所周知，声纳音是是各国海军进行水下监视使用的主要技术，它利用声波在水中的传播和反射来进行导航和测距" class="headerlink" title="众所周知，声纳音是是各国海军进行水下监视使用的主要技术，它利用声波在水中的传播和反射来进行导航和测距"></a>众所周知，声纳音是是各国海军进行水下监视使用的主要技术，它利用声波在水中的传播和反射来进行导航和测距</h5></li><li><h5 id="我们现在使用的Ping命令，就是以声纳音“ping”来命名的"><a href="#我们现在使用的Ping命令，就是以声纳音“ping”来命名的" class="headerlink" title="我们现在使用的Ping命令，就是以声纳音“ping”来命名的"></a>我们现在使用的Ping命令，就是以声纳音“ping”来命名的</h5></li></ul><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><ul><li><h5 id="Ping命令的原理及多种用法-哔哩哔哩-bilibili"><a href="#Ping命令的原理及多种用法-哔哩哔哩-bilibili" class="headerlink" title="Ping命令的原理及多种用法_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1WZ4y187ak/?p=2&spm_id_from=pageDriver">Ping命令的原理及多种用法_哔哩哔哩_bilibili</a></h5></li><li><h5 id="Ping命令是网络管理命令中的一种常见命令，基于ICMP协议，用于测试网络的连通性"><a href="#Ping命令是网络管理命令中的一种常见命令，基于ICMP协议，用于测试网络的连通性" class="headerlink" title="Ping命令是网络管理命令中的一种常见命令，基于ICMP协议，用于测试网络的连通性"></a>Ping命令是网络管理命令中的一种常见命令，基于ICMP协议，用于测试网络的连通性</h5></li><li><h5 id="互联网中的Ping命令包含两个过程："><a href="#互联网中的Ping命令包含两个过程：" class="headerlink" title="互联网中的Ping命令包含两个过程："></a>互联网中的Ping命令包含两个过程：</h5></li><li><h5 id="Ping-请求和Ping-响应"><a href="#Ping-请求和Ping-响应" class="headerlink" title="Ping 请求和Ping 响应"></a>Ping 请求和Ping 响应</h5></li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">Ping</span>命令就是发送数据包到目标端，然后等待<span class="hljs-built_in">Ping</span>返回数据<br>根据<span class="hljs-built_in">Ping</span>返回的数据来判断是否可以抵达目标端<br>并分析出数据返回时间、与目标端的距离等等信息<br></code></pre></td></tr></table></figure><h3 id="Ping的五步法"><a href="#Ping的五步法" class="headerlink" title="Ping的五步法"></a>Ping的五步法</h3><ul><li><h5 id="我们需要进行以下五个步骤来验证电脑上的Ping工具是否正常使用："><a href="#我们需要进行以下五个步骤来验证电脑上的Ping工具是否正常使用：" class="headerlink" title="我们需要进行以下五个步骤来验证电脑上的Ping工具是否正常使用："></a>我们需要进行以下五个步骤来验证电脑上的Ping工具是否正常使用：</h5></li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">ping</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/localhost<br><span class="hljs-built_in">ping</span> 本机IP地址<br><span class="hljs-built_in">ping</span> 默认网关<br><span class="hljs-built_in">ping</span> 目标IP地址<br><span class="hljs-built_in">ping</span> 目标主机名<br></code></pre></td></tr></table></figure><ul><li><h5 id="ping-127-0-0-1：检测自己主机的网络配置是否正常，无需联网"><a href="#ping-127-0-0-1：检测自己主机的网络配置是否正常，无需联网" class="headerlink" title="ping 127.0.0.1：检测自己主机的网络配置是否正常，无需联网"></a>ping 127.0.0.1：检测自己主机的网络配置是否正常，无需联网</h5></li><li><h5 id="ping-本机IP地址：ping本机的内网IP，检测本机网线及WIFI连接是否有问题"><a href="#ping-本机IP地址：ping本机的内网IP，检测本机网线及WIFI连接是否有问题" class="headerlink" title="ping 本机IP地址：ping本机的内网IP，检测本机网线及WIFI连接是否有问题"></a>ping 本机IP地址：ping本机的内网IP，检测本机网线及WIFI连接是否有问题</h5></li><li><h5 id="ping-默认网关：即ping路由器，检测路由器是否出现故障"><a href="#ping-默认网关：即ping路由器，检测路由器是否出现故障" class="headerlink" title="ping 默认网关：即ping路由器，检测路由器是否出现故障"></a>ping 默认网关：即ping路由器，检测路由器是否出现故障</h5></li><li><h5 id="ping-目标IP地址：这一步不成功的原因有很多，排除掉本机的网络连接问题，很可能是对方主机未联网、防火墙屏蔽了ping请求、数据包丢失等等，多是外部原因"><a href="#ping-目标IP地址：这一步不成功的原因有很多，排除掉本机的网络连接问题，很可能是对方主机未联网、防火墙屏蔽了ping请求、数据包丢失等等，多是外部原因" class="headerlink" title="ping 目标IP地址：这一步不成功的原因有很多，排除掉本机的网络连接问题，很可能是对方主机未联网、防火墙屏蔽了ping请求、数据包丢失等等，多是外部原因"></a>ping 目标IP地址：这一步不成功的原因有很多，排除掉本机的网络连接问题，很可能是对方主机未联网、防火墙屏蔽了ping请求、数据包丢失等等，多是外部原因</h5></li><li><h5 id="ping-目标主机名：即ping一个域名，域名会在DNS里解析成IP地址，其原理同上"><a href="#ping-目标主机名：即ping一个域名，域名会在DNS里解析成IP地址，其原理同上" class="headerlink" title="ping 目标主机名：即ping一个域名，域名会在DNS里解析成IP地址，其原理同上"></a>ping 目标主机名：即ping一个域名，域名会在DNS里解析成IP地址，其原理同上</h5></li></ul><h3 id="Ping数据包"><a href="#Ping数据包" class="headerlink" title="Ping数据包"></a>Ping数据包</h3><ul><li><h5 id="我们在执行ping命令后，控制台上会不断地跳出提示消息，这些就是ping成功发送以后得到的消息"><a href="#我们在执行ping命令后，控制台上会不断地跳出提示消息，这些就是ping成功发送以后得到的消息" class="headerlink" title="我们在执行ping命令后，控制台上会不断地跳出提示消息，这些就是ping成功发送以后得到的消息"></a>我们在执行ping命令后，控制台上会不断地跳出提示消息，这些就是ping成功发送以后得到的消息</h5></li><li><h5 id="这些消息包括：目标IP地址、数据包传输时间、数据包生命周期、数据字节等等，如下："><a href="#这些消息包括：目标IP地址、数据包传输时间、数据包生命周期、数据字节等等，如下：" class="headerlink" title="这些消息包括：目标IP地址、数据包传输时间、数据包生命周期、数据字节等等，如下："></a>这些消息包括：目标IP地址、数据包传输时间、数据包生命周期、数据字节等等，如下：</h5></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs markdown">C:\WINDOWS\system32&gt;ping -n 20 www.baidu.com<br><br>正在 Ping www.baidu.com [39.156.66.18] 具有 32 字节的数据:<br>来自 39.156.66.18 的回复: 字节=32 时间=22ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=18ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=129ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=361ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=50ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=42ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=20ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=19ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=17ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=17ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=15ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=17ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=19ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=21ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=37ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=53ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=50ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=23ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=30ms TTL=52<br>来自 39.156.66.18 的回复: 字节=32 时间=23ms TTL=52<br><br>39.156.66.18 的 Ping 统计信息:<br><span class="hljs-code">    数据包: 已发送 = 20，已接收 = 20，丢失 = 0 (0% 丢失)，</span><br><span class="hljs-code">往返行程的估计时间(以毫秒为单位):</span><br><span class="hljs-code">    最短 = 15ms，最长 = 361ms，平均 = 49ms</span><br></code></pre></td></tr></table></figure><h3 id="常用Ping命令"><a href="#常用Ping命令" class="headerlink" title="常用Ping命令"></a>常用Ping命令</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs markdown">C:\WINDOWS\system32&gt;ping<br><br>用法: ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL] [-v TOS]<br><span class="hljs-code">            [-r count] [-s count] [[-j host-list] | [-k host-list]]</span><br><span class="hljs-code">            [-w timeout] [-R] [-S srcaddr] [-c compartment] [-p]</span><br><span class="hljs-code">            [-4] [-6] target_name</span><br><span class="hljs-code"></span><br>选项:<br><span class="hljs-code">    -t             Ping 指定的主机，直到停止。</span><br><span class="hljs-code">                   若要查看统计信息并继续操作，请键入 Ctrl+Break；</span><br><span class="hljs-code">                   若要停止，请键入 Ctrl+C。</span><br><span class="hljs-code">    -a             将地址解析为主机名。</span><br><span class="hljs-code">    -n count       要发送的回显请求数。</span><br><span class="hljs-code">    -l size        发送缓冲区大小。</span><br><span class="hljs-code">    -f             在数据包中设置“不分段”标记(仅适用于 IPv4)。</span><br><span class="hljs-code">    -i TTL         生存时间。</span><br><span class="hljs-code">    -v TOS         服务类型(仅适用于 IPv4。该设置已被弃用，</span><br><span class="hljs-code">                   对 IP 标头中的服务类型字段没有任何</span><br><span class="hljs-code">                   影响)。</span><br><span class="hljs-code">    -r count       记录计数跃点的路由(仅适用于 IPv4)。</span><br><span class="hljs-code">    -s count       计数跃点的时间戳(仅适用于 IPv4)。</span><br><span class="hljs-code">    -j host-list   与主机列表一起使用的松散源路由(仅适用于 IPv4)。</span><br><span class="hljs-code">    -k host-list    与主机列表一起使用的严格源路由(仅适用于 IPv4)。</span><br><span class="hljs-code">    -w timeout     等待每次回复的超时时间(毫秒)。</span><br><span class="hljs-code">    -R             同样使用路由标头测试反向路由(仅适用于 IPv6)。</span><br><span class="hljs-code">                   根据 RFC 5095，已弃用此路由标头。</span><br><span class="hljs-code">                   如果使用此标头，某些系统可能丢弃</span><br><span class="hljs-code">                   回显请求。</span><br><span class="hljs-code">    -S srcaddr     要使用的源地址。</span><br><span class="hljs-code">    -c compartment 路由隔离舱标识符。</span><br><span class="hljs-code">    -p             Ping Hyper-V 网络虚拟化提供程序地址。</span><br><span class="hljs-code">    -4             强制使用 IPv4。</span><br><span class="hljs-code">    -6             强制使用 IPv6。</span><br></code></pre></td></tr></table></figure><h3 id="常见错误信息"><a href="#常见错误信息" class="headerlink" title="常见错误信息"></a>常见错误信息</h3><ul><li><h5 id="这里简单提一下常见的错误信息，具体的内容，日后有实操经验后再另作介绍"><a href="#这里简单提一下常见的错误信息，具体的内容，日后有实操经验后再另作介绍" class="headerlink" title="这里简单提一下常见的错误信息，具体的内容，日后有实操经验后再另作介绍"></a>这里简单提一下常见的错误信息，具体的内容，日后有实操经验后再另作介绍</h5></li><li><h5 id="请求超时、无法连接到目标IP、硬件错误"><a href="#请求超时、无法连接到目标IP、硬件错误" class="headerlink" title="请求超时、无法连接到目标IP、硬件错误"></a>请求超时、无法连接到目标IP、硬件错误</h5></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><h5 id="在这篇博客中，我们深入探讨了IP的概念，重点介绍了公网IP和内网IP的区别以及Ping命令的基本原理和用途。"><a href="#在这篇博客中，我们深入探讨了IP的概念，重点介绍了公网IP和内网IP的区别以及Ping命令的基本原理和用途。" class="headerlink" title="在这篇博客中，我们深入探讨了IP的概念，重点介绍了公网IP和内网IP的区别以及Ping命令的基本原理和用途。"></a>在这篇博客中，我们深入探讨了IP的概念，重点介绍了公网IP和内网IP的区别以及Ping命令的基本原理和用途。</h5></li><li><h5 id="通过了解IP地址的结构和分类，我们能够更好地理解网络连接的基础知识。同时，通过掌握Ping命令的使用，我们可以有效地测试和诊断网络连接的可靠性和性能。"><a href="#通过了解IP地址的结构和分类，我们能够更好地理解网络连接的基础知识。同时，通过掌握Ping命令的使用，我们可以有效地测试和诊断网络连接的可靠性和性能。" class="headerlink" title="通过了解IP地址的结构和分类，我们能够更好地理解网络连接的基础知识。同时，通过掌握Ping命令的使用，我们可以有效地测试和诊断网络连接的可靠性和性能。"></a>通过了解IP地址的结构和分类，我们能够更好地理解网络连接的基础知识。同时，通过掌握Ping命令的使用，我们可以有效地测试和诊断网络连接的可靠性和性能。</h5></li><li><h5 id="希望这篇博客为读者提供了有益的计算机网络基础知识，让您能够更加自信地掌握网络连接和故障排查的要点。继续关注我们的博客，将会有更多有趣的计算机网络相关内容与大家分享。谢谢阅读！"><a href="#希望这篇博客为读者提供了有益的计算机网络基础知识，让您能够更加自信地掌握网络连接和故障排查的要点。继续关注我们的博客，将会有更多有趣的计算机网络相关内容与大家分享。谢谢阅读！" class="headerlink" title="希望这篇博客为读者提供了有益的计算机网络基础知识，让您能够更加自信地掌握网络连接和故障排查的要点。继续关注我们的博客，将会有更多有趣的计算机网络相关内容与大家分享。谢谢阅读！"></a>希望这篇博客为读者提供了有益的计算机网络基础知识，让您能够更加自信地掌握网络连接和故障排查的要点。继续关注我们的博客，将会有更多有趣的计算机网络相关内容与大家分享。谢谢阅读！</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>IP</category>
      
      <category>计算机网络</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>IP</tag>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速启动：开发自己的定制化 Spring Boot 项目模板</title>
    <link href="/blog/2023/07/06/%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%EF%BC%9A%E5%BC%80%E5%8F%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%AE%9A%E5%88%B6%E5%8C%96-Spring-Boot-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/"/>
    <url>/blog/2023/07/06/%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%EF%BC%9A%E5%BC%80%E5%8F%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%AE%9A%E5%88%B6%E5%8C%96-Spring-Boot-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Project</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Project</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>掌握 JetBrains IntelliJ IDEA：使用心得与技巧</title>
    <link href="/blog/2023/07/06/%E6%8E%8C%E6%8F%A1-JetBrains-IntelliJ-IDEA%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
    <url>/blog/2023/07/06/%E6%8E%8C%E6%8F%A1-JetBrains-IntelliJ-IDEA%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E4%B8%8E%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><h2 id="多端口启动项目"><a href="#多端口启动项目" class="headerlink" title="多端口启动项目"></a>多端口启动项目</h2><ul><li><h5 id="在使用IDEA作Java-Spring全家桶框架后端开发时，经常要多端口跑项目，那么借助IDEA，这种操作怎样实现呢？"><a href="#在使用IDEA作Java-Spring全家桶框架后端开发时，经常要多端口跑项目，那么借助IDEA，这种操作怎样实现呢？" class="headerlink" title="在使用IDEA作Java + Spring全家桶框架后端开发时，经常要多端口跑项目，那么借助IDEA，这种操作怎样实现呢？"></a>在使用IDEA作Java + Spring全家桶框架后端开发时，经常要多端口跑项目，那么借助IDEA，这种操作怎样实现呢？</h5></li><li><h5 id="最近在学习SpringCloud微服务，就拿其中一个微服务来演示吧"><a href="#最近在学习SpringCloud微服务，就拿其中一个微服务来演示吧" class="headerlink" title="最近在学习SpringCloud微服务，就拿其中一个微服务来演示吧"></a>最近在学习SpringCloud微服务，就拿其中一个微服务来演示吧</h5></li><li><h5 id="首先，运行UserService服务："><a href="#首先，运行UserService服务：" class="headerlink" title="首先，运行UserService服务："></a>首先，运行UserService服务：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230715150128360.png" alt="image-20230715150128360"></p><ul><li><h5 id="如上图所示，该服务已在8099端口运行"><a href="#如上图所示，该服务已在8099端口运行" class="headerlink" title="如上图所示，该服务已在8099端口运行"></a>如上图所示，该服务已在8099端口运行</h5></li><li><h5 id="接下来我们就要实现多端口运行UserService服务了"><a href="#接下来我们就要实现多端口运行UserService服务了" class="headerlink" title="接下来我们就要实现多端口运行UserService服务了"></a>接下来我们就要实现多端口运行UserService服务了</h5></li><li><h5 id="复制一份UserService服务运行实例："><a href="#复制一份UserService服务运行实例：" class="headerlink" title="复制一份UserService服务运行实例："></a>复制一份UserService服务运行实例：</h5></li></ul><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230715150352424.png" alt="image-20230715150352424" style="zoom:150%;" /><ul><li><h5 id="在弹窗中指定服务名称，并配置启动端口号："><a href="#在弹窗中指定服务名称，并配置启动端口号：" class="headerlink" title="在弹窗中指定服务名称，并配置启动端口号："></a>在弹窗中指定服务名称，并配置启动端口号：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230715150618730.png" alt="image-20230715150618730"></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm">-<span class="hljs-type">Dserver</span>.<span class="hljs-keyword">port</span>=7099<br></code></pre></td></tr></table></figure><ul><li><h5 id="点击确认，在-Not-Started下-即可找到复制后的服务："><a href="#点击确认，在-Not-Started下-即可找到复制后的服务：" class="headerlink" title="点击确认，在 Not Started下 即可找到复制后的服务："></a>点击确认，在 Not Started下 即可找到复制后的服务：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230715150755974.png" alt="image-20230715150755974"></p><ul><li><h5 id="启动该服务，即可看到-User在7099端口成功运行了："><a href="#启动该服务，即可看到-User在7099端口成功运行了：" class="headerlink" title="启动该服务，即可看到 User在7099端口成功运行了："></a>启动该服务，即可看到 User在7099端口成功运行了：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230715150951551.png" alt="image-20230715150951551"></p><ul><li><h5 id="这就是IDEA工具中多端口运行服务的方法"><a href="#这就是IDEA工具中多端口运行服务的方法" class="headerlink" title="这就是IDEA工具中多端口运行服务的方法"></a>这就是IDEA工具中多端口运行服务的方法</h5></li></ul><h2 id="实用插件"><a href="#实用插件" class="headerlink" title="实用插件"></a>实用插件</h2>]]></content>
    
    
    <categories>
      
      <category>IDEA</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>理解npm、pnpm和yarn：选出最适合你的包管理器</title>
    <link href="/blog/2023/07/02/%E7%90%86%E8%A7%A3npm%E3%80%81pnpm%E5%92%8Cyarn%EF%BC%9A%E9%80%89%E5%87%BA%E6%9C%80%E9%80%82%E5%90%88%E4%BD%A0%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <url>/blog/2023/07/02/%E7%90%86%E8%A7%A3npm%E3%80%81pnpm%E5%92%8Cyarn%EF%BC%9A%E9%80%89%E5%87%BA%E6%9C%80%E9%80%82%E5%90%88%E4%BD%A0%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/zz00008888/article/details/129355497">(71条消息) pnpm 基本详细使用（安装、卸载、使用）_pnpm 卸载_卡尔特斯的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/it_xcr/article/details/114655778">(71条消息) pnpm的安装与使用_pnpm安装_itxcr的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/jiaoqi6132/article/details/130146199">(71条消息) yarn的安装和使用（极其详细）_yarn安装_树根朽木的博客-CSDN博客</a></p>]]></content>
    
    
    <categories>
      
      <category>包管理器</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>包管理器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始的JavaWeb之旅</title>
    <link href="/blog/2023/07/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84JavaWeb%E4%B9%8B%E6%97%85/"/>
    <url>/blog/2023/07/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84JavaWeb%E4%B9%8B%E6%97%85/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>JavaWeb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大道至简：快速搭建博客与文档站点的终极指南3.0</title>
    <link href="/blog/2023/06/26/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%973-0/"/>
    <url>/blog/2023/06/26/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%973-0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
      <category>站点配置</category>
      
      <category>Blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Blog</tag>
      
      <tag>站点配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用JSP构建JavaWeb项目--以数据库大作业为例</title>
    <link href="/blog/2023/06/24/%E4%BD%BF%E7%94%A8JSP%E6%9E%84%E5%BB%BAJavaWeb%E9%A1%B9%E7%9B%AE-%E4%BB%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E4%BD%9C%E4%B8%9A%E4%B8%BA%E4%BE%8B/"/>
    <url>/blog/2023/06/24/%E4%BD%BF%E7%94%A8JSP%E6%9E%84%E5%BB%BAJavaWeb%E9%A1%B9%E7%9B%AE-%E4%BB%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E4%BD%9C%E4%B8%9A%E4%B8%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><ul><li><h5 id="最近老师布置了数据库实验大作业，要求将数据库表的数据与前台绑定，展示数据在前台浏览器上，并实现对数据的增删改"><a href="#最近老师布置了数据库实验大作业，要求将数据库表的数据与前台绑定，展示数据在前台浏览器上，并实现对数据的增删改" class="headerlink" title="最近老师布置了数据库实验大作业，要求将数据库表的数据与前台绑定，展示数据在前台浏览器上，并实现对数据的增删改"></a>最近老师布置了数据库实验大作业，要求将数据库表的数据与前台绑定，展示数据在前台浏览器上，并实现对数据的增删改</h5></li><li><h5 id="我计划用JSP技术，来实现这个功能，顺便巩固JavaWeb基础和复习相关知识"><a href="#我计划用JSP技术，来实现这个功能，顺便巩固JavaWeb基础和复习相关知识" class="headerlink" title="我计划用JSP技术，来实现这个功能，顺便巩固JavaWeb基础和复习相关知识"></a>我计划用JSP技术，来实现这个功能，顺便巩固JavaWeb基础和复习相关知识</h5></li><li><h5 id="目标：建立一张数据库表Student，实现在前台页面对该表的增删改查"><a href="#目标：建立一张数据库表Student，实现在前台页面对该表的增删改查" class="headerlink" title="目标：建立一张数据库表Student，实现在前台页面对该表的增删改查"></a>目标：建立一张数据库表Student，实现在前台页面对该表的增删改查</h5></li></ul><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li><h5 id="下载和配置Maven管理工具"><a href="#下载和配置Maven管理工具" class="headerlink" title="下载和配置Maven管理工具"></a>下载和配置Maven管理工具</h5></li><li><h5 id="配置Tomcat服务器，构建Web项目"><a href="#配置Tomcat服务器，构建Web项目" class="headerlink" title="配置Tomcat服务器，构建Web项目"></a>配置Tomcat服务器，构建Web项目</h5></li><li><h5 id="导坐标，引入项目开发所需依赖"><a href="#导坐标，引入项目开发所需依赖" class="headerlink" title="导坐标，引入项目开发所需依赖"></a>导坐标，引入项目开发所需依赖</h5></li><li><h5 id="创建数据库和表结构"><a href="#创建数据库和表结构" class="headerlink" title="创建数据库和表结构"></a>创建数据库和表结构</h5></li></ul><h1 id="编码开发"><a href="#编码开发" class="headerlink" title="编码开发"></a>编码开发</h1><h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><ul><li><h5 id="使用JSP技术，成功实现了在前台页面对数据库表Student的增、删、改、查"><a href="#使用JSP技术，成功实现了在前台页面对数据库表Student的增、删、改、查" class="headerlink" title="使用JSP技术，成功实现了在前台页面对数据库表Student的增、删、改、查"></a>使用JSP技术，成功实现了在前台页面对数据库表Student的增、删、改、查</h5></li><li><h5 id="表结构及数据展示效果如下："><a href="#表结构及数据展示效果如下：" class="headerlink" title="表结构及数据展示效果如下："></a>表结构及数据展示效果如下：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230630160142197.png" alt="image-20230630160142197"></p><ul><li><h5 id="新增学生记录，效果演示如下："><a href="#新增学生记录，效果演示如下：" class="headerlink" title="新增学生记录，效果演示如下："></a>新增学生记录，效果演示如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630160203158.png" alt="image-20230630160203158"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630160219353.png" alt="image-20230630160219353"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630160229118.png" alt="image-20230630160229118"></p><ul><li><h5 id="修改学生记录，效果演示如下"><a href="#修改学生记录，效果演示如下" class="headerlink" title="修改学生记录，效果演示如下"></a>修改学生记录，效果演示如下</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630161705084.png" alt="image-20230630161705084"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630161833394.png" alt="image-20230630161833394"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630161930431.png" alt="image-20230630161930431"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630162022236.png" alt="image-20230630162022236"></p><ul><li><h5 id="删除学生记录，效果如下："><a href="#删除学生记录，效果如下：" class="headerlink" title="删除学生记录，效果如下："></a>删除学生记录，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630160328728.png" alt="image-20230630160328728"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230630160338852.png" alt="image-20230630160338852"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><h5 id=""><a href="#" class="headerlink" title=""></a></h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>JSP</category>
      
      <category>经验</category>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>MySQL</tag>
      
      <tag>JSP</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大道至简：快速搭建博客与文档站点的终极指南2.0</title>
    <link href="/blog/2023/06/24/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%972.0/"/>
    <url>/blog/2023/06/24/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%972.0/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>对Gitee进行简介，介绍其作为开源托管平台的优势和受欢迎程度</li><li>提出使用Gitee来托管静态网站的需求和好处</li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Gitee基础知识和使用"><a href="#Gitee基础知识和使用" class="headerlink" title="Gitee基础知识和使用"></a>Gitee基础知识和使用</h2><ul><li>注册和创建Gitee账号</li><li>创建新的仓库（Repository）</li><li>了解仓库的组成和功能，例如分支、提交记录等</li><li>熟悉仓库的基础操作，如上传和下载文件、提交和同步代码等</li></ul><h2 id="Gitee-Page服务简介"><a href="#Gitee-Page服务简介" class="headerlink" title="Gitee Page服务简介"></a>Gitee Page服务简介</h2><ul><li>介绍Gitee的Page服务，它是什么以及它的作用</li><li>解释Page服务的原理和运行机制</li><li>简要介绍Page服务的特性，如自动部署、自定义域名等</li></ul><h2 id="托管静态网站的步骤和实践"><a href="#托管静态网站的步骤和实践" class="headerlink" title="托管静态网站的步骤和实践"></a>托管静态网站的步骤和实践</h2><ul><li>准备网站目录和静态资源</li><li>在Gitee仓库中创建和组织网站文件的结构</li><li>配置Page服务并将网站部署到Gitee仓库</li><li>详细说明自定义域名、HTTPS等高级配置选项</li></ul><h2 id="最佳实践和常见问题解答"><a href="#最佳实践和常见问题解答" class="headerlink" title="最佳实践和常见问题解答"></a>最佳实践和常见问题解答</h2><ul><li>分享一些使用Gitee托管静态网站的最佳实践和技巧</li><li>解答常见问题，如如何自动构建、如何更新网站内容等</li></ul><h2 id="Gitee托管"><a href="#Gitee托管" class="headerlink" title="Gitee托管"></a>Gitee托管</h2><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702152240718.png" alt="image-20230702152240718"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702152844439.png" alt="image-20230702152844439"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702152910555.png" alt="image-20230702152910555"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702153051903.png" alt="image-20230702153051903"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702153115901.png" alt="image-20230702153115901"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702153134983.png" alt="image-20230702153134983"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230702153211860.png" alt="image-20230702153211860"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>总结使用Gitee的Page服务托管静态网站的优势和便利性</li><li>强调Gitee作为开源社区的重要性，并鼓励读者尝试使用Gitee进行项目和网站托管</li></ul>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
      <category>文档站点生成</category>
      
      <category>Blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Blogs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置指南-掌握Node.js配置</title>
    <link href="/blog/2023/06/24/%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97-%E6%8E%8C%E6%8F%A1Node-js%E9%85%8D%E7%BD%AE/"/>
    <url>/blog/2023/06/24/%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97-%E6%8E%8C%E6%8F%A1Node-js%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="本文通过简要介绍npm、nvm和node的关系以及它们对于开发者的重要作用，帮助读者理解和配置这些工具"><a href="#本文通过简要介绍npm、nvm和node的关系以及它们对于开发者的重要作用，帮助读者理解和配置这些工具" class="headerlink" title="本文通过简要介绍npm、nvm和node的关系以及它们对于开发者的重要作用，帮助读者理解和配置这些工具"></a>本文通过简要介绍npm、nvm和node的关系以及它们对于开发者的重要作用，帮助读者理解和配置这些工具</h5></li><li><h5 id="在我的日常开发过程中，使用到很多前端开发工具、构建工具（如vite-cli）、打包工具（如webpack），这些工具通常需要通过npm进行安装"><a href="#在我的日常开发过程中，使用到很多前端开发工具、构建工具（如vite-cli）、打包工具（如webpack），这些工具通常需要通过npm进行安装" class="headerlink" title="在我的日常开发过程中，使用到很多前端开发工具、构建工具（如vite-cli）、打包工具（如webpack），这些工具通常需要通过npm进行安装"></a>在我的日常开发过程中，使用到很多前端开发工具、构建工具（如vite-cli）、打包工具（如webpack），这些工具通常需要通过npm进行安装</h5></li><li><h5 id="我还使用到许多的后端前沿框架、容器（如Docker）和各类数据库驱动服务（如MongoDB），这些框架通常使用npm进行安装和管理"><a href="#我还使用到许多的后端前沿框架、容器（如Docker）和各类数据库驱动服务（如MongoDB），这些框架通常使用npm进行安装和管理" class="headerlink" title="我还使用到许多的后端前沿框架、容器（如Docker）和各类数据库驱动服务（如MongoDB），这些框架通常使用npm进行安装和管理"></a>我还使用到许多的后端前沿框架、容器（如Docker）和各类数据库驱动服务（如MongoDB），这些框架通常使用npm进行安装和管理</h5></li><li><h5 id="总的来说，Node-js环境在前端开发、后端开发、构建工具、自动化测试、静态代码分析等方面都有广泛的应用。它为开发者提供了大量的工具和框架，使得开发更加高效和便利"><a href="#总的来说，Node-js环境在前端开发、后端开发、构建工具、自动化测试、静态代码分析等方面都有广泛的应用。它为开发者提供了大量的工具和框架，使得开发更加高效和便利" class="headerlink" title="总的来说，Node.js环境在前端开发、后端开发、构建工具、自动化测试、静态代码分析等方面都有广泛的应用。它为开发者提供了大量的工具和框架，使得开发更加高效和便利"></a>总的来说，Node.js环境在前端开发、后端开发、构建工具、自动化测试、静态代码分析等方面都有广泛的应用。它为开发者提供了大量的工具和框架，使得开发更加高效和便利</h5></li><li><h5 id="总的来说，Node-js环境是非常重要的，我们当然不会将以上涉及到的庞大的知识体系逐一讲解，我们将要学习的，是Node-js的基础配置，为我们以后的开发打下坚实的基础"><a href="#总的来说，Node-js环境是非常重要的，我们当然不会将以上涉及到的庞大的知识体系逐一讲解，我们将要学习的，是Node-js的基础配置，为我们以后的开发打下坚实的基础" class="headerlink" title="总的来说，Node.js环境是非常重要的，我们当然不会将以上涉及到的庞大的知识体系逐一讲解，我们将要学习的，是Node.js的基础配置，为我们以后的开发打下坚实的基础"></a>总的来说，Node.js环境是非常重要的，我们当然不会将以上涉及到的庞大的知识体系逐一讲解，我们将要学习的，是Node.js的基础配置，为我们以后的开发打下坚实的基础</h5></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h4 id="什么是Node-js："><a href="#什么是Node-js：" class="headerlink" title="什么是Node.js："></a>什么是Node.js：</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">Node</span><span class="hljs-operator">.</span><span class="hljs-variable">js</span>是一个基于<span class="hljs-variable">Chrome</span> <span class="hljs-variable">V8</span>引擎的<span class="hljs-variable">JavaScript</span>运行环境。它允许开发者使用<span class="hljs-variable">JavaScript</span>来构建服务器端的高性能应用程序。它提供了一种非阻塞、事件驱动的编程模型，使得处理并发、<span class="hljs-built_in">I</span><span class="hljs-operator">/</span><span class="hljs-built_in">O</span>密集型的任务变得更加高效和可扩展。通过<span class="hljs-variable">Node</span><span class="hljs-operator">.</span><span class="hljs-variable">js</span>，开发者可以使用熟悉的<span class="hljs-variable">JavaScript</span>语言来构建快速、可靠的服务器端应用程序<br></code></pre></td></tr></table></figure><ul><li><h5 id="我们还可以从其他相关资料中，了解到Node-js环境是什么样的，是用来干什么的"><a href="#我们还可以从其他相关资料中，了解到Node-js环境是什么样的，是用来干什么的" class="headerlink" title="我们还可以从其他相关资料中，了解到Node.js环境是什么样的，是用来干什么的"></a>我们还可以从其他相关资料中，了解到Node.js环境是什么样的，是用来干什么的</h5></li><li><h5 id="Node-js：Node基础-51CTO博客-node-js是什么"><a href="#Node-js：Node基础-51CTO博客-node-js是什么" class="headerlink" title="Node.js：Node基础_51CTO博客_node.js是什么"></a><a href="https://blog.51cto.com/u_15349906/5089930">Node.js：Node基础_51CTO博客_node.js是什么</a></h5></li><li><h5 id="一篇文章搞定什么是nodeJs它和NPM关系与应用-掘金-juejin-cn"><a href="#一篇文章搞定什么是nodeJs它和NPM关系与应用-掘金-juejin-cn" class="headerlink" title="一篇文章搞定什么是nodeJs它和NPM关系与应用 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7230683405544669243">一篇文章搞定什么是nodeJs它和NPM关系与应用 - 掘金 (juejin.cn)</a></h5></li></ul><h4 id="什么是npm："><a href="#什么是npm：" class="headerlink" title="什么是npm："></a>什么是npm：</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">npm是<span class="hljs-keyword">Node</span> <span class="hljs-title">Package</span> Manager的缩写，是一个用于Node.js项目的包管理工具。它是世界上最大的包管理器，拥有数量庞大的开放源码软件包和模块供开发者使用。通过npm，开发者可以方便地安装、更新和管理项目所需的依赖包，以及运行和测试脚本。<br></code></pre></td></tr></table></figure><h4 id="什么是nvm："><a href="#什么是nvm：" class="headerlink" title="什么是nvm："></a>什么是nvm：</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nvm是<span class="hljs-keyword">Node</span> <span class="hljs-title">Version</span> Manager的缩写，它是一个工具，允许你在同一台机器上安装和管理多个Node.js版本。nvm使得开发者可以轻松切换不同的Node.js版本，而无需手动安装和配置每个版本。这对于开发者来说非常有用，因为不同的项目可能需要不同的Node.js版本，nvm可以帮助开发者更好地管理这些版本。<br></code></pre></td></tr></table></figure><h4 id="nvm、npm和Node-js的关系："><a href="#nvm、npm和Node-js的关系：" class="headerlink" title="nvm、npm和Node.js的关系："></a>nvm、npm和Node.js的关系：</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nvm是<span class="hljs-keyword">Node</span> <span class="hljs-title">Version</span> Manager的缩写，它是一个工具，允许你在同一台机器上安装和管理多个Node.js版本。这对于开发者来说非常重要，因为不同的项目可能需要不同的Node.js版本，nvm允许你在这些项目之间轻松切换，而无需手动安装和配置每个版本<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Node</span>.</span></span>js则是这两个工具的基础，它提供了一个JavaScript运行环境，使得开发者可以在服务器端构建高性能的应用程序。npm和nvm作为与<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Node</span>.</span></span>js紧密相关的工具，为开发者提供了更好的开发和管理环境。<br></code></pre></td></tr></table></figure><ul><li><h5 id="这上面说的真他妈官方，总结起来就一句话："><a href="#这上面说的真他妈官方，总结起来就一句话：" class="headerlink" title="这上面说的真他妈官方，总结起来就一句话："></a>这上面说的真他妈官方，总结起来就一句话：</h5></li><li><h5 id="Node-js是一种开发环境，npm是一种包管理工具，管理Node-js项目所需依赖包；nvm是一种版本管理工具，可以管理多个不同的Node-js版本，这就是三者的联系"><a href="#Node-js是一种开发环境，npm是一种包管理工具，管理Node-js项目所需依赖包；nvm是一种版本管理工具，可以管理多个不同的Node-js版本，这就是三者的联系" class="headerlink" title="Node.js是一种开发环境，npm是一种包管理工具，管理Node.js项目所需依赖包；nvm是一种版本管理工具，可以管理多个不同的Node.js版本，这就是三者的联系"></a>Node.js是一种开发环境，npm是一种包管理工具，管理Node.js项目所需依赖包；nvm是一种版本管理工具，可以管理多个不同的Node.js版本，这就是三者的联系</h5></li></ul><h2 id="Node-js的配置"><a href="#Node-js的配置" class="headerlink" title="Node.js的配置"></a>Node.js的配置</h2><ul><li><h5 id="有关Node-js的安装配置有两种，我们可以单独下载并配置，这样做的好处是快捷方便，但是将来要更换其版本就会较为繁琐"><a href="#有关Node-js的安装配置有两种，我们可以单独下载并配置，这样做的好处是快捷方便，但是将来要更换其版本就会较为繁琐" class="headerlink" title="有关Node.js的安装配置有两种，我们可以单独下载并配置，这样做的好处是快捷方便，但是将来要更换其版本就会较为繁琐"></a>有关Node.js的安装配置有两种，我们可以单独下载并配置，这样做的好处是快捷方便，但是将来要更换其版本就会较为繁琐</h5></li><li><h5 id="另一种方法是使用nvm统一管理，更加轻松方便切换不同的Node-js版本，推荐使用这种方法"><a href="#另一种方法是使用nvm统一管理，更加轻松方便切换不同的Node-js版本，推荐使用这种方法" class="headerlink" title="另一种方法是使用nvm统一管理，更加轻松方便切换不同的Node.js版本，推荐使用这种方法"></a>另一种方法是使用nvm统一管理，更加轻松方便切换不同的Node.js版本，推荐使用这种方法</h5></li><li><h5 id="接下来相关下载安装配置均在windows系统上执行，因为本人在Linux系统上使用Node-js环境较少，有机会可以学习下"><a href="#接下来相关下载安装配置均在windows系统上执行，因为本人在Linux系统上使用Node-js环境较少，有机会可以学习下" class="headerlink" title="接下来相关下载安装配置均在windows系统上执行，因为本人在Linux系统上使用Node.js环境较少，有机会可以学习下"></a>接下来相关下载安装配置均在windows系统上执行，因为本人在Linux系统上使用Node.js环境较少，有机会可以学习下</h5></li></ul><h4 id="单独配置"><a href="#单独配置" class="headerlink" title="单独配置"></a>单独配置</h4><ul><li><h5 id="官网下载node-js：https-nodejs-org-zh-cn-download"><a href="#官网下载node-js：https-nodejs-org-zh-cn-download" class="headerlink" title="官网下载node.js：https://nodejs.org/zh-cn/download/"></a>官网下载node.js：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></h5></li><li><h5 id="本地解压安装，查看node目录结构："><a href="#本地解压安装，查看node目录结构：" class="headerlink" title="本地解压安装，查看node目录结构："></a>本地解压安装，查看node目录结构：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624212110319.png" alt="image-20230624212110319" style="zoom: 67%;" /><ul><li><h5 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h5></li><li><h5 id="注意，这里要配置两个环境变量：node的根目录、根目录下的node-global路径"><a href="#注意，这里要配置两个环境变量：node的根目录、根目录下的node-global路径" class="headerlink" title="注意，这里要配置两个环境变量：node的根目录、根目录下的node_global路径"></a>注意，这里要配置两个环境变量：node的根目录、根目录下的node_global路径</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624212320737.png" alt="image-20230624212320737" style="zoom: 80%;" /><hr><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624212541131.png" alt="image-20230624212541131" style="zoom: 80%;" /><ul><li><h5 id="配置的时候细心点就行了，大功告成"><a href="#配置的时候细心点就行了，大功告成" class="headerlink" title="配置的时候细心点就行了，大功告成"></a>配置的时候细心点就行了，大功告成</h5></li></ul><h4 id="使用nvm统一管理（推荐）"><a href="#使用nvm统一管理（推荐）" class="headerlink" title="使用nvm统一管理（推荐）"></a>使用nvm统一管理（推荐）</h4><ul><li><h5 id="其实就是比单独配置多了两步：官网下载nvm、配置nvm根目录环境变量"><a href="#其实就是比单独配置多了两步：官网下载nvm、配置nvm根目录环境变量" class="headerlink" title="其实就是比单独配置多了两步：官网下载nvm、配置nvm根目录环境变量"></a>其实就是比单独配置多了两步：官网下载nvm、配置nvm根目录环境变量</h5></li><li><h5 id="官网下载nvm：-https-github-com-coreybutler-nvm-windows-releases"><a href="#官网下载nvm：-https-github-com-coreybutler-nvm-windows-releases" class="headerlink" title="官网下载nvm： https://github.com/coreybutler/nvm-windows/releases"></a>官网下载nvm： <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></h5></li><li><h5 id="本地解压安装，查看nvm目录结构："><a href="#本地解压安装，查看nvm目录结构：" class="headerlink" title="本地解压安装，查看nvm目录结构："></a>本地解压安装，查看nvm目录结构：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624213113061.png" alt="image-20230624213113061" style="zoom: 67%;" /><ul><li><h5 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624213419870.png" alt="image-20230624213419870" style="zoom:80%;" /><hr><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624213519238.png" alt="image-20230624213519238" style="zoom: 80%;" /><ul><li><h5 id="下载安装、配置环境变量还是非常简单的"><a href="#下载安装、配置环境变量还是非常简单的" class="headerlink" title="下载安装、配置环境变量还是非常简单的"></a>下载安装、配置环境变量还是非常简单的</h5></li></ul><h2 id="目录介绍"><a href="#目录介绍" class="headerlink" title="目录介绍"></a>目录介绍</h2><ul><li><h5 id="刚才我们讲到如何配置环境变量，那么我们为什么要这样配置环境变量？Node-js下的目录结构又是怎样的呢？"><a href="#刚才我们讲到如何配置环境变量，那么我们为什么要这样配置环境变量？Node-js下的目录结构又是怎样的呢？" class="headerlink" title="刚才我们讲到如何配置环境变量，那么我们为什么要这样配置环境变量？Node.js下的目录结构又是怎样的呢？"></a>刚才我们讲到如何配置环境变量，那么我们为什么要这样配置环境变量？Node.js下的目录结构又是怎样的呢？</h5></li><li><h5 id="解决了这些问题，就能更好地理解Node-js的作用，拓展相关解决问题的思路"><a href="#解决了这些问题，就能更好地理解Node-js的作用，拓展相关解决问题的思路" class="headerlink" title="解决了这些问题，就能更好地理解Node.js的作用，拓展相关解决问题的思路"></a>解决了这些问题，就能更好地理解Node.js的作用，拓展相关解决问题的思路</h5></li><li><h5 id="接下来我们就来了解下目录下个文件的作用"><a href="#接下来我们就来了解下目录下个文件的作用" class="headerlink" title="接下来我们就来了解下目录下个文件的作用"></a>接下来我们就来了解下目录下个文件的作用</h5></li><li><h5 id="Node-js学习：基本目录结构-灰信网（软件开发博客聚合）-freesion-com"><a href="#Node-js学习：基本目录结构-灰信网（软件开发博客聚合）-freesion-com" class="headerlink" title="Node.js学习：基本目录结构 - 灰信网（软件开发博客聚合） (freesion.com)"></a><a href="https://www.freesion.com/article/55271140990/">Node.js学习：基本目录结构 - 灰信网（软件开发博客聚合） (freesion.com)</a></h5></li><li><h5 id="日后补充。。。"><a href="#日后补充。。。" class="headerlink" title="日后补充。。。"></a>日后补充。。。</h5></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><h5 id="使用nvm来管理多个不同版本node-js还是很爽的，那我们了解一下常见的nvm相关命令吧"><a href="#使用nvm来管理多个不同版本node-js还是很爽的，那我们了解一下常见的nvm相关命令吧" class="headerlink" title="使用nvm来管理多个不同版本node.js还是很爽的，那我们了解一下常见的nvm相关命令吧"></a>使用nvm来管理多个不同版本node.js还是很爽的，那我们了解一下常见的nvm相关命令吧</h5></li><li><h5 id="nvm常用命令：nvm常用命令-切换node版本-简书-jianshu-com"><a href="#nvm常用命令：nvm常用命令-切换node版本-简书-jianshu-com" class="headerlink" title="nvm常用命令：nvm常用命令 切换node版本 - 简书 (jianshu.com)"></a>nvm常用命令：<a href="https://www.jianshu.com/p/4c5375895298">nvm常用命令 切换node版本 - 简书 (jianshu.com)</a></h5></li><li><h5 id="我经常使用的就这几个："><a href="#我经常使用的就这几个：" class="headerlink" title="我经常使用的就这几个："></a>我经常使用的就这几个：</h5></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span>       <span class="hljs-comment">#查看node版本 </span><br></code></pre></td></tr></table></figure><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v            <span class="hljs-comment">#查看npm版本 </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nvm</span> -v                       <span class="hljs-comment">#查看nvm版本 </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nvm</span> list   <span class="hljs-comment">#查看已安装的node版本号</span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nvm</span> list available   <span class="hljs-comment">#查看可安装的node版本</span><br></code></pre></td></tr></table></figure><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">nvm <span class="hljs-keyword">install</span> 【版本号】<span class="hljs-comment">#安装指定版本的node</span><br></code></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">nvm <span class="hljs-keyword">use</span> 【版本号】<span class="hljs-comment">#使用指定版本的node</span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nvm</span> uninstall 【版本号】<span class="hljs-comment">#卸载指定版本的node</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">npm <span class="hljs-keyword">get</span> registry   <span class="hljs-comment">#查看当前下载源</span><br></code></pre></td></tr></table></figure><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">npm config <span class="hljs-keyword">set</span> <span class="hljs-keyword">registry</span> <span class="hljs-keyword">http</span>://<span class="hljs-keyword">registry</span>,npm.taobao.org            #设置下载源为淘宝源<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">get</span><span class="hljs-built_in"> prefix </span>         #获取npm全局安装地址<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-built_in">config</span> get <span class="hljs-keyword">cache </span>          <span class="hljs-comment">#获取npm全局缓存位置</span><br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">npm config <span class="hljs-keyword">set</span> <span class="hljs-keyword">prefix</span> <span class="hljs-string">&quot;D:\softWare<span class="hljs-subst">\n</span>vm<span class="hljs-subst">\n</span>vm\v16.19.0<span class="hljs-subst">\n</span>ode_global&quot;</span>   #修改npm全局安装位置<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">npm config <span class="hljs-keyword">set</span> cache <span class="hljs-string">&quot;D:\softWare<span class="hljs-subst">\n</span>vm<span class="hljs-subst">\n</span>vm\v16.19.0<span class="hljs-subst">\n</span>ode_cache&quot;</span>     #修改npm全局缓存位置<br></code></pre></td></tr></table></figure><ul><li><h5 id="查看node、npm、nvm版本"><a href="#查看node、npm、nvm版本" class="headerlink" title="查看node、npm、nvm版本"></a>查看node、npm、nvm版本</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624180830876.png" alt="image-20230624180830876"></p><ul><li><h5 id="这也是检验node、npm、nvm是否配置成功的方法"><a href="#这也是检验node、npm、nvm是否配置成功的方法" class="headerlink" title="这也是检验node、npm、nvm是否配置成功的方法"></a>这也是检验node、npm、nvm是否配置成功的方法</h5></li><li><h5 id="查看已安装的node版本号"><a href="#查看已安装的node版本号" class="headerlink" title="查看已安装的node版本号"></a>查看已安装的node版本号</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624204645046.png" alt="image-20230624204645046"></p><ul><li><h5 id="查看可安装的node版本，并安装最新版"><a href="#查看可安装的node版本，并安装最新版" class="headerlink" title="查看可安装的node版本，并安装最新版"></a>查看可安装的node版本，并安装最新版</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704145801954.png" alt="image-20230704145801954"></p><ul><li><h5 id="使用指定版本的node"><a href="#使用指定版本的node" class="headerlink" title="使用指定版本的node"></a>使用指定版本的node</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704150100145.png" alt="image-20230704150100145"></p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h2><h4 id="settings-txt文件错误"><a href="#settings-txt文件错误" class="headerlink" title="settings.txt文件错误"></a>settings.txt文件错误</h4><ul><li><h5 id="我在重新配置环境变量以后，再次执行-nvm-v-命令，发现了这个错误："><a href="#我在重新配置环境变量以后，再次执行-nvm-v-命令，发现了这个错误：" class="headerlink" title="我在重新配置环境变量以后，再次执行 nvm -v 命令，发现了这个错误："></a>我在重新配置环境变量以后，再次执行 nvm -v 命令，发现了这个错误：</h5></li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">ERROR </span>open \settings.txt: The system cannot find the file specified<br></code></pre></td></tr></table></figure><ul><li><h5 id="出错原因及解决办法：-67条消息-nvm报错：-ERROR-open-settings-txt-The-system-cannot-find-the-file-specified-CamphorBloom的博客-CSDN博客"><a href="#出错原因及解决办法：-67条消息-nvm报错：-ERROR-open-settings-txt-The-system-cannot-find-the-file-specified-CamphorBloom的博客-CSDN博客" class="headerlink" title="出错原因及解决办法：(67条消息) nvm报错： ERROR open \settings.txt: The system cannot find the file specified_CamphorBloom的博客-CSDN博客"></a>出错原因及解决办法：<a href="https://blog.csdn.net/weixin_45719444/article/details/126432836">(67条消息) nvm报错： ERROR open \settings.txt: The system cannot find the file specified_CamphorBloom的博客-CSDN博客</a></h5></li><li><h5 id="就是找到nvm根目录下的settings-txt文件，修改其中内容如下图所示："><a href="#就是找到nvm根目录下的settings-txt文件，修改其中内容如下图所示：" class="headerlink" title="就是找到nvm根目录下的settings.txt文件，修改其中内容如下图所示："></a>就是找到nvm根目录下的settings.txt文件，修改其中内容如下图所示：</h5></li><li><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624205943293.png" alt="image-20230624205943293"></p></li></ul><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624205604711.png" alt="image-20230624205604711"></p><ul><li><h5 id="其实还是上面提到的：重新配置nvm及node环境变量以后，记着同步这个settings-txt文件"><a href="#其实还是上面提到的：重新配置nvm及node环境变量以后，记着同步这个settings-txt文件" class="headerlink" title="其实还是上面提到的：重新配置nvm及node环境变量以后，记着同步这个settings.txt文件"></a>其实还是上面提到的：重新配置nvm及node环境变量以后，记着同步这个settings.txt文件</h5></li></ul><h4 id="修改node版本无效"><a href="#修改node版本无效" class="headerlink" title="修改node版本无效"></a>修改node版本无效</h4><ul><li><h5 id="当你的nvm管理多个不同版本的node时，如果版本切换之后无效，则可能的原因是由于之前配置环境变量时，把node的路径写死了。重新配置环境变量的路径后即可切换版本生效"><a href="#当你的nvm管理多个不同版本的node时，如果版本切换之后无效，则可能的原因是由于之前配置环境变量时，把node的路径写死了。重新配置环境变量的路径后即可切换版本生效" class="headerlink" title="当你的nvm管理多个不同版本的node时，如果版本切换之后无效，则可能的原因是由于之前配置环境变量时，把node的路径写死了。重新配置环境变量的路径后即可切换版本生效"></a>当你的nvm管理多个不同版本的node时，如果版本切换之后无效，则可能的原因是由于之前配置环境变量时，把node的路径写死了。重新配置环境变量的路径后即可切换版本生效</h5></li></ul><h4 id="node版本过高-过低"><a href="#node版本过高-过低" class="headerlink" title="node版本过高/过低"></a>node版本过高/过低</h4><ul><li><h5 id="没错，node版本过高-过低都会引发问题，不过这里并不是特指一个问题，而是各种程序运行时，所需node环境不同"><a href="#没错，node版本过高-过低都会引发问题，不过这里并不是特指一个问题，而是各种程序运行时，所需node环境不同" class="headerlink" title="没错，node版本过高/过低都会引发问题，不过这里并不是特指一个问题，而是各种程序运行时，所需node环境不同"></a>没错，node版本过高/过低都会引发问题，不过这里并不是特指一个问题，而是各种程序运行时，所需node环境不同</h5></li><li><h5 id="我这里举两个我遇到的案例："><a href="#我这里举两个我遇到的案例：" class="headerlink" title="我这里举两个我遇到的案例："></a>我这里举两个我遇到的案例：</h5></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">在本地启动VuePress文档站点服务时，由于<span class="hljs-keyword">node</span><span class="hljs-title">版本过高，启动失败</span><br><span class="hljs-title">我将node</span>版本从<span class="hljs-number">18.16</span>.<span class="hljs-number">1</span>修改至<span class="hljs-number">16.19</span>.<span class="hljs-number">0</span>后，成功解决问题<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">在安装配置VitePress文档站点的hope主题时，由于<span class="hljs-keyword">node</span><span class="hljs-title">版本过低，安装失败</span><br><span class="hljs-title">我将node</span>版本从<span class="hljs-number">16.19</span>.<span class="hljs-number">0</span>修改至<span class="hljs-number">18.16</span>.<span class="hljs-number">1</span>后，成功解决问题<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了"><a href="#这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了" class="headerlink" title="这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了"></a>这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了</h5></li><li><h5 id="有关详细案例还请移步至文章：《大道至简：快速搭建博客与文档站点的终极指南1-0》"><a href="#有关详细案例还请移步至文章：《大道至简：快速搭建博客与文档站点的终极指南1-0》" class="headerlink" title="有关详细案例还请移步至文章：《大道至简：快速搭建博客与文档站点的终极指南1.0》"></a>有关详细案例还请移步至文章：《大道至简：快速搭建博客与文档站点的终极指南1.0》</h5></li><li><h5 id="这里其实涉及到一个兼容性问题，不同的程序需要的或者说兼容的node环境是不一样的，"><a href="#这里其实涉及到一个兼容性问题，不同的程序需要的或者说兼容的node环境是不一样的，" class="headerlink" title="这里其实涉及到一个兼容性问题，不同的程序需要的或者说兼容的node环境是不一样的，"></a>这里其实涉及到一个兼容性问题，不同的程序需要的或者说兼容的node环境是不一样的，</h5></li><li><h5 id="以我的经验来看，看情况按需修改node版本以适应不同需求即可，没有特别好的办法"><a href="#以我的经验来看，看情况按需修改node版本以适应不同需求即可，没有特别好的办法" class="headerlink" title="以我的经验来看，看情况按需修改node版本以适应不同需求即可，没有特别好的办法"></a>以我的经验来看，看情况按需修改node版本以适应不同需求即可，没有特别好的办法</h5></li><li><h5 id="当node版本过高时，可能会遇到难以预料的错误（这一点我深有体会）。即使你下载的是LTS（长期支持版），但高版本的node总会出现莫名的问题，此时必须切换至低版本的node，即可能出现如下报错："><a href="#当node版本过高时，可能会遇到难以预料的错误（这一点我深有体会）。即使你下载的是LTS（长期支持版），但高版本的node总会出现莫名的问题，此时必须切换至低版本的node，即可能出现如下报错：" class="headerlink" title="当node版本过高时，可能会遇到难以预料的错误（这一点我深有体会）。即使你下载的是LTS（长期支持版），但高版本的node总会出现莫名的问题，此时必须切换至低版本的node，即可能出现如下报错："></a>当node版本过高时，可能会遇到难以预料的错误（这一点我深有体会）。即使你下载的是LTS（长期支持版），但高版本的node总会出现莫名的问题，此时必须切换至低版本的node，即可能出现如下报错：</h5></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">node:internal<span class="hljs-regexp">/crypto/</span>hash:<span class="hljs-number">71</span> <span class="hljs-keyword">this</span>[kHandle] = <span class="hljs-keyword">new</span> _Hash(algorithm, xofLen)；<br></code></pre></td></tr></table></figure><ul><li><h5 id="高版本node报错解决方法：解决方法-胡八一-的博客-CSDN博客"><a href="#高版本node报错解决方法：解决方法-胡八一-的博客-CSDN博客" class="headerlink" title="高版本node报错解决方法：解决方法_胡八一 的博客-CSDN博客"></a>高版本node报错解决方法：<a href="https://blog.csdn.net/qq_44732146/article/details/129041176">解决方法_胡八一 的博客-CSDN博客</a></h5></li></ul><h4 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h4><ul><li><h5 id="还要注意的是，修改环境变量配置后，有时候在短时间内是不会生效的，这个坑我踩过好多遍了，我的经验是要等待3-5分钟才会生效的"><a href="#还要注意的是，修改环境变量配置后，有时候在短时间内是不会生效的，这个坑我踩过好多遍了，我的经验是要等待3-5分钟才会生效的" class="headerlink" title="还要注意的是，修改环境变量配置后，有时候在短时间内是不会生效的，这个坑我踩过好多遍了，我的经验是要等待3 - 5分钟才会生效的"></a>还要注意的是，修改环境变量配置后，有时候在短时间内是不会生效的，这个坑我踩过好多遍了，我的经验是要等待3 - 5分钟才会生效的</h5></li><li><h5 id="还有就是你平时见到的像如下所示的报错，九成的概率是环境变量配置错误了，赶紧检查一下环境变量吧"><a href="#还有就是你平时见到的像如下所示的报错，九成的概率是环境变量配置错误了，赶紧检查一下环境变量吧" class="headerlink" title="还有就是你平时见到的像如下所示的报错，九成的概率是环境变量配置错误了，赶紧检查一下环境变量吧"></a>还有就是你平时见到的像如下所示的报错，九成的概率是环境变量配置错误了，赶紧检查一下环境变量吧</h5></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nvm/npm/<span class="hljs-keyword">node</span><span class="hljs-title">/hexo</span>不是内部或外部命令<br></code></pre></td></tr></table></figure><h2 id="经验总结"><a href="#经验总结" class="headerlink" title="经验总结"></a>经验总结</h2><h4 id="pnpm全局安装无效"><a href="#pnpm全局安装无效" class="headerlink" title="pnpm全局安装无效"></a>pnpm全局安装无效</h4><ul><li><h5 id="在配置vuepress文档站点的主题时，需要用到pnpm包管理器来安装执行命令，于是想了解npm、pnpm、yarn的区别和安装方法"><a href="#在配置vuepress文档站点的主题时，需要用到pnpm包管理器来安装执行命令，于是想了解npm、pnpm、yarn的区别和安装方法" class="headerlink" title="在配置vuepress文档站点的主题时，需要用到pnpm包管理器来安装执行命令，于是想了解npm、pnpm、yarn的区别和安装方法"></a>在配置vuepress文档站点的主题时，需要用到pnpm包管理器来安装执行命令，于是想了解npm、pnpm、yarn的区别和安装方法</h5></li><li><h5 id="关于这块的详细内容，可以在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中了解"><a href="#关于这块的详细内容，可以在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中了解" class="headerlink" title="关于这块的详细内容，可以在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中了解"></a>关于这块的详细内容，可以在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中了解</h5></li><li><h5 id="这里我介绍下我遇到的pnpm全局安装后，pnpm命令仍不生效的问题"><a href="#这里我介绍下我遇到的pnpm全局安装后，pnpm命令仍不生效的问题" class="headerlink" title="这里我介绍下我遇到的pnpm全局安装后，pnpm命令仍不生效的问题"></a>这里我介绍下我遇到的pnpm全局安装后，pnpm命令仍不生效的问题</h5></li><li><h5 id="我在使用如下命令进行全局安装pnpm包管理器后，仍然报错：‘pnpm‘-不是内部或外部命令，也不是可运行的程序或批处理文件"><a href="#我在使用如下命令进行全局安装pnpm包管理器后，仍然报错：‘pnpm‘-不是内部或外部命令，也不是可运行的程序或批处理文件" class="headerlink" title="我在使用如下命令进行全局安装pnpm包管理器后，仍然报错：‘pnpm‘ 不是内部或外部命令，也不是可运行的程序或批处理文件"></a>我在使用如下命令进行全局安装pnpm包管理器后，仍然报错：‘pnpm‘ 不是内部或外部命令，也不是可运行的程序或批处理文件</h5></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i -g pnpm<br></code></pre></td></tr></table></figure><ul><li><h5 id="这其实是因为在我们配置了nvm后，没有修改npm全局安装地址，导致pnpm没有安装在nvm管理下的Node-js目录下"><a href="#这其实是因为在我们配置了nvm后，没有修改npm全局安装地址，导致pnpm没有安装在nvm管理下的Node-js目录下" class="headerlink" title="这其实是因为在我们配置了nvm后，没有修改npm全局安装地址，导致pnpm没有安装在nvm管理下的Node.js目录下"></a>这其实是因为在我们配置了nvm后，没有修改npm全局安装地址，导致pnpm没有安装在nvm管理下的Node.js目录下</h5></li><li><h5 id="这样就导致了我们在nvm管理下，配置的Node-js环境变量未对pnpm生效"><a href="#这样就导致了我们在nvm管理下，配置的Node-js环境变量未对pnpm生效" class="headerlink" title="这样就导致了我们在nvm管理下，配置的Node.js环境变量未对pnpm生效"></a>这样就导致了我们在nvm管理下，配置的Node.js环境变量未对pnpm生效</h5></li><li><h5 id="这里涉及到Node-js环境变量的配置相关知识，详情可在上文-Node-js的配置一栏中了解"><a href="#这里涉及到Node-js环境变量的配置相关知识，详情可在上文-Node-js的配置一栏中了解" class="headerlink" title="这里涉及到Node.js环境变量的配置相关知识，详情可在上文 Node.js的配置一栏中了解"></a>这里涉及到Node.js环境变量的配置相关知识，详情可在上文 Node.js的配置一栏中了解</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703094859712.png" alt="image-20230703094859712"></p><ul><li><h5 id="如上图所示，npm默认状态下，pnpm全局安装在了-D-softWare-node-node-global下，导致在nvm管理下，配置的Node-js环境变量未对pnpm生效"><a href="#如上图所示，npm默认状态下，pnpm全局安装在了-D-softWare-node-node-global下，导致在nvm管理下，配置的Node-js环境变量未对pnpm生效" class="headerlink" title="如上图所示，npm默认状态下，pnpm全局安装在了 D:\softWare\node\node_global下，导致在nvm管理下，配置的Node.js环境变量未对pnpm生效"></a>如上图所示，npm默认状态下，pnpm全局安装在了 D:\softWare\node\node_global下，导致在nvm管理下，配置的Node.js环境变量未对pnpm生效</h5></li><li><h5 id="解决方法很简单，修改npm默认全局安装地址，将pnpm安装在已配置好的Node-js环境变量目录下即可"><a href="#解决方法很简单，修改npm默认全局安装地址，将pnpm安装在已配置好的Node-js环境变量目录下即可" class="headerlink" title="解决方法很简单，修改npm默认全局安装地址，将pnpm安装在已配置好的Node.js环境变量目录下即可"></a>解决方法很简单，修改npm默认全局安装地址，将pnpm安装在已配置好的Node.js环境变量目录下即可</h5></li><li><h5 id="执行以下命令，修改npm默认全局安装地址为在nvm管理下的Node-js目录下的node-global下"><a href="#执行以下命令，修改npm默认全局安装地址为在nvm管理下的Node-js目录下的node-global下" class="headerlink" title="执行以下命令，修改npm默认全局安装地址为在nvm管理下的Node.js目录下的node_global下"></a>执行以下命令，修改npm默认全局安装地址为在nvm管理下的Node.js目录下的node_global下</h5></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">npm config <span class="hljs-keyword">set</span> <span class="hljs-keyword">prefix</span> <span class="hljs-string">&quot;D:\softWare<span class="hljs-subst">\n</span>vm<span class="hljs-subst">\n</span>vm\v16.19.0<span class="hljs-subst">\n</span>ode_global&quot;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="在此执行全局安装pnpm，可以看到pnpm已成功安装在nvm管理下的Node-js目录下的node-global下了"><a href="#在此执行全局安装pnpm，可以看到pnpm已成功安装在nvm管理下的Node-js目录下的node-global下了" class="headerlink" title="在此执行全局安装pnpm，可以看到pnpm已成功安装在nvm管理下的Node.js目录下的node_global下了"></a>在此执行全局安装pnpm，可以看到pnpm已成功安装在nvm管理下的Node.js目录下的node_global下了</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703095616776.png"></p><ul><li><h5 id="执行以下命令，查看pnpm版本，结果如图所示："><a href="#执行以下命令，查看pnpm版本，结果如图所示：" class="headerlink" title="执行以下命令，查看pnpm版本，结果如图所示："></a>执行以下命令，查看pnpm版本，结果如图所示：</h5></li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pnpm -v</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703100054233.png" alt="image-20230703100054233"></p><ul><li><h5 id="显然，pnpm全局安装完成，可以正常使用"><a href="#显然，pnpm全局安装完成，可以正常使用" class="headerlink" title="显然，pnpm全局安装完成，可以正常使用"></a>显然，pnpm全局安装完成，可以正常使用</h5></li><li><h5 id="当然，有关pnpm常用命令和使用规范，可在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中详细了解到"><a href="#当然，有关pnpm常用命令和使用规范，可在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中详细了解到" class="headerlink" title="当然，有关pnpm常用命令和使用规范，可在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中详细了解到"></a>当然，有关pnpm常用命令和使用规范，可在《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中详细了解到</h5></li><li><h5 id="有关设置npm默认全局安装地址的详情，可看这篇博客："><a href="#有关设置npm默认全局安装地址的详情，可看这篇博客：" class="headerlink" title="有关设置npm默认全局安装地址的详情，可看这篇博客："></a>有关设置npm默认全局安装地址的详情，可看这篇博客：</h5></li><li><h5 id="71条消息-查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置-npm-缓存位置-俺是老王的博客-CSDN博客"><a href="#71条消息-查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置-npm-缓存位置-俺是老王的博客-CSDN博客" class="headerlink" title="(71条消息) 查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置_npm 缓存位置_俺是老王的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_37600506/article/details/121067302">(71条消息) 查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置_npm 缓存位置_俺是老王的博客-CSDN博客</a></h5></li><li><h5 id="查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置"><a href="#查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置" class="headerlink" title="查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置"></a>查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置</h5></li></ul><h4 id="修改node版本"><a href="#修改node版本" class="headerlink" title="修改node版本"></a>修改node版本</h4><ul><li><h5 id="使用nvm管理不同版本的node后，修改npm版本时要注意以下几点："><a href="#使用nvm管理不同版本的node后，修改npm版本时要注意以下几点：" class="headerlink" title="使用nvm管理不同版本的node后，修改npm版本时要注意以下几点："></a>使用nvm管理不同版本的node后，修改npm版本时要注意以下几点：</h5><ol><li><h5 id="修改可能会失效，这是因为环境变量写死了上个一个node版本了，修改NODE-PATH路径即可"><a href="#修改可能会失效，这是因为环境变量写死了上个一个node版本了，修改NODE-PATH路径即可" class="headerlink" title="修改可能会失效，这是因为环境变量写死了上个一个node版本了，修改NODE_PATH路径即可"></a>修改可能会失效，这是因为环境变量写死了上个一个node版本了，修改NODE_PATH路径即可</h5></li><li><h5 id="npm全局安装路径也要注意同步修改，改成新版本下的node-global目录下"><a href="#npm全局安装路径也要注意同步修改，改成新版本下的node-global目录下" class="headerlink" title="npm全局安装路径也要注意同步修改，改成新版本下的node_global目录下"></a>npm全局安装路径也要注意同步修改，改成新版本下的node_global目录下</h5></li><li><h5 id="检查原node环境下的构建工具、包管理工具是否成功安装"><a href="#检查原node环境下的构建工具、包管理工具是否成功安装" class="headerlink" title="检查原node环境下的构建工具、包管理工具是否成功安装"></a>检查原node环境下的构建工具、包管理工具是否成功安装</h5></li></ol></li><li><h5 id="第二个错误我就犯过，没有及时修改全局安装路径，导致安装pnpm后，pnpm又失效了"><a href="#第二个错误我就犯过，没有及时修改全局安装路径，导致安装pnpm后，pnpm又失效了" class="headerlink" title="第二个错误我就犯过，没有及时修改全局安装路径，导致安装pnpm后，pnpm又失效了"></a>第二个错误我就犯过，没有及时修改全局安装路径，导致安装pnpm后，pnpm又失效了</h5></li><li><h5 id="第三个要特别注意，新的node环境下可能没有原node环境下的构建-包管理工具，当你在新node环境下使用这些工具时，会报如下错误："><a href="#第三个要特别注意，新的node环境下可能没有原node环境下的构建-包管理工具，当你在新node环境下使用这些工具时，会报如下错误：" class="headerlink" title="第三个要特别注意，新的node环境下可能没有原node环境下的构建/包管理工具，当你在新node环境下使用这些工具时，会报如下错误："></a>第三个要特别注意，新的node环境下可能没有原node环境下的构建/包管理工具，当你在新node环境下使用这些工具时，会报如下错误：</h5></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">***</span>既不是外部命令，也不是可执行的内部命令<br></code></pre></td></tr></table></figure><ul><li><h5 id="很常见的问题，确认Node-js环境变量配置无误后，执行npm全局安装该工具即可："><a href="#很常见的问题，确认Node-js环境变量配置无误后，执行npm全局安装该工具即可：" class="headerlink" title="很常见的问题，确认Node.js环境变量配置无误后，执行npm全局安装该工具即可："></a>很常见的问题，确认Node.js环境变量配置无误后，执行npm全局安装该工具即可：</h5></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">npm i -g <span class="hljs-strong">***</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="这就是修改node版本时，需要注意的要点及如何解决可能出现的相关问题"><a href="#这就是修改node版本时，需要注意的要点及如何解决可能出现的相关问题" class="headerlink" title="这就是修改node版本时，需要注意的要点及如何解决可能出现的相关问题"></a>这就是修改node版本时，需要注意的要点及如何解决可能出现的相关问题</h5></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><h5 id="Node-js的配置还是比较容易的，有机会的话，后续会持续更新进阶的Node-js的配置教学"><a href="#Node-js的配置还是比较容易的，有机会的话，后续会持续更新进阶的Node-js的配置教学" class="headerlink" title="Node.js的配置还是比较容易的，有机会的话，后续会持续更新进阶的Node.js的配置教学"></a>Node.js的配置还是比较容易的，有机会的话，后续会持续更新进阶的Node.js的配置教学</h5></li><li><h5 id="非常感谢您能够阅读到这里，感谢您对本人的支持！"><a href="#非常感谢您能够阅读到这里，感谢您对本人的支持！" class="headerlink" title="非常感谢您能够阅读到这里，感谢您对本人的支持！"></a>非常感谢您能够阅读到这里，感谢您对本人的支持！</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>包管理器</category>
      
      <category>node</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>包管理器</tag>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10生活笔记</title>
    <link href="/blog/2023/06/22/Win10%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    <url>/blog/2023/06/22/Win10%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="浅谈对win10操作系统的使用心得"><a href="#浅谈对win10操作系统的使用心得" class="headerlink" title="浅谈对win10操作系统的使用心得"></a>浅谈对win10操作系统的使用心得</h1><ul><li><h5 id="本文不是一门专业的、技术性强的教程，而是一篇简单的心得分享"><a href="#本文不是一门专业的、技术性强的教程，而是一篇简单的心得分享" class="headerlink" title="本文不是一门专业的、技术性强的教程，而是一篇简单的心得分享"></a>本文不是一门专业的、技术性强的教程，而是一篇简单的心得分享</h5></li><li><h5 id="在当今数字化时代，大多数人都使用Windows-10操作系统来进行日常电脑操作。"><a href="#在当今数字化时代，大多数人都使用Windows-10操作系统来进行日常电脑操作。" class="headerlink" title="在当今数字化时代，大多数人都使用Windows 10操作系统来进行日常电脑操作。"></a>在当今数字化时代，大多数人都使用Windows 10操作系统来进行日常电脑操作。</h5></li><li><h5 id="然而，让人意外的是，许多Win10用户似乎对于电脑中的基本操作缺乏了解和掌握。"><a href="#然而，让人意外的是，许多Win10用户似乎对于电脑中的基本操作缺乏了解和掌握。" class="headerlink" title="然而，让人意外的是，许多Win10用户似乎对于电脑中的基本操作缺乏了解和掌握。"></a>然而，让人意外的是，许多Win10用户似乎对于电脑中的基本操作缺乏了解和掌握。</h5></li><li><h5 id="从文件的解压、压缩，到软件的上传和分享，再到任务栏、开始屏幕的排版和磁盘的分卷等等，这些基本操作对于顺利使用和管理个人电脑至关重要，却常常被忽视或引发困惑。"><a href="#从文件的解压、压缩，到软件的上传和分享，再到任务栏、开始屏幕的排版和磁盘的分卷等等，这些基本操作对于顺利使用和管理个人电脑至关重要，却常常被忽视或引发困惑。" class="headerlink" title="从文件的解压、压缩，到软件的上传和分享，再到任务栏、开始屏幕的排版和磁盘的分卷等等，这些基本操作对于顺利使用和管理个人电脑至关重要，却常常被忽视或引发困惑。"></a>从文件的解压、压缩，到软件的上传和分享，再到任务栏、开始屏幕的排版和磁盘的分卷等等，这些基本操作对于顺利使用和管理个人电脑至关重要，却常常被忽视或引发困惑。</h5></li><li><h5 id="本文旨在揭示这种现象，并提供解决方案和技巧，让Win10用户能够更好地了解和应用这些基本操作。"><a href="#本文旨在揭示这种现象，并提供解决方案和技巧，让Win10用户能够更好地了解和应用这些基本操作。" class="headerlink" title="本文旨在揭示这种现象，并提供解决方案和技巧，让Win10用户能够更好地了解和应用这些基本操作。"></a>本文旨在揭示这种现象，并提供解决方案和技巧，让Win10用户能够更好地了解和应用这些基本操作。</h5></li></ul><h2 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h2><h3 id="分盘"><a href="#分盘" class="headerlink" title="分盘"></a>分盘</h3><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><h3 id="转移"><a href="#转移" class="headerlink" title="转移"></a>转移</h3><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><h3 id="网盘分享"><a href="#网盘分享" class="headerlink" title="网盘分享"></a>网盘分享</h3><h2 id="电脑美化"><a href="#电脑美化" class="headerlink" title="电脑美化"></a>电脑美化</h2><h3 id="任务栏"><a href="#任务栏" class="headerlink" title="任务栏"></a>任务栏</h3><h3 id="开始菜单"><a href="#开始菜单" class="headerlink" title="开始菜单"></a>开始菜单</h3><h2 id="红色警戒-命令与征服汉化下载"><a href="#红色警戒-命令与征服汉化下载" class="headerlink" title="红色警戒-命令与征服汉化下载"></a>红色警戒-命令与征服汉化下载</h2><h2 id="任务栏、开始菜单磁铁排版以及桌面整理1-0"><a href="#任务栏、开始菜单磁铁排版以及桌面整理1-0" class="headerlink" title="任务栏、开始菜单磁铁排版以及桌面整理1.0"></a>任务栏、开始菜单磁铁排版以及桌面整理1.0</h2><p>回忆如初❄️ 2022/10/6 23:48:02</p><p>第一步,右击任务栏,选择任务栏设置</p><p>回忆如初❄️ 2022/10/6 23:48:47<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/6 23:49:03</p><p>当然设置里也能找到</p><p>回忆如初❄️ 2022/10/7 0:10:12<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:12:46<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:13:50<br>上面是任务栏的基础设置,跟着设置下,了解了解</p><p>回忆如初❄️ 2022/10/7 0:14:05<br>没说的就不用管了</p><p>回忆如初❄️ 2022/10/7 0:14:15<br>下一步</p><p>回忆如初❄️ 2022/10/7 0:14:35<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:14:47<br>看到这俩了吧,先看第二个</p><p>回忆如初❄️ 2022/10/7 0:15:07<br>点击第2个:打开或关闭系统图标</p><p>回忆如初❄️ 2022/10/7 0:17:34<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:17:56<br>开启的那5个,对应下面这5个</p><p>回忆如初❄️ 2022/10/7 0:18:02<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:18:20<br>也就是任务栏右边这几个</p><p>回忆如初❄️ 2022/10/7 0:18:27<br>剩下的都关掉</p><p>回忆如初❄️ 2022/10/7 0:19:26<br>这个就搞定了,再看第1个:选择哪些图标在任务栏上</p><p>回忆如初❄️ 2022/10/7 0:20:24<br>点进去,看到下面这个画面</p><p>回忆如初❄️ 2022/10/7 0:20:27<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:26:23<br>什么意思呢,看下面这张图:</p><p>回忆如初❄️ 2022/10/7 0:26:26<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:27:35<br>懂了吧,就是消息显示位置不一样,开启的摆放在任务栏外,关闭的就在小三角里</p><p>回忆如初❄️ 2022/10/7 0:32:14<br>这一步就完了,下一步</p><p>回忆如初❄️ 2022/10/7 0:32:15<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:33:14<br>只把这个搜索打开就行,别的都关了</p><p>回忆如初❄️ 2022/10/7 0:33:24<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:33:40<br>打勾就是打开了,没打勾就是关闭了</p><p>回忆如初❄️ 2022/10/7 0:34:10<br>多的我就不演示了,展示一下最终效果</p><p>回忆如初❄️ 2022/10/7 0:34:52<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 0:35:59<br>任务栏里除了应用程序,别的工具就只有这些了,清爽</p><p>回忆如初❄️ 2022/10/7 0:37:24<br>那些新闻咨询啦,任务视图啦等乱七八糟的玩意儿都给它关了,这辈子也用不到</p><p>回忆如初❄️ 2022/10/7 0:38:28<br>要不然任务栏东西多了,会频繁卡死,像我这样设置就完全没问题了</p><p>回忆如初❄️ 2022/10/7 10:05:35<br>任务栏的设置就到此结束了</p><p>回忆如初❄️ 2022/10/7 10:06:54<br>下一阶段:开始菜单界面的设置</p><p>回忆如初❄️ 2022/10/7 10:13:20<br>设置-&gt;个性化-&gt;开始</p><p>回忆如初❄️ 2022/10/7 10:13:26<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:13:40<br>就打开这俩就行</p><p>回忆如初❄️ 2022/10/7 10:17:17<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:19:31<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:19:39<br>看到最下面那个了吧</p><p>回忆如初❄️ 2022/10/7 10:20:15<br>单击它,是下面这个样子</p><p>回忆如初❄️ 2022/10/7 10:20:19<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:21:40<br>按我这样设置,只开前两个</p><p>回忆如初❄️ 2022/10/7 10:21:56<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:22:57<br>对应下面这两个</p><p>回忆如初❄️ 2022/10/7 10:23:02<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:23:28<br>剩下的就是系统自带了,关不掉的,这样开始菜单界面绝对简洁</p><p>回忆如初❄️ 2022/10/7 10:24:11<br>开始菜单设置就结束啦</p><p>回忆如初❄️ 2022/10/7 10:24:20<br>最关键的来了</p><p>回忆如初❄️ 2022/10/7 10:25:28<br>你要想做成俺这个样子,就要把所有常用应用程序扔进开始菜单里面</p><p>回忆如初❄️ 2022/10/7 10:25:48<br>再把桌面快捷方式删了</p><p>回忆如初❄️ 2022/10/7 10:26:27<br>那些常用文件夹啥的就放在桌面就行,稍后处理</p><p>回忆如初❄️ 2022/10/7 10:28:17<br>桌面上没用的文件夹就可以扔在别的盘里了,不要放桌面,放在桌面也行,多建几个文件夹,自己分类分类,不要太乱就行</p><p>回忆如初❄️ 2022/10/7 10:28:47<br>这些要看你自己情况如何了</p><p>回忆如初❄️ 2022/10/7 10:29:13<br>以上是应用程序和文件夹的处理方法</p><p>回忆如初❄️ 2022/10/7 10:30:20<br>应用程序固定到开始菜单屏幕,文件夹放桌面或其他盘里(我的放在D盘文档里了)</p><p>回忆如初❄️ 2022/10/7 10:31:30<br>像此电脑,电脑管家,应用商店,回收站我就放桌面了</p><p>回忆如初❄️ 2022/10/7 10:33:14<br>其他的所有想添加在开始界面的工具,都可以在所有应用里找到</p><p>回忆如初❄️ 2022/10/7 10:33:17<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:35:45<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:36:46<br>那些图片怎么来的先不要管,先把你剩下的磁铁排版好,自由排版就行,老简单了,参考我的</p><p>回忆如初❄️ 2022/10/7 10:38:33<br>开始菜单大致排版好后,下载腾讯桌面整理</p><p>回忆如初❄️ 2022/10/7 10:39:04<br>这个软件很安全啊,没有弹窗,病毒啥的</p><p>回忆如初❄️ 2022/10/7 10:39:53<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:40:21<br>具体使用的话可以看这个视频</p><p>回忆如初❄️ 2022/10/7 10:40:22<br>【【win10美化】win10开始菜单美化| 磁贴 | 桌面美化 | 桌面整理| tile genie图片磁贴】 <img src="file:///C:\Users\Lenovo\AppData\Roaming\Tencent\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png" alt="img"><a href="https://www.bilibili.com/video/BV1Xk4y1m7dJ?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27">https://www.bilibili.com/video/BV1Xk4y1m7dJ?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27</a></p><p>回忆如初❄️ 2022/10/7 10:41:13<br>从8分46秒开始看就行,好上手,比敲代码简单多了</p><p>回忆如初❄️ 2022/10/7 10:42:01<br>这个玩意儿就是用来整理你桌面常用的文件夹,文档啥的</p><p>回忆如初❄️ 2022/10/7 10:44:13<br>最终结果就这样了</p><p>回忆如初❄️ 2022/10/7 10:44:14<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:45:18<br>桌面那三个格子可以隐藏,鼠标悬浮在上面会展开,挺好看的,你也可以大方地展开</p><p>回忆如初❄️ 2022/10/7 10:46:36<br>当然了,挑一张好看的壁纸,比如我的这个,你想要的话可以去软件商店找找,应该有提供这种治愈画风的免费壁纸</p><p>回忆如初❄️ 2022/10/7 10:47:17<br>没有的话,俺待会儿给你发几张过去</p><p>回忆如初❄️ 2022/10/7 10:47:26<br><img src="https://gitee.com/deng-2022/pictures/raw/master/images/75990CA9A3853BD3532E44B689D24675.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:48:03<br>最后就是开始菜单界面的那些图片了,怎么搞的我教教你</p><p>回忆如初❄️ 2022/10/7 10:48:51<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:48:52<br>【【win10美化】win10开始菜单美化| 磁贴 | 桌面美化 | 桌面整理| tile genie图片磁贴】 <img src="file:///C:\Users\Lenovo\AppData\Roaming\Tencent\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png" alt="img"><a href="https://www.bilibili.com/video/BV1Xk4y1m7dJ?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27">https://www.bilibili.com/video/BV1Xk4y1m7dJ?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27</a></p><p>回忆如初❄️ 2022/10/7 10:49:26<br>还是上面那个视频,从3分20秒看起,到6分15秒</p><p>回忆如初❄️ 2022/10/7 10:49:39<br>了解了解,就是个性化装饰了</p><p>回忆如初❄️ 2022/10/7 10:50:51<br>搞定了,这样就做好了,当然任务栏底下这些也可以选择性添加常用的,不必只能在开始菜单界面打开</p><p>回忆如初❄️ 2022/10/7 10:51:31<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\29BCD5B8D673ACCE19C2ECE90198EA17.JPG" alt="img"></p><p>回忆如初❄️ 2022/10/7 10:51:37<br>比如我的这样</p><p>回忆如初❄️ 2022/10/7 10:51:50<br>完工!做好啦!</p><p>回忆如初❄️ 2022/10/7 10:53:30<br>注意:开始菜单界面的那几个设置就最好不要改动了,要不然你的磁铁可能就会乱跑了,还得重新排版排版,不过也不是很麻烦</p><p>回忆如初❄️ 2022/10/7 10:55:20<br>那个Tile Genie个性化装饰的,可能有BUG啥的,比如图片莫名就移位了,自己看着用就行了,微软的辅助工具而已</p><p>回忆如初❄️ 2022/10/7 10:56:30<br>那些日历,天气啥的都是微软自带的,首次打开或者长时间没用过的话,再打开调整的话比较慢,慢慢等就行</p><p>回忆如初❄️ 2022/10/7 10:56:40<br>好啦,应该没别的了</p><p>回忆如初❄️ 2022/10/7 10:57:17<br>自己找个时间,接杯热水,听着音乐,慢慢设置去</p><p>回忆如初❄️ 2022/10/7 10:58:18<br>时间也不会很长,快的话半个小时就能搞定,当然排版那块自己随便玩玩</p><p>回忆如初❄️ 2022/10/7 10:58:35<br><img src="E:\文件下载位置\QQ文件下载\3348407547\Image\C2C\136118046B7BE6DAEF035A4E35B86F7C.JPG" alt="img"></p><h2 id="任务栏、开始菜单磁铁排版以及桌面整理2-0"><a href="#任务栏、开始菜单磁铁排版以及桌面整理2-0" class="headerlink" title="任务栏、开始菜单磁铁排版以及桌面整理2.0"></a>任务栏、开始菜单磁铁排版以及桌面整理2.0</h2><p>回忆如初:<br>我这个是分成6大块的</p><p>回忆如初:<br>那些个图片先不用弄,得配合别的软件才能搞</p><p>回忆如初:<br>放应用图标就行</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>不过像这样桌面随便找个快捷方式 固定到开始屏幕上是没用的 没反应</p><p>回忆如初:<br>你得找到原应用位置 把.exe文件固定到开始屏幕才有效</p><p>回忆如初:<br>拿企业微信举个例子</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>这里就能找到原应用位置了</p><p>回忆如初:<br>或者像下面这样: 属性 -&gt; 打开文件所在位置 也行</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>然后就找到.exe文件了</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>把这个固定到开始屏幕就行了</p><p>回忆如初:<br>然后你就搜罗所有用得上的应用 扔开始菜单就行了</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>像日历 天气 计算机 微软商店(Microsoft Store) 还有文件夹是可以调整 小 中 宽 大 的</p><p>回忆如初:<br>就我标出来的那几个</p><p>回忆如初:<br>其他普通图标只有 小 中</p><p>回忆如初:<br>按我这样排版也行</p><p>回忆如初:<br>那天气 日历这些不显示的话在哪找呢</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>所有应用 里面都能找到</p><p>回忆如初:<br>找到的话右键扔开始菜单就行了</p><p>回忆如初:<br>那些图片咋弄的先不管</p><p>回忆如初:<br>那桌面那些快捷方式就可以删了</p><p>回忆如初:<br>那些文件咋办呢</p><p>回忆如初:<br>不常用的就整理到D盘下的文档里 之前都给你分好了</p><p>回忆如初:<br>常用的就扔桌面就行了</p><p>回忆如初:<br>这个时候就要管理桌面了</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>下这个 贼好用</p><p>回忆如初:<br>安装这个后 它会篡改你的右键菜单</p><p>回忆如初:<br>变成这样子了 加了几个新功能</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>这个右键菜单咱可以在注册表里自行配置的 这里先不教</p><p>回忆如初:<br>呐 新建格子 把文件扔进去就行了</p><p>回忆如初:<br>可以固定位置或者自由拖动 设置常打开还是鼠标悬浮打开 等等</p><p>回忆如初:<br>[图片]</p><p>回忆如初:<br>总之老方便了</p><p>回忆如初:<br>不占地方</p><p>回忆如初:<br>最后最重要的一点来了</p><p>回忆如初:<br>他妈的换个新壁纸</p><p>回忆如初:<br>你推荐了4K电脑壁纸</p><p>回忆如初:<br>不用在什么wallPaper里下了 用这个公众号 挑几个好看的 拿百度网盘下就行了</p><p>回忆如初:<br>好壁纸</p><p>回忆如初:<br>全他妈是好壁纸</p><p>回忆如初:<br>这就完了</p><p>回忆如初:<br>[动画表情]</p><h2 id="学习通刷课助手1-0"><a href="#学习通刷课助手1-0" class="headerlink" title="学习通刷课助手1.0"></a>学习通刷课助手1.0</h2><h2 id="学习通刷课助手2-0"><a href="#学习通刷课助手2-0" class="headerlink" title="学习通刷课助手2.0"></a>学习通刷课助手2.0</h2>]]></content>
    
    
    <categories>
      
      <category>win10</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>win10</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI实践中的洞见：我的AI之旅</title>
    <link href="/blog/2023/06/22/AI%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E6%B4%9E%E8%A7%81%EF%BC%9A%E6%88%91%E7%9A%84AI%E4%B9%8B%E6%97%85/"/>
    <url>/blog/2023/06/22/AI%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E6%B4%9E%E8%A7%81%EF%BC%9A%E6%88%91%E7%9A%84AI%E4%B9%8B%E6%97%85/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h5 id="该文章用来记录并分享我本人在使用AI过程中的体验，不会是专业性很强的技术类教程，大家就看个乐吧！"><a href="#该文章用来记录并分享我本人在使用AI过程中的体验，不会是专业性很强的技术类教程，大家就看个乐吧！" class="headerlink" title="该文章用来记录并分享我本人在使用AI过程中的体验，不会是专业性很强的技术类教程，大家就看个乐吧！"></a>该文章用来记录并分享我本人在使用AI过程中的体验，不会是专业性很强的技术类教程，大家就看个乐吧！</h5></li></ul><h1 id="微信自动回复AI"><a href="#微信自动回复AI" class="headerlink" title="微信自动回复AI"></a>微信自动回复AI</h1><h2 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h2><ul><li><h5 id="动手做个-AI-机器人，帮我回消息！动手做个-AI-机器人，帮我回消息！-牛客网-nowcoder-com"><a href="#动手做个-AI-机器人，帮我回消息！动手做个-AI-机器人，帮我回消息！-牛客网-nowcoder-com" class="headerlink" title="动手做个 AI 机器人，帮我回消息！动手做个 AI 机器人，帮我回消息！_牛客网 (nowcoder.com)"></a>动手做个 AI 机器人，帮我回消息！<a href="https://www.nowcoder.com/discuss/353159057999601664">动手做个 AI 机器人，帮我回消息！_牛客网 (nowcoder.com)</a></h5></li><li><h5 id="微信对话开放平台：微信对话开放平台-qq-com"><a href="#微信对话开放平台：微信对话开放平台-qq-com" class="headerlink" title="微信对话开放平台：微信对话开放平台 (qq.com)"></a>微信对话开放平台：<a href="https://chatbot.weixin.qq.com/">微信对话开放平台 (qq.com)</a></h5></li><li><h5 id="开源项目-wechaty-地址：微信-微信：面向聊天机器人制造商的对话式-RPA-SDK-github-com"><a href="#开源项目-wechaty-地址：微信-微信：面向聊天机器人制造商的对话式-RPA-SDK-github-com" class="headerlink" title="开源项目 wechaty 地址：微信/微信：面向聊天机器人制造商的对话式 RPA SDK (github.com)"></a>开源项目 wechaty 地址：<a href="https://github.com/wechaty/wechaty">微信/微信：面向聊天机器人制造商的对话式 RPA SDK (github.com)</a></h5></li></ul><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><ul><li><h5 id="为什么要先吐槽呢？因为如果是一条龙正确执行命令的话，不到三分钟就能搞定了！真的很简单，但我就踩了一早上的坑"><a href="#为什么要先吐槽呢？因为如果是一条龙正确执行命令的话，不到三分钟就能搞定了！真的很简单，但我就踩了一早上的坑" class="headerlink" title="为什么要先吐槽呢？因为如果是一条龙正确执行命令的话，不到三分钟就能搞定了！真的很简单，但我就踩了一早上的坑"></a>为什么要先吐槽呢？因为如果是一条龙正确执行命令的话，不到三分钟就能搞定了！真的很简单，但我就踩了一早上的坑</h5></li><li><h5 id="搞了一早上了，操作过程中是各种报错，百度了太多问题，查看了太多博客，不过没什么大用："><a href="#搞了一早上了，操作过程中是各种报错，百度了太多问题，查看了太多博客，不过没什么大用：" class="headerlink" title="搞了一早上了，操作过程中是各种报错，百度了太多问题，查看了太多博客，不过没什么大用："></a>搞了一早上了，操作过程中是各种报错，百度了太多问题，查看了太多博客，不过没什么大用：</h5></li><li><p><a href="https://blog.csdn.net/wjh1840226173/article/details/124779279">(67条消息) internal/modules/cjs/loader.js:883 throw err； ^Error: Cannot find module ‘typescript‘_怕浪小乌龟的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/inthat/article/details/120564807">(67条消息) 前端-工作中 npm install 安装依赖报错常见总结_npm install 报错_西京刀客的博客-CSDN博客</a></p></li><li><p><a href="https://www.saoniuhuo.com/question/detail-2630375.html">安装opencv4nodejs时出现错误“无法删除某些目录” _大数据知识库 (saoniuhuo.com)</a></p></li><li><p><a href="https://www.jianshu.com/p/4c5375895298">nvm常用命令 切换node版本 - 简书 (jianshu.com)</a></p></li><li><p>[(67条消息) ErrorCaptureStackTrace(err)； Error <a href="https://blog.csdn.net/kokool/article/details/127481496">ERR_MODULE_NOT_FOUND]: Cannot find module_克里姆颂的博客-CSDN博客</a></p></li><li><p><a href="https://www.jb51.net/article/264713.htm">npm安装windows-build-tools卡在Successfully installed Python2.7_node.js_脚本之家 (jb51.net)</a></p></li><li><p>[(67条消息) <a href="https://blog.csdn.net/aerchi/article/details/105086193">乐意黎原创]npm run dev 时抛’cross-env’ is not recognized as an internal or external command的解决方法_打杂人的博客-CSDN博客</a></p></li><li><p><a href="https://www.haomeiwen.com/subject/ujfuottx.html">如何用6行代码写出微信聊天机器人 (haomeiwen.com)</a></p></li><li><p>[(67条消息) Js(一)Error <a href="https://blog.csdn.net/Makasa/article/details/120679122">ERR_MODULE_NOT_FOUND]: Cannot find package ‘uuid‘ imported_M1kasal的博客-CSDN博客</a></p></li><li><h5 id="功夫不负有心人，最后总归是成功了，下面我分享下实操过程吧："><a href="#功夫不负有心人，最后总归是成功了，下面我分享下实操过程吧：" class="headerlink" title="功夫不负有心人，最后总归是成功了，下面我分享下实操过程吧："></a>功夫不负有心人，最后总归是成功了，下面我分享下实操过程吧：</h5></li></ul><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><ul><li><h5 id="看开源项目-wechaty-的-教程，其实就能够快速地构建一个聊天机器人了"><a href="#看开源项目-wechaty-的-教程，其实就能够快速地构建一个聊天机器人了" class="headerlink" title="看开源项目 wechaty 的 教程，其实就能够快速地构建一个聊天机器人了"></a>看开源项目 wechaty 的 教程，其实就能够快速地构建一个聊天机器人了</h5></li><li><h5 id="首先将-世界上最短的聊天机器人代码：6行JavaScript-保存到本地，我放在了D-Project-AI-WeChat-bot-js下："><a href="#首先将-世界上最短的聊天机器人代码：6行JavaScript-保存到本地，我放在了D-Project-AI-WeChat-bot-js下：" class="headerlink" title="首先将 世界上最短的聊天机器人代码：6行JavaScript 保存到本地，我放在了D:\Project\AI\WeChat\bot.js下："></a>首先将 世界上最短的聊天机器人代码：6行JavaScript 保存到本地，我放在了D:\Project\AI\WeChat\bot.js下：</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">WechatyBuilder</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;wechaty&#x27;</span><br><br><span class="hljs-keyword">const</span> wechaty = <span class="hljs-title class_">WechatyBuilder</span>.<span class="hljs-title function_">build</span>() <span class="hljs-comment">// get a Wechaty instance</span><br>wechaty<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;scan&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">qrcode, status</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Scan QR Code to login: <span class="hljs-subst">$&#123;status&#125;</span>\nhttps://wechaty.js.org/qrcode/<span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURIComponent</span>(qrcode)&#125;</span>`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;login&#x27;</span>,            <span class="hljs-function"><span class="hljs-params">user</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`User <span class="hljs-subst">$&#123;user&#125;</span> logged in`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>,       <span class="hljs-function"><span class="hljs-params">message</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Message: <span class="hljs-subst">$&#123;message&#125;</span>`</span>))<br>wechaty.<span class="hljs-title function_">start</span>()<br></code></pre></td></tr></table></figure><ul><li><h5 id="依次执行以下三条命令："><a href="#依次执行以下三条命令：" class="headerlink" title="依次执行以下三条命令："></a>依次执行以下三条命令：</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">npm init<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">npm install wechaty<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">node bot.js<br></code></pre></td></tr></table></figure><ul><li><h5 id="按照官方教程，此刻就应该大功告成了，但很显然，我没有"><a href="#按照官方教程，此刻就应该大功告成了，但很显然，我没有" class="headerlink" title="按照官方教程，此刻就应该大功告成了，但很显然，我没有"></a>按照官方教程，此刻就应该大功告成了，但很显然，我没有</h5></li><li><h5 id="在执行命令的过程中，报了大量错误，我只能逐条上百度寻找答案，过程极为繁琐"><a href="#在执行命令的过程中，报了大量错误，我只能逐条上百度寻找答案，过程极为繁琐" class="headerlink" title="在执行命令的过程中，报了大量错误，我只能逐条上百度寻找答案，过程极为繁琐"></a>在执行命令的过程中，报了大量错误，我只能逐条上百度寻找答案，过程极为繁琐</h5></li><li><h5 id="npm包管理工具配置依赖总是会有莫名地错误，这让我很是头疼，我一度安装了node-js的最新版，还是无济于事"><a href="#npm包管理工具配置依赖总是会有莫名地错误，这让我很是头疼，我一度安装了node-js的最新版，还是无济于事" class="headerlink" title="npm包管理工具配置依赖总是会有莫名地错误，这让我很是头疼，我一度安装了node.js的最新版，还是无济于事"></a>npm包管理工具配置依赖总是会有莫名地错误，这让我很是头疼，我一度安装了node.js的最新版，还是无济于事</h5></li><li><h5 id="后来我受到启发，将npm的安装命令，替换为yarn，果不其然，安装极其迅速且无报错"><a href="#后来我受到启发，将npm的安装命令，替换为yarn，果不其然，安装极其迅速且无报错" class="headerlink" title="后来我受到启发，将npm的安装命令，替换为yarn，果不其然，安装极其迅速且无报错"></a>后来我受到启发，将npm的安装命令，替换为yarn，果不其然，安装极其迅速且无报错</h5></li><li><h5 id="那接下来，才是正确的实操过程，我会放上我的操作记录："><a href="#那接下来，才是正确的实操过程，我会放上我的操作记录：" class="headerlink" title="那接下来，才是正确的实操过程，我会放上我的操作记录："></a>那接下来，才是正确的实操过程，我会放上我的操作记录：</h5></li><li><h5 id="第一步，执行以下命令："><a href="#第一步，执行以下命令：" class="headerlink" title="第一步，执行以下命令："></a>第一步，执行以下命令：</h5></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> init<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623121021613.png" alt="image-20230623121021613"></p><ul><li><h5 id="这一步就是生成了一个json配置文件，如上图所示"><a href="#这一步就是生成了一个json配置文件，如上图所示" class="headerlink" title="这一步就是生成了一个json配置文件，如上图所示"></a>这一步就是生成了一个json配置文件，如上图所示</h5></li><li><h5 id="第二步，执行以下命令："><a href="#第二步，执行以下命令：" class="headerlink" title="第二步，执行以下命令："></a>第二步，执行以下命令：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yarn <span class="hljs-built_in">add</span> wechaty<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623121328320.png" alt="image-20230623121328320"></p><ul><li><h5 id="这一步就是安装了wechaty的相关依赖，我只截取了部分操作图，等待执行完毕"><a href="#这一步就是安装了wechaty的相关依赖，我只截取了部分操作图，等待执行完毕" class="headerlink" title="这一步就是安装了wechaty的相关依赖，我只截取了部分操作图，等待执行完毕"></a>这一步就是安装了wechaty的相关依赖，我只截取了部分操作图，等待执行完毕</h5></li><li><h5 id="yarn安装完成后，如果此刻直接执行-node-bot-js，会出现以下错误："><a href="#yarn安装完成后，如果此刻直接执行-node-bot-js，会出现以下错误：" class="headerlink" title="yarn安装完成后，如果此刻直接执行 node bot.js，会出现以下错误："></a>yarn安装完成后，如果此刻直接执行 node bot.js，会出现以下错误：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623121646702.png" alt="image-20230623121646702"></p><ul><li><h5 id="这个问题很好解决，详情可以看这篇博客：-67条消息-SyntaxError-Cannot-use-import-statement-outside-a-module-花花花菜的博客-CSDN博客"><a href="#这个问题很好解决，详情可以看这篇博客：-67条消息-SyntaxError-Cannot-use-import-statement-outside-a-module-花花花菜的博客-CSDN博客" class="headerlink" title="这个问题很好解决，详情可以看这篇博客：(67条消息) SyntaxError: Cannot use import statement outside a module_花花花菜的博客-CSDN博客"></a>这个问题很好解决，详情可以看这篇博客：<a href="https://blog.csdn.net/m0_59075169/article/details/124345250">(67条消息) SyntaxError: Cannot use import statement outside a module_花花花菜的博客-CSDN博客</a></h5></li><li><h5 id="我们在package-json中添加如下配置即可："><a href="#我们在package-json中添加如下配置即可：" class="headerlink" title="我们在package.json中添加如下配置即可："></a>我们在package.json中添加如下配置即可：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623121818226.png" alt="image-20230623121818226"></p><ul><li><h5 id="第三步，执行以下命令："><a href="#第三步，执行以下命令：" class="headerlink" title="第三步，执行以下命令："></a>第三步，执行以下命令：</h5></li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">bot</span>.js<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623122004687.png" alt="image-20230623122004687"></p><ul><li><h5 id="执行结果如上，生成一个网址，在这个网址使用微信下扫码登录，即可登录到网页版微信，此时控制台显示如下："><a href="#执行结果如上，生成一个网址，在这个网址使用微信下扫码登录，即可登录到网页版微信，此时控制台显示如下：" class="headerlink" title="执行结果如上，生成一个网址，在这个网址使用微信下扫码登录，即可登录到网页版微信，此时控制台显示如下："></a>执行结果如上，生成一个网址，在这个网址使用微信下扫码登录，即可登录到网页版微信，此时控制台显示如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623122226249.png" alt="image-20230623122226249"></p><ul><li><h5 id="这个脚本已经成功绑定到我的网页版微信了，它可以监控到我的聊天记录了"><a href="#这个脚本已经成功绑定到我的网页版微信了，它可以监控到我的聊天记录了" class="headerlink" title="这个脚本已经成功绑定到我的网页版微信了，它可以监控到我的聊天记录了"></a>这个脚本已经成功绑定到我的网页版微信了，它可以监控到我的聊天记录了</h5></li><li><h5 id="我的脚本bot-js内容如下："><a href="#我的脚本bot-js内容如下：" class="headerlink" title="我的脚本bot.js内容如下："></a>我的脚本bot.js内容如下：</h5></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">WechatyBuilder</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;wechaty&quot;</span>;<br><br><span class="hljs-keyword">const</span> wechaty = <span class="hljs-title class_">WechatyBuilder</span>.<span class="hljs-title function_">build</span>(); <span class="hljs-comment">// get a Wechaty instance</span><br>wechaty<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;scan&quot;</span>, <span class="hljs-function">(<span class="hljs-params">qrcode, status</span>) =&gt;</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>      <span class="hljs-string">`Scan QR Code to login: <span class="hljs-subst">$&#123;status&#125;</span>\nhttps://wechaty.js.org/qrcode/<span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURIComponent</span>(</span></span><br><span class="hljs-subst"><span class="hljs-string">        qrcode</span></span><br><span class="hljs-subst"><span class="hljs-string">      )&#125;</span>`</span><br>    )<br>  )<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;login&quot;</span>, <span class="hljs-function">(<span class="hljs-params">user</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`User <span class="hljs-subst">$&#123;user&#125;</span> logged in`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-function">(<span class="hljs-params">message</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Message: <span class="hljs-subst">$&#123;message&#125;</span>`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) &#123;<br>    <span class="hljs-comment">// 获取消息发送人</span><br>    <span class="hljs-keyword">const</span> contact = msg.<span class="hljs-title function_">talker</span>();<br>    <span class="hljs-comment">// 获取消息内容</span><br>    <span class="hljs-keyword">const</span> text = msg.<span class="hljs-title function_">text</span>();<br>    <span class="hljs-comment">// 获取群聊信息</span><br>    <span class="hljs-keyword">const</span> room = msg.<span class="hljs-title function_">room</span>();<br>    <span class="hljs-comment">// 是私聊</span><br>    <span class="hljs-keyword">if</span> (contact &amp;&amp; text) &#123;<br>      <span class="hljs-comment">// 回复相同内容</span><br>      <span class="hljs-comment">//   msg.say(text, contact);</span><br>      msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;叫你妈妈&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 不处理自己的消息</span><br>    <span class="hljs-keyword">if</span> (msg.<span class="hljs-title function_">self</span>()) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 群聊还是私聊</span><br>    <span class="hljs-keyword">if</span> (room) &#123;<br>      <span class="hljs-keyword">if</span> (room.<span class="hljs-title function_">topic</span>() === <span class="hljs-string">&quot;全家幸福&quot;</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(contact + text);<br>        <span class="hljs-comment">// 回复</span><br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">if</span> (contact.<span class="hljs-title function_">name</span>() === <span class="hljs-string">&quot;经&quot;</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(contact + text);<br>        <span class="hljs-comment">// 回复</span><br>        <span class="hljs-comment">// msg.say(text, contact);</span><br>        msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;叫你妈妈&quot;</span>);<br>      &#125;<br>    &#125;<br>  &#125;);<br>wechaty.<span class="hljs-title function_">start</span>();<br></code></pre></td></tr></table></figure><ul><li><h5 id="然后我就找我的好兄弟测验这个自动回复机器人，起初设定是回复对方相同的信息，后来是直接骂一句脏话"><a href="#然后我就找我的好兄弟测验这个自动回复机器人，起初设定是回复对方相同的信息，后来是直接骂一句脏话" class="headerlink" title="然后我就找我的好兄弟测验这个自动回复机器人，起初设定是回复对方相同的信息，后来是直接骂一句脏话"></a>然后我就找我的好兄弟测验这个自动回复机器人，起初设定是回复对方相同的信息，后来是直接骂一句脏话</h5></li><li><h5 id="这家伙还给自动回复脏话到自家群里了，妈的，还好我及时叫停了"><a href="#这家伙还给自动回复脏话到自家群里了，妈的，还好我及时叫停了" class="headerlink" title="这家伙还给自动回复脏话到自家群里了，妈的，还好我及时叫停了"></a>这家伙还给自动回复脏话到自家群里了，妈的，还好我及时叫停了</h5></li><li><h5 id="微信自动回复AI基础教学就到此为止了，日后我再研究一番，了解到如何根据对应联系人，回答对应问题"><a href="#微信自动回复AI基础教学就到此为止了，日后我再研究一番，了解到如何根据对应联系人，回答对应问题" class="headerlink" title="微信自动回复AI基础教学就到此为止了，日后我再研究一番，了解到如何根据对应联系人，回答对应问题"></a>微信自动回复AI基础教学就到此为止了，日后我再研究一番，了解到如何根据对应联系人，回答对应问题</h5></li><li><h5 id="有机会的话，我会分享这个AI的进阶使用心得"><a href="#有机会的话，我会分享这个AI的进阶使用心得" class="headerlink" title="有机会的话，我会分享这个AI的进阶使用心得"></a>有机会的话，我会分享这个AI的进阶使用心得</h5></li></ul><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><ul><li><h5 id="当天晚上，我又优化了下bot-js脚本，再次启动服务，开启怼好友模式！"><a href="#当天晚上，我又优化了下bot-js脚本，再次启动服务，开启怼好友模式！" class="headerlink" title="当天晚上，我又优化了下bot.js脚本，再次启动服务，开启怼好友模式！"></a>当天晚上，我又优化了下bot.js脚本，再次启动服务，开启怼好友模式！</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">WechatyBuilder</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;wechaty&quot;</span>;<br><br><span class="hljs-comment">// 聊天次数</span><br><span class="hljs-keyword">let</span> num = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">const</span> wechaty = <span class="hljs-title class_">WechatyBuilder</span>.<span class="hljs-title function_">build</span>(); <span class="hljs-comment">// get a Wechaty instance</span><br>wechaty<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;scan&quot;</span>, <span class="hljs-function">(<span class="hljs-params">qrcode, status</span>) =&gt;</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>      <span class="hljs-string">`Scan QR Code to login: <span class="hljs-subst">$&#123;status&#125;</span>\nhttps://wechaty.js.org/qrcode/<span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURIComponent</span>(</span></span><br><span class="hljs-subst"><span class="hljs-string">        qrcode</span></span><br><span class="hljs-subst"><span class="hljs-string">      )&#125;</span>`</span><br>    )<br>  )<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;login&quot;</span>, <span class="hljs-function">(<span class="hljs-params">user</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`User <span class="hljs-subst">$&#123;user&#125;</span> logged in`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-function">(<span class="hljs-params">message</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Message: <span class="hljs-subst">$&#123;message&#125;</span>`</span>))<br>  .<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) &#123;<br>    <span class="hljs-comment">// 获取消息发送人</span><br>    <span class="hljs-keyword">const</span> contact = msg.<span class="hljs-title function_">talker</span>();<br>    <span class="hljs-comment">// 获取消息内容</span><br>    <span class="hljs-keyword">const</span> text = msg.<span class="hljs-title function_">text</span>();<br>    <span class="hljs-comment">// 获取群聊信息</span><br>    <span class="hljs-keyword">const</span> room = msg.<span class="hljs-title function_">room</span>();<br>    <span class="hljs-comment">// 不处理自己的消息</span><br>    <span class="hljs-keyword">if</span> (msg.<span class="hljs-title function_">self</span>()) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 是私聊</span><br>    <span class="hljs-keyword">if</span> (contact &amp;&amp; text) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;说话人: &quot;</span> + contact.<span class="hljs-title function_">name</span>());<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;对话次数: &quot;</span> + num);<br>      <span class="hljs-comment">//   // 回复相同内容</span><br>      <span class="hljs-comment">//   //   msg.say(text, contact);</span><br>      <span class="hljs-comment">//   msg.say(&quot;你有什么问题吗？&quot;);</span><br>      num++;<br>      <span class="hljs-keyword">if</span> (num % <span class="hljs-number">3</span> === <span class="hljs-number">0</span>) &#123;<br>        msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你在狗叫什么？&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (num % <span class="hljs-number">5</span> === <span class="hljs-number">0</span>) &#123;<br>        msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你叫你大爷呢！&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你说:&quot;</span> + text + <span class="hljs-string">&quot;你有什么毛病吗？&quot;</span>);<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (contact.<span class="hljs-title function_">name</span>() === <span class="hljs-string">&quot;经&quot;</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(contact + text);<br>        <span class="hljs-comment">// 回复</span><br>        <span class="hljs-comment">// msg.say(text, contact);</span><br>        num++;<br>        <span class="hljs-keyword">if</span> (num % <span class="hljs-number">3</span> === <span class="hljs-number">0</span>) &#123;<br>          msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你在狗叫什么？&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (num % <span class="hljs-number">5</span> === <span class="hljs-number">0</span>) &#123;<br>          msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你叫你大爷呢！&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          msg.<span class="hljs-title function_">say</span>(<span class="hljs-string">&quot;你说:&quot;</span> + text + <span class="hljs-string">&quot;你有什么毛病吗？&quot;</span>);<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (contact.<span class="hljs-title function_">name</span>() === <span class="hljs-string">&quot;江疯心&quot;</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(contact + text);<br>        <span class="hljs-comment">// 回复</span><br>        <span class="hljs-comment">// msg.say(text, contact);</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-comment">// 群聊</span><br>    <span class="hljs-keyword">if</span> (room) &#123;<br>      <span class="hljs-keyword">if</span> (room.<span class="hljs-title function_">topic</span>() === <span class="hljs-string">&quot;全家幸福&quot;</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(contact + text);<br>        <span class="hljs-comment">// 回复</span><br>      &#125;<br>    &#125;<br>  &#125;);<br>wechaty.<span class="hljs-title function_">start</span>();<br></code></pre></td></tr></table></figure><ul><li><h5 id="这次脚本优化，多亏了我的好兄弟，在我俩坚持不懈的测试下，又一个可行的脚本写好了"><a href="#这次脚本优化，多亏了我的好兄弟，在我俩坚持不懈的测试下，又一个可行的脚本写好了" class="headerlink" title="这次脚本优化，多亏了我的好兄弟，在我俩坚持不懈的测试下，又一个可行的脚本写好了"></a>这次脚本优化，多亏了我的好兄弟，在我俩坚持不懈的测试下，又一个可行的脚本写好了</h5></li><li><h5 id="由于下面的问题出现（心得👇），我脚本中把回复消息的代码逻辑，给直接抬升到所有私聊用户了，结果就是："><a href="#由于下面的问题出现（心得👇），我脚本中把回复消息的代码逻辑，给直接抬升到所有私聊用户了，结果就是：" class="headerlink" title="由于下面的问题出现（心得👇），我脚本中把回复消息的代码逻辑，给直接抬升到所有私聊用户了，结果就是："></a>由于下面的问题出现（心得👇），我脚本中把回复消息的代码逻辑，给直接抬升到所有私聊用户了，结果就是：</h5></li><li><h5 id="我在同一时间，怼了三个私聊好友："><a href="#我在同一时间，怼了三个私聊好友：" class="headerlink" title="我在同一时间，怼了三个私聊好友："></a>我在同一时间，怼了三个私聊好友：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624130533200.png" alt="image-20230624130533200"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623224019818.png" alt="image-20230623224019818"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623224157242.png" alt="image-20230623224157242"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623224300564.png" alt="image-20230623224300564"></p><ul><li><h5 id="另外有两个推文公众号也未能幸免："><a href="#另外有两个推文公众号也未能幸免：" class="headerlink" title="另外有两个推文公众号也未能幸免："></a>另外有两个推文公众号也未能幸免：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623224501176.png" alt="image-20230623224501176"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230623224519407.png" alt="image-20230623224519407"></p><ul><li><h5 id="哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈，好玩"><a href="#哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈，好玩" class="headerlink" title="哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈，好玩"></a>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈，好玩</h5></li></ul><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><ul><li><h5 id="连接wechaty服务、登录网页版微信可能会受到网络影响而连接失败，或者连接后网络非常不稳定"><a href="#连接wechaty服务、登录网页版微信可能会受到网络影响而连接失败，或者连接后网络非常不稳定" class="headerlink" title="连接wechaty服务、登录网页版微信可能会受到网络影响而连接失败，或者连接后网络非常不稳定"></a>连接wechaty服务、登录网页版微信可能会受到网络影响而连接失败，或者连接后网络非常不稳定</h5></li><li><h5 id="关于这个问题，我建议是多换几个网络环境就好了，我用我自己的手机热点流畅的一批"><a href="#关于这个问题，我建议是多换几个网络环境就好了，我用我自己的手机热点流畅的一批" class="headerlink" title="关于这个问题，我建议是多换几个网络环境就好了，我用我自己的手机热点流畅的一批"></a>关于这个问题，我建议是多换几个网络环境就好了，我用我自己的手机热点流畅的一批</h5></li><li><h5 id="起初一直没接收到好兄弟的消息，原来是因为-contact-name-没匹配上，就是好友昵称和备注的区别，这个注意一下"><a href="#起初一直没接收到好兄弟的消息，原来是因为-contact-name-没匹配上，就是好友昵称和备注的区别，这个注意一下" class="headerlink" title="起初一直没接收到好兄弟的消息，原来是因为 contact.name() 没匹配上，就是好友昵称和备注的区别，这个注意一下"></a>起初一直没接收到好兄弟的消息，原来是因为 contact.name() 没匹配上，就是好友昵称和备注的区别，这个注意一下</h5></li><li><h5 id="于是就出现了上面的问题，还好我早有预判到，没有监测群聊消息，哈哈哈"><a href="#于是就出现了上面的问题，还好我早有预判到，没有监测群聊消息，哈哈哈" class="headerlink" title="于是就出现了上面的问题，还好我早有预判到，没有监测群聊消息，哈哈哈"></a>于是就出现了上面的问题，还好我早有预判到，没有监测群聊消息，哈哈哈</h5></li></ul><h1 id="鱼聪明AI-做您强大的AI助手"><a href="#鱼聪明AI-做您强大的AI助手" class="headerlink" title="鱼聪明AI-做您强大的AI助手"></a>鱼聪明AI-做您强大的AI助手</h1><h2 id="前言-2"><a href="#前言-2" class="headerlink" title="前言"></a>前言</h2><ul><li><h5 id="这个网站是我认识的一位大佬开发的，一个非常好用的AI网站，包含功能繁多，值得一试"><a href="#这个网站是我认识的一位大佬开发的，一个非常好用的AI网站，包含功能繁多，值得一试" class="headerlink" title="这个网站是我认识的一位大佬开发的，一个非常好用的AI网站，包含功能繁多，值得一试"></a>这个网站是我认识的一位大佬开发的，一个非常好用的AI网站，包含功能繁多，值得一试</h5></li><li><h5 id="具体有哪些功能，在这里就不细说了，下面给出访问地址和相关功能介绍："><a href="#具体有哪些功能，在这里就不细说了，下面给出访问地址和相关功能介绍：" class="headerlink" title="具体有哪些功能，在这里就不细说了，下面给出访问地址和相关功能介绍："></a>具体有哪些功能，在这里就不细说了，下面给出访问地址和相关功能介绍：</h5></li><li><h5 id="访问地址：鱼聪明AI-做您强大的AI助手-yucongming-com"><a href="#访问地址：鱼聪明AI-做您强大的AI助手-yucongming-com" class="headerlink" title="访问地址：鱼聪明AI - 做您强大的AI助手 (yucongming.com)"></a>访问地址：<a href="https://www.yucongming.com/">鱼聪明AI - 做您强大的AI助手 (yucongming.com)</a></h5></li><li><h5 id="网站介绍：上线啦！-编程导航-code-nav-cn"><a href="#网站介绍：上线啦！-编程导航-code-nav-cn" class="headerlink" title="网站介绍：上线啦！ - 编程导航 (code-nav.cn)"></a>网站介绍：<a href="https://www.code-nav.cn/post/1671131561837211650#heading-10">上线啦！ - 编程导航 (code-nav.cn)</a></h5></li></ul><h2 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h2><ul><li><h5 id="接下来简单介绍下我的使用心得："><a href="#接下来简单介绍下我的使用心得：" class="headerlink" title="接下来简单介绍下我的使用心得："></a>接下来简单介绍下我的使用心得：</h5></li><li><h5 id="这个鱼聪明AI还挺先进的，几轮对话下来，能感受到其应该能达到ChatGPT3-5的水准"><a href="#这个鱼聪明AI还挺先进的，几轮对话下来，能感受到其应该能达到ChatGPT3-5的水准" class="headerlink" title="这个鱼聪明AI还挺先进的，几轮对话下来，能感受到其应该能达到ChatGPT3.5的水准"></a>这个鱼聪明AI还挺先进的，几轮对话下来，能感受到其应该能达到ChatGPT3.5的水准</h5></li><li><h5 id="我已经通过对话鱼聪明AI，生成了许多博客文章的标题、副标题以及文章的整体架构了，包括但不限于："><a href="#我已经通过对话鱼聪明AI，生成了许多博客文章的标题、副标题以及文章的整体架构了，包括但不限于：" class="headerlink" title="我已经通过对话鱼聪明AI，生成了许多博客文章的标题、副标题以及文章的整体架构了，包括但不限于："></a>我已经通过对话鱼聪明AI，生成了许多博客文章的标题、副标题以及文章的整体架构了，包括但不限于：</h5></li><li><h5 id="《配置指南-掌握Node-js配置》，《使用JSP构建JavaWeb项目-以数据库大作业为例》，《大道至简：快速搭建博客与文档站点的终极指南》等"><a href="#《配置指南-掌握Node-js配置》，《使用JSP构建JavaWeb项目-以数据库大作业为例》，《大道至简：快速搭建博客与文档站点的终极指南》等" class="headerlink" title="《配置指南-掌握Node-js配置》，《使用JSP构建JavaWeb项目-以数据库大作业为例》，《大道至简：快速搭建博客与文档站点的终极指南》等"></a>《配置指南-掌握Node-js配置》，《使用JSP构建JavaWeb项目-以数据库大作业为例》，《大道至简：快速搭建博客与文档站点的终极指南》等</h5></li><li><h5 id="随便截几张图来感受一下："><a href="#随便截几张图来感受一下：" class="headerlink" title="随便截几张图来感受一下："></a>随便截几张图来感受一下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230626130029726.png" alt="image-20230626130029726"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230626130057504.png" alt="image-20230626130057504"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230626130115207.png" alt="image-20230626130115207"></p><ul><li><h5 id="以上就是我的使用心得，期待鱼聪明接下来的表现（2023-07-03晚）"><a href="#以上就是我的使用心得，期待鱼聪明接下来的表现（2023-07-03晚）" class="headerlink" title="以上就是我的使用心得，期待鱼聪明接下来的表现（2023/07/03晚）"></a>以上就是我的使用心得，期待鱼聪明接下来的表现（2023/07/03晚）</h5></li><li><h5 id="鱼聪明又帮了我大忙，使用宝塔面板部署项目后端时，帮我解决了很多问题："><a href="#鱼聪明又帮了我大忙，使用宝塔面板部署项目后端时，帮我解决了很多问题：" class="headerlink" title="鱼聪明又帮了我大忙，使用宝塔面板部署项目后端时，帮我解决了很多问题："></a>鱼聪明又帮了我大忙，使用宝塔面板部署项目后端时，帮我解决了很多问题：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725224215340.png" alt="image-20230725224215340"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725234512582.png" alt="image-20230725234512582"></p>]]></content>
    
    
    <categories>
      
      <category>AI</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx 入门指南：理解、配置和优化</title>
    <link href="/blog/2023/06/22/Nginx%20%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E7%90%86%E8%A7%A3%E3%80%81%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BC%98%E5%8C%96/"/>
    <url>/blog/2023/06/22/Nginx%20%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E7%90%86%E8%A7%A3%E3%80%81%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Nginx简介和安装"><a href="#Nginx简介和安装" class="headerlink" title="Nginx简介和安装"></a>Nginx简介和安装</h2><ul><li><h5 id="了解-Nginx：功能、优势和应用场景"><a href="#了解-Nginx：功能、优势和应用场景" class="headerlink" title="了解 Nginx：功能、优势和应用场景"></a>了解 Nginx：功能、优势和应用场景</h5></li></ul><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><h5 id="这篇关于Nginx的介绍是我看过最详细的了：Nginx-学习-KuangStudy-文章"><a href="#这篇关于Nginx的介绍是我看过最详细的了：Nginx-学习-KuangStudy-文章" class="headerlink" title="这篇关于Nginx的介绍是我看过最详细的了：Nginx 学习-KuangStudy-文章"></a>这篇关于Nginx的介绍是我看过最详细的了：<a href="https://www.kuangstudy.com/bbs/1483987971375263745">Nginx 学习-KuangStudy-文章</a></h5></li><li><h5 id="这里我就不详细展开说了，网上的资料对Nginx都有着详尽的介绍，我仅依照自己的理解，给出我对Nginx的认识："><a href="#这里我就不详细展开说了，网上的资料对Nginx都有着详尽的介绍，我仅依照自己的理解，给出我对Nginx的认识：" class="headerlink" title="这里我就不详细展开说了，网上的资料对Nginx都有着详尽的介绍，我仅依照自己的理解，给出我对Nginx的认识："></a>这里我就不详细展开说了，网上的资料对Nginx都有着详尽的介绍，我仅依照自己的理解，给出我对Nginx的认识：</h5></li><li><h5 id="Nginx是一个高性能的HTTP和反向代理web服务器，它的特点是负载均衡、反向代理"><a href="#Nginx是一个高性能的HTTP和反向代理web服务器，它的特点是负载均衡、反向代理" class="headerlink" title="Nginx是一个高性能的HTTP和反向代理web服务器，它的特点是负载均衡、反向代理"></a>Nginx是一个高性能的HTTP和反向代理web服务器，它的特点是负载均衡、反向代理</h5></li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a>windows安装</h4><ul><li><h5 id="Nginx官网下载：nginx-download"><a href="#Nginx官网下载：nginx-download" class="headerlink" title="Nginx官网下载：nginx: download"></a>Nginx官网下载：<a href="http://nginx.org/en/download.html">nginx: download</a></h5></li><li><h5 id="只需在官网下载安装包，在本地解压即可"><a href="#只需在官网下载安装包，在本地解压即可" class="headerlink" title="只需在官网下载安装包，在本地解压即可"></a>只需在官网下载安装包，在本地解压即可</h5></li></ul><h4 id="本地Linux原始安装"><a href="#本地Linux原始安装" class="headerlink" title="本地Linux原始安装"></a>本地Linux原始安装</h4><ul><li><h5 id="手动安装并手动配置是很繁琐的，不过操作一遍确实很能巩固Linux命令，这里给出详细的安装教程："><a href="#手动安装并手动配置是很繁琐的，不过操作一遍确实很能巩固Linux命令，这里给出详细的安装教程：" class="headerlink" title="手动安装并手动配置是很繁琐的，不过操作一遍确实很能巩固Linux命令，这里给出详细的安装教程："></a>手动安装并手动配置是很繁琐的，不过操作一遍确实很能巩固Linux命令，这里给出详细的安装教程：</h5></li><li><h5 id="Nginx官网下载：nginx-download-1"><a href="#Nginx官网下载：nginx-download-1" class="headerlink" title="Nginx官网下载：nginx: download"></a>Nginx官网下载：<a href="http://nginx.org/en/download.html">nginx: download</a></h5></li><li><h5 id="教程一：Nginx安装下载-KuangStudy-文章"><a href="#教程一：Nginx安装下载-KuangStudy-文章" class="headerlink" title="教程一：Nginx安装下载-KuangStudy-文章"></a>教程一：<a href="https://www.kuangstudy.com/bbs/1511610238649233410">Nginx安装下载-KuangStudy-文章</a></h5></li><li><h5 id="教程二：-67条消息-Nginx安装及其常用命令（实操版）-nginx安装命令-叫我-默语的博客-CSDN博客"><a href="#教程二：-67条消息-Nginx安装及其常用命令（实操版）-nginx安装命令-叫我-默语的博客-CSDN博客" class="headerlink" title="教程二：(67条消息) Nginx安装及其常用命令（实操版）_nginx安装命令_叫我 默语的博客-CSDN博客"></a>教程二：<a href="https://blog.csdn.net/qq_42055933/article/details/130734077">(67条消息) Nginx安装及其常用命令（实操版）_nginx安装命令_叫我 默语的博客-CSDN博客</a></h5></li><li><h5 id="教程三：-67条消息-yum安装nginx-yum-安装nginx-q495673918的博客-CSDN博客"><a href="#教程三：-67条消息-yum安装nginx-yum-安装nginx-q495673918的博客-CSDN博客" class="headerlink" title="教程三：(67条消息) yum安装nginx_yum 安装nginx_q495673918的博客-CSDN博客"></a>教程三：<a href="https://blog.csdn.net/q495673918/article/details/124477891">(67条消息) yum安装nginx_yum 安装nginx_q495673918的博客-CSDN博客</a></h5></li><li><h5 id="将来有空的话，我会补充这里的手动安装实操流程（宝塔一键安装真的太便捷了）"><a href="#将来有空的话，我会补充这里的手动安装实操流程（宝塔一键安装真的太便捷了）" class="headerlink" title="将来有空的话，我会补充这里的手动安装实操流程（宝塔一键安装真的太便捷了）"></a>将来有空的话，我会补充这里的手动安装实操流程（宝塔一键安装真的太便捷了）</h5></li></ul><h4 id="宝塔Linux一键安装"><a href="#宝塔Linux一键安装" class="headerlink" title="宝塔Linux一键安装"></a>宝塔Linux一键安装</h4><ul><li><h5 id="不论是云服务器还是本地服务器，宝塔Linux都是一键安装的，省去了大部分繁琐的配置"><a href="#不论是云服务器还是本地服务器，宝塔Linux都是一键安装的，省去了大部分繁琐的配置" class="headerlink" title="不论是云服务器还是本地服务器，宝塔Linux都是一键安装的，省去了大部分繁琐的配置"></a>不论是云服务器还是本地服务器，宝塔Linux都是一键安装的，省去了大部分繁琐的配置</h5></li><li><h5 id="你可以在登录宝塔面板之后，在软件商店里下载安装："><a href="#你可以在登录宝塔面板之后，在软件商店里下载安装：" class="headerlink" title="你可以在登录宝塔面板之后，在软件商店里下载安装："></a>你可以在登录宝塔面板之后，在软件商店里下载安装：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230622143528026.png" alt="image-20230622143528026" style="zoom:150%;" /><ul><li><h5 id="也可以在终端里，像本地Linux服务器一样，使用命令安装配置Nginx"><a href="#也可以在终端里，像本地Linux服务器一样，使用命令安装配置Nginx" class="headerlink" title="也可以在终端里，像本地Linux服务器一样，使用命令安装配置Nginx"></a>也可以在终端里，像本地Linux服务器一样，使用命令安装配置Nginx</h5></li></ul><h2 id="服务启停"><a href="#服务启停" class="headerlink" title="服务启停"></a>服务启停</h2><ul><li><h5 id="学会安装、启动和停止-Nginx-服务"><a href="#学会安装、启动和停止-Nginx-服务" class="headerlink" title="学会安装、启动和停止 Nginx 服务"></a>学会安装、启动和停止 Nginx 服务</h5></li><li><h5 id="这里补充下Nginx常用命令："><a href="#这里补充下Nginx常用命令：" class="headerlink" title="这里补充下Nginx常用命令："></a>这里补充下Nginx常用命令：</h5></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> <span class="hljs-comment"># 启动Nginx </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> -c filename  <span class="hljs-comment"># 指定配置⽂件 </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> -V <span class="hljs-comment"># 查看Nginx的版本和编译参数等信息 </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> -t <span class="hljs-comment"># 检查配置⽂件是否正确，也可⽤来定位配置⽂件的位置 </span><br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nginx -s <span class="hljs-keyword">quit</span> <span class="hljs-comment"># 优雅停⽌Nginx</span><br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nginx -s <span class="hljs-literal">stop</span> <span class="hljs-comment"># 快速停⽌Nginx</span><br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nginx -s <span class="hljs-keyword">reload</span> <span class="hljs-comment"># 重新加载配置⽂件 </span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx</span> -s reopen <span class="hljs-comment"># 重新打开⽇志⽂件</span><br></code></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ul><li><h5 id="深入理解-Nginx-配置文件：语法、块和常用指令"><a href="#深入理解-Nginx-配置文件：语法、块和常用指令" class="headerlink" title="深入理解 Nginx 配置文件：语法、块和常用指令"></a>深入理解 Nginx 配置文件：语法、块和常用指令</h5></li><li><h5 id="介绍下Nginx目录结构和配置文件的内容："><a href="#介绍下Nginx目录结构和配置文件的内容：" class="headerlink" title="介绍下Nginx目录结构和配置文件的内容："></a>介绍下Nginx目录结构和配置文件的内容：</h5></li><li><h5 id="67条消息-Nginx-目录结构与配置文件详解-nginx目录-不会调制解调的猫的博客-CSDN博客"><a href="#67条消息-Nginx-目录结构与配置文件详解-nginx目录-不会调制解调的猫的博客-CSDN博客" class="headerlink" title="(67条消息) Nginx - 目录结构与配置文件详解_nginx目录_不会调制解调的猫的博客-CSDN博客"></a><a href="https://blog.csdn.net/Trollz/article/details/126525238">(67条消息) Nginx - 目录结构与配置文件详解_nginx目录_不会调制解调的猫的博客-CSDN博客</a></h5></li><li><h5 id="Nginx的配置文件详解-KuangStudy-文章"><a href="#Nginx的配置文件详解-KuangStudy-文章" class="headerlink" title="Nginx的配置文件详解-KuangStudy-文章"></a><a href="https://www.kuangstudy.com/bbs/1619965646882693121">Nginx的配置文件详解-KuangStudy-文章</a></h5></li></ul><h2 id="反向代理和负载均衡"><a href="#反向代理和负载均衡" class="headerlink" title="反向代理和负载均衡"></a>反向代理和负载均衡</h2><ul><li><h5 id="Nginx-反向代理和负载均衡：有效分发流量"><a href="#Nginx-反向代理和负载均衡：有效分发流量" class="headerlink" title="Nginx 反向代理和负载均衡：有效分发流量"></a>Nginx 反向代理和负载均衡：有效分发流量</h5></li><li><h5 id="我们在本地的4000、5173、8080三个端口开启静态站点服务："><a href="#我们在本地的4000、5173、8080三个端口开启静态站点服务：" class="headerlink" title="我们在本地的4000、5173、8080三个端口开启静态站点服务："></a>我们在本地的4000、5173、8080三个端口开启静态站点服务：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230708095447602.png" alt="image-20230708095447602"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230708095520028.png" alt="image-20230708095520028"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230708095552638.png" alt="image-20230708095552638"></p><ul><li><h5 id="在nginx-conf文件下，分别开放8887、8888、8889端口，反向代理三个静态站点服务"><a href="#在nginx-conf文件下，分别开放8887、8888、8889端口，反向代理三个静态站点服务" class="headerlink" title="在nginx.conf文件下，分别开放8887、8888、8889端口，反向代理三个静态站点服务"></a>在nginx.conf文件下，分别开放8887、8888、8889端口，反向代理三个静态站点服务</h5></li><li><h5 id="详细配置如下："><a href="#详细配置如下：" class="headerlink" title="详细配置如下："></a>详细配置如下：</h5></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;<br>    <span class="hljs-attribute">default_type</span>  application/json;<br><br>    <span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;<br>    <br>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;<br><br>    <span class="hljs-section">upstream</span> memory-blog &#123;   <br>      <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">4000</span>;<br>    &#125;<br><br>    <span class="hljs-section">upstream</span> memory-docs1 &#123;   <br>      <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">5173</span>;<br>    &#125;<br><br>    <span class="hljs-section">upstream</span> memory-docs2 &#123;   <br>      <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>    &#125;<br>    <br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">8887</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br>       <br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span>  http://memory-blog; <br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-section">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">8888</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br>        <br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span>  http://memory-docs1; <br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-section">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">8889</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br>       <br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span>  http://memory-docs2; <br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-section">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="有关配置的详细讲解，在配置文件👆一栏中了解"><a href="#有关配置的详细讲解，在配置文件👆一栏中了解" class="headerlink" title="有关配置的详细讲解，在配置文件👆一栏中了解"></a>有关配置的详细讲解，在配置文件👆一栏中了解</h5></li><li><h5 id="修改完配置，我们重新加载配置文件，并启动Nginx服务"><a href="#修改完配置，我们重新加载配置文件，并启动Nginx服务" class="headerlink" title="修改完配置，我们重新加载配置文件，并启动Nginx服务"></a>修改完配置，我们重新加载配置文件，并启动Nginx服务</h5></li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx -s reload</span> <br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="分别访问本地8887、8888、8889端口："><a href="#分别访问本地8887、8888、8889端口：" class="headerlink" title="分别访问本地8887、8888、8889端口："></a>分别访问本地8887、8888、8889端口：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230708100936095.png" alt="image-20230708100936095"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230708100544510.png" alt="image-20230708100544510"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230708100612584.png" alt="image-20230708100612584"></p><ul><li><h5 id="可以看到，我们开启了Nginx服务，只需访问Nginx给我们开放的端口，就能够访问到对应服务器，获取页面数据"><a href="#可以看到，我们开启了Nginx服务，只需访问Nginx给我们开放的端口，就能够访问到对应服务器，获取页面数据" class="headerlink" title="可以看到，我们开启了Nginx服务，只需访问Nginx给我们开放的端口，就能够访问到对应服务器，获取页面数据"></a>可以看到，我们开启了Nginx服务，只需访问Nginx给我们开放的端口，就能够访问到对应服务器，获取页面数据</h5></li><li><h5 id="这是因为Nginx将我们的请求转发给了服务器，而用户是无感知的，这就是Nginx反向代理"><a href="#这是因为Nginx将我们的请求转发给了服务器，而用户是无感知的，这就是Nginx反向代理" class="headerlink" title="这是因为Nginx将我们的请求转发给了服务器，而用户是无感知的，这就是Nginx反向代理"></a>这是因为Nginx将我们的请求转发给了服务器，而用户是无感知的，这就是Nginx反向代理</h5></li></ul><h2 id="HTTPS配置"><a href="#HTTPS配置" class="headerlink" title="HTTPS配置"></a>HTTPS配置</h2><ul><li><h5 id="使用-Nginx-配置-HTTPS：安全加密通信"><a href="#使用-Nginx-配置-HTTPS：安全加密通信" class="headerlink" title="使用 Nginx 配置 HTTPS：安全加密通信"></a>使用 Nginx 配置 HTTPS：安全加密通信</h5></li></ul><h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h2><ul><li><h5 id="Nginx-虚拟主机配置：多个网站共享一台服务器"><a href="#Nginx-虚拟主机配置：多个网站共享一台服务器" class="headerlink" title="Nginx 虚拟主机配置：多个网站共享一台服务器"></a>Nginx 虚拟主机配置：多个网站共享一台服务器</h5></li></ul><h2 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h2><h3 id="访问Nginx403错误"><a href="#访问Nginx403错误" class="headerlink" title="访问Nginx403错误"></a>访问Nginx403错误</h3><ul><li><h5 id="运维排查篇-访问nginx出现403错误-知乎-zhihu-com"><a href="#运维排查篇-访问nginx出现403错误-知乎-zhihu-com" class="headerlink" title="运维排查篇 | 访问nginx出现403错误 - 知乎 (zhihu.com)"></a><a href="https://zhuanlan.zhihu.com/p/381967653">运维排查篇 | 访问nginx出现403错误 - 知乎 (zhihu.com)</a></h5></li><li><h5 id="详解Nginx出现403Forbidden的解决办法-第一PHP社区-php1-cn"><a href="#详解Nginx出现403Forbidden的解决办法-第一PHP社区-php1-cn" class="headerlink" title="详解Nginx出现403Forbidden的解决办法 - 第一PHP社区 (php1.cn)"></a><a href="https://www.php1.cn/detail/XiangJie_Nginx_C_5d37dae4.html">详解Nginx出现403Forbidden的解决办法 - 第一PHP社区 (php1.cn)</a></h5></li><li><h5 id="四种解决Nginx出现403-forbidden-报错的方法-baidu-com"><a href="#四种解决Nginx出现403-forbidden-报错的方法-baidu-com" class="headerlink" title="四种解决Nginx出现403 forbidden 报错的方法 (baidu.com)"></a><a href="https://baijiahao.baidu.com/s?id=1614533633678689239&wfr=spider&for=pc">四种解决Nginx出现403 forbidden 报错的方法 (baidu.com)</a></h5></li><li><h5 id="先是看了很多解决办法（以上），虽然没有解决，但丰富了我对Nginx配置的理解"><a href="#先是看了很多解决办法（以上），虽然没有解决，但丰富了我对Nginx配置的理解" class="headerlink" title="先是看了很多解决办法（以上），虽然没有解决，但丰富了我对Nginx配置的理解"></a>先是看了很多解决办法（以上），虽然没有解决，但丰富了我对Nginx配置的理解</h5></li><li><h5 id="然后我想到看错误日志，但查看配置发现默认没开启，那就开启错误日志："><a href="#然后我想到看错误日志，但查看配置发现默认没开启，那就开启错误日志：" class="headerlink" title="然后我想到看错误日志，但查看配置发现默认没开启，那就开启错误日志："></a>然后我想到看错误日志，但查看配置发现默认没开启，那就开启错误日志：</h5></li><li><h5 id="错误日志路径："><a href="#错误日志路径：" class="headerlink" title="错误日志路径："></a>错误日志路径：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230622154436897.png" style="zoom:67%;" /><ul><li><h5 id="开启错误日志："><a href="#开启错误日志：" class="headerlink" title="开启错误日志："></a>开启错误日志：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230622154707468.png" alt="image-20230622154707468" style="zoom: 80%;" /><ul><li><h5 id="查看错误日志，发现问题所在："><a href="#查看错误日志，发现问题所在：" class="headerlink" title="查看错误日志，发现问题所在："></a>查看错误日志，发现问题所在：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230622154920109.png" alt="image-20230622154920109" style="zoom:150%;" /><ul><li><h5 id="接着看这个解决思路：-67条消息-报错：directory-index-of-“xxx“-is-forbidden-directory-index-of-is-forbidden-AI人工智能与大数据的博客-CSDN博客"><a href="#接着看这个解决思路：-67条消息-报错：directory-index-of-“xxx“-is-forbidden-directory-index-of-is-forbidden-AI人工智能与大数据的博客-CSDN博客" class="headerlink" title="接着看这个解决思路：(67条消息) 报错：directory index of “xxx“ is forbidden_directory index of is forbidden_AI人工智能与大数据的博客-CSDN博客"></a>接着看这个解决思路：<a href="https://blog.csdn.net/guanxs/article/details/107901101">(67条消息) 报错：directory index of “xxx“ is forbidden_directory index of is forbidden_AI人工智能与大数据的博客-CSDN博客</a></h5></li><li><h5 id="添加这行配置："><a href="#添加这行配置：" class="headerlink" title="添加这行配置："></a>添加这行配置：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230622155144376.png" alt="image-20230622155144376" style="zoom: 80%;" /><ul><li><h5 id="然后访问Nginx（记得nginx-s-reload），访问成功，大功告成"><a href="#然后访问Nginx（记得nginx-s-reload），访问成功，大功告成" class="headerlink" title="然后访问Nginx（记得nginx -s reload），访问成功，大功告成"></a>然后访问Nginx（记得nginx -s reload），访问成功，大功告成</h5></li><li><h5 id="这就是访问Nginx发生403错误的具体解决办法了，很有收获"><a href="#这就是访问Nginx发生403错误的具体解决办法了，很有收获" class="headerlink" title="这就是访问Nginx发生403错误的具体解决办法了，很有收获"></a>这就是访问Nginx发生403错误的具体解决办法了，很有收获</h5></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typora操作技巧</title>
    <link href="/blog/2023/06/20/Typora%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
    <url>/blog/2023/06/20/Typora%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>宝塔面板：解放手动配置，轻松管理你的服务器</title>
    <link href="/blog/2023/06/20/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%EF%BC%9A%E8%A7%A3%E6%94%BE%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%BD%BB%E6%9D%BE%E7%AE%A1%E7%90%86%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/blog/2023/06/20/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%EF%BC%9A%E8%A7%A3%E6%94%BE%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%BD%BB%E6%9D%BE%E7%AE%A1%E7%90%86%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>简要介绍宝塔面板的概念和作用</li><li>引发读者对于简化服务器管理任务的兴趣</li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li><h5 id="解释什么是宝塔面板，它如何简化服务器管理任务"><a href="#解释什么是宝塔面板，它如何简化服务器管理任务" class="headerlink" title="解释什么是宝塔面板，它如何简化服务器管理任务"></a>解释什么是宝塔面板，它如何简化服务器管理任务</h5></li><li><h5 id="提及宝塔面板的核心功能和可以管理的资源"><a href="#提及宝塔面板的核心功能和可以管理的资源" class="headerlink" title="提及宝塔面板的核心功能和可以管理的资源"></a>提及宝塔面板的核心功能和可以管理的资源</h5></li></ul><h2 id="宝塔面板的特点"><a href="#宝塔面板的特点" class="headerlink" title="宝塔面板的特点"></a>宝塔面板的特点</h2><h3 id="安装和配置宝塔面板"><a href="#安装和配置宝塔面板" class="headerlink" title="安装和配置宝塔面板"></a>安装和配置宝塔面板</h3><ul><li>提供宝塔面板的下载和安装方法</li><li>详细说明宝塔面板的基本配置过程，并注意一些常见问题和解决方法</li><li>介绍宝塔面板的软件管理功能，如快速安装Nginx、Apache、MySQL等</li><li>强调宝塔面板自动进行配置，简化安装过程，节省时间和精力</li></ul><h3 id="便捷的防火墙设置和端口放行管理"><a href="#便捷的防火墙设置和端口放行管理" class="headerlink" title="便捷的防火墙设置和端口放行管理"></a>便捷的防火墙设置和端口放行管理</h3><ul><li>详细介绍宝塔面板的防火墙功能，包括开关、添加规则等操作</li><li>示范如何使用宝塔面板轻松实现服务器端口放行和网络安全设置</li></ul><h3 id="远程连接和云数据库管理"><a href="#远程连接和云数据库管理" class="headerlink" title="远程连接和云数据库管理"></a>远程连接和云数据库管理</h3><ul><li>介绍宝塔面板提供的远程连接功能，如SSH管理工具、Web终端等</li><li>演示如何使用宝塔面板连接云数据库，并展示常见的数据库操作</li></ul><h3 id="其他有用的功能和扩展"><a href="#其他有用的功能和扩展" class="headerlink" title="其他有用的功能和扩展"></a>其他有用的功能和扩展</h3><ul><li>简要介绍宝塔面板的其他有用的功能，如日志分析、备份和恢复等</li><li>提供宝塔面板扩展性的相关资源和插件推荐</li></ul><h2 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h2><h3 id="宝塔面板登录失败"><a href="#宝塔面板登录失败" class="headerlink" title="宝塔面板登录失败"></a>宝塔面板登录失败</h3><ul><li><h5 id="这是七月初出现的宝塔面板登录问题，如下，登录界面一直在转圈圈"><a href="#这是七月初出现的宝塔面板登录问题，如下，登录界面一直在转圈圈" class="headerlink" title="这是七月初出现的宝塔面板登录问题，如下，登录界面一直在转圈圈"></a>这是七月初出现的宝塔面板登录问题，如下，登录界面一直在转圈圈</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704141027030.png" alt="image-20230704141027030"></p><ul><li><h5 id="只是最近两周在写项目和刷算法题，无暇顾及这个问题，现在给出解决方法：（2023-07-24午）"><a href="#只是最近两周在写项目和刷算法题，无暇顾及这个问题，现在给出解决方法：（2023-07-24午）" class="headerlink" title="只是最近两周在写项目和刷算法题，无暇顾及这个问题，现在给出解决方法：（2023/07/24午）"></a>只是最近两周在写项目和刷算法题，无暇顾及这个问题，现在给出解决方法：（2023/07/24午）</h5></li><li><h5 id="首先保证网络环境良好，手机热点很不靠谱的，最好是直连路由器，家里的或者学校宿舍的"><a href="#首先保证网络环境良好，手机热点很不靠谱的，最好是直连路由器，家里的或者学校宿舍的" class="headerlink" title="首先保证网络环境良好，手机热点很不靠谱的，最好是直连路由器，家里的或者学校宿舍的"></a>首先保证网络环境良好，手机热点很不靠谱的，最好是直连路由器，家里的或者学校宿舍的</h5></li><li><h5 id="其实这个情况大概率就是网络不好引起的，如果账户或者密码输入错误，它会给出明确提示的"><a href="#其实这个情况大概率就是网络不好引起的，如果账户或者密码输入错误，它会给出明确提示的" class="headerlink" title="其实这个情况大概率就是网络不好引起的，如果账户或者密码输入错误，它会给出明确提示的"></a>其实这个情况大概率就是网络不好引起的，如果账户或者密码输入错误，它会给出明确提示的</h5></li><li><h5 id="在-CentOS-7-安装面板后，如果我们没有及时保存账户密码，或者之后频繁改过账户密码，都会导致账户密码忘记而登录不了面板"><a href="#在-CentOS-7-安装面板后，如果我们没有及时保存账户密码，或者之后频繁改过账户密码，都会导致账户密码忘记而登录不了面板" class="headerlink" title="在 CentOS 7 安装面板后，如果我们没有及时保存账户密码，或者之后频繁改过账户密码，都会导致账户密码忘记而登录不了面板"></a>在 CentOS 7 安装面板后，如果我们没有及时保存账户密码，或者之后频繁改过账户密码，都会导致账户密码忘记而登录不了面板</h5></li><li><p>那怎么获取面板当前的账户密码呢？我们废话少说，上解决方案：</p></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/etc/i</span>nit.d/bt <span class="hljs-keyword">default</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="在成功远程连接到服务器后，在面板下输入以上命令，即可获取当前宝塔面板的账户密码："><a href="#在成功远程连接到服务器后，在面板下输入以上命令，即可获取当前宝塔面板的账户密码：" class="headerlink" title="在成功远程连接到服务器后，在面板下输入以上命令，即可获取当前宝塔面板的账户密码："></a>在成功远程连接到服务器后，在面板下输入以上命令，即可获取当前宝塔面板的账户密码：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230724141441345.png" alt="image-20230724141441345"></p><ul><li><h5 id="拿到账户密码之后，我们就可以成功地登录宝塔面板了"><a href="#拿到账户密码之后，我们就可以成功地登录宝塔面板了" class="headerlink" title="拿到账户密码之后，我们就可以成功地登录宝塔面板了~"></a>拿到账户密码之后，我们就可以成功地登录宝塔面板了~</h5></li><li><h5 id="这里还有个小问题，我在使用获取到的账户密码尝试登录时，显示密码错误，这时不要着急，现场修改一下密码就可以正常登录了"><a href="#这里还有个小问题，我在使用获取到的账户密码尝试登录时，显示密码错误，这时不要着急，现场修改一下密码就可以正常登录了" class="headerlink" title="这里还有个小问题，我在使用获取到的账户密码尝试登录时，显示密码错误，这时不要着急，现场修改一下密码就可以正常登录了"></a>这里还有个小问题，我在使用获取到的账户密码尝试登录时，显示密码错误，这时不要着急，现场修改一下密码就可以正常登录了</h5></li><li><h5 id="如上图所示，修改宝塔面板的密码，只需输入以下命令："><a href="#如上图所示，修改宝塔面板的密码，只需输入以下命令：" class="headerlink" title="如上图所示，修改宝塔面板的密码，只需输入以下命令："></a>如上图所示，修改宝塔面板的密码，只需输入以下命令：</h5></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bt</span> <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="这就是如何解决宝塔面板登录失败问题的解决方案了，希望能帮到您！"><a href="#这就是如何解决宝塔面板登录失败问题的解决方案了，希望能帮到您！" class="headerlink" title="这就是如何解决宝塔面板登录失败问题的解决方案了，希望能帮到您！"></a>这就是如何解决宝塔面板登录失败问题的解决方案了，希望能帮到您！</h5></li><li><h5 id="贴一下解决方案原文地址："><a href="#贴一下解决方案原文地址：" class="headerlink" title="贴一下解决方案原文地址："></a>贴一下解决方案原文地址：</h5></li><li><h5 id="云服务器如何获取宝塔面板登录地址和账号密码？-后浪云-idc-net"><a href="#云服务器如何获取宝塔面板登录地址和账号密码？-后浪云-idc-net" class="headerlink" title="云服务器如何获取宝塔面板登录地址和账号密码？-后浪云 (idc.net)"></a><a href="http://www.idc.net/newscontent/407.html">云服务器如何获取宝塔面板登录地址和账号密码？-后浪云 (idc.net)</a></h5></li></ul><h3 id="宝塔终端无法自动认证"><a href="#宝塔终端无法自动认证" class="headerlink" title="宝塔终端无法自动认证"></a>宝塔终端无法自动认证</h3><ul><li><h5 id="这也是个很常见的问题，之前有解决过，这次来写一下解决方案"><a href="#这也是个很常见的问题，之前有解决过，这次来写一下解决方案" class="headerlink" title="这也是个很常见的问题，之前有解决过，这次来写一下解决方案"></a>这也是个很常见的问题，之前有解决过，这次来写一下解决方案</h5></li><li><h5 id="当我们使用宝塔面板的终端时，可能会遇到这样的情况，如下图所示："><a href="#当我们使用宝塔面板的终端时，可能会遇到这样的情况，如下图所示：" class="headerlink" title="当我们使用宝塔面板的终端时，可能会遇到这样的情况，如下图所示："></a>当我们使用宝塔面板的终端时，可能会遇到这样的情况，如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230724144007680.png" alt="image-20230724144007680"></p><ul><li><h5 id="这是什么问题呢？我们说宝塔面板其实就是提供界面操作的-Linux-环境，能够更方便地管理配置和软件更新"><a href="#这是什么问题呢？我们说宝塔面板其实就是提供界面操作的-Linux-环境，能够更方便地管理配置和软件更新" class="headerlink" title="这是什么问题呢？我们说宝塔面板其实就是提供界面操作的 Linux 环境，能够更方便地管理配置和软件更新"></a>这是什么问题呢？我们说宝塔面板其实就是提供界面操作的 Linux 环境，能够更方便地管理配置和软件更新</h5></li><li><h5 id="那我们使用的宝塔面板，总归是远程连接到一台Linux服务器上的，这个问题的出现，说明现在连接失败了"><a href="#那我们使用的宝塔面板，总归是远程连接到一台Linux服务器上的，这个问题的出现，说明现在连接失败了" class="headerlink" title="那我们使用的宝塔面板，总归是远程连接到一台Linux服务器上的，这个问题的出现，说明现在连接失败了"></a>那我们使用的宝塔面板，总归是远程连接到一台Linux服务器上的，这个问题的出现，说明现在连接失败了</h5></li><li><h5 id="怎么解决呢？很简单，开启宝塔面板的-SSH-开关，使其正常连接到对应服务器："><a href="#怎么解决呢？很简单，开启宝塔面板的-SSH-开关，使其正常连接到对应服务器：" class="headerlink" title="怎么解决呢？很简单，开启宝塔面板的 SSH 开关，使其正常连接到对应服务器："></a>怎么解决呢？很简单，开启宝塔面板的 SSH 开关，使其正常连接到对应服务器：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230724144616806.png" alt="image-20230724144616806"></p><ul><li><h5 id="到这里，终端认证失败的问题就解决了："><a href="#到这里，终端认证失败的问题就解决了：" class="headerlink" title="到这里，终端认证失败的问题就解决了："></a>到这里，终端认证失败的问题就解决了：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230724144709675.png" alt="image-20230724144709675"></p><ul><li><h5 id="这里贴上原解决方案地址："><a href="#这里贴上原解决方案地址：" class="headerlink" title="这里贴上原解决方案地址："></a>这里贴上原解决方案地址：</h5></li><li><h5 id="82条消息-宝塔后台打开终端无法自动认证，一步解决问题-宝塔终端无法自动认证-唐南香榭ol的博客-CSDN博客"><a href="#82条消息-宝塔后台打开终端无法自动认证，一步解决问题-宝塔终端无法自动认证-唐南香榭ol的博客-CSDN博客" class="headerlink" title="(82条消息) 宝塔后台打开终端无法自动认证，一步解决问题_宝塔终端无法自动认证_唐南香榭ol的博客-CSDN博客"></a><a href="https://blog.csdn.net/zgyoumiao/article/details/124898052">(82条消息) 宝塔后台打开终端无法自动认证，一步解决问题_宝塔终端无法自动认证_唐南香榭ol的博客-CSDN博客</a></h5></li></ul><h3 id="宝塔安装配置MySQL"><a href="#宝塔安装配置MySQL" class="headerlink" title="宝塔安装配置MySQL"></a>宝塔安装配置MySQL</h3><ul><li><h5 id="今天从早到晚，花了整整一天时间，成功部署了伙伴匹配系统的后端，时间大多花在了MySQL和Redis的安装配置上了"><a href="#今天从早到晚，花了整整一天时间，成功部署了伙伴匹配系统的后端，时间大多花在了MySQL和Redis的安装配置上了" class="headerlink" title="今天从早到晚，花了整整一天时间，成功部署了伙伴匹配系统的后端，时间大多花在了MySQL和Redis的安装配置上了"></a>今天从早到晚，花了整整一天时间，成功部署了伙伴匹配系统的后端，时间大多花在了MySQL和Redis的安装配置上了</h5></li><li><h5 id="有关项目部署的详细流程，可以在《揭秘项目部署上线之路：流程、挑战与解决方案》一文中了解"><a href="#有关项目部署的详细流程，可以在《揭秘项目部署上线之路：流程、挑战与解决方案》一文中了解" class="headerlink" title="有关项目部署的详细流程，可以在《揭秘项目部署上线之路：流程、挑战与解决方案》一文中了解"></a>有关项目部署的详细流程，可以在《揭秘项目部署上线之路：流程、挑战与解决方案》一文中了解</h5></li><li><h5 id="宝塔面板安装MySQL是很简单的：在软件商店挑选安装对应版本的MySQL即可"><a href="#宝塔面板安装MySQL是很简单的：在软件商店挑选安装对应版本的MySQL即可" class="headerlink" title="宝塔面板安装MySQL是很简单的：在软件商店挑选安装对应版本的MySQL即可"></a>宝塔面板安装MySQL是很简单的：在软件商店挑选安装对应版本的MySQL即可</h5></li><li><h5 id="然后新建数据库："><a href="#然后新建数据库：" class="headerlink" title="然后新建数据库："></a>然后新建数据库：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725222303061.png" alt="image-20230725222303061"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725222507233.png" alt="image-20230725222507233"></p><ul><li><h5 id="注意这里新增数据库的选项：数据库名、用户名、密码、访问权限和所属服务器"><a href="#注意这里新增数据库的选项：数据库名、用户名、密码、访问权限和所属服务器" class="headerlink" title="注意这里新增数据库的选项：数据库名、用户名、密码、访问权限和所属服务器"></a>注意这里新增数据库的选项：数据库名、用户名、密码、访问权限和所属服务器</h5></li><li><h5 id="这里的所属服务器默认只能选本地服务器，即你所使用的这台计算机"><a href="#这里的所属服务器默认只能选本地服务器，即你所使用的这台计算机" class="headerlink" title="这里的所属服务器默认只能选本地服务器，即你所使用的这台计算机"></a>这里的所属服务器默认只能选本地服务器，即你所使用的这台计算机</h5></li><li><h5 id="那我希望将这个数据库添加至我的这台云服务器上，与项目配置保持一致，保证将来项目部署上线时的正常访问"><a href="#那我希望将这个数据库添加至我的这台云服务器上，与项目配置保持一致，保证将来项目部署上线时的正常访问" class="headerlink" title="那我希望将这个数据库添加至我的这台云服务器上，与项目配置保持一致，保证将来项目部署上线时的正常访问"></a>那我希望将这个数据库添加至我的这台云服务器上，与项目配置保持一致，保证将来项目部署上线时的正常访问</h5></li><li><h5 id="那我们开始着手添加远程服务器吧："><a href="#那我们开始着手添加远程服务器吧：" class="headerlink" title="那我们开始着手添加远程服务器吧："></a>那我们开始着手添加远程服务器吧：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725223340042.png" alt="image-20230725223340042"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725223447990.png" alt="image-20230725223447990"></p><ul><li><h5 id="注意这里的管理员名称和管理员密码，管理员名称默认是root，而密码是登录MySQL时使用的密码："><a href="#注意这里的管理员名称和管理员密码，管理员名称默认是root，而密码是登录MySQL时使用的密码：" class="headerlink" title="注意这里的管理员名称和管理员密码，管理员名称默认是root，而密码是登录MySQL时使用的密码："></a>注意这里的管理员名称和管理员密码，管理员名称默认是root，而密码是登录MySQL时使用的密码：</h5></li><li><h5 id="我们可以在这里查看和修改管理员密码："><a href="#我们可以在这里查看和修改管理员密码：" class="headerlink" title="我们可以在这里查看和修改管理员密码："></a>我们可以在这里查看和修改管理员密码：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725223657368.png" alt="image-20230725223657368"></p><ul><li><h5 id="就是在这里，我在云服务器和面板都开放了3306端口的前提下，添加远程服务器的时候，这玩意儿一直报错："><a href="#就是在这里，我在云服务器和面板都开放了3306端口的前提下，添加远程服务器的时候，这玩意儿一直报错：" class="headerlink" title="就是在这里，我在云服务器和面板都开放了3306端口的前提下，添加远程服务器的时候，这玩意儿一直报错："></a>就是在这里，我在云服务器和面板都开放了3306端口的前提下，添加远程服务器的时候，这玩意儿一直报错：</h5></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Access</span> denied <span class="hljs-keyword">for</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> (<span class="hljs-keyword">using</span> <span class="hljs-keyword">password</span>: YES)<br></code></pre></td></tr></table></figure><ul><li><h5 id="我上网查过很多相关资料，得到了最终解决方案："><a href="#我上网查过很多相关资料，得到了最终解决方案：" class="headerlink" title="我上网查过很多相关资料，得到了最终解决方案："></a>我上网查过很多相关资料，得到了最终解决方案：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725224215340.png" alt="image-20230725224215340"></p><ul><li><h5 id="上面是这个报错出现的原因，简单来说就是你输入的的用户名、密码无误，但全新安装的MySQL默认没有授予给任何用户登录权限"><a href="#上面是这个报错出现的原因，简单来说就是你输入的的用户名、密码无误，但全新安装的MySQL默认没有授予给任何用户登录权限" class="headerlink" title="上面是这个报错出现的原因，简单来说就是你输入的的用户名、密码无误，但全新安装的MySQL默认没有授予给任何用户登录权限"></a>上面是这个报错出现的原因，简单来说就是你输入的的用户名、密码无误，但全新安装的MySQL默认没有授予给任何用户登录权限</h5></li><li><h5 id="其实这个问题很常见，解决办法很简单，依次执行以下命令："><a href="#其实这个问题很常见，解决办法很简单，依次执行以下命令：" class="headerlink" title="其实这个问题很常见，解决办法很简单，依次执行以下命令："></a>其实这个问题很常见，解决办法很简单，依次执行以下命令：</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27; PASSWORD EXPIRE NEVER; #修改加密规则<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;; #更新一下用户的密码<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES; #刷新权限<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123fzw&#x27;; #重置密码<br></code></pre></td></tr></table></figure><ul><li><h5 id="这时，就可以顺利添加上远程服务器了"><a href="#这时，就可以顺利添加上远程服务器了" class="headerlink" title="这时，就可以顺利添加上远程服务器了"></a>这时，就可以顺利添加上远程服务器了</h5></li><li><h5 id="我们在本地使用-SQLyog-工具来尝试连接下该MySQL数据库："><a href="#我们在本地使用-SQLyog-工具来尝试连接下该MySQL数据库：" class="headerlink" title="我们在本地使用 SQLyog 工具来尝试连接下该MySQL数据库："></a>我们在本地使用 SQLyog 工具来尝试连接下该MySQL数据库：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725230240618.png" alt="image-20230725230240618"></p><ul><li><h5 id="这里就不用多讲了吧，填写正确的连接名、服务器地址、用户名、密码、端口号，尝试连接："><a href="#这里就不用多讲了吧，填写正确的连接名、服务器地址、用户名、密码、端口号，尝试连接：" class="headerlink" title="这里就不用多讲了吧，填写正确的连接名、服务器地址、用户名、密码、端口号，尝试连接："></a>这里就不用多讲了吧，填写正确的连接名、服务器地址、用户名、密码、端口号，尝试连接：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725230421085.png" alt="image-20230725230421085"></p><ul><li><h5 id="连接成功！至此，宝塔安装MySQL的全流程已经讲述完毕（2023-07-25晚）"><a href="#连接成功！至此，宝塔安装MySQL的全流程已经讲述完毕（2023-07-25晚）" class="headerlink" title="连接成功！至此，宝塔安装MySQL的全流程已经讲述完毕（2023/07/25晚）"></a>连接成功！至此，宝塔安装MySQL的全流程已经讲述完毕（2023/07/25晚）</h5></li></ul><h3 id="宝塔安装配置Redis"><a href="#宝塔安装配置Redis" class="headerlink" title="宝塔安装配置Redis"></a>宝塔安装配置Redis</h3><ul><li><h5 id="宝塔安装Redis也很简单，在软件商店里找到对应版本的Redis即可一键安装并成功启动"><a href="#宝塔安装Redis也很简单，在软件商店里找到对应版本的Redis即可一键安装并成功启动" class="headerlink" title="宝塔安装Redis也很简单，在软件商店里找到对应版本的Redis即可一键安装并成功启动"></a>宝塔安装Redis也很简单，在软件商店里找到对应版本的Redis即可一键安装并成功启动</h5></li><li><h5 id="我要讲述的是，在Java项目部署过程中，遇到的有关远程服务器Redis配置有误而造成的项目部署失败的问题"><a href="#我要讲述的是，在Java项目部署过程中，遇到的有关远程服务器Redis配置有误而造成的项目部署失败的问题" class="headerlink" title="我要讲述的是，在Java项目部署过程中，遇到的有关远程服务器Redis配置有误而造成的项目部署失败的问题"></a>我要讲述的是，在Java项目部署过程中，遇到的有关远程服务器Redis配置有误而造成的项目部署失败的问题</h5></li><li><h5 id="我在使用宝塔面板的网站服务多次部署Java项目无果后，尝试在终端手动部署，结果发现这样的报错："><a href="#我在使用宝塔面板的网站服务多次部署Java项目无果后，尝试在终端手动部署，结果发现这样的报错：" class="headerlink" title="我在使用宝塔面板的网站服务多次部署Java项目无果后，尝试在终端手动部署，结果发现这样的报错："></a>我在使用宝塔面板的网站服务多次部署Java项目无果后，尝试在终端手动部署，结果发现这样的报错：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725232807932.png" alt="image-20230725232807932"></p><ul><li><h5 id="这里给出项目中的Redis配置："><a href="#这里给出项目中的Redis配置：" class="headerlink" title="这里给出项目中的Redis配置："></a>这里给出项目中的Redis配置：</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># redis 配置</span><br><span class="hljs-attr">redis:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>  <span class="hljs-attr">host:</span> <span class="hljs-number">120.55</span><span class="hljs-number">.62</span><span class="hljs-number">.195</span><br>  <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="看报错信息确定，由于项目中的Redis配置根本不存在，导致Redis访问失败，项目跑不起来，那就在宝塔安装一个Redis就行了"><a href="#看报错信息确定，由于项目中的Redis配置根本不存在，导致Redis访问失败，项目跑不起来，那就在宝塔安装一个Redis就行了" class="headerlink" title="看报错信息确定，由于项目中的Redis配置根本不存在，导致Redis访问失败，项目跑不起来，那就在宝塔安装一个Redis就行了"></a>看报错信息确定，由于项目中的Redis配置根本不存在，导致Redis访问失败，项目跑不起来，那就在宝塔安装一个Redis就行了</h5></li><li><h5 id="在成功安装了-Redis-后，我尝试添加远程服务器："><a href="#在成功安装了-Redis-后，我尝试添加远程服务器：" class="headerlink" title="在成功安装了 Redis 后，我尝试添加远程服务器："></a>在成功安装了 Redis 后，我尝试添加远程服务器：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725231458585.png" alt="image-20230725231458585"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725231536404.png" alt="image-20230725231536404"></p><ul><li><h5 id="在输入正确的服务器地址、数据库端口和密码后，尝试连接，却提示这样的报错："><a href="#在输入正确的服务器地址、数据库端口和密码后，尝试连接，却提示这样的报错：" class="headerlink" title="在输入正确的服务器地址、数据库端口和密码后，尝试连接，却提示这样的报错："></a>在输入正确的服务器地址、数据库端口和密码后，尝试连接，却提示这样的报错：</h5></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[ERR] AUTH &lt;<span class="hljs-keyword">password</span>&gt; <span class="hljs-keyword">called</span> <span class="hljs-keyword">without</span> <span class="hljs-keyword">any</span> <span class="hljs-keyword">password</span> configured <span class="hljs-keyword">for</span> the <span class="hljs-keyword">default</span> <span class="hljs-keyword">user</span>. Are you sure your <span class="hljs-keyword">configuration</span> <span class="hljs-keyword">is</span> correct?<br></code></pre></td></tr></table></figure><ul><li><h5 id="什么意思呢？当然是全新安装的Redis默认是不设置连接密码的，而我正在尝试使用用户名、密码连接Redis"><a href="#什么意思呢？当然是全新安装的Redis默认是不设置连接密码的，而我正在尝试使用用户名、密码连接Redis" class="headerlink" title="什么意思呢？当然是全新安装的Redis默认是不设置连接密码的，而我正在尝试使用用户名、密码连接Redis"></a>什么意思呢？当然是全新安装的Redis默认是不设置连接密码的，而我正在尝试使用用户名、密码连接Redis</h5></li><li><h5 id="那就着手进行Redis的具体配置了："><a href="#那就着手进行Redis的具体配置了：" class="headerlink" title="那就着手进行Redis的具体配置了："></a>那就着手进行Redis的具体配置了：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725232027635.png" alt="image-20230725232027635"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725232127791.png" alt="image-20230725232127791"></p><ul><li><h5 id="如上图所示，配置可访问Redis的IP限制、绑定端口、设置密码等等，再进行添加远程服务器，成功添加"><a href="#如上图所示，配置可访问Redis的IP限制、绑定端口、设置密码等等，再进行添加远程服务器，成功添加" class="headerlink" title="如上图所示，配置可访问Redis的IP限制、绑定端口、设置密码等等，再进行添加远程服务器，成功添加"></a>如上图所示，配置可访问Redis的IP限制、绑定端口、设置密码等等，再进行添加远程服务器，成功添加</h5></li><li><h5 id="既然远程服务器配置完成了，此时在宝塔面板再次部署项目肯定会出错：因为我们设置了Redis连接密码，而项目中仍未配置"><a href="#既然远程服务器配置完成了，此时在宝塔面板再次部署项目肯定会出错：因为我们设置了Redis连接密码，而项目中仍未配置" class="headerlink" title="既然远程服务器配置完成了，此时在宝塔面板再次部署项目肯定会出错：因为我们设置了Redis连接密码，而项目中仍未配置"></a>既然远程服务器配置完成了，此时在宝塔面板再次部署项目肯定会出错：因为我们设置了Redis连接密码，而项目中仍未配置</h5></li><li><h5 id="那么回到项目源码中，配置-Redis-和-RedissonConfig："><a href="#那么回到项目源码中，配置-Redis-和-RedissonConfig：" class="headerlink" title="那么回到项目源码中，配置 Redis 和 RedissonConfig："></a>那么回到项目源码中，配置 Redis 和 RedissonConfig：</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># redis 配置</span><br><span class="hljs-attr">redis:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>  <span class="hljs-attr">host:</span> <span class="hljs-number">120.55</span><span class="hljs-number">.62</span><span class="hljs-number">.195</span><br>  <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>  <span class="hljs-attr">password:</span> <span class="hljs-string">Dw990831</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java">**<br> * <span class="hljs-meta">@author</span> 邓哈哈<br> * <span class="hljs-number">2023</span>/<span class="hljs-number">4</span>/<span class="hljs-number">18</span> <span class="hljs-number">20</span>:<span class="hljs-number">36</span><br> * Function: Redisson 配置<br> * Version <span class="hljs-number">1.0</span><br> */<br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.redis&quot;)</span><br><span class="hljs-meta">@Data</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedissionConfig</span> &#123;<br>    <span class="hljs-keyword">private</span> String host;<br><br>    <span class="hljs-keyword">private</span> String port;<br><br>    <span class="hljs-keyword">private</span> String password;<br><br>    <span class="hljs-keyword">private</span> Integer database;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedissonClient <span class="hljs-title function_">redissonClient</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 1. 创建配置</span><br>        <span class="hljs-type">Config</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Config</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">redisAddress</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;redis://%s:%s&quot;</span>, host, port);<br>        <span class="hljs-comment">//  使用单个Redis，没有开集群 useClusterServers()  设置地址和使用库</span><br>        config.useSingleServer().setAddress(redisAddress).setDatabase(database).setPassword(password);<br>        <span class="hljs-comment">// 2. 创建实例</span><br>        <span class="hljs-keyword">return</span> Redisson.create(config);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="再次打包项目，上传jar包，重新部署项目："><a href="#再次打包项目，上传jar包，重新部署项目：" class="headerlink" title="再次打包项目，上传jar包，重新部署项目："></a>再次打包项目，上传jar包，重新部署项目：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725233621645.png" alt="image-20230725233621645"></p><ul><li><h5 id="成功部署伙伴匹配系统后端！太感动了（2023-07-25晚）"><a href="#成功部署伙伴匹配系统后端！太感动了（2023-07-25晚）" class="headerlink" title="成功部署伙伴匹配系统后端！太感动了（2023/07/25晚）"></a>成功部署伙伴匹配系统后端！太感动了（2023/07/25晚）</h5></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p>总结宝塔面板的优势和便利性</p></li><li><p>分享自己使用宝塔面板的心得和体验，鼓励读者尝试和使用宝塔面板</p></li><li><p>强调宝塔面板的值得一试和使用，并希望读者能够从中获得便捷和高效的服务器管理体验</p></li><li><p>提供一些官方文档、社区资源等作为进一步参考</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝塔面板安装教程</title>
    <link href="/blog/2023/06/20/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/blog/2023/06/20/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="宝塔面板是一款基于-Web-的管理服务器的面板软件，它可以帮助用户方便地管理服务器的各种功能"><a href="#宝塔面板是一款基于-Web-的管理服务器的面板软件，它可以帮助用户方便地管理服务器的各种功能" class="headerlink" title="宝塔面板是一款基于 Web 的管理服务器的面板软件，它可以帮助用户方便地管理服务器的各种功能"></a>宝塔面板是一款基于 Web 的管理服务器的面板软件，它可以帮助用户方便地管理服务器的各种功能</h5></li><li><h5 id="本期我们讲解快速安装宝塔面板的两种方法："><a href="#本期我们讲解快速安装宝塔面板的两种方法：" class="headerlink" title="本期我们讲解快速安装宝塔面板的两种方法："></a>本期我们讲解快速安装宝塔面板的两种方法：</h5></li></ul><ol><li><h5 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h5></li><li><h5 id="云服务器安装"><a href="#云服务器安装" class="headerlink" title="云服务器安装"></a>云服务器安装</h5></li></ol><ul><li><h5 id="宝塔官网首页：宝塔面板-简单好用的Linux-Windows服务器运维管理面板-bt-cn"><a href="#宝塔官网首页：宝塔面板-简单好用的Linux-Windows服务器运维管理面板-bt-cn" class="headerlink" title="宝塔官网首页：宝塔面板 - 简单好用的Linux/Windows服务器运维管理面板 (bt.cn)"></a>宝塔官网首页：<a href="https://www.bt.cn/new/index.html">宝塔面板 - 简单好用的Linux/Windows服务器运维管理面板 (bt.cn)</a></h5></li><li><h5 id="宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn"><a href="#宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn" class="headerlink" title="宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件 (bt.cn)"></a>宝塔官网下载安装页：<a href="https://www.bt.cn/new/download.html">宝塔面板下载，免费全能的服务器运维软件 (bt.cn)</a></h5></li></ul><h1 id="本地安装-1"><a href="#本地安装-1" class="headerlink" title="本地安装"></a>本地安装</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li><h5 id="该方法是在你的本地Linux服务器上安装宝塔面板"><a href="#该方法是在你的本地Linux服务器上安装宝塔面板" class="headerlink" title="该方法是在你的本地Linux服务器上安装宝塔面板"></a>该方法是在你的本地Linux服务器上安装宝塔面板</h5></li><li><h5 id="【教程贴】如何登录您的Linux云服务器并安装宝塔面板-Linux面板-宝塔面板论坛-bt-cn"><a href="#【教程贴】如何登录您的Linux云服务器并安装宝塔面板-Linux面板-宝塔面板论坛-bt-cn" class="headerlink" title="【教程贴】如何登录您的Linux云服务器并安装宝塔面板 - Linux面板 - 宝塔面板论坛 (bt.cn)"></a><a href="https://www.bt.cn/bbs/thread-79460-1-1.html">【教程贴】如何登录您的Linux云服务器并安装宝塔面板 - Linux面板 - 宝塔面板论坛 (bt.cn)</a></h5></li><li><h5 id="这个教程中，第三部分就是本地-Linux-服务器如何安装宝塔面板"><a href="#这个教程中，第三部分就是本地-Linux-服务器如何安装宝塔面板" class="headerlink" title="这个教程中，第三部分就是本地 Linux 服务器如何安装宝塔面板"></a>这个教程中，第三部分就是本地 Linux 服务器如何安装宝塔面板</h5></li><li><h5 id="不同版本的-Linux-服务器使用不同的命令安装宝塔脚本，宝塔官网下载安装页下方也有介绍："><a href="#不同版本的-Linux-服务器使用不同的命令安装宝塔脚本，宝塔官网下载安装页下方也有介绍：" class="headerlink" title="不同版本的 Linux 服务器使用不同的命令安装宝塔脚本，宝塔官网下载安装页下方也有介绍："></a>不同版本的 Linux 服务器使用不同的命令安装宝塔脚本，宝塔官网下载安装页下方也有介绍：</h5></li><li><h5 id="宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn-1"><a href="#宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn-1" class="headerlink" title="宝塔官网下载安装页：宝塔面板下载，免费全能的服务器运维软件 (bt.cn)"></a>宝塔官网下载安装页：<a href="https://www.bt.cn/new/download.html">宝塔面板下载，免费全能的服务器运维软件 (bt.cn)</a></h5></li></ul><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><ul><li><h5 id="我们要有一台本地-Linux-服务器，这里我使用-VMware-虚拟机（CentOS-7）来演示："><a href="#我们要有一台本地-Linux-服务器，这里我使用-VMware-虚拟机（CentOS-7）来演示：" class="headerlink" title="我们要有一台本地 Linux 服务器，这里我使用 VMware 虚拟机（CentOS 7）来演示："></a>我们要有一台本地 Linux 服务器，这里我使用 VMware 虚拟机（CentOS 7）来演示：</h5></li><li><h5 id="登录Linux服务器-gt-执行以下命令-gt-静待5-10min即可"><a href="#登录Linux服务器-gt-执行以下命令-gt-静待5-10min即可" class="headerlink" title="登录Linux服务器 -&gt; 执行以下命令 -&gt; 静待5 - 10min即可"></a>登录Linux服务器 -&gt; 执行以下命令 -&gt; 静待5 - 10min即可</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">yum install -y wget &amp;&amp; wget -O install.sh https:<span class="hljs-comment">//download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="其他版本Linux安装宝塔脚本的命令如下"><a href="#其他版本Linux安装宝塔脚本的命令如下" class="headerlink" title="其他版本Linux安装宝塔脚本的命令如下"></a>其他版本Linux安装宝塔脚本的命令如下</h5></li><li><h5 id="以下命令也可以在宝塔下载安装页查看到：宝塔面板下载，免费全能的服务器运维软件-bt-cn-）"><a href="#以下命令也可以在宝塔下载安装页查看到：宝塔面板下载，免费全能的服务器运维软件-bt-cn-）" class="headerlink" title="以下命令也可以在宝塔下载安装页查看到：宝塔面板下载，免费全能的服务器运维软件 (bt.cn)）"></a>以下命令也可以在宝塔下载安装页查看到：<a href="https://www.bt.cn/new/download.html">宝塔面板下载，免费全能的服务器运维软件 (bt.cn)</a>）</h5></li><li><h5 id="Ubuntu-Deepin安装脚本"><a href="#Ubuntu-Deepin安装脚本" class="headerlink" title="Ubuntu/Deepin安装脚本"></a>Ubuntu/Deepin安装脚本</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">wget -O install.sh https:<span class="hljs-comment">//download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="Debian安装脚本"><a href="#Debian安装脚本" class="headerlink" title="Debian安装脚本"></a>Debian安装脚本</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">wget -O install.sh https:<span class="hljs-comment">//download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="万能安装脚本"><a href="#万能安装脚本" class="headerlink" title="万能安装脚本"></a>万能安装脚本</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> [ -f /usr/bin/curl ];then curl -sSO https:<span class="hljs-comment">//download.bt.cn/install/install_panel.sh;else wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;fi;bash install_panel.sh ed8484bec</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="执行结果如下图所示，宝塔面板安装成功："><a href="#执行结果如下图所示，宝塔面板安装成功：" class="headerlink" title="执行结果如下图所示，宝塔面板安装成功："></a>执行结果如下图所示，宝塔面板安装成功：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620200722850.png" alt="image-20230620200722850"></p><h1 id="云服务器安装-1"><a href="#云服务器安装-1" class="headerlink" title="云服务器安装"></a>云服务器安装</h1><ul><li><h5 id="首先我们要有一台云服务器，这里我使用阿里云服务器（CentOS-7）来演示："><a href="#首先我们要有一台云服务器，这里我使用阿里云服务器（CentOS-7）来演示：" class="headerlink" title="首先我们要有一台云服务器，这里我使用阿里云服务器（CentOS 7）来演示："></a>首先我们要有一台云服务器，这里我使用阿里云服务器（CentOS 7）来演示：</h5></li><li><h5 id="此时可以登录该服务器并安装宝塔面板，我们有两种方式："><a href="#此时可以登录该服务器并安装宝塔面板，我们有两种方式：" class="headerlink" title="此时可以登录该服务器并安装宝塔面板，我们有两种方式："></a>此时可以登录该服务器并安装宝塔面板，我们有两种方式：</h5></li></ul><ol><li><h5 id="宝塔终端登录"><a href="#宝塔终端登录" class="headerlink" title="宝塔终端登录"></a>宝塔终端登录</h5></li><li><h5 id="使用云服务器商家自带的终端登录"><a href="#使用云服务器商家自带的终端登录" class="headerlink" title="使用云服务器商家自带的终端登录"></a>使用云服务器商家自带的终端登录</h5></li></ol><ul><li><h5 id="仍然可以看这个教程：【教程贴】如何登录您的Linux云服务器并安装宝塔面板-Linux面板-宝塔面板论坛-bt-cn"><a href="#仍然可以看这个教程：【教程贴】如何登录您的Linux云服务器并安装宝塔面板-Linux面板-宝塔面板论坛-bt-cn" class="headerlink" title="仍然可以看这个教程：【教程贴】如何登录您的Linux云服务器并安装宝塔面板 - Linux面板 - 宝塔面板论坛 (bt.cn)"></a>仍然可以看这个教程：<a href="https://www.bt.cn/bbs/thread-79460-1-1.html">【教程贴】如何登录您的Linux云服务器并安装宝塔面板 - Linux面板 - 宝塔面板论坛 (bt.cn)</a></h5></li></ul><h2 id="宝塔终端登录-1"><a href="#宝塔终端登录-1" class="headerlink" title="宝塔终端登录"></a>宝塔终端登录</h2><ul><li><h5 id="宝塔官方下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn"><a href="#宝塔官方下载安装页：宝塔面板下载，免费全能的服务器运维软件-bt-cn" class="headerlink" title="宝塔官方下载安装页：宝塔面板下载，免费全能的服务器运维软件 (bt.cn)"></a>宝塔官方下载安装页：<a href="https://www.bt.cn/new/download.html">宝塔面板下载，免费全能的服务器运维软件 (bt.cn)</a></h5></li><li><h5 id="在Linux面板8-0-0在线安装下，正确填写服务器IP和密码即可在对应服务器快速安装宝塔面板"><a href="#在Linux面板8-0-0在线安装下，正确填写服务器IP和密码即可在对应服务器快速安装宝塔面板" class="headerlink" title="在Linux面板8.0.0在线安装下，正确填写服务器IP和密码即可在对应服务器快速安装宝塔面板"></a>在Linux面板8.0.0在线安装下，正确填写服务器IP和密码即可在对应服务器快速安装宝塔面板</h5></li></ul><hr><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620203558332.png" alt="image-20230620203558332" style="zoom: 67%;" /><hr><ul><li><h5 id="上述操作成功后，静待5-10min，如下图所示，宝塔面板安装成功"><a href="#上述操作成功后，静待5-10min，如下图所示，宝塔面板安装成功" class="headerlink" title="上述操作成功后，静待5 - 10min，如下图所示，宝塔面板安装成功"></a>上述操作成功后，静待5 - 10min，如下图所示，宝塔面板安装成功</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620201106576.png" alt="image-20230620201106576" style="zoom: 67%;" /><hr><h2 id="使用云服务器商家自带的终端登录-1"><a href="#使用云服务器商家自带的终端登录-1" class="headerlink" title="使用云服务器商家自带的终端登录"></a>使用云服务器商家自带的终端登录</h2><ul><li><h5 id="远程登录云服务器，使用Workbench方式或VNC方式远程连接至服务器"><a href="#远程登录云服务器，使用Workbench方式或VNC方式远程连接至服务器" class="headerlink" title="远程登录云服务器，使用Workbench方式或VNC方式远程连接至服务器"></a>远程登录云服务器，使用Workbench方式或VNC方式远程连接至服务器</h5></li><li><h5 id="如何远程连接云服务器，以及解决可能会遇到的问题，请移步至文章：《云服务器远程连接指南：各种方法详解与问题解决》"><a href="#如何远程连接云服务器，以及解决可能会遇到的问题，请移步至文章：《云服务器远程连接指南：各种方法详解与问题解决》" class="headerlink" title="如何远程连接云服务器，以及解决可能会遇到的问题，请移步至文章：《云服务器远程连接指南：各种方法详解与问题解决》"></a>如何远程连接云服务器，以及解决可能会遇到的问题，请移步至文章：《云服务器远程连接指南：各种方法详解与问题解决》</h5></li><li><h5 id="根据不同版本的Linux云服务器版本，选择合适的命令来执行安装宝塔面板，其余操作均本地安装无异"><a href="#根据不同版本的Linux云服务器版本，选择合适的命令来执行安装宝塔面板，其余操作均本地安装无异" class="headerlink" title="根据不同版本的Linux云服务器版本，选择合适的命令来执行安装宝塔面板，其余操作均本地安装无异"></a>根据不同版本的Linux云服务器版本，选择合适的命令来执行安装宝塔面板，其余操作均本地安装无异</h5></li><li><h5 id="注意：这两种方式都是用来连接云服务器的，二选一即可。否则后者会覆盖前者，覆盖包括宝塔面板用户名、密码，面板内部安装的软件也可能会丢失，发生意想不到的错误。这一点，在宝塔官网下载安装页的-在线连接Linux服务器-中也提到了"><a href="#注意：这两种方式都是用来连接云服务器的，二选一即可。否则后者会覆盖前者，覆盖包括宝塔面板用户名、密码，面板内部安装的软件也可能会丢失，发生意想不到的错误。这一点，在宝塔官网下载安装页的-在线连接Linux服务器-中也提到了" class="headerlink" title="注意：这两种方式都是用来连接云服务器的，二选一即可。否则后者会覆盖前者，覆盖包括宝塔面板用户名、密码，面板内部安装的软件也可能会丢失，发生意想不到的错误。这一点，在宝塔官网下载安装页的 在线连接Linux服务器 中也提到了"></a>注意：这两种方式都是用来连接云服务器的，二选一即可。否则后者会覆盖前者，覆盖包括宝塔面板用户名、密码，面板内部安装的软件也可能会丢失，发生意想不到的错误。这一点，在宝塔官网下载安装页的 在线连接Linux服务器 中也提到了</h5></li></ul><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ul><li><h5 id="至此，宝塔面板的快速安装教程已经完结，在拿到面板地址、用户名和密码并成功登录后，我们就要学习了解宝塔面板的具体使用，体会宝塔Linux面板带给开发者的便捷"><a href="#至此，宝塔面板的快速安装教程已经完结，在拿到面板地址、用户名和密码并成功登录后，我们就要学习了解宝塔面板的具体使用，体会宝塔Linux面板带给开发者的便捷" class="headerlink" title="至此，宝塔面板的快速安装教程已经完结，在拿到面板地址、用户名和密码并成功登录后，我们就要学习了解宝塔面板的具体使用，体会宝塔Linux面板带给开发者的便捷"></a>至此，宝塔面板的快速安装教程已经完结，在拿到面板地址、用户名和密码并成功登录后，我们就要学习了解宝塔面板的具体使用，体会宝塔Linux面板带给开发者的便捷</h5></li><li><h5 id="如果想要进一步学习使用宝塔面板，请移步至文章：《宝塔面板：解放手动配置，轻松管理你的服务器》"><a href="#如果想要进一步学习使用宝塔面板，请移步至文章：《宝塔面板：解放手动配置，轻松管理你的服务器》" class="headerlink" title="如果想要进一步学习使用宝塔面板，请移步至文章：《宝塔面板：解放手动配置，轻松管理你的服务器》"></a>如果想要进一步学习使用宝塔面板，请移步至文章：《宝塔面板：解放手动配置，轻松管理你的服务器》</h5></li><li><h5 id="本文中提到的其他文章也会尽快发布"><a href="#本文中提到的其他文章也会尽快发布" class="headerlink" title="本文中提到的其他文章也会尽快发布"></a>本文中提到的其他文章也会尽快发布</h5></li><li><h5 id="非常感谢你能够看到这里，希望本文能帮到您，您的支持是对我最大的鼓励！"><a href="#非常感谢你能够看到这里，希望本文能帮到您，您的支持是对我最大的鼓励！" class="headerlink" title="非常感谢你能够看到这里，希望本文能帮到您，您的支持是对我最大的鼓励！"></a>非常感谢你能够看到这里，希望本文能帮到您，您的支持是对我最大的鼓励！</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云服务器远程连接指南：各种方法详解与问题解决</title>
    <link href="/blog/2023/06/20/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97%EF%BC%9A%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <url>/blog/2023/06/20/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97%EF%BC%9A%E5%90%84%E7%A7%8D%E6%96%B9%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><ul><li><p><a href="https://www.bilibili.com/video/BV1724y1o7ih/?spm_id_from=333.999.0.0&vd_source=4314e5bd742ea904c9675af8a6b4b07e">被问爆的！远程连接登录云服务器的方式汇总（包括Windows和Linux系统）_哔哩哔哩_bilibili</a></p></li><li><p>简要介绍云服务器和远程连接的重要性</p></li><li><p>提出本文要解决的问题和目标</p></li></ul><h1 id="概述云服务器远程连接的基本概念和常用方法"><a href="#概述云服务器远程连接的基本概念和常用方法" class="headerlink" title="概述云服务器远程连接的基本概念和常用方法"></a>概述云服务器远程连接的基本概念和常用方法</h1><ul><li>解释什么是远程连接，为什么需要使用云服务器</li><li>介绍SSH、RDP和VNC等常用的远程连接协议</li></ul><h1 id="阐述远程连接云服务器的准备工作"><a href="#阐述远程连接云服务器的准备工作" class="headerlink" title="阐述远程连接云服务器的准备工作"></a>阐述远程连接云服务器的准备工作</h1><ul><li>选择适合自己的云服务提供商和服务器配置</li><li>购买服务器并设置基本的网络和安全设置</li><li>下载和安装远程连接客户端工具</li></ul><h1 id="讲述自己踩过的坑和解决的问题"><a href="#讲述自己踩过的坑和解决的问题" class="headerlink" title="讲述自己踩过的坑和解决的问题"></a>讲述自己踩过的坑和解决的问题</h1><h2 id="绑定密钥对导致SSH服务异常"><a href="#绑定密钥对导致SSH服务异常" class="headerlink" title="绑定密钥对导致SSH服务异常"></a>绑定密钥对导致SSH服务异常</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><ul><li><h5 id="为了更加保障远程连接服务器地安全性，我为阿里云实例绑定了密钥对"><a href="#为了更加保障远程连接服务器地安全性，我为阿里云实例绑定了密钥对" class="headerlink" title="为了更加保障远程连接服务器地安全性，我为阿里云实例绑定了密钥对"></a>为了更加保障远程连接服务器地安全性，我为阿里云实例绑定了密钥对</h5></li><li><h5 id="但在绑定密匙对之后，出现了以下问题："><a href="#但在绑定密匙对之后，出现了以下问题：" class="headerlink" title="但在绑定密匙对之后，出现了以下问题："></a>但在绑定密匙对之后，出现了以下问题：</h5></li><li><h5 id="在使用宝塔面板的终端远程连接云服务器时，始终显示：无法自动认证，请填写本地服务器的登录信息！"><a href="#在使用宝塔面板的终端远程连接云服务器时，始终显示：无法自动认证，请填写本地服务器的登录信息！" class="headerlink" title="在使用宝塔面板的终端远程连接云服务器时，始终显示：无法自动认证，请填写本地服务器的登录信息！"></a>在使用宝塔面板的终端远程连接云服务器时，始终显示：无法自动认证，请填写本地服务器的登录信息！</h5></li><li><h5 id="如下图所示："><a href="#如下图所示：" class="headerlink" title="如下图所示："></a>如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627001126253.png" alt="image-20230627001126253"></p><ul><li><h5 id="这是一个很常见的错误，在此我对这种问题表明我的见解：（2023-06-26晚）"><a href="#这是一个很常见的错误，在此我对这种问题表明我的见解：（2023-06-26晚）" class="headerlink" title="这是一个很常见的错误，在此我对这种问题表明我的见解：（2023/06/26晚）"></a>这是一个很常见的错误，在此我对这种问题表明我的见解：（2023/06/26晚）</h5></li></ul><h3 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h3><ul><li><h5 id="首先排查宝塔面板的问题所在，即检查宝塔面板是否开启SSH服务，是否允许使用SSH密码、SSH密钥登录："><a href="#首先排查宝塔面板的问题所在，即检查宝塔面板是否开启SSH服务，是否允许使用SSH密码、SSH密钥登录：" class="headerlink" title="首先排查宝塔面板的问题所在，即检查宝塔面板是否开启SSH服务，是否允许使用SSH密码、SSH密钥登录："></a>首先排查宝塔面板的问题所在，即检查宝塔面板是否开启SSH服务，是否允许使用SSH密码、SSH密钥登录：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627001649533.png" alt="image-20230627001649533"></p><ul><li><h5 id="同时检查宝塔面板是否开放了SSH服务端口（默认端口号为22）："><a href="#同时检查宝塔面板是否开放了SSH服务端口（默认端口号为22）：" class="headerlink" title="同时检查宝塔面板是否开放了SSH服务端口（默认端口号为22）："></a>同时检查宝塔面板是否开放了SSH服务端口（默认端口号为22）：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627001839451.png" alt="image-20230627001839451"></p><ul><li><h5 id="到这里，基本排除了宝塔面板本身的配置错误，即连接服务器失败，是由于服务器本身的SSH服务配置有误，或者相关端口未开放"><a href="#到这里，基本排除了宝塔面板本身的配置错误，即连接服务器失败，是由于服务器本身的SSH服务配置有误，或者相关端口未开放" class="headerlink" title="到这里，基本排除了宝塔面板本身的配置错误，即连接服务器失败，是由于服务器本身的SSH服务配置有误，或者相关端口未开放"></a>到这里，基本排除了宝塔面板本身的配置错误，即连接服务器失败，是由于服务器本身的SSH服务配置有误，或者相关端口未开放</h5></li><li><h5 id="总之，问题出在服务器上"><a href="#总之，问题出在服务器上" class="headerlink" title="总之，问题出在服务器上"></a>总之，问题出在服务器上</h5></li><li><h5 id="服务器（阿里云服务器）SSH服务开启-重启失败，如此常见的问题，我苦苦找寻了两天却始终未能解决"><a href="#服务器（阿里云服务器）SSH服务开启-重启失败，如此常见的问题，我苦苦找寻了两天却始终未能解决" class="headerlink" title="服务器（阿里云服务器）SSH服务开启/重启失败，如此常见的问题，我苦苦找寻了两天却始终未能解决"></a>服务器（阿里云服务器）SSH服务开启/重启失败，如此常见的问题，我苦苦找寻了两天却始终未能解决</h5></li><li><h5 id="通过自主问题排查发现的问题："><a href="#通过自主问题排查发现的问题：" class="headerlink" title="通过自主问题排查发现的问题："></a>通过自主问题排查发现的问题：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627075618714.png"></p><ul><li><h5 id="终端报错情况："><a href="#终端报错情况：" class="headerlink" title="终端报错情况："></a>终端报错情况：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627080006664.png" alt="image-20230627080006664"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230625100319214.png" alt="image-20230625100319214"></p><ul><li><h5 id="但会是什么问题呢？有太多因素了，网上有令人眼花缭乱的解决方案，甚至阿里云官方有关SSH服务开启失败的解决办法，我都一一尝试过，甚至向智能AI描述问题寻求帮助，均无果"><a href="#但会是什么问题呢？有太多因素了，网上有令人眼花缭乱的解决方案，甚至阿里云官方有关SSH服务开启失败的解决办法，我都一一尝试过，甚至向智能AI描述问题寻求帮助，均无果" class="headerlink" title="但会是什么问题呢？有太多因素了，网上有令人眼花缭乱的解决方案，甚至阿里云官方有关SSH服务开启失败的解决办法，我都一一尝试过，甚至向智能AI描述问题寻求帮助，均无果"></a>但会是什么问题呢？有太多因素了，网上有令人眼花缭乱的解决方案，甚至阿里云官方有关SSH服务开启失败的解决办法，我都一一尝试过，甚至向智能AI描述问题寻求帮助，均无果</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627080305569.png" alt="image-20230627080305569"></p><ul><li><h5 id="在此给出我尝试过的一些解决方案吧，虽然没有解决问题，但很受用，让我更加深入了解到了SSH服务的相关配置"><a href="#在此给出我尝试过的一些解决方案吧，虽然没有解决问题，但很受用，让我更加深入了解到了SSH服务的相关配置" class="headerlink" title="在此给出我尝试过的一些解决方案吧，虽然没有解决问题，但很受用，让我更加深入了解到了SSH服务的相关配置"></a>在此给出我尝试过的一些解决方案吧，虽然没有解决问题，但很受用，让我更加深入了解到了SSH服务的相关配置</h5></li><li><p><a href="https://blog.csdn.net/m0_59325389/article/details/125636109">(68条消息) 宝塔 无法自动认证，请填写本地服务器的登录信息！_宝塔面板无法自动认证,请填写本地服务器的登录信息!_m0_59325389的博客-CSDN博客</a></p></li><li><p><a href="https://huaweicloud.csdn.net/63564525d3efff3090b5d06e.html">宝塔 无法自动认证，请填写本地服务器的登录信息_ssh_a1161105403-DevPress官方社区 (csdn.net)</a></p></li><li><p><a href="https://blog.csdn.net/qq_54529249/article/details/128942510">(68条消息) 【【宝塔】无法自动认证，请填写本地服务器的登录信息！】_宝塔面板无法自动认证,请填写本地服务器的登录信息!_qq_54529249的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/znn123456n/article/details/125611921">(68条消息) sshd无法启动_sshd服务启动不了_好学的小白的博客-CSDN博客</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/59779466">宝塔连接SSH提示 ssh服务连接失败 解决办法 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://www.jianshu.com/p/a5f9e900136a">日常错误积累-01-ssh重启报错或者无法重启-Failed to restart ssh.service: Unit not found - 简书 (jianshu.com)</a></p></li><li><p><a href="https://blog.csdn.net/weixin_39589455/article/details/127937248">(68条消息) 【服务器】无法进行ssh连接的问题逐一排查以及解决方法_ssh连接不上服务器_别出BUG求求了的博客-CSDN博客</a></p></li><li><p><a href="http://www.hongyanliren.com/2022m04/41058.html">Centos7 卸载并重装SSH服务的方法与命令 | 红颜丽人 (hongyanliren.com)</a></p></li><li><p><a href="https://blog.csdn.net/qq_33803102/article/details/123040988">(68条消息) Centos 卸载重装SSH服务_centos卸载ssh_灼烧的疯狂的博客-CSDN博客</a></p></li></ul><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul><li><h5 id="终于，我在执行了下面这条命令之后，注意到了这样的报错信息："><a href="#终于，我在执行了下面这条命令之后，注意到了这样的报错信息：" class="headerlink" title="终于，我在执行了下面这条命令之后，注意到了这样的报错信息："></a>终于，我在执行了下面这条命令之后，注意到了这样的报错信息：</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/sbin/</span>sshd -d<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230626120841860.png" alt="image-20230626120841860"></p><ul><li><h5 id="那这条命令什么意思呢？很简单，就是以调试模式运行SSH服务，出错了"><a href="#那这条命令什么意思呢？很简单，就是以调试模式运行SSH服务，出错了" class="headerlink" title="那这条命令什么意思呢？很简单，就是以调试模式运行SSH服务，出错了"></a>那这条命令什么意思呢？很简单，就是以调试模式运行SSH服务，出错了</h5></li><li><h5 id="详细了解相关内容可以看这篇博客：-68条消息-Linux-命令（207）——-sshd-命令-恋喵大鲤鱼的博客-CSDN博客"><a href="#详细了解相关内容可以看这篇博客：-68条消息-Linux-命令（207）——-sshd-命令-恋喵大鲤鱼的博客-CSDN博客" class="headerlink" title="详细了解相关内容可以看这篇博客：(68条消息) Linux 命令（207）—— sshd 命令_恋喵大鲤鱼的博客-CSDN博客"></a>详细了解相关内容可以看这篇博客：<a href="https://blog.csdn.net/K346K346/article/details/128162727">(68条消息) Linux 命令（207）—— sshd 命令_恋喵大鲤鱼的博客-CSDN博客</a></h5></li><li><h5 id="观察报错信息，我明白了问题所在，执行了以下这条命令："><a href="#观察报错信息，我明白了问题所在，执行了以下这条命令：" class="headerlink" title="观察报错信息，我明白了问题所在，执行了以下这条命令："></a>观察报错信息，我明白了问题所在，执行了以下这条命令：</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chmod <span class="hljs-number">600</span> <span class="hljs-regexp">/etc/</span>ssh/ssh_host_ed25519_key<br></code></pre></td></tr></table></figure><ul><li><h5 id="详细解决方法可以参考这篇博客：-67条消息-Permissions-0777-for-‘-’-are-too-open-Dcatfly的博客-CSDN博客"><a href="#详细解决方法可以参考这篇博客：-67条消息-Permissions-0777-for-‘-’-are-too-open-Dcatfly的博客-CSDN博客" class="headerlink" title="详细解决方法可以参考这篇博客：(67条消息) Permissions 0777 for ‘***’ are too open._Dcatfly的博客-CSDN博客"></a>详细解决方法可以参考这篇博客：<a href="https://blog.csdn.net/dcatfly/article/details/75201180">(67条消息) Permissions 0777 for ‘***’ are too open._Dcatfly的博客-CSDN博客</a></h5></li><li><h5 id="这时再次尝试重启SSH服务，并查看SSH服务状态，发现启动正常了："><a href="#这时再次尝试重启SSH服务，并查看SSH服务状态，发现启动正常了：" class="headerlink" title="这时再次尝试重启SSH服务，并查看SSH服务状态，发现启动正常了："></a>这时再次尝试重启SSH服务，并查看SSH服务状态，发现启动正常了：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230627081916016.png" alt="image-20230627081916016"></p><ul><li><h5 id="那这究竟是怎么一回事呢？以下是我的理解："><a href="#那这究竟是怎么一回事呢？以下是我的理解：" class="headerlink" title="那这究竟是怎么一回事呢？以下是我的理解："></a>那这究竟是怎么一回事呢？以下是我的理解：</h5></li></ul><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><ul><li><h5 id="我们在生成密钥对后，公钥被投送至服务端，私钥则保存在我们自己的文件目录下"><a href="#我们在生成密钥对后，公钥被投送至服务端，私钥则保存在我们自己的文件目录下" class="headerlink" title="我们在生成密钥对后，公钥被投送至服务端，私钥则保存在我们自己的文件目录下"></a>我们在生成密钥对后，公钥被投送至服务端，私钥则保存在我们自己的文件目录下</h5></li><li><h5 id="这样，将来SSH远程连接服务器时，除了使用用户名、密码登陆外，还可以使用私钥登录"><a href="#这样，将来SSH远程连接服务器时，除了使用用户名、密码登陆外，还可以使用私钥登录" class="headerlink" title="这样，将来SSH远程连接服务器时，除了使用用户名、密码登陆外，还可以使用私钥登录"></a>这样，将来SSH远程连接服务器时，除了使用用户名、密码登陆外，还可以使用私钥登录</h5></li><li><h5 id="如上图所示，-etc-ssh-ssh-host-ed25519-key目录下保存的便是私钥，而给该文件设置的默认读写权限0777过于开放"><a href="#如上图所示，-etc-ssh-ssh-host-ed25519-key目录下保存的便是私钥，而给该文件设置的默认读写权限0777过于开放" class="headerlink" title="如上图所示， /etc/ssh/ssh_host_ed25519_key目录下保存的便是私钥，而给该文件设置的默认读写权限0777过于开放"></a>如上图所示， /etc/ssh/ssh_host_ed25519_key目录下保存的便是私钥，而给该文件设置的默认读写权限0777过于开放</h5></li><li><h5 id="0777是一种非常宽松的权限设置，可能会带来安全风险，因为任何人都可以访问和修改该文件或目录，不符合相关要求，所以SSH服务连接失败"><a href="#0777是一种非常宽松的权限设置，可能会带来安全风险，因为任何人都可以访问和修改该文件或目录，不符合相关要求，所以SSH服务连接失败" class="headerlink" title="0777是一种非常宽松的权限设置，可能会带来安全风险，因为任何人都可以访问和修改该文件或目录，不符合相关要求，所以SSH服务连接失败"></a>0777是一种非常宽松的权限设置，可能会带来安全风险，因为任何人都可以访问和修改该文件或目录，不符合相关要求，所以SSH服务连接失败</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">权限设置为0777，意味着所有者、所有者所属组和其他用户都具有读取（第一个7）、写入（第二个7）和执行（第三个7）的权限。这是一种非常宽松的权限设置，可能会带来安全风险，因为任何人都可以访问和修改该文件或目录。<br></code></pre></td></tr></table></figure><ul><li><h5 id="所以要对该密钥文件的权限设置为600，这是一种相对严格的权限设置，限制对文件的访问权限"><a href="#所以要对该密钥文件的权限设置为600，这是一种相对严格的权限设置，限制对文件的访问权限" class="headerlink" title="所以要对该密钥文件的权限设置为600，这是一种相对严格的权限设置，限制对文件的访问权限"></a>所以要对该密钥文件的权限设置为600，这是一种相对严格的权限设置，限制对文件的访问权限</h5></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">600</span>权限是一种相对严格的权限设置，它可以用于限制对文件的访问权限。具体权限设置为<span class="hljs-number">600</span>表示只有文件的所有者拥有读取和写入的权限，而所有者所属组和其他用户没有任何权限。<br></code></pre></td></tr></table></figure><ul><li><h5 id="有关Linux中基本权限的介绍，可以参考下这几篇博客："><a href="#有关Linux中基本权限的介绍，可以参考下这几篇博客：" class="headerlink" title="有关Linux中基本权限的介绍，可以参考下这几篇博客："></a>有关Linux中基本权限的介绍，可以参考下这几篇博客：</h5></li><li><h5 id="70条消息-【Linux】基本权限-小赵还有头发的博客-CSDN博客"><a href="#70条消息-【Linux】基本权限-小赵还有头发的博客-CSDN博客" class="headerlink" title="(70条消息) 【Linux】基本权限_小赵还有头发的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_70411664/article/details/131014353">(70条消息) 【Linux】基本权限_小赵还有头发的博客-CSDN博客</a></h5></li><li><h5 id="70条消息-Linux之权限-别动我的饭的博客-CSDN博客"><a href="#70条消息-Linux之权限-别动我的饭的博客-CSDN博客" class="headerlink" title="(70条消息) Linux之权限_别动我的饭的博客-CSDN博客"></a><a href="https://blog.csdn.net/m0_62633482/article/details/128746807">(70条消息) Linux之权限_别动我的饭的博客-CSDN博客</a></h5></li><li><h5 id="这就是由于实例绑定密钥对后，引发的SSH服务连接异常及解决方法"><a href="#这就是由于实例绑定密钥对后，引发的SSH服务连接异常及解决方法" class="headerlink" title="这就是由于实例绑定密钥对后，引发的SSH服务连接异常及解决方法"></a>这就是由于实例绑定密钥对后，引发的SSH服务连接异常及解决方法</h5></li><li><h5 id="在这里附上SSH服务相关配置的介绍，更加了解到SSH服务配置文件的结构以及各个配置文件的作用"><a href="#在这里附上SSH服务相关配置的介绍，更加了解到SSH服务配置文件的结构以及各个配置文件的作用" class="headerlink" title="在这里附上SSH服务相关配置的介绍，更加了解到SSH服务配置文件的结构以及各个配置文件的作用"></a>在这里附上SSH服务相关配置的介绍，更加了解到SSH服务配置文件的结构以及各个配置文件的作用</h5></li><li><h5 id="67条消息-SSH服务3——配置文件篇-usr-sbin-sshd-d-九龍小天赐的博客-CSDN博客"><a href="#67条消息-SSH服务3——配置文件篇-usr-sbin-sshd-d-九龍小天赐的博客-CSDN博客" class="headerlink" title="(67条消息) SSH服务3——配置文件篇_/usr/sbin/sshd -d_九龍小天赐的博客-CSDN博客"></a><a href="https://blog.csdn.net/frank_ci/article/details/108755861">(67条消息) SSH服务3——配置文件篇_/usr/sbin/sshd -d_九龍小天赐的博客-CSDN博客</a></h5></li><li><h5 id="67条消息-【安全知识】——SSH的两种远程登录方法详解-ssh登录-白昼安全的博客-CSDN博客"><a href="#67条消息-【安全知识】——SSH的两种远程登录方法详解-ssh登录-白昼安全的博客-CSDN博客" class="headerlink" title="(67条消息) 【安全知识】——SSH的两种远程登录方法详解_ssh登录_白昼安全的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_63844103/article/details/127394389?ops_request_misc=%7B%22request_id%22:%22168773931116800182191413%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=168773931116800182191413&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-14-127394389-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(67条消息) 【安全知识】——SSH的两种远程登录方法详解_ssh登录_白昼安全的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH简介及两种远程登录的方法-ssh-Jack-LDZ的博客-CSDN博客"><a href="#68条消息-SSH简介及两种远程登录的方法-ssh-Jack-LDZ的博客-CSDN博客" class="headerlink" title="(68条消息) SSH简介及两种远程登录的方法_ssh @_Jack LDZ的博客-CSDN博客"></a><a href="https://blog.csdn.net/li528405176/article/details/82810342?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82810342-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH简介及两种远程登录的方法_ssh @_Jack LDZ的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH-详解（实践及应用）-再见丶孙悟空的博客-CSDN博客"><a href="#68条消息-SSH-详解（实践及应用）-再见丶孙悟空的博客-CSDN博客" class="headerlink" title="(68条消息) SSH 详解（实践及应用）_再见丶孙悟空的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_38150250/article/details/119835992?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-119835992-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH 详解（实践及应用）_再见丶孙悟空的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-ssh服务介绍-weixin-30858241的博客-CSDN博客"><a href="#68条消息-ssh服务介绍-weixin-30858241的博客-CSDN博客" class="headerlink" title="(68条消息) ssh服务介绍_weixin_30858241的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_30858241/article/details/97346942?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-97346942-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) ssh服务介绍_weixin_30858241的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH服务详解-敬申火的博客-CSDN博客"><a href="#68条消息-SSH服务详解-敬申火的博客-CSDN博客" class="headerlink" title="(68条消息) SSH服务详解_敬申火的博客-CSDN博客"></a><a href="https://blog.csdn.net/shuju1_/article/details/126146949?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-5-126146949-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH服务详解_敬申火的博客-CSDN博客</a></h5></li><li><h5 id="非常感谢您能够看到这里，希望我的踩坑经历对您有所帮助！"><a href="#非常感谢您能够看到这里，希望我的踩坑经历对您有所帮助！" class="headerlink" title="非常感谢您能够看到这里，希望我的踩坑经历对您有所帮助！"></a>非常感谢您能够看到这里，希望我的踩坑经历对您有所帮助！</h5></li></ul><h2 id="Workbench远程连接云服务器失败"><a href="#Workbench远程连接云服务器失败" class="headerlink" title="Workbench远程连接云服务器失败"></a>Workbench远程连接云服务器失败</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><h5 id="这是个很顽固的问题了，好多次我拿Workbench远程连接时，总会报各种错误，总之就是连接失败"><a href="#这是个很顽固的问题了，好多次我拿Workbench远程连接时，总会报各种错误，总之就是连接失败" class="headerlink" title="这是个很顽固的问题了，好多次我拿Workbench远程连接时，总会报各种错误，总之就是连接失败"></a>这是个很顽固的问题了，好多次我拿Workbench远程连接时，总会报各种错误，总之就是连接失败</h5></li><li><h5 id="这些连接失败的原因不同，解决方法各异，接下来我们一一介绍：（2023-07-18晚）"><a href="#这些连接失败的原因不同，解决方法各异，接下来我们一一介绍：（2023-07-18晚）" class="headerlink" title="这些连接失败的原因不同，解决方法各异，接下来我们一一介绍：（2023/07/18晚）"></a>这些连接失败的原因不同，解决方法各异，接下来我们一一介绍：（2023/07/18晚）</h5></li></ul><h3 id="Linux实例未开启root用户远程登录"><a href="#Linux实例未开启root用户远程登录" class="headerlink" title="Linux实例未开启root用户远程登录"></a>Linux实例未开启root用户远程登录</h3><ul><li><h5 id="我们在使用Workbench远程连接服务器时，一般采用密码认证的方式👇，如下图所示："><a href="#我们在使用Workbench远程连接服务器时，一般采用密码认证的方式👇，如下图所示：" class="headerlink" title="我们在使用Workbench远程连接服务器时，一般采用密码认证的方式👇，如下图所示："></a>我们在使用Workbench远程连接服务器时，一般采用密码认证的方式👇，如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230718233656272.png" alt="image-20230718233656272"></p><ul><li><h5 id="在用户名和密码都输入正确的前提下，你可能会经历这样的报错："><a href="#在用户名和密码都输入正确的前提下，你可能会经历这样的报错：" class="headerlink" title="在用户名和密码都输入正确的前提下，你可能会经历这样的报错："></a>在用户名和密码都输入正确的前提下，你可能会经历这样的报错：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230718235927679.png" alt="image-20230718235927679"></p><ul><li><h5 id="这是什么意思呢？就是该Linux实例未开启root用户远程登录，简单来讲就是root用户不允许通过密码认证方式远程连接到服务器"><a href="#这是什么意思呢？就是该Linux实例未开启root用户远程登录，简单来讲就是root用户不允许通过密码认证方式远程连接到服务器" class="headerlink" title="这是什么意思呢？就是该Linux实例未开启root用户远程登录，简单来讲就是root用户不允许通过密码认证方式远程连接到服务器"></a>这是什么意思呢？就是该Linux实例未开启root用户远程登录，简单来讲就是root用户不允许通过密码认证方式远程连接到服务器</h5></li><li><h5 id="这里可以看官方提供的操作指南：通过密码或密钥认证登录Linux实例-aliyun-com"><a href="#这里可以看官方提供的操作指南：通过密码或密钥认证登录Linux实例-aliyun-com" class="headerlink" title="这里可以看官方提供的操作指南：通过密码或密钥认证登录Linux实例 (aliyun.com)"></a>这里可以看官方提供的操作指南：<a href="https://help.aliyun.com/document_detail/147650.html#title-s05-xk0-670">通过密码或密钥认证登录Linux实例 (aliyun.com)</a></h5></li><li><h5 id="即开启两个权限："><a href="#即开启两个权限：" class="headerlink" title="即开启两个权限："></a>即开启两个权限：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230718234532565.png" alt="image-20230718234532565"></p><ul><li><h5 id="修改完成后记得重启SSHD服务，很容易搞忘记这步操作："><a href="#修改完成后记得重启SSHD服务，很容易搞忘记这步操作：" class="headerlink" title="修改完成后记得重启SSHD服务，很容易搞忘记这步操作："></a>修改完成后记得重启SSHD服务，很容易搞忘记这步操作：</h5></li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">systemctl <span class="hljs-built_in">restart</span> sshd.service<br></code></pre></td></tr></table></figure><ul><li><h5 id="至此，由Linux实例未开启root用户远程登录而导致Workbench远程连接实例失败的问题成功解决！"><a href="#至此，由Linux实例未开启root用户远程登录而导致Workbench远程连接实例失败的问题成功解决！" class="headerlink" title="至此，由Linux实例未开启root用户远程登录而导致Workbench远程连接实例失败的问题成功解决！"></a>至此，由Linux实例未开启root用户远程登录而导致Workbench远程连接实例失败的问题成功解决！</h5></li></ul><h3 id="未及时同步更新用户信息"><a href="#未及时同步更新用户信息" class="headerlink" title="未及时同步更新用户信息"></a>未及时同步更新用户信息</h3><ul><li><h5 id="这个问题的命名听起来好奇怪，那是因为我还不太清楚导致这种问题出现的原因是什么"><a href="#这个问题的命名听起来好奇怪，那是因为我还不太清楚导致这种问题出现的原因是什么" class="headerlink" title="这个问题的命名听起来好奇怪，那是因为我还不太清楚导致这种问题出现的原因是什么"></a>这个问题的命名听起来好奇怪，那是因为我还不太清楚导致这种问题出现的原因是什么</h5></li><li><h5 id="废话少说，看报错："><a href="#废话少说，看报错：" class="headerlink" title="废话少说，看报错："></a>废话少说，看报错：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230718233614526.png" alt="image-20230718233614526"></p><ul><li><h5 id="还是一个Workbench远程连接服务器失败的报错，我们直接给出解决方法："><a href="#还是一个Workbench远程连接服务器失败的报错，我们直接给出解决方法：" class="headerlink" title="还是一个Workbench远程连接服务器失败的报错，我们直接给出解决方法："></a>还是一个Workbench远程连接服务器失败的报错，我们直接给出解决方法：</h5></li><li><h5 id="阿里云网页版远程链接出错-Unable-to-negotiate-key-exchange-for-server-host-key-algorithms-yumoz-博客园-cnblogs-com"><a href="#阿里云网页版远程链接出错-Unable-to-negotiate-key-exchange-for-server-host-key-algorithms-yumoz-博客园-cnblogs-com" class="headerlink" title="阿里云网页版远程链接出错-Unable to negotiate key exchange for server host key algorithms - yumoz - 博客园 (cnblogs.com)"></a><a href="https://www.cnblogs.com/yumoz/p/yumoz.html">阿里云网页版远程链接出错-Unable to negotiate key exchange for server host key algorithms - yumoz - 博客园 (cnblogs.com)</a></h5></li><li><h5 id="看这篇博客就够了，总之，一番操作下来之后，远程连接确实成功了"><a href="#看这篇博客就够了，总之，一番操作下来之后，远程连接确实成功了" class="headerlink" title="看这篇博客就够了，总之，一番操作下来之后，远程连接确实成功了"></a>看这篇博客就够了，总之，一番操作下来之后，远程连接确实成功了</h5></li><li><h5 id="按我的理解，就是更新本服务器用户信息（修改实例密码等等）之后，未及时将原有主机信息删除，产生了信息冲突，导致连接失败"><a href="#按我的理解，就是更新本服务器用户信息（修改实例密码等等）之后，未及时将原有主机信息删除，产生了信息冲突，导致连接失败" class="headerlink" title="按我的理解，就是更新本服务器用户信息（修改实例密码等等）之后，未及时将原有主机信息删除，产生了信息冲突，导致连接失败"></a>按我的理解，就是更新本服务器用户信息（修改实例密码等等）之后，未及时将原有主机信息删除，产生了信息冲突，导致连接失败</h5></li><li><h5 id="具体的原因先按下不表，解决方法就是这样的🤭"><a href="#具体的原因先按下不表，解决方法就是这样的🤭" class="headerlink" title="具体的原因先按下不表，解决方法就是这样的🤭"></a>具体的原因先按下不表，解决方法就是这样的🤭</h5></li></ul><h1 id="介绍其他可能的远程连接方法和工具"><a href="#介绍其他可能的远程连接方法和工具" class="headerlink" title="介绍其他可能的远程连接方法和工具"></a>介绍其他可能的远程连接方法和工具</h1><ul><li>在SSH、RDP和VNC之外，介绍其他可能的远程连接方法，如使用VPN、Web终端等</li><li>推荐和比较不同方法的优缺点，帮助读者选择适合自己的远程连接方式</li></ul><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ul><li>强调远程连接云服务器的重要性和便利性</li><li>鼓励读者在实践中积累经验，并与其他人分享和交流</li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230704204820117.png" alt="image-20230704204820117"></p><ul><li><h5 id="非常感谢您看到这里，希望对您有帮助！"><a href="#非常感谢您看到这里，希望对您有帮助！" class="headerlink" title="非常感谢您看到这里，希望对您有帮助！"></a>非常感谢您看到这里，希望对您有帮助！</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>云服务器</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>云服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云服务器购买及域名备案流程</title>
    <link href="/blog/2023/06/20/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0%E5%8F%8A%E5%9F%9F%E5%90%8D%E5%A4%87%E6%A1%88%E6%B5%81%E7%A8%8B/"/>
    <url>/blog/2023/06/20/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0%E5%8F%8A%E5%9F%9F%E5%90%8D%E5%A4%87%E6%A1%88%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>云服务器</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>云服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注册表中操作右键菜单</title>
    <link href="/blog/2023/06/07/%E6%B3%A8%E5%86%8C%E8%A1%A8%E4%B8%AD%E6%93%8D%E4%BD%9C%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/"/>
    <url>/blog/2023/06/07/%E6%B3%A8%E5%86%8C%E8%A1%A8%E4%B8%AD%E6%93%8D%E4%BD%9C%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<ul><li><h5 id="一个多月前搞过这个，现在我在任意文件-文件夹上的右键菜单是这样的："><a href="#一个多月前搞过这个，现在我在任意文件-文件夹上的右键菜单是这样的：" class="headerlink" title="一个多月前搞过这个，现在我在任意文件/文件夹上的右键菜单是这样的："></a>一个多月前搞过这个，现在我在任意文件/文件夹上的右键菜单是这样的：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230607161927809.png" alt="image-20230607161927809"></p><ul><li><h5 id="刚拉取下来别人的Python爬虫脚本，发现右键菜单还缺PyCharm，那就顺便复习一下注册表操作右键菜单吧："><a href="#刚拉取下来别人的Python爬虫脚本，发现右键菜单还缺PyCharm，那就顺便复习一下注册表操作右键菜单吧：" class="headerlink" title="刚拉取下来别人的Python爬虫脚本，发现右键菜单还缺PyCharm，那就顺便复习一下注册表操作右键菜单吧："></a>刚拉取下来别人的Python爬虫脚本，发现右键菜单还缺PyCharm，那就顺便复习一下注册表操作右键菜单吧：</h5></li></ul><ul><li><h5 id="这篇博客写的很不错：-62条消息-win10：如何在注册表中操作右键菜单-注册表修改右键菜单-松果Tech的博客-CSDN博客"><a href="#这篇博客写的很不错：-62条消息-win10：如何在注册表中操作右键菜单-注册表修改右键菜单-松果Tech的博客-CSDN博客" class="headerlink" title="这篇博客写的很不错：(62条消息) win10：如何在注册表中操作右键菜单_注册表修改右键菜单_松果Tech的博客-CSDN博客"></a>这篇博客写的很不错：<a href="https://blog.csdn.net/qq_44697303/article/details/124358923">(62条消息) win10：如何在注册表中操作右键菜单_注册表修改右键菜单_松果Tech的博客-CSDN博客</a></h5></li></ul><ul><li><h5 id="呃。。没啥好讲的，看这篇博客就行了"><a href="#呃。。没啥好讲的，看这篇博客就行了" class="headerlink" title="呃。。没啥好讲的，看这篇博客就行了"></a>呃。。没啥好讲的，看这篇博客就行了</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>注册表</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>注册表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git/GitHub进阶学习</title>
    <link href="/blog/2023/06/04/git-GitHub%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0/"/>
    <url>/blog/2023/06/04/git-GitHub%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="git-GitHub进阶学习"><a href="#git-GitHub进阶学习" class="headerlink" title="git/GitHub进阶学习"></a>git/GitHub进阶学习</h1><ul><li><h5 id="第一次学习git还是过年前后做瑞吉外卖时学的，也总结过Git基础的笔记"><a href="#第一次学习git还是过年前后做瑞吉外卖时学的，也总结过Git基础的笔记" class="headerlink" title="第一次学习git还是过年前后做瑞吉外卖时学的，也总结过Git基础的笔记"></a>第一次学习git还是过年前后做瑞吉外卖时学的，也总结过Git基础的笔记</h5></li><li><h5 id="后来做用户中心、伙伴匹配等项目时也学会了将本地代码提交至Gitee-GitHub的远程仓库，但对git的使用也仅限于此"><a href="#后来做用户中心、伙伴匹配等项目时也学会了将本地代码提交至Gitee-GitHub的远程仓库，但对git的使用也仅限于此" class="headerlink" title="后来做用户中心、伙伴匹配等项目时也学会了将本地代码提交至Gitee/GitHub的远程仓库，但对git的使用也仅限于此"></a>后来做用户中心、伙伴匹配等项目时也学会了将本地代码提交至Gitee/GitHub的远程仓库，但对git的使用也仅限于此</h5></li><li><h5 id="昨天跟着鱼皮兄学到了在GitHub上如何优雅地在线查看别人项目的代码甚至在线运行，激起了我要持续学习GitHub的兴趣"><a href="#昨天跟着鱼皮兄学到了在GitHub上如何优雅地在线查看别人项目的代码甚至在线运行，激起了我要持续学习GitHub的兴趣" class="headerlink" title="昨天跟着鱼皮兄学到了在GitHub上如何优雅地在线查看别人项目的代码甚至在线运行，激起了我要持续学习GitHub的兴趣"></a>昨天跟着鱼皮兄学到了在GitHub上如何优雅地在线查看别人项目的代码甚至在线运行，激起了我要持续学习GitHub的兴趣</h5></li><li><h5 id="今天康文昌的git-GitHub教学，简直是醍醐灌顶，有感而发，在此记录："><a href="#今天康文昌的git-GitHub教学，简直是醍醐灌顶，有感而发，在此记录：" class="headerlink" title="今天康文昌的git/GitHub教学，简直是醍醐灌顶，有感而发，在此记录："></a>今天康文昌的git/GitHub教学，简直是醍醐灌顶，有感而发，在此记录：</h5></li></ul><h2 id="本地git的基本操作"><a href="#本地git的基本操作" class="headerlink" title="本地git的基本操作"></a>本地git的基本操作</h2><ul><li><h5 id="以下操作均可在VS-Code中操作（已集成git基础命令）"><a href="#以下操作均可在VS-Code中操作（已集成git基础命令）" class="headerlink" title="以下操作均可在VS Code中操作（已集成git基础命令）"></a>以下操作均可在VS Code中操作（已集成git基础命令）</h5></li><li><h5 id="初始化用户和邮箱"><a href="#初始化用户和邮箱" class="headerlink" title="初始化用户和邮箱"></a>初始化用户和邮箱</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;用户邮箱&quot;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="本地初始化一个仓库"><a href="#本地初始化一个仓库" class="headerlink" title="本地初始化一个仓库"></a>本地初始化一个仓库</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git init<br></code></pre></td></tr></table></figure><ul><li><h5 id="将文件修改添加至暂存区"><a href="#将文件修改添加至暂存区" class="headerlink" title="将文件修改添加至暂存区"></a>将文件修改添加至暂存区</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git add .c<br></code></pre></td></tr></table></figure><ul><li><h5 id="提交暂存区内的修改记录"><a href="#提交暂存区内的修改记录" class="headerlink" title="提交暂存区内的修改记录"></a>提交暂存区内的修改记录</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git commit -m <span class="hljs-string">&quot;fix(member):memory&quot;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="硬回退至某一次提交版本"><a href="#硬回退至某一次提交版本" class="headerlink" title="硬回退至某一次提交版本"></a>硬回退至某一次提交版本</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git reset --hard 提交记录id<br></code></pre></td></tr></table></figure><ul><li><h5 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch 分支名<br></code></pre></td></tr></table></figure><ul><li><h5 id="选择分支"><a href="#选择分支" class="headerlink" title="选择分支"></a>选择分支</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git checkout 分支名<br></code></pre></td></tr></table></figure><h2 id="git链接远程仓库"><a href="#git链接远程仓库" class="headerlink" title="git链接远程仓库"></a>git链接远程仓库</h2><ul><li><h5 id="注册并登录GitHub就不多说了，新建一个仓库test"><a href="#注册并登录GitHub就不多说了，新建一个仓库test" class="headerlink" title="注册并登录GitHub就不多说了，新建一个仓库test"></a>注册并登录GitHub就不多说了，新建一个仓库test</h5></li><li><h5 id="链接至远程仓库（注：origin仅为仓库名，可自定义）"><a href="#链接至远程仓库（注：origin仅为仓库名，可自定义）" class="headerlink" title="链接至远程仓库（注：origin仅为仓库名，可自定义）"></a>链接至远程仓库（注：origin仅为仓库名，可自定义）</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git remote add origin 仓库地址<br></code></pre></td></tr></table></figure><ul><li><h5 id="设置主分支（默认分支）"><a href="#设置主分支（默认分支）" class="headerlink" title="设置主分支（默认分支）"></a>设置主分支（默认分支）</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch -M main<br></code></pre></td></tr></table></figure><ul><li><h5 id="执行更新，并提交至远程仓库"><a href="#执行更新，并提交至远程仓库" class="headerlink" title="执行更新，并提交至远程仓库"></a>执行更新，并提交至远程仓库</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">git add .<br>git commit -m <span class="hljs-string">&quot;fix(member):memory&quot;</span><br>git push origin <br></code></pre></td></tr></table></figure><ul><li><h5 id="注：这里可能会出现以下几个问题："><a href="#注：这里可能会出现以下几个问题：" class="headerlink" title="注：这里可能会出现以下几个问题："></a>注：这里可能会出现以下几个问题：</h5></li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">问题一：<br>————————————————<br>warning: HTTPS connections may <span class="hljs-keyword">not</span> be secure. See <span class="hljs-keyword">https</span>://aka.ms/gcm/tlsverify <span class="hljs-keyword">for</span> more information.<br>To <span class="hljs-keyword">https</span>://github.com/deng<span class="hljs-number">-2022</span>/test.git<br> ! [rejected]        main -&gt; main (fetch <span class="hljs-keyword">first</span>)<br>error: failed <span class="hljs-built_in">to</span> push some refs <span class="hljs-built_in">to</span> <span class="hljs-string">&#x27;https://github.com/deng-2022/test.git&#x27;</span><br>hint: Updates were rejected because <span class="hljs-keyword">the</span> remote <span class="hljs-keyword">contains</span> work that you <span class="hljs-built_in">do</span><br>hint: <span class="hljs-keyword">not</span> have locally. This is usually caused <span class="hljs-keyword">by</span> another repository pushing<br>hint: <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> same ref. You may want <span class="hljs-built_in">to</span> <span class="hljs-keyword">first</span> integrate <span class="hljs-keyword">the</span> remote changes<br>hint: (e.g., <span class="hljs-string">&#x27;git pull ...&#x27;</span>) <span class="hljs-keyword">before</span> pushing again.<br>hint: See <span class="hljs-keyword">the</span> <span class="hljs-string">&#x27;Note about fast-forwards&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;git push --help&#x27;</span> <span class="hljs-keyword">for</span> details.<br></code></pre></td></tr></table></figure><ul><li><h5 id="总结原因以及解决办法如下："><a href="#总结原因以及解决办法如下：" class="headerlink" title="总结原因以及解决办法如下："></a>总结原因以及解决办法如下：</h5></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">报错的原因是因为，每个仓库都有一个分支，也可以理解为大仓库里的小仓库，我们只是跟线上远程仓库有了关联，但没有跟线上远程仓库的某个分支关联，所以我们没法提交<br><br>在终端输入 git pull --rebase origin master 即可跟刚创建的线上远程仓库的默认分支master关联<br>这时再执行一下 git push -u origin master 即可将我们的项目文件上传到关联的线上远程文件中<br>————————————————<br>原文链接：https://blog.csdn.net/weixin<span class="hljs-emphasis">_52641692/article/details/130230537</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="关联线上远程仓库默认分支"><a href="#关联线上远程仓库默认分支" class="headerlink" title="关联线上远程仓库默认分支"></a>关联线上远程仓库默认分支</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git pull --rebase origin main<br></code></pre></td></tr></table></figure><ul><li><h5 id="提交项目文件至相关联的远程仓库分支中"><a href="#提交项目文件至相关联的远程仓库分支中" class="headerlink" title="提交项目文件至相关联的远程仓库分支中"></a>提交项目文件至相关联的远程仓库分支中</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git push -u origin main<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">问题二：<br>————————————————<br>这个我目前没遇到过，但问题描述是SSL证书过期之类的，总之就是本地的SSL证书有问题<br></code></pre></td></tr></table></figure><ul><li><h5 id="执行以下命令即可："><a href="#执行以下命令即可：" class="headerlink" title="执行以下命令即可："></a>执行以下命令即可：</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git config --global http.sslverify <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="参与GitHub开源项目"><a href="#参与GitHub开源项目" class="headerlink" title="参与GitHub开源项目"></a>参与GitHub开源项目</h3><ul><li><h5 id="这个我在此简述一下吧，操作的多了就会熟练的："><a href="#这个我在此简述一下吧，操作的多了就会熟练的：" class="headerlink" title="这个我在此简述一下吧，操作的多了就会熟练的："></a>这个我在此简述一下吧，操作的多了就会熟练的：</h5></li><li><h5 id="在开源项目中点击点击Fork，把项目拉取到自己的仓库中，执行修改并提交至自己的远程仓库分支中，再远程链接到开源项目仓库地址，回到开源项目中点击Pull-requests-gt-new-pull-request-gt-compare-across-forks，选择自己对应的仓库分支，create-pull-request即可提交修改，恭喜你，已经完成了第一次向开源项目贡献代码"><a href="#在开源项目中点击点击Fork，把项目拉取到自己的仓库中，执行修改并提交至自己的远程仓库分支中，再远程链接到开源项目仓库地址，回到开源项目中点击Pull-requests-gt-new-pull-request-gt-compare-across-forks，选择自己对应的仓库分支，create-pull-request即可提交修改，恭喜你，已经完成了第一次向开源项目贡献代码" class="headerlink" title="在开源项目中点击点击Fork，把项目拉取到自己的仓库中，执行修改并提交至自己的远程仓库分支中，再远程链接到开源项目仓库地址，回到开源项目中点击Pull requests -&gt; new pull request -&gt; compare across forks，选择自己对应的仓库分支，create pull request即可提交修改，恭喜你，已经完成了第一次向开源项目贡献代码"></a>在开源项目中点击点击Fork，把项目拉取到自己的仓库中，执行修改并提交至自己的远程仓库分支中，再远程链接到开源项目仓库地址，回到开源项目中点击Pull requests -&gt; new pull request -&gt; compare across forks，选择自己对应的仓库分支，create pull request即可提交修改，恭喜你，已经完成了第一次向开源项目贡献代码</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">git clone https:<span class="hljs-comment">//github.com/deng-2022/re01.git .</span><br>git remote add upstream https:<span class="hljs-comment">//github.com/midorg-com/re01.git</span><br>git checkout -b memory<br>git add .<br>git commit -m <span class="hljs-string">&quot;add(momber): memory&quot;</span><br>git push -u origin memory<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
      <category>GitHUb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>GitHUb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>揭秘项目部署上线之路：流程、挑战与解决方案</title>
    <link href="/blog/2023/06/04/%E6%8F%AD%E7%A7%98%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E4%B9%8B%E8%B7%AF%EF%BC%9A%E6%B5%81%E7%A8%8B%E3%80%81%E6%8C%91%E6%88%98%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/blog/2023/06/04/%E6%8F%AD%E7%A7%98%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E4%B9%8B%E8%B7%AF%EF%BC%9A%E6%B5%81%E7%A8%8B%E3%80%81%E6%8C%91%E6%88%98%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h5 id="本文介绍部署项目的常用方法，以及详细的实操流程"><a href="#本文介绍部署项目的常用方法，以及详细的实操流程" class="headerlink" title="本文介绍部署项目的常用方法，以及详细的实操流程"></a>本文介绍部署项目的常用方法，以及详细的实操流程</h5></li><li><h5 id="均以我个人开发的伙伴匹配系统为例，体验如何快速部署项目"><a href="#均以我个人开发的伙伴匹配系统为例，体验如何快速部署项目" class="headerlink" title="均以我个人开发的伙伴匹配系统为例，体验如何快速部署项目"></a>均以我个人开发的伙伴匹配系统为例，体验如何快速部署项目</h5></li></ul><h1 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h1><h2 id="多环境配置"><a href="#多环境配置" class="headerlink" title="多环境配置"></a>多环境配置</h2><ul><li><h5 id="要部署项目到线上，首先就要配置多环境：测试环境、开发环境、线上环境等"><a href="#要部署项目到线上，首先就要配置多环境：测试环境、开发环境、线上环境等" class="headerlink" title="要部署项目到线上，首先就要配置多环境：测试环境、开发环境、线上环境等"></a>要部署项目到线上，首先就要配置多环境：测试环境、开发环境、线上环境等</h5></li><li><p>​    </p></li></ul><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li></li></ul><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><ul><li><h5 id="我这个项目是基于SpringBoot开发的，后端多环境配置十分方便"><a href="#我这个项目是基于SpringBoot开发的，后端多环境配置十分方便" class="headerlink" title="我这个项目是基于SpringBoot开发的，后端多环境配置十分方便"></a>我这个项目是基于SpringBoot开发的，后端多环境配置十分方便</h5></li><li><h5 id="「快学springboot」SpringBoot多环境配置文件-掘金-juejin-cn"><a href="#「快学springboot」SpringBoot多环境配置文件-掘金-juejin-cn" class="headerlink" title="「快学springboot」SpringBoot多环境配置文件 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/6844903872729726990">「快学springboot」SpringBoot多环境配置文件 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="只需要新增多个不同环境的配置文件，将来部署并启动项目时，只需指定启动环境即可"><a href="#只需要新增多个不同环境的配置文件，将来部署并启动项目时，只需指定启动环境即可" class="headerlink" title="只需要新增多个不同环境的配置文件，将来部署并启动项目时，只需指定启动环境即可"></a>只需要新增多个不同环境的配置文件，将来部署并启动项目时，只需指定启动环境即可</h5></li><li><h5 id="不同环境的配置文件需要不同的文件后缀名来区分，如下图所示："><a href="#不同环境的配置文件需要不同的文件后缀名来区分，如下图所示：" class="headerlink" title="不同环境的配置文件需要不同的文件后缀名来区分，如下图所示："></a>不同环境的配置文件需要不同的文件后缀名来区分，如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725123005384.png" alt="image-20230725123005384"></p><ul><li><h5 id="其中，application-yaml用来存放各配置文件中的公共配置，其余各环境配置文件中，主要有区别的有以下两点："><a href="#其中，application-yaml用来存放各配置文件中的公共配置，其余各环境配置文件中，主要有区别的有以下两点：" class="headerlink" title="其中，application.yaml用来存放各配置文件中的公共配置，其余各环境配置文件中，主要有区别的有以下两点："></a>其中，application.yaml用来存放各配置文件中的公共配置，其余各环境配置文件中，主要有区别的有以下两点：</h5><ol><li><h5 id="依赖的环境地址"><a href="#依赖的环境地址" class="headerlink" title="依赖的环境地址"></a>依赖的环境地址</h5><ul><li>数据库地址</li><li>缓存地址</li><li>消息队列地址</li><li>项目端口号</li></ul></li><li><h5 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h5></li></ol></li><li><h5 id="下面给出我在不同环境下的配置文件内容："><a href="#下面给出我在不同环境下的配置文件内容：" class="headerlink" title="下面给出我在不同环境下的配置文件内容："></a>下面给出我在不同环境下的配置文件内容：</h5></li><li><h5 id="application-yaml（公共配置）"><a href="#application-yaml（公共配置）" class="headerlink" title="application.yaml（公共配置）"></a>application.yaml（公共配置）</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment"># Project name</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">user-center</span><br>  <span class="hljs-comment"># DataSource Config</span><br><span class="hljs-comment">#  datasource:</span><br>  <span class="hljs-comment">#    driver-class-name: com.mysql.cj.jdbc.Driver</span><br>  <span class="hljs-comment">#    url: jdbc:mysql://localhost:3306/memory</span><br>  <span class="hljs-comment">#    username: root</span><br>  <span class="hljs-comment">#    password: Dw990831</span><br>  <span class="hljs-comment"># session 失效时间(分钟)</span><br>  <span class="hljs-attr">session:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">86640</span><br>    <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br>  <span class="hljs-comment"># redis 配置</span><br><span class="hljs-comment">#  redis:</span><br>  <span class="hljs-comment">#    port: 6379</span><br>  <span class="hljs-comment">#    host: localhost</span><br>  <span class="hljs-comment">#    database: 0</span><br>  <span class="hljs-comment"># 整合swagger</span><br>  <span class="hljs-attr">mvc:</span><br>    <span class="hljs-attr">pathmatch:</span><br>      <span class="hljs-attr">matching-strategy:</span> <span class="hljs-string">ANT_PATH_MATCHER</span><br><span class="hljs-comment">#  config:</span><br><span class="hljs-comment">#    activate:</span><br><span class="hljs-comment">#      on-profile: dev</span><br><br><span class="hljs-comment"># 端口</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/api</span><br><span class="hljs-comment">#    session:</span><br><span class="hljs-comment">#      cookie:</span><br><span class="hljs-comment">#        domain: localhost</span><br><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-comment"># 逻辑删除</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-attr">logic-delete-field:</span> <span class="hljs-string">isDelete</span> <span class="hljs-comment"># 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span><br>      <span class="hljs-attr">logic-delete-value:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># 逻辑已删除值(默认为 1)</span><br>      <span class="hljs-attr">logic-not-delete-value:</span> <span class="hljs-number">0</span> <span class="hljs-comment"># 逻辑未删除值(默认为 0)</span><br>  <span class="hljs-comment"># 开启SQL查询日志</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="application-dev-yaml（开发环境配置）"><a href="#application-dev-yaml（开发环境配置）" class="headerlink" title="application-dev.yaml（开发环境配置）"></a>application-dev.yaml（开发环境配置）</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment"># Project name</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">user-center</span><br>  <span class="hljs-comment"># DataSource Config</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/memory</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">Dw990831</span><br>  <span class="hljs-comment"># session 失效时间(分钟)</span><br>  <span class="hljs-attr">session:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">86640</span><br>    <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br>  <span class="hljs-comment"># redis 配置</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>  <span class="hljs-comment"># 整合swagger</span><br>  <span class="hljs-attr">mvc:</span><br>    <span class="hljs-attr">pathmatch:</span><br>      <span class="hljs-attr">matching-strategy:</span> <span class="hljs-string">ANT_PATH_MATCHER</span><br><span class="hljs-comment">#  config:</span><br><span class="hljs-comment">#    activate:</span><br><span class="hljs-comment">#      on-profile: dev</span><br><br><span class="hljs-comment"># 端口</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/api</span><br><span class="hljs-comment">#    session:</span><br><span class="hljs-comment">#      cookie:</span><br><span class="hljs-comment">#        domain: localhost</span><br><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="application-prod-yaml（生产环境配置）"><a href="#application-prod-yaml（生产环境配置）" class="headerlink" title="application-prod.yaml（生产环境配置）"></a>application-prod.yaml（生产环境配置）</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment"># Project name</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">user-center</span><br>  <span class="hljs-comment"># DataSource Config</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/memory</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">Dw990831</span><br>  <span class="hljs-comment"># session 失效时间(分钟)</span><br>  <span class="hljs-attr">session:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">86640</span><br>    <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br>  <span class="hljs-comment"># redis 配置</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>  <span class="hljs-comment"># 整合swagger</span><br>  <span class="hljs-attr">mvc:</span><br>    <span class="hljs-attr">pathmatch:</span><br>      <span class="hljs-attr">matching-strategy:</span> <span class="hljs-string">ANT_PATH_MATCHER</span><br><span class="hljs-comment">#  config:</span><br><span class="hljs-comment">#    activate:</span><br><span class="hljs-comment">#      on-profile: dev</span><br><br><span class="hljs-comment"># 端口</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/api</span><br><span class="hljs-comment">#    session:</span><br><span class="hljs-comment">#      cookie:</span><br><span class="hljs-comment">#        domain: localhost</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="有关各个配置文件的加载优先级，可以在这篇博客中详细了解："><a href="#有关各个配置文件的加载优先级，可以在这篇博客中详细了解：" class="headerlink" title="有关各个配置文件的加载优先级，可以在这篇博客中详细了解："></a>有关各个配置文件的加载优先级，可以在这篇博客中详细了解：</h5></li></ul><h4 id="直接启动"><a href="#直接启动" class="headerlink" title="直接启动"></a>直接启动</h4><ul><li><h5 id="利用IDEA工具，检验在各个环境下能否正确启动项目"><a href="#利用IDEA工具，检验在各个环境下能否正确启动项目" class="headerlink" title="利用IDEA工具，检验在各个环境下能否正确启动项目"></a>利用IDEA工具，检验在各个环境下能否正确启动项目</h5></li><li><h5 id="这里有个问题，如果配置了多环境，直接run-debug项目会报如下错误："><a href="#这里有个问题，如果配置了多环境，直接run-debug项目会报如下错误：" class="headerlink" title="这里有个问题，如果配置了多环境，直接run/debug项目会报如下错误："></a>这里有个问题，如果配置了多环境，直接run/debug项目会报如下错误：</h5></li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">***************************<br>APPLICATION FAILED TO START<br>***************************<br><br>Description:<br><br>Failed <span class="hljs-built_in">to</span> configure <span class="hljs-keyword">a</span> DataSource: <span class="hljs-string">&#x27;url&#x27;</span> attribute is <span class="hljs-keyword">not</span> specified <span class="hljs-keyword">and</span> no embedded datasource could be configured.<br><br>Reason: Failed <span class="hljs-built_in">to</span> determine <span class="hljs-keyword">a</span> suitable driver class<br><br><br>Action:<br><br>Consider <span class="hljs-keyword">the</span> following:<br>If you want <span class="hljs-keyword">an</span> embedded database (H2, HSQL <span class="hljs-keyword">or</span> Derby), please <span class="hljs-built_in">put</span> <span class="hljs-keyword">it</span> <span class="hljs-keyword">on</span> <span class="hljs-title">the</span> <span class="hljs-title">classpath</span>.<br>If you have database settings <span class="hljs-built_in">to</span> be loaded <span class="hljs-built_in">from</span> <span class="hljs-keyword">a</span> particular profile you may need <span class="hljs-built_in">to</span> activate <span class="hljs-keyword">it</span> (no profiles are currently active).<br><br>Disconnected <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> target VM, address: <span class="hljs-string">&#x27;127.0.0.1:8686&#x27;</span>, transport: <span class="hljs-string">&#x27;socket&#x27;</span><br><br>Process finished <span class="hljs-keyword">with</span> exit code <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这是由于检测到多环境配置文件，需要具体指定项目在那个环境下启动，IDEA内可以如下操作："><a href="#这是由于检测到多环境配置文件，需要具体指定项目在那个环境下启动，IDEA内可以如下操作：" class="headerlink" title="这是由于检测到多环境配置文件，需要具体指定项目在那个环境下启动，IDEA内可以如下操作："></a>这是由于检测到多环境配置文件，需要具体指定项目在那个环境下启动，IDEA内可以如下操作：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704001332322.png" alt="image-20230704001332322"></p><ul><li><h5 id="如上图所示，在指定启动环境后，我们的项目在prod（生产环境）下启动成功了"><a href="#如上图所示，在指定启动环境后，我们的项目在prod（生产环境）下启动成功了" class="headerlink" title="如上图所示，在指定启动环境后，我们的项目在prod（生产环境）下启动成功了"></a>如上图所示，在指定启动环境后，我们的项目在prod（生产环境）下启动成功了</h5></li></ul><h4 id="运行jar包"><a href="#运行jar包" class="headerlink" title="运行jar包"></a>运行jar包</h4><ul><li><h5 id="这里我们不在直接运行项目，而是先将项目打包成jar包，再运行jar包来启动项目"><a href="#这里我们不在直接运行项目，而是先将项目打包成jar包，再运行jar包来启动项目" class="headerlink" title="这里我们不在直接运行项目，而是先将项目打包成jar包，再运行jar包来启动项目"></a>这里我们不在直接运行项目，而是先将项目打包成jar包，再运行jar包来启动项目</h5></li><li><h5 id="我们借助ODEA封装的Maven打包工具，一键打包，如下图所示："><a href="#我们借助ODEA封装的Maven打包工具，一键打包，如下图所示：" class="headerlink" title="我们借助ODEA封装的Maven打包工具，一键打包，如下图所示："></a>我们借助ODEA封装的Maven打包工具，一键打包，如下图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703222202638.png" alt="image-20230703222202638"></p><ul><li><h5 id="项目打包成功后，生成一个target目录，jar包就在该目录下，执行以下命令运行jar包来启动项目（IDEA-命令行下均可）："><a href="#项目打包成功后，生成一个target目录，jar包就在该目录下，执行以下命令运行jar包来启动项目（IDEA-命令行下均可）：" class="headerlink" title="项目打包成功后，生成一个target目录，jar包就在该目录下，执行以下命令运行jar包来启动项目（IDEA/命令行下均可）："></a>项目打包成功后，生成一个target目录，jar包就在该目录下，执行以下命令运行jar包来启动项目（IDEA/命令行下均可）：</h5></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -jar .\user-center-backend-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-SNAPSHOT.jar --spring.profiles.active=prod<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704002107558.png" alt="image-20230704002107558"></p><ul><li><h5 id="如上图所示，项目在prod（生产环境下）启动成功"><a href="#如上图所示，项目在prod（生产环境下）启动成功" class="headerlink" title="如上图所示，项目在prod（生产环境下）启动成功"></a>如上图所示，项目在prod（生产环境下）启动成功</h5></li><li><h5 id="至此，后端多环境配置完成（2023-07-04晚）"><a href="#至此，后端多环境配置完成（2023-07-04晚）" class="headerlink" title="至此，后端多环境配置完成（2023/07/04晚）"></a>至此，后端多环境配置完成（2023/07/04晚）</h5></li></ul><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li><h5 id="我们完成了项目的多环境配置，并在本地检验了配置的正确性，那么接下来就要进行项目的部署上线了"><a href="#我们完成了项目的多环境配置，并在本地检验了配置的正确性，那么接下来就要进行项目的部署上线了" class="headerlink" title="我们完成了项目的多环境配置，并在本地检验了配置的正确性，那么接下来就要进行项目的部署上线了"></a>我们完成了项目的多环境配置，并在本地检验了配置的正确性，那么接下来就要进行项目的部署上线了</h5></li><li><h5 id="部署上线当然需要服务器了，常见的作法当然是租用一台云服务器了"><a href="#部署上线当然需要服务器了，常见的作法当然是租用一台云服务器了" class="headerlink" title="部署上线当然需要服务器了，常见的作法当然是租用一台云服务器了"></a>部署上线当然需要服务器了，常见的作法当然是租用一台云服务器了</h5></li><li><h5 id="国内很多提供云服务的厂商：阿里云、腾讯云、百度云、亚马逊云、华为云等等，我们这里选用阿里云的ECS云服务器"><a href="#国内很多提供云服务的厂商：阿里云、腾讯云、百度云、亚马逊云、华为云等等，我们这里选用阿里云的ECS云服务器" class="headerlink" title="国内很多提供云服务的厂商：阿里云、腾讯云、百度云、亚马逊云、华为云等等，我们这里选用阿里云的ECS云服务器"></a>国内很多提供云服务的厂商：阿里云、腾讯云、百度云、亚马逊云、华为云等等，我们这里选用阿里云的ECS云服务器</h5></li><li><h5 id="这台云服务器的相关宝塔面板的安装、云数据库的配置均已完成，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"><a href="#这台云服务器的相关宝塔面板的安装、云数据库的配置均已完成，详见《宝塔面板：解放手动配置，轻松管理你的服务器》" class="headerlink" title="这台云服务器的相关宝塔面板的安装、云数据库的配置均已完成，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"></a>这台云服务器的相关宝塔面板的安装、云数据库的配置均已完成，详见《宝塔面板：解放手动配置，轻松管理你的服务器》</h5></li><li><h5 id="下面我们正式进行项目的上线、部署"><a href="#下面我们正式进行项目的上线、部署" class="headerlink" title="下面我们正式进行项目的上线、部署"></a>下面我们正式进行项目的上线、部署</h5></li></ul><h3 id="原生部署"><a href="#原生部署" class="headerlink" title="原生部署"></a>原生部署</h3><ul><li><h5 id="这种部署方式很繁琐，从项目的打包到部署，所有的工具、依赖以及相关配置都是纯人工进行的，吃力不讨好"><a href="#这种部署方式很繁琐，从项目的打包到部署，所有的工具、依赖以及相关配置都是纯人工进行的，吃力不讨好" class="headerlink" title="这种部署方式很繁琐，从项目的打包到部署，所有的工具、依赖以及相关配置都是纯人工进行的，吃力不讨好"></a>这种部署方式很繁琐，从项目的打包到部署，所有的工具、依赖以及相关配置都是纯人工进行的，吃力不讨好</h5></li><li><h5 id="所以不建议使用这种方式进行部署项目，不过日后可以考虑操作一遍，再附上详细教程（2023-07-25午）"><a href="#所以不建议使用这种方式进行部署项目，不过日后可以考虑操作一遍，再附上详细教程（2023-07-25午）" class="headerlink" title="所以不建议使用这种方式进行部署项目，不过日后可以考虑操作一遍，再附上详细教程（2023/07/25午）"></a>所以不建议使用这种方式进行部署项目，不过日后可以考虑操作一遍，再附上详细教程（2023/07/25午）</h5></li></ul><h3 id="宝塔面板部署"><a href="#宝塔面板部署" class="headerlink" title="宝塔面板部署"></a>宝塔面板部署</h3><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><ul><li><h5 id="还是之前讲过的，部署项目首先要做的，便是正确配置该项目依赖的环境地址，将本地地址改为线上地址："><a href="#还是之前讲过的，部署项目首先要做的，便是正确配置该项目依赖的环境地址，将本地地址改为线上地址：" class="headerlink" title="还是之前讲过的，部署项目首先要做的，便是正确配置该项目依赖的环境地址，将本地地址改为线上地址："></a>还是之前讲过的，部署项目首先要做的，便是正确配置该项目依赖的环境地址，将本地地址改为线上地址：</h5><ul><li>数据库地址</li><li>缓存地址</li><li>消息队列地址</li><li>项目端口号</li></ul></li><li><h5 id="打包项目，可以手动打包，也可以利用IDEA工具，方便快捷，最终生成一个jar包："><a href="#打包项目，可以手动打包，也可以利用IDEA工具，方便快捷，最终生成一个jar包：" class="headerlink" title="打包项目，可以手动打包，也可以利用IDEA工具，方便快捷，最终生成一个jar包："></a>打包项目，可以手动打包，也可以利用IDEA工具，方便快捷，最终生成一个jar包：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725124235955.png" alt="image-20230725124235955"></p><h4 id="宝塔Linux部署"><a href="#宝塔Linux部署" class="headerlink" title="宝塔Linux部署"></a>宝塔Linux部署</h4><ul><li><h5 id="成功登录到宝塔面板，在指定路径下上传刚刚打包好的-jar-包："><a href="#成功登录到宝塔面板，在指定路径下上传刚刚打包好的-jar-包：" class="headerlink" title="成功登录到宝塔面板，在指定路径下上传刚刚打包好的 jar 包："></a>成功登录到宝塔面板，在指定路径下上传刚刚打包好的 jar 包：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725124828787.png" alt="image-20230725124828787"></p><ul><li><h5 id="添加部署Java项目："><a href="#添加部署Java项目：" class="headerlink" title="添加部署Java项目："></a>添加部署Java项目：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725125307600.png" alt="image-20230725125307600"></p><ul><li><h5 id="选择项目的jar包路径，设置项目端口、项目jdk路径，编写项目执行命令（端口号、启动环境）"><a href="#选择项目的jar包路径，设置项目端口、项目jdk路径，编写项目执行命令（端口号、启动环境）" class="headerlink" title="选择项目的jar包路径，设置项目端口、项目jdk路径，编写项目执行命令（端口号、启动环境）"></a>选择项目的jar包路径，设置项目端口、项目jdk路径，编写项目执行命令（端口号、启动环境）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725125535362.png" alt="image-20230725125535362"></p><ul><li><h5 id="点击提交即可看到该项目已经在指定端口处成功运行"><a href="#点击提交即可看到该项目已经在指定端口处成功运行" class="headerlink" title="点击提交即可看到该项目已经在指定端口处成功运行"></a>点击提交即可看到该项目已经在指定端口处成功运行</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230725220040763.png" alt="image-20230725220040763"></p><ul><li><h5 id="这里如果运行不成功的话，检查项目执行命令是否正确（端口号、启动环境），再者就是检查-jdk是否成功安装、线上资源地址配置是否正确"><a href="#这里如果运行不成功的话，检查项目执行命令是否正确（端口号、启动环境），再者就是检查-jdk是否成功安装、线上资源地址配置是否正确" class="headerlink" title="这里如果运行不成功的话，检查项目执行命令是否正确（端口号、启动环境），再者就是检查 jdk是否成功安装、线上资源地址配置是否正确"></a>这里如果运行不成功的话，检查项目执行命令是否正确（端口号、启动环境），再者就是检查 jdk是否成功安装、线上资源地址配置是否正确</h5></li><li><h5 id="有关阿里云服务器安装-JDK-和完成相关环境配置的内容，以及线上资源地址的配置流程、注意事项，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"><a href="#有关阿里云服务器安装-JDK-和完成相关环境配置的内容，以及线上资源地址的配置流程、注意事项，详见《宝塔面板：解放手动配置，轻松管理你的服务器》" class="headerlink" title="有关阿里云服务器安装 JDK 和完成相关环境配置的内容，以及线上资源地址的配置流程、注意事项，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"></a>有关阿里云服务器安装 JDK 和完成相关环境配置的内容，以及线上资源地址的配置流程、注意事项，详见《宝塔面板：解放手动配置，轻松管理你的服务器》</h5></li><li><h5 id="至此，伙伴匹配系统的后端部署成功"><a href="#至此，伙伴匹配系统的后端部署成功" class="headerlink" title="至此，伙伴匹配系统的后端部署成功"></a>至此，伙伴匹配系统的后端部署成功</h5></li></ul><h3 id="Docker容器部署"><a href="#Docker容器部署" class="headerlink" title="Docker容器部署"></a>Docker容器部署</h3><h2 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h2><h3 id="java和javac版本不一致"><a href="#java和javac版本不一致" class="headerlink" title="java和javac版本不一致"></a>java和javac版本不一致</h3><ul><li><h5 id="项目打包后，运行jar包报如下错误："><a href="#项目打包后，运行jar包报如下错误：" class="headerlink" title="项目打包后，运行jar包报如下错误："></a>项目打包后，运行jar包报如下错误：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703232318658.png" alt="image-20230703232318658"></p><ul><li><h5 id="这个问题很常见，是java和javac版本不一致导致的"><a href="#这个问题很常见，是java和javac版本不一致导致的" class="headerlink" title="这个问题很常见，是java和javac版本不一致导致的"></a>这个问题很常见，是java和javac版本不一致导致的</h5></li><li><h5 id="我们可以尝试检查一下java和javac版本，分别在命令行下输入以下两条命令："><a href="#我们可以尝试检查一下java和javac版本，分别在命令行下输入以下两条命令：" class="headerlink" title="我们可以尝试检查一下java和javac版本，分别在命令行下输入以下两条命令："></a>我们可以尝试检查一下java和javac版本，分别在命令行下输入以下两条命令：</h5></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">java -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">javac -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="经查询，发现java版本为8，javac版本为11，为什么会这样呢？"><a href="#经查询，发现java版本为8，javac版本为11，为什么会这样呢？" class="headerlink" title="经查询，发现java版本为8，javac版本为11，为什么会这样呢？"></a>经查询，发现java版本为8，javac版本为11，为什么会这样呢？</h5></li><li><h5 id="我们配置的环境变量是没有问题的，只需要把path变量下的-JAVA-HOME-bin变量上移到第一行，即可解决这个问题"><a href="#我们配置的环境变量是没有问题的，只需要把path变量下的-JAVA-HOME-bin变量上移到第一行，即可解决这个问题" class="headerlink" title="我们配置的环境变量是没有问题的，只需要把path变量下的%JAVA_HOME%/bin变量上移到第一行，即可解决这个问题"></a>我们配置的环境变量是没有问题的，只需要把path变量下的%JAVA_HOME%/bin变量上移到第一行，即可解决这个问题</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703232403934.png" alt="image-20230703232403934"></p><ul><li><h5 id="再次查看java和javac版本，发现版本一致，效果如下："><a href="#再次查看java和javac版本，发现版本一致，效果如下：" class="headerlink" title="再次查看java和javac版本，发现版本一致，效果如下："></a>再次查看java和javac版本，发现版本一致，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703232639048.png" alt="image-20230703232639048"></p><ul><li><h5 id="到这里本应该结束了，但是我发先命令行下运行jar包已经没问题了，项目启动成功，但IDEA环境下却仍启动失败"><a href="#到这里本应该结束了，但是我发先命令行下运行jar包已经没问题了，项目启动成功，但IDEA环境下却仍启动失败" class="headerlink" title="到这里本应该结束了，但是我发先命令行下运行jar包已经没问题了，项目启动成功，但IDEA环境下却仍启动失败"></a>到这里本应该结束了，但是我发先命令行下运行jar包已经没问题了，项目启动成功，但IDEA环境下却仍启动失败</h5></li><li><h5 id="原因是这样的：即使我们成功修改了-jdk-版本，但是在IDEA环境下，每个项目使用的-jdk-版本仍可能未改变"><a href="#原因是这样的：即使我们成功修改了-jdk-版本，但是在IDEA环境下，每个项目使用的-jdk-版本仍可能未改变" class="headerlink" title="原因是这样的：即使我们成功修改了 jdk 版本，但是在IDEA环境下，每个项目使用的 jdk 版本仍可能未改变"></a>原因是这样的：即使我们成功修改了 jdk 版本，但是在IDEA环境下，每个项目使用的 jdk 版本仍可能未改变</h5></li><li><h5 id="如下图所示："><a href="#如下图所示：" class="headerlink" title="如下图所示："></a>如下图所示：</h5></li><li><h5 id="我们可以在此修改项目所使用的-jdk-版本，使之与全局-jdk-版本一致"><a href="#我们可以在此修改项目所使用的-jdk-版本，使之与全局-jdk-版本一致" class="headerlink" title="我们可以在此修改项目所使用的 jdk 版本，使之与全局 jdk 版本一致"></a>我们可以在此修改项目所使用的 jdk 版本，使之与全局 jdk 版本一致</h5></li></ul><h3 id="线上MySQL数据库和Redis的安装配置"><a href="#线上MySQL数据库和Redis的安装配置" class="headerlink" title="线上MySQL数据库和Redis的安装配置"></a>线上MySQL数据库和Redis的安装配置</h3><ul><li><h5 id="我们一直在反复强调，项目部署中，最重要的当属线上资源地址的配置，而常用的MySQL数据库和Redis配置则更加重要"><a href="#我们一直在反复强调，项目部署中，最重要的当属线上资源地址的配置，而常用的MySQL数据库和Redis配置则更加重要" class="headerlink" title="我们一直在反复强调，项目部署中，最重要的当属线上资源地址的配置，而常用的MySQL数据库和Redis配置则更加重要"></a>我们一直在反复强调，项目部署中，最重要的当属线上资源地址的配置，而常用的MySQL数据库和Redis配置则更加重要</h5></li><li><h5 id="我们常用的项目部署经常采用宝塔Linux部署方案，所以这部分内容会详细讲解在该方案下的MySQL数据库和Redis配置的要点"><a href="#我们常用的项目部署经常采用宝塔Linux部署方案，所以这部分内容会详细讲解在该方案下的MySQL数据库和Redis配置的要点" class="headerlink" title="我们常用的项目部署经常采用宝塔Linux部署方案，所以这部分内容会详细讲解在该方案下的MySQL数据库和Redis配置的要点"></a>我们常用的项目部署经常采用宝塔Linux部署方案，所以这部分内容会详细讲解在该方案下的MySQL数据库和Redis配置的要点</h5></li><li><h5 id="这里的介绍比较冗长和细致，所以我认为将这部分内容将收录在《》一文中更合适，有需要的可跳转查看"><a href="#这里的介绍比较冗长和细致，所以我认为将这部分内容将收录在《》一文中更合适，有需要的可跳转查看" class="headerlink" title="这里的介绍比较冗长和细致，所以我认为将这部分内容将收录在《》一文中更合适，有需要的可跳转查看"></a>这里的介绍比较冗长和细致，所以我认为将这部分内容将收录在《》一文中更合适，有需要的可跳转查看</h5></li></ul><h2 id="经验总结"><a href="#经验总结" class="headerlink" title="经验总结"></a>经验总结</h2><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703223656991.png" alt="image-20230703223656991"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703223749102.png" alt="image-20230703223749102"></p><ul><li><h5 id="相关问题可以看以下博客了解："><a href="#相关问题可以看以下博客了解：" class="headerlink" title="相关问题可以看以下博客了解："></a>相关问题可以看以下博客了解：</h5></li><li><h5 id="71条消息-Exception-in-thread-“main“-java-lang-UnsupportedClassVersionError解决办法-Timothy-Liuu的博客-CSDN博客"><a href="#71条消息-Exception-in-thread-“main“-java-lang-UnsupportedClassVersionError解决办法-Timothy-Liuu的博客-CSDN博客" class="headerlink" title="(71条消息) Exception in thread “main“ java.lang.UnsupportedClassVersionError解决办法_Timothy_Liuu的博客-CSDN博客"></a><a href="https://blog.csdn.net/Timothy_Liu0114/article/details/109035134">(71条消息) Exception in thread “main“ java.lang.UnsupportedClassVersionError解决办法_Timothy_Liuu的博客-CSDN博客</a></h5></li><li><h5 id="71条消息-Exception-in-thread-“main“-java-lang-UnsupportedClassVersionError-易嗨的博客-CSDN博客"><a href="#71条消息-Exception-in-thread-“main“-java-lang-UnsupportedClassVersionError-易嗨的博客-CSDN博客" class="headerlink" title="(71条消息) Exception in thread “main“ java.lang.UnsupportedClassVersionError:_易嗨的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_46470205/article/details/128245221">(71条消息) Exception in thread “main“ java.lang.UnsupportedClassVersionError:_易嗨的博客-CSDN博客</a></h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>项目部署</category>
      
      <category>开发经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>开发经验</tag>
      
      <tag>项目部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的编程之旅：大学学习记录与成长经历</title>
    <link href="/blog/2023/06/03/%E6%88%91%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%97%85%EF%BC%9A%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%8E%E6%88%90%E9%95%BF%E7%BB%8F%E5%8E%86/"/>
    <url>/blog/2023/06/03/%E6%88%91%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%97%85%EF%BC%9A%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%8E%E6%88%90%E9%95%BF%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h5 id="坚持记录自己的学习经历，每天的进步都成为我前进的动力，这个过程令人感到无比有意义。"><a href="#坚持记录自己的学习经历，每天的进步都成为我前进的动力，这个过程令人感到无比有意义。" class="headerlink" title="坚持记录自己的学习经历，每天的进步都成为我前进的动力，这个过程令人感到无比有意义。"></a>坚持记录自己的学习经历，每天的进步都成为我前进的动力，这个过程令人感到无比有意义。</h5></li><li><h5 id="每天回顾自己的学习笔记，我能够清晰地看到自己的成长和进步，这种持续的努力使我更加自信和坚定，同时也为我树立了积极的学习态度。"><a href="#每天回顾自己的学习笔记，我能够清晰地看到自己的成长和进步，这种持续的努力使我更加自信和坚定，同时也为我树立了积极的学习态度。" class="headerlink" title="每天回顾自己的学习笔记，我能够清晰地看到自己的成长和进步，这种持续的努力使我更加自信和坚定，同时也为我树立了积极的学习态度。"></a>每天回顾自己的学习笔记，我能够清晰地看到自己的成长和进步，这种持续的努力使我更加自信和坚定，同时也为我树立了积极的学习态度。</h5></li><li><h5 id="我发现，这样的学习记录不仅仅是一种反思和总结，更是对自己努力和进步的有力证明。"><a href="#我发现，这样的学习记录不仅仅是一种反思和总结，更是对自己努力和进步的有力证明。" class="headerlink" title="我发现，这样的学习记录不仅仅是一种反思和总结，更是对自己努力和进步的有力证明。"></a>我发现，这样的学习记录不仅仅是一种反思和总结，更是对自己努力和进步的有力证明。</h5></li><li><h5 id="我深信，只要坚持下去，每一天都将是新的收获和成长，让我不断迈向更高的目标。"><a href="#我深信，只要坚持下去，每一天都将是新的收获和成长，让我不断迈向更高的目标。" class="headerlink" title="我深信，只要坚持下去，每一天都将是新的收获和成长，让我不断迈向更高的目标。"></a>我深信，只要坚持下去，每一天都将是新的收获和成长，让我不断迈向更高的目标。</h5></li></ul><h2 id="2021-9月-2022-5月"><a href="#2021-9月-2022-5月" class="headerlink" title="2021/9月-2022/5月"></a>2021/9月-2022/5月</h2><ul><li><h5 id="C、C"><a href="#C、C" class="headerlink" title="C、C++"></a>C、C++</h5></li><li><h5 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h5></li><li><h5 id="演讲比赛系统"><a href="#演讲比赛系统" class="headerlink" title="演讲比赛系统"></a>演讲比赛系统</h5></li><li><h5 id="职工管理系统"><a href="#职工管理系统" class="headerlink" title="职工管理系统"></a>职工管理系统</h5></li><li><h5 id="渡一教育"><a href="#渡一教育" class="headerlink" title="渡一教育"></a>渡一教育</h5></li><li><h5 id="HTML、CSS、JS"><a href="#HTML、CSS、JS" class="headerlink" title="HTML、CSS、JS"></a>HTML、CSS、JS</h5></li><li><h5 id="豆瓣电影"><a href="#豆瓣电影" class="headerlink" title="豆瓣电影"></a>豆瓣电影</h5></li></ul><h2 id="2022-5月底-2022-9月"><a href="#2022-5月底-2022-9月" class="headerlink" title="2022/5月底-2022/9月"></a>2022/5月底-2022/9月</h2><ul><li><h5 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h5></li><li><h5 id="韩顺平"><a href="#韩顺平" class="headerlink" title="韩顺平"></a>韩顺平</h5></li><li><h5 id="零钱通"><a href="#零钱通" class="headerlink" title="零钱通"></a>零钱通</h5></li><li><h5 id="房屋出租"><a href="#房屋出租" class="headerlink" title="房屋出租"></a>房屋出租</h5></li><li><h5 id="类QQ通讯项目"><a href="#类QQ通讯项目" class="headerlink" title="类QQ通讯项目"></a>类QQ通讯项目</h5></li><li><h5 id="满汉楼餐厅"><a href="#满汉楼餐厅" class="headerlink" title="满汉楼餐厅"></a>满汉楼餐厅</h5></li></ul><h2 id="2022-9月-2022-10月"><a href="#2022-9月-2022-10月" class="headerlink" title="2022/9月-2022/10月"></a>2022/9月-2022/10月</h2><ul><li><h5 id="坦克大战"><a href="#坦克大战" class="headerlink" title="坦克大战"></a>坦克大战</h5></li><li><h5 id="Javaweb"><a href="#Javaweb" class="headerlink" title="Javaweb"></a>Javaweb</h5></li><li><h5 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h5></li></ul><h2 id="2022-10月-2022-12月"><a href="#2022-10月-2022-12月" class="headerlink" title="2022/10月-2022/12月"></a>2022/10月-2022/12月</h2><ul><li><h5 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h5></li><li><h5 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h5></li><li><h5 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h5></li><li><h5 id="GitHub托管了我的第一个网页-回忆如初-deng-2022-github-io"><a href="#GitHub托管了我的第一个网页-回忆如初-deng-2022-github-io" class="headerlink" title="GitHub托管了我的第一个网页 回忆如初 (deng-2022.github.io)"></a>GitHub托管了我的第一个网页 <a href="https://deng-2022.github.io/Memory/">回忆如初 (deng-2022.github.io)</a></h5></li><li><h5 id="当时还有HTML、CSS的底子，写了个简单的个人页面就紧急部署在GitHub上了，虽然似懂非懂，但这是我学编程以来第一次做出能够分享给别人、类似网站的学习成果，令我非常兴奋"><a href="#当时还有HTML、CSS的底子，写了个简单的个人页面就紧急部署在GitHub上了，虽然似懂非懂，但这是我学编程以来第一次做出能够分享给别人、类似网站的学习成果，令我非常兴奋" class="headerlink" title="当时还有HTML、CSS的底子，写了个简单的个人页面就紧急部署在GitHub上了，虽然似懂非懂，但这是我学编程以来第一次做出能够分享给别人、类似网站的学习成果，令我非常兴奋"></a>当时还有HTML、CSS的底子，写了个简单的个人页面就紧急部署在GitHub上了，虽然似懂非懂，但这是我学编程以来第一次做出能够分享给别人、类似网站的学习成果，令我非常兴奋</h5></li><li><h5 id="瑞吉外卖"><a href="#瑞吉外卖" class="headerlink" title="瑞吉外卖"></a>瑞吉外卖</h5></li></ul><h2 id="2022-01-26-10-12"><a href="#2022-01-26-10-12" class="headerlink" title="2022/01/26 10:12"></a>2022/01/26 10:12</h2><ul><li><h5 id="加入知识星球-编程导航"><a href="#加入知识星球-编程导航" class="headerlink" title="加入知识星球-编程导航"></a>加入知识星球-编程导航</h5></li><li><h5 id="Xmind"><a href="#Xmind" class="headerlink" title="Xmind"></a>Xmind</h5></li><li><h5 id="黑马点评"><a href="#黑马点评" class="headerlink" title="黑马点评"></a>黑马点评</h5></li></ul><h2 id="2023-2月-3月中旬"><a href="#2023-2月-3月中旬" class="headerlink" title="2023/2月-3月中旬"></a>2023/2月-3月中旬</h2><ul><li><h5 id="小游戏源码"><a href="#小游戏源码" class="headerlink" title="小游戏源码"></a>小游戏源码</h5></li><li><h5 id="坦克大战-1"><a href="#坦克大战-1" class="headerlink" title="坦克大战"></a>坦克大战</h5></li><li><h5 id="黄金矿工"><a href="#黄金矿工" class="headerlink" title="黄金矿工"></a>黄金矿工</h5></li><li><h5 id="跟着黑马阿玮老师的详细教程成功打包（详见《游戏打包》），并上传至网盘分享给了自己的好兄弟玩，这个当时还发了个朋友圈"><a href="#跟着黑马阿玮老师的详细教程成功打包（详见《游戏打包》），并上传至网盘分享给了自己的好兄弟玩，这个当时还发了个朋友圈" class="headerlink" title="跟着黑马阿玮老师的详细教程成功打包（详见《游戏打包》），并上传至网盘分享给了自己的好兄弟玩，这个当时还发了个朋友圈"></a>跟着黑马阿玮老师的详细教程成功打包（详见《游戏打包》），并上传至网盘分享给了自己的好兄弟玩，这个当时还发了个朋友圈</h5></li></ul><h2 id="2023-03-07"><a href="#2023-03-07" class="headerlink" title="2023/03/07"></a>2023/03/07</h2><ul><li><h5 id="搭建个人博客，Gitee托管博客站点"><a href="#搭建个人博客，Gitee托管博客站点" class="headerlink" title="搭建个人博客，Gitee托管博客站点"></a>搭建个人博客，Gitee托管博客站点</h5></li><li><h5 id="接下来的一周内我找了好多好看的壁纸，修改Fluid主题相关配置，打造了属于自己的特色个人博客"><a href="#接下来的一周内我找了好多好看的壁纸，修改Fluid主题相关配置，打造了属于自己的特色个人博客" class="headerlink" title="接下来的一周内我找了好多好看的壁纸，修改Fluid主题相关配置，打造了属于自己的特色个人博客"></a>接下来的一周内我找了好多好看的壁纸，修改Fluid主题相关配置，打造了属于自己的特色个人博客</h5></li></ul><h2 id="2023-3-10"><a href="#2023-3-10" class="headerlink" title="2023/3/10"></a>2023/3/10</h2><ul><li><h5 id="用户中心"><a href="#用户中心" class="headerlink" title="用户中心"></a>用户中心</h5></li></ul><h2 id="2023-03-24"><a href="#2023-03-24" class="headerlink" title="2023/03/24"></a>2023/03/24</h2><ul><li><h5 id="伙伴匹配"><a href="#伙伴匹配" class="headerlink" title="伙伴匹配"></a>伙伴匹配</h5></li><li><h5 id="Python爬虫"><a href="#Python爬虫" class="headerlink" title="Python爬虫"></a>Python爬虫</h5></li></ul><h2 id="2023-4月"><a href="#2023-4月" class="headerlink" title="2023/4月"></a>2023/4月</h2><ul><li><h5 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h5></li></ul><ul><li><h5 id="博客站点、文档站点"><a href="#博客站点、文档站点" class="headerlink" title="博客站点、文档站点"></a>博客站点、文档站点</h5></li></ul><h2 id="2023-05-20"><a href="#2023-05-20" class="headerlink" title="2023/05/20"></a>2023/05/20</h2><ul><li><h5 id="Electron开发实战–从零构建类QQ项目，了解Electron"><a href="#Electron开发实战–从零构建类QQ项目，了解Electron" class="headerlink" title="Electron开发实战–从零构建类QQ项目，了解Electron"></a>Electron开发实战–从零构建类QQ项目，了解Electron</h5></li></ul><h2 id="2023-06-02"><a href="#2023-06-02" class="headerlink" title="2023/06/02"></a>2023/06/02</h2><ul><li><h5 id="今天，伙伴匹配系统主要功能基本完成"><a href="#今天，伙伴匹配系统主要功能基本完成" class="headerlink" title="今天，伙伴匹配系统主要功能基本完成"></a>今天，伙伴匹配系统主要功能基本完成</h5></li><li><h5 id="跟着鱼皮的录播，打算部署上线这个项目"><a href="#跟着鱼皮的录播，打算部署上线这个项目" class="headerlink" title="跟着鱼皮的录播，打算部署上线这个项目"></a>跟着鱼皮的录播，打算部署上线这个项目</h5></li></ul><h2 id="2023-06-03"><a href="#2023-06-03" class="headerlink" title="2023/06/03"></a>2023/06/03</h2><ul><li><h5 id="鱼皮兄说得好："><a href="#鱼皮兄说得好：" class="headerlink" title="鱼皮兄说得好："></a>鱼皮兄说得好：</h5></li><li><h5 id="Java巩固基础就在牛客选择题、力扣算法题上下功夫；"><a href="#Java巩固基础就在牛客选择题、力扣算法题上下功夫；" class="headerlink" title="Java巩固基础就在牛客选择题、力扣算法题上下功夫；"></a>Java巩固基础就在牛客选择题、力扣算法题上下功夫；</h5></li><li><h5 id="Java进阶主要持续学习四点："><a href="#Java进阶主要持续学习四点：" class="headerlink" title="Java进阶主要持续学习四点："></a>Java进阶主要持续学习四点：</h5></li><li><h5 id="Java丰富的类库和生态（工具库guava、apache、commons，缓存库jedis、caffine等）多做项目多积累Java并发编程、熟练运用Java并发包编程，《Java并发编程的艺术》"><a href="#Java丰富的类库和生态（工具库guava、apache、commons，缓存库jedis、caffine等）多做项目多积累Java并发编程、熟练运用Java并发包编程，《Java并发编程的艺术》" class="headerlink" title="Java丰富的类库和生态（工具库guava、apache、commons，缓存库jedis、caffine等）多做项目多积累Java并发编程、熟练运用Java并发包编程，《Java并发编程的艺术》"></a>Java丰富的类库和生态（工具库guava、apache、commons，缓存库jedis、caffine等）多做项目多积累Java并发编程、熟练运用Java并发包编程，《Java并发编程的艺术》</h5></li><li><h5 id="Jvm，Jvm调优《深入理解Java虚拟机》"><a href="#Jvm，Jvm调优《深入理解Java虚拟机》" class="headerlink" title="Jvm，Jvm调优《深入理解Java虚拟机》"></a>Jvm，Jvm调优《深入理解Java虚拟机》</h5></li><li><h5 id="阅读源码"><a href="#阅读源码" class="headerlink" title="阅读源码"></a>阅读源码</h5></li><li><h5 id="Java特性，探针、代理、反射等"><a href="#Java特性，探针、代理、反射等" class="headerlink" title="Java特性，探针、代理、反射等"></a>Java特性，探针、代理、反射等</h5></li><li><h5 id="下定决心购买《疯狂Java讲义》上下两册，一百一十五块大洋"><a href="#下定决心购买《疯狂Java讲义》上下两册，一百一十五块大洋" class="headerlink" title="下定决心购买《疯狂Java讲义》上下两册，一百一十五块大洋"></a>下定决心购买《疯狂Java讲义》上下两册，一百一十五块大洋</h5></li><li><h5 id="学习GitHub相关操作，学习如何在线查看-运行代码、拉取代码至本地，在GitHub上学习优质项目"><a href="#学习GitHub相关操作，学习如何在线查看-运行代码、拉取代码至本地，在GitHub上学习优质项目" class="headerlink" title="学习GitHub相关操作，学习如何在线查看/运行代码、拉取代码至本地，在GitHub上学习优质项目"></a>学习GitHub相关操作，学习如何在线查看/运行代码、拉取代码至本地，在GitHub上学习优质项目</h5></li><li><h5 id="筹划将Gitee上的项目仓库也同步到GitHub上，之前是因为Gitee没有网络问题才选择它的，现在发现steam-百分百解决这个问题"><a href="#筹划将Gitee上的项目仓库也同步到GitHub上，之前是因为Gitee没有网络问题才选择它的，现在发现steam-百分百解决这个问题" class="headerlink" title="筹划将Gitee上的项目仓库也同步到GitHub上，之前是因为Gitee没有网络问题才选择它的，现在发现steam++百分百解决这个问题"></a>筹划将Gitee上的项目仓库也同步到GitHub上，之前是因为Gitee没有网络问题才选择它的，现在发现steam++百分百解决这个问题</h5></li><li><h5 id="康文昌，从零开始的编程之路，了解到uni-app-uniCloud-是跨端跨云的开发方案"><a href="#康文昌，从零开始的编程之路，了解到uni-app-uniCloud-是跨端跨云的开发方案" class="headerlink" title="康文昌，从零开始的编程之路，了解到uni-app + uniCloud 是跨端跨云的开发方案"></a>康文昌，从零开始的编程之路，了解到uni-app + uniCloud 是跨端跨云的开发方案</h5></li><li><h5 id="白嫖了几个阿里云免费赠送3个月试用时效的服务"><a href="#白嫖了几个阿里云免费赠送3个月试用时效的服务" class="headerlink" title="白嫖了几个阿里云免费赠送3个月试用时效的服务"></a>白嫖了几个阿里云免费赠送3个月试用时效的服务</h5></li><li><h5 id="回头学习用户中心的部署上线流程，着手上线用户中心和伙伴匹配"><a href="#回头学习用户中心的部署上线流程，着手上线用户中心和伙伴匹配" class="headerlink" title="回头学习用户中心的部署上线流程，着手上线用户中心和伙伴匹配"></a>回头学习用户中心的部署上线流程，着手上线用户中心和伙伴匹配</h5></li></ul><h2 id="2023-06-04"><a href="#2023-06-04" class="headerlink" title="2023/06/04"></a>2023/06/04</h2><ul><li><h5 id="日常牛客10道Java基础题"><a href="#日常牛客10道Java基础题" class="headerlink" title="日常牛客10道Java基础题"></a>日常牛客10道Java基础题</h5></li><li><h5 id="阅读LearnAndRecord一篇文章，巩固短语积累"><a href="#阅读LearnAndRecord一篇文章，巩固短语积累" class="headerlink" title="阅读LearnAndRecord一篇文章，巩固短语积累"></a>阅读LearnAndRecord一篇文章，巩固短语积累</h5></li><li><h5 id="计组温习巩固概论基础，现阶段学习存储器相关内容"><a href="#计组温习巩固概论基础，现阶段学习存储器相关内容" class="headerlink" title="计组温习巩固概论基础，现阶段学习存储器相关内容"></a>计组温习巩固概论基础，现阶段学习存储器相关内容</h5></li><li><h5 id="用户中心第14集，初步了解到项目部署上线的三种方法：原始方法、宝塔、容器，部分笔记已保存在《项目部署及上线》一文，这两天了解租用云服务器，抓紧尝试部署上线用户中心项目"><a href="#用户中心第14集，初步了解到项目部署上线的三种方法：原始方法、宝塔、容器，部分笔记已保存在《项目部署及上线》一文，这两天了解租用云服务器，抓紧尝试部署上线用户中心项目" class="headerlink" title="用户中心第14集，初步了解到项目部署上线的三种方法：原始方法、宝塔、容器，部分笔记已保存在《项目部署及上线》一文，这两天了解租用云服务器，抓紧尝试部署上线用户中心项目"></a>用户中心第14集，初步了解到项目部署上线的三种方法：原始方法、宝塔、容器，部分笔记已保存在《项目部署及上线》一文，这两天了解租用云服务器，抓紧尝试部署上线用户中心项目</h5></li><li><h5 id="跟着康文昌巩固学习了git-GitHub，部分笔记已记录在《git-GitHub进阶学习》中"><a href="#跟着康文昌巩固学习了git-GitHub，部分笔记已记录在《git-GitHub进阶学习》中" class="headerlink" title="跟着康文昌巩固学习了git/GitHub，部分笔记已记录在《git-GitHub进阶学习》中"></a>跟着康文昌巩固学习了git/GitHub，部分笔记已记录在《git-GitHub进阶学习》中</h5></li><li><h5 id="顺便记录以下，这应该是我自入门Java至今整整一年了吧，值得纪念一下，这一年学到不少东西了"><a href="#顺便记录以下，这应该是我自入门Java至今整整一年了吧，值得纪念一下，这一年学到不少东西了" class="headerlink" title="顺便记录以下，这应该是我自入门Java至今整整一年了吧，值得纪念一下，这一年学到不少东西了"></a>顺便记录以下，这应该是我自入门Java至今整整一年了吧，值得纪念一下，这一年学到不少东西了</h5></li><li><h2 id="2023-06-05"><a href="#2023-06-05" class="headerlink" title="2023/06/05"></a>2023/06/05</h2></li><li><h5 id="上午计组刷了半小时编程导航嘉宾问答，感触颇深，学到好多相关知识，心态也更好了，这可比刷DY、KS有意思多了"><a href="#上午计组刷了半小时编程导航嘉宾问答，感触颇深，学到好多相关知识，心态也更好了，这可比刷DY、KS有意思多了" class="headerlink" title="上午计组刷了半小时编程导航嘉宾问答，感触颇深，学到好多相关知识，心态也更好了，这可比刷DY、KS有意思多了"></a>上午计组刷了半小时编程导航嘉宾问答，感触颇深，学到好多相关知识，心态也更好了，这可比刷DY、KS有意思多了</h5></li><li><h5 id="搞了一天阿里云服务器ECS建站"><a href="#搞了一天阿里云服务器ECS建站" class="headerlink" title="搞了一天阿里云服务器ECS建站"></a>搞了一天阿里云服务器ECS建站</h5></li><li><h5 id="用前两天白嫖的3个月ECS云服务器跟着视频教学搞的：1-阿里云服务器购买流程-哔哩哔哩-bilibili"><a href="#用前两天白嫖的3个月ECS云服务器跟着视频教学搞的：1-阿里云服务器购买流程-哔哩哔哩-bilibili" class="headerlink" title="用前两天白嫖的3个月ECS云服务器跟着视频教学搞的：1.阿里云服务器购买流程_哔哩哔哩_bilibili"></a>用前两天白嫖的3个月ECS云服务器跟着视频教学搞的：<a href="https://www.bilibili.com/video/BV12b4y18725?p=1&vd_source=4314e5bd742ea904c9675af8a6b4b07e">1.阿里云服务器购买流程_哔哩哔哩_bilibili</a></h5></li><li><h5 id="了解了云服务器的购买、运行及相关配置、安装宝塔面板，做到将域名解析到阿里云服务器时卡住了，因为我还没有已备案的域名"><a href="#了解了云服务器的购买、运行及相关配置、安装宝塔面板，做到将域名解析到阿里云服务器时卡住了，因为我还没有已备案的域名" class="headerlink" title="了解了云服务器的购买、运行及相关配置、安装宝塔面板，做到将域名解析到阿里云服务器时卡住了，因为我还没有已备案的域名"></a>了解了云服务器的购买、运行及相关配置、安装宝塔面板，做到将域名解析到阿里云服务器时卡住了，因为我还没有已备案的域名</h5></li><li><h5 id="又学习了解了域名的购买、备案，找到一个申请免费域名的网站（免备案），具体教程如下："><a href="#又学习了解了域名的购买、备案，找到一个申请免费域名的网站（免备案），具体教程如下：" class="headerlink" title="又学习了解了域名的购买、备案，找到一个申请免费域名的网站（免备案），具体教程如下："></a>又学习了解了域名的购买、备案，找到一个申请免费域名的网站（免备案），具体教程如下：</h5></li><li><p><a href="https://www.bilibili.com/video/BV1gs4y1J7xZ/?spm_id_from=333.337.search-card.all.click&vd_source=4314e5bd742ea904c9675af8a6b4b07e">永久免费域名申请教程 百分之百成功_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Hg4y1V7eB/?spm_id_from=trigger_reload&vd_source=4314e5bd742ea904c9675af8a6b4b07e">免费白嫖顶级域名！2023年最新免费域名注册教程：支持com、net，二级域名永久有效！切勿错过 | 零度解说_哔哩哔哩_bilibili</a></p></li><li><h5 id="20道牛客Java基础题"><a href="#20道牛客Java基础题" class="headerlink" title="20道牛客Java基础题"></a>20道牛客Java基础题</h5></li><li><h5 id="用户中心和伙伴匹配项目成功推送到GitHub，master-main分支问题得到解决，这个博客写的很棒："><a href="#用户中心和伙伴匹配项目成功推送到GitHub，master-main分支问题得到解决，这个博客写的很棒：" class="headerlink" title="用户中心和伙伴匹配项目成功推送到GitHub，master/main分支问题得到解决，这个博客写的很棒："></a>用户中心和伙伴匹配项目成功推送到GitHub，master/main分支问题得到解决，这个博客写的很棒：</h5></li><li><p><a href="https://blog.csdn.net/gongdamrgao/article/details/115032436">(59条消息) 关于git的问题：error: src refspec main does not match any_TripleGold.的博客-CSDN博客</a></p></li><li><h5 id="有什么问题什么想法上编程导航找资料就行了，太方便了"><a href="#有什么问题什么想法上编程导航找资料就行了，太方便了" class="headerlink" title="有什么问题什么想法上编程导航找资料就行了，太方便了"></a>有什么问题什么想法上编程导航找资料就行了，太方便了</h5></li></ul><h2 id="2023-06-06"><a href="#2023-06-06" class="headerlink" title="2023/06/06"></a>2023/06/06</h2><ul><li><h5 id="伙伴匹配暂时停止独立开发，计划拉取一位优秀星球伙伴的开源代码，观摩人家的实现思路，照葫芦画瓢，慢慢优化"><a href="#伙伴匹配暂时停止独立开发，计划拉取一位优秀星球伙伴的开源代码，观摩人家的实现思路，照葫芦画瓢，慢慢优化" class="headerlink" title="伙伴匹配暂时停止独立开发，计划拉取一位优秀星球伙伴的开源代码，观摩人家的实现思路，照葫芦画瓢，慢慢优化"></a>伙伴匹配暂时停止独立开发，计划拉取一位优秀星球伙伴的开源代码，观摩人家的实现思路，照葫芦画瓢，慢慢优化</h5></li><li><h5 id="巩固单词积累，LearnAndRecord一篇文章"><a href="#巩固单词积累，LearnAndRecord一篇文章" class="headerlink" title="巩固单词积累，LearnAndRecord一篇文章"></a>巩固单词积累，LearnAndRecord一篇文章</h5></li><li><h5 id="数据库实验报告：索引、视图、集合查询"><a href="#数据库实验报告：索引、视图、集合查询" class="headerlink" title="数据库实验报告：索引、视图、集合查询"></a>数据库实验报告：索引、视图、集合查询</h5></li><li><p><a href="https://blog.csdn.net/Mr_tianyanxiaobai/article/details/119873655">(59条消息) MySQL 高级(2): 索引的概念，分类，性能分析，索引失效_Mr_tianyanxiaobai的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/qq_45736680/article/details/130781753">(59条消息) 《MySQL必修课：索引大决战！你不得不知道的各种索引类型和实现原理！》_Java-You的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_34408918/article/details/113416376">(59条消息) mysql 等值唯一索引_mysql索引之一：索引基础（B-Tree索引、哈希索引、聚簇索引、全文(Full-text)索引区别）（唯一索引、最左前缀索引、前缀索引、多列索引）…_熔岩巨兽 墨菲特的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_36081485/article/details/113143402">(59条消息) mysql 索引修改_mysql添加、修改、删除、查询索引_严素的博客-CSDN博客</a></p></li><li><p><a href="http://c.biancheng.net/view/2607.html">MySQL修改和删除索引（DROP INDEX） (biancheng.net)</a></p></li><li><p><a href="https://blog.csdn.net/weixin_35905707/article/details/116542136">(59条消息) oracle修改索引名称语句,5.4.4 修改索引（1）_Guohao Li的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_42214698/article/details/123671432">(59条消息) 3. 集合查询：union（并）、 except（差）、intersect（交）_intersect组合查询_你说的白是什么白_的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/ChaoYue_miku/article/details/121558508">(59条消息) MySQL实现交集查询和差集查询以及对称差查询_mysql交集查询_ChaoYue_miku的博客-CSDN博客</a></p></li><li><h5 id="晚上了解了下域名购买及备案流程，想着自己赶紧也买一个，斟酌了半天：memory-life-fun，7块钱首年挺划算的"><a href="#晚上了解了下域名购买及备案流程，想着自己赶紧也买一个，斟酌了半天：memory-life-fun，7块钱首年挺划算的" class="headerlink" title="晚上了解了下域名购买及备案流程，想着自己赶紧也买一个，斟酌了半天：memory-life.fun，7块钱首年挺划算的"></a>晚上了解了下域名购买及备案流程，想着自己赶紧也买一个，斟酌了半天：memory-life.fun，7块钱首年挺划算的</h5></li><li><h5 id="但购买-注册域名要有实名认证的信息模板，过几天才能注册到了，推荐下面这个系列："><a href="#但购买-注册域名要有实名认证的信息模板，过几天才能注册到了，推荐下面这个系列：" class="headerlink" title="但购买/注册域名要有实名认证的信息模板，过几天才能注册到了，推荐下面这个系列："></a>但购买/注册域名要有实名认证的信息模板，过几天才能注册到了，推荐下面这个系列：</h5></li><li><p><a href="https://www.bilibili.com/video/BV1cf4y1d75U/?spm_id_from=333.788&vd_source=4314e5bd742ea904c9675af8a6b4b07e">【买个域名】域名购买知识 域名购买教程| 8块钱买入3000万卖出 ｜ 一起来买个域名 | 域名如何选 ｜域名购买 ｜ 域名选购_哔哩哔哩_bilibili</a></p></li><li><h5 id="《疯狂Java讲义》已收到"><a href="#《疯狂Java讲义》已收到" class="headerlink" title="《疯狂Java讲义》已收到"></a>《疯狂Java讲义》已收到</h5></li></ul><h2 id="2023-06-07"><a href="#2023-06-07" class="headerlink" title="2023/06/07"></a>2023/06/07</h2><ul><li><h5 id="刷星球嘉宾问答和球友开源项目分享，上CSDN和知乎找资源"><a href="#刷星球嘉宾问答和球友开源项目分享，上CSDN和知乎找资源" class="headerlink" title="刷星球嘉宾问答和球友开源项目分享，上CSDN和知乎找资源"></a>刷星球嘉宾问答和球友开源项目分享，上CSDN和知乎找资源</h5></li><li><h5 id="靠前几天学到的git-GitHub进阶，拉取了两位球友的用户中心和伙伴匹配开源代码，访问了线上地址，并成功在本地运行"><a href="#靠前几天学到的git-GitHub进阶，拉取了两位球友的用户中心和伙伴匹配开源代码，访问了线上地址，并成功在本地运行" class="headerlink" title="靠前几天学到的git/GitHub进阶，拉取了两位球友的用户中心和伙伴匹配开源代码，访问了线上地址，并成功在本地运行"></a>靠前几天学到的git/GitHub进阶，拉取了两位球友的用户中心和伙伴匹配开源代码，访问了线上地址，并成功在本地运行</h5></li><li><h5 id="注意点：数据库改成你本地的，前端请求url是否正确，注意看Readme文档，就能正常跑起来了"><a href="#注意点：数据库改成你本地的，前端请求url是否正确，注意看Readme文档，就能正常跑起来了" class="headerlink" title="注意点：数据库改成你本地的，前端请求url是否正确，注意看Readme文档，就能正常跑起来了"></a>注意点：数据库改成你本地的，前端请求url是否正确，注意看Readme文档，就能正常跑起来了</h5></li><li><h5 id="Hexo-Gitee博客搭建，找时间完善一下这部分笔记"><a href="#Hexo-Gitee博客搭建，找时间完善一下这部分笔记" class="headerlink" title="Hexo+Gitee博客搭建，找时间完善一下这部分笔记"></a>Hexo+Gitee博客搭建，找时间完善一下这部分笔记</h5></li><li><h5 id="实名认证模板审核通过了，成功注册第一个域名：memory-life-fun，接下来就是域名备案了"><a href="#实名认证模板审核通过了，成功注册第一个域名：memory-life-fun，接下来就是域名备案了" class="headerlink" title="实名认证模板审核通过了，成功注册第一个域名：memory-life.fun，接下来就是域名备案了"></a>实名认证模板审核通过了，成功注册第一个域名：memory-life.fun，接下来就是域名备案了</h5></li><li><h5 id="注册表操作右键菜单"><a href="#注册表操作右键菜单" class="headerlink" title="注册表操作右键菜单"></a>注册表操作右键菜单</h5></li></ul><h2 id="2023-06-08"><a href="#2023-06-08" class="headerlink" title="2023/06/08"></a>2023/06/08</h2><ul><li><h5 id="日常阅读LearnAndRecord一篇文章"><a href="#日常阅读LearnAndRecord一篇文章" class="headerlink" title="日常阅读LearnAndRecord一篇文章"></a>日常阅读LearnAndRecord一篇文章</h5></li><li><h5 id="看了一遍球友的篝火项目，现阶段争取尽快自己实现好友功能"><a href="#看了一遍球友的篝火项目，现阶段争取尽快自己实现好友功能" class="headerlink" title="看了一遍球友的篝火项目，现阶段争取尽快自己实现好友功能"></a>看了一遍球友的篝火项目，现阶段争取尽快自己实现好友功能</h5></li><li><h5 id="编程导航星球认识了校友，加了微信方便联系"><a href="#编程导航星球认识了校友，加了微信方便联系" class="headerlink" title="编程导航星球认识了校友，加了微信方便联系"></a>编程导航星球认识了校友，加了微信方便联系</h5></li><li><h5 id="持续优化伙伴匹配，明天着手实现好友功能（开发记录详见《伙伴匹配-开发文档》）"><a href="#持续优化伙伴匹配，明天着手实现好友功能（开发记录详见《伙伴匹配-开发文档》）" class="headerlink" title="持续优化伙伴匹配，明天着手实现好友功能（开发记录详见《伙伴匹配-开发文档》）"></a>持续优化伙伴匹配，明天着手实现好友功能（开发记录详见《伙伴匹配-开发文档》）</h5></li><li><h5 id="补10道牛客Java基础题"><a href="#补10道牛客Java基础题" class="headerlink" title="补10道牛客Java基础题"></a>补10道牛客Java基础题</h5></li><li><h5 id="检查配置一下图床吧，再了解了解Gitee和GitHub的Page服务"><a href="#检查配置一下图床吧，再了解了解Gitee和GitHub的Page服务" class="headerlink" title="检查配置一下图床吧，再了解了解Gitee和GitHub的Page服务"></a>检查配置一下图床吧，再了解了解Gitee和GitHub的Page服务</h5></li><li><h5 id="现阶段学习方向：备考英语6级、备考期末、数据库-计组实验报告、文献检索报告、伙伴匹配、云开发、Python爬虫开源项目、Gitee-GitHub"><a href="#现阶段学习方向：备考英语6级、备考期末、数据库-计组实验报告、文献检索报告、伙伴匹配、云开发、Python爬虫开源项目、Gitee-GitHub" class="headerlink" title="现阶段学习方向：备考英语6级、备考期末、数据库/计组实验报告、文献检索报告、伙伴匹配、云开发、Python爬虫开源项目、Gitee/GitHub"></a>现阶段学习方向：备考英语6级、备考期末、数据库/计组实验报告、文献检索报告、伙伴匹配、云开发、Python爬虫开源项目、Gitee/GitHub</h5></li><li><p><a href="https://blog.csdn.net/striveb/article/details/82780319">(62条消息) 浅谈servlet源码_striveb的博客-CSDN博客</a></p></li></ul><h2 id="2023-06-09"><a href="#2023-06-09" class="headerlink" title="2023/06/09"></a>2023/06/09</h2><ul><li><h5 id="完成数据库实验大作业，学了一早上Jsp"><a href="#完成数据库实验大作业，学了一早上Jsp" class="headerlink" title="完成数据库实验大作业，学了一早上Jsp"></a>完成数据库实验大作业，学了一早上Jsp</h5></li><li><h5 id="遇到两个问题："><a href="#遇到两个问题：" class="headerlink" title="遇到两个问题："></a>遇到两个问题：</h5></li><li><h5 id="引进servlet包，maven报错，是因为D-softWare-Maven-apache-maven-3-6-1-conf-settings-xml下的jdk配置过期了，引进新技术就报错了，添加以下插件配置即可"><a href="#引进servlet包，maven报错，是因为D-softWare-Maven-apache-maven-3-6-1-conf-settings-xml下的jdk配置过期了，引进新技术就报错了，添加以下插件配置即可" class="headerlink" title="引进servlet包，maven报错，是因为D:\softWare\Maven\apache-maven-3.6.1\conf\settings.xml下的jdk配置过期了，引进新技术就报错了，添加以下插件配置即可"></a>引进servlet包，maven报错，是因为D:\softWare\Maven\apache-maven-3.6.1\conf\settings.xml下的jdk配置过期了，引进新技术就报错了，添加以下插件配置即可</h5></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jdk-1.7<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">jdk</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">jdk</span>&gt;</span> <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span> <br>     <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span> <br>       <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span> <br>       <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span> <br>       <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span>1.7<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span> <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span> <br>   <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="一写jsp项目就跑不起来，直接显示："><a href="#一写jsp项目就跑不起来，直接显示：" class="headerlink" title="一写jsp项目就跑不起来，直接显示："></a>一写jsp项目就跑不起来，直接显示：</h5></li><li><h5 id="发现报错："><a href="#发现报错：" class="headerlink" title="发现报错："></a>发现报错：</h5></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">ZipException opening &quot;jsp-api-2.2.jar&quot;: zip <span class="hljs-keyword">END</span> <span class="hljs-keyword">header</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="maven下没有2-2版本的jsp包，pom-xml配置下换成2-1就行了"><a href="#maven下没有2-2版本的jsp包，pom-xml配置下换成2-1就行了" class="headerlink" title="maven下没有2.2版本的jsp包，pom.xml配置下换成2.1就行了"></a>maven下没有2.2版本的jsp包，pom.xml配置下换成2.1就行了</h5></li><li><h5 id="数据库实验大作业设计完成！巩固学习了servlet、request、response、jsp、Mybatis等知识，收获颇深，我要把这个项目推送到Gitee-GitHub上，哈哈"><a href="#数据库实验大作业设计完成！巩固学习了servlet、request、response、jsp、Mybatis等知识，收获颇深，我要把这个项目推送到Gitee-GitHub上，哈哈" class="headerlink" title="数据库实验大作业设计完成！巩固学习了servlet、request、response、jsp、Mybatis等知识，收获颇深，我要把这个项目推送到Gitee/GitHub上，哈哈"></a>数据库实验大作业设计完成！巩固学习了servlet、request、response、jsp、Mybatis等知识，收获颇深，我要把这个项目推送到Gitee/GitHub上，哈哈</h5></li><li><h5 id="计组存储器上半部分教材已看完"><a href="#计组存储器上半部分教材已看完" class="headerlink" title="计组存储器上半部分教材已看完"></a>计组存储器上半部分教材已看完</h5></li></ul><h2 id="2023-06-10"><a href="#2023-06-10" class="headerlink" title="2023/06/10"></a>2023/06/10</h2><ul><li><h5 id="早晚各做了一篇六级长篇阅读，越来越得心应手了，看真题作文、汉译英"><a href="#早晚各做了一篇六级长篇阅读，越来越得心应手了，看真题作文、汉译英" class="headerlink" title="早晚各做了一篇六级长篇阅读，越来越得心应手了，看真题作文、汉译英"></a>早晚各做了一篇六级长篇阅读，越来越得心应手了，看真题作文、汉译英</h5></li><li><h5 id="妈的，还想着备案域名呢，结果我的这台免费服务器申请不了服务码，GG了"><a href="#妈的，还想着备案域名呢，结果我的这台免费服务器申请不了服务码，GG了" class="headerlink" title="妈的，还想着备案域名呢，结果我的这台免费服务器申请不了服务码，GG了"></a>妈的，还想着备案域名呢，结果我的这台免费服务器申请不了服务码，GG了</h5></li><li><h5 id="数据库SQL：实体完整性、参照完整性、用户自定义完整性的定义、删除、检验，有时间总结下"><a href="#数据库SQL：实体完整性、参照完整性、用户自定义完整性的定义、删除、检验，有时间总结下" class="headerlink" title="数据库SQL：实体完整性、参照完整性、用户自定义完整性的定义、删除、检验，有时间总结下"></a>数据库SQL：实体完整性、参照完整性、用户自定义完整性的定义、删除、检验，有时间总结下</h5></li><li><p><a href="https://zhuanlan.zhihu.com/p/553929261">Mysql怎么删除unique key（唯一约束） - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/weixin_46220576/article/details/124323123">(63条消息) 实验三：完整性语言实验_验证参照完整性_而 已的博客-CSDN博客</a></p></li><li><h5 id="又过了遍前后端多环境开发、宝塔Linux部署、Docker部署，有时间动手操作一把"><a href="#又过了遍前后端多环境开发、宝塔Linux部署、Docker部署，有时间动手操作一把" class="headerlink" title="又过了遍前后端多环境开发、宝塔Linux部署、Docker部署，有时间动手操作一把"></a>又过了遍前后端多环境开发、宝塔Linux部署、Docker部署，有时间动手操作一把</h5></li><li><h5 id="优化了下数据库设计作业，写CSS把表的样式给美化了一下"><a href="#优化了下数据库设计作业，写CSS把表的样式给美化了一下" class="headerlink" title="优化了下数据库设计作业，写CSS把表的样式给美化了一下"></a>优化了下数据库设计作业，写CSS把表的样式给美化了一下</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230610174455011.png" alt="image-20230610174455011"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230610174530299.png" alt="image-20230610174530299"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230610174550692.png" alt="image-20230610174550692"></p><ul><li><h5 id="实验报告：数据库开发大作业开了个头"><a href="#实验报告：数据库开发大作业开了个头" class="headerlink" title="实验报告：数据库开发大作业开了个头"></a>实验报告：数据库开发大作业开了个头</h5></li></ul><h2 id="2023-06-11"><a href="#2023-06-11" class="headerlink" title="2023/06/11"></a>2023/06/11</h2><ul><li><h5 id="巩固最近做过的长篇阅读，积累英语写作表达"><a href="#巩固最近做过的长篇阅读，积累英语写作表达" class="headerlink" title="巩固最近做过的长篇阅读，积累英语写作表达"></a>巩固最近做过的长篇阅读，积累英语写作表达</h5></li><li><h5 id="数据库开发大作业完成"><a href="#数据库开发大作业完成" class="headerlink" title="数据库开发大作业完成"></a>数据库开发大作业完成</h5></li><li><h5 id="拿到历年计组、数据库期末考题了，抓紧时间复习了，还有实验"><a href="#拿到历年计组、数据库期末考题了，抓紧时间复习了，还有实验" class="headerlink" title="拿到历年计组、数据库期末考题了，抓紧时间复习了，还有实验"></a>拿到历年计组、数据库期末考题了，抓紧时间复习了，还有实验</h5></li><li><h5 id="数据库系统概论过了一遍"><a href="#数据库系统概论过了一遍" class="headerlink" title="数据库系统概论过了一遍"></a>数据库系统概论过了一遍</h5></li><li><h5 id="伙伴匹配的验证码登录功能初步开发完成"><a href="#伙伴匹配的验证码登录功能初步开发完成" class="headerlink" title="伙伴匹配的验证码登录功能初步开发完成"></a>伙伴匹配的验证码登录功能初步开发完成</h5></li></ul><h2 id="2023-06-12"><a href="#2023-06-12" class="headerlink" title="2023/06/12"></a>2023/06/12</h2><ul><li><h5 id="计组控制单元、CPU已过"><a href="#计组控制单元、CPU已过" class="headerlink" title="计组控制单元、CPU已过"></a>计组控制单元、CPU已过</h5></li><li><h5 id="伙伴匹配的验证码登录功能开发完成"><a href="#伙伴匹配的验证码登录功能开发完成" class="headerlink" title="伙伴匹配的验证码登录功能开发完成"></a>伙伴匹配的验证码登录功能开发完成</h5></li></ul><h2 id="2023-06-12-2023-06-14"><a href="#2023-06-12-2023-06-14" class="headerlink" title="2023/06/12 - 2023/06/14"></a>2023/06/12 - 2023/06/14</h2><ul><li><h5 id="备考四六级、备考期末中……"><a href="#备考四六级、备考期末中……" class="headerlink" title="备考四六级、备考期末中……"></a>备考四六级、备考期末中……</h5></li></ul><h2 id="2023-06-14"><a href="#2023-06-14" class="headerlink" title="2023/06/14"></a>2023/06/14</h2><ul><li><h5 id="伙伴匹配-注册功能完成"><a href="#伙伴匹配-注册功能完成" class="headerlink" title="伙伴匹配 注册功能完成"></a>伙伴匹配 注册功能完成</h5></li></ul><h2 id="2023-06-15"><a href="#2023-06-15" class="headerlink" title="2023/06/15"></a>2023/06/15</h2><ul><li><h5 id="牛客Java基础题共844题一轮刷题完成，用时整4个月，纪念一下"><a href="#牛客Java基础题共844题一轮刷题完成，用时整4个月，纪念一下" class="headerlink" title="牛客Java基础题共844题一轮刷题完成，用时整4个月，纪念一下"></a>牛客Java基础题共844题一轮刷题完成，用时整4个月，纪念一下</h5></li></ul><h2 id="2023-06-15-2023-06-17"><a href="#2023-06-15-2023-06-17" class="headerlink" title="2023/06/15-2023/06/17"></a>2023/06/15-2023/06/17</h2><ul><li><h5 id="疯狂备考六级英语中"><a href="#疯狂备考六级英语中" class="headerlink" title="疯狂备考六级英语中"></a>疯狂备考六级英语中</h5></li></ul><h2 id="2023-06-18"><a href="#2023-06-18" class="headerlink" title="2023/06/18"></a>2023/06/18</h2><ul><li><h5 id="vueRoute导航守卫"><a href="#vueRoute导航守卫" class="headerlink" title="vueRoute导航守卫"></a>vueRoute导航守卫</h5></li><li><h5 id="再次了解Nginx-【狂神说】Nginx最新教程通俗易懂，40分钟搞定！-哔哩哔哩-bilibili"><a href="#再次了解Nginx-【狂神说】Nginx最新教程通俗易懂，40分钟搞定！-哔哩哔哩-bilibili" class="headerlink" title="再次了解Nginx 【狂神说】Nginx最新教程通俗易懂，40分钟搞定！_哔哩哔哩_bilibili"></a>再次了解Nginx <a href="https://www.bilibili.com/video/BV1F5411J7vK/?spm_id_from=333.337.search-card.all.click">【狂神说】Nginx最新教程通俗易懂，40分钟搞定！_哔哩哔哩_bilibili</a></h5></li><li><h5 id="鱼皮的编程资源推荐-程序员必装的25个软件，你都用过没？开发-办公-效率-创作-摸鱼-哔哩哔哩-bilibili"><a href="#鱼皮的编程资源推荐-程序员必装的25个软件，你都用过没？开发-办公-效率-创作-摸鱼-哔哩哔哩-bilibili" class="headerlink" title="鱼皮的编程资源推荐 程序员必装的25个软件，你都用过没？开发 | 办公 | 效率 | 创作 | 摸鱼_哔哩哔哩_bilibili"></a>鱼皮的编程资源推荐 <a href="https://www.bilibili.com/video/BV16S4y167Jp/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=4314e5bd742ea904c9675af8a6b4b07e">程序员必装的25个软件，你都用过没？开发 | 办公 | 效率 | 创作 | 摸鱼_哔哩哔哩_bilibili</a></h5></li><li><h5 id="狂神的kuangstudy-https-www-kuangstudy-com"><a href="#狂神的kuangstudy-https-www-kuangstudy-com" class="headerlink" title="狂神的kuangstudy https://www.kuangstudy.com/"></a>狂神的kuangstudy <a href="https://www.kuangstudy.com/">https://www.kuangstudy.com/</a></h5></li><li><h5 id="把学过的Linux捡起来，太久没用过了"><a href="#把学过的Linux捡起来，太久没用过了" class="headerlink" title="把学过的Linux捡起来，太久没用过了"></a>把学过的Linux捡起来，太久没用过了</h5></li><li><h5 id="抽空看完《疯狂Java讲义》前两章，写的不错"><a href="#抽空看完《疯狂Java讲义》前两章，写的不错" class="headerlink" title="抽空看完《疯狂Java讲义》前两章，写的不错"></a>抽空看完《疯狂Java讲义》前两章，写的不错</h5></li><li><h5 id="拖欠的任务：Gitee-GitHub-page服务、伙伴匹配前后端多环境开发和部署上线、Python爬虫项目、JavaJUC-高并发、开放接口平台、SpringCloud、超级玛丽小游戏，期末备考周，太忙了实在没精力学，只好是抽空上网看看博客，了解了解"><a href="#拖欠的任务：Gitee-GitHub-page服务、伙伴匹配前后端多环境开发和部署上线、Python爬虫项目、JavaJUC-高并发、开放接口平台、SpringCloud、超级玛丽小游戏，期末备考周，太忙了实在没精力学，只好是抽空上网看看博客，了解了解" class="headerlink" title="拖欠的任务：Gitee/GitHub page服务、伙伴匹配前后端多环境开发和部署上线、Python爬虫项目、JavaJUC 高并发、开放接口平台、SpringCloud、超级玛丽小游戏，期末备考周，太忙了实在没精力学，只好是抽空上网看看博客，了解了解"></a>拖欠的任务：Gitee/GitHub page服务、伙伴匹配前后端多环境开发和部署上线、Python爬虫项目、JavaJUC 高并发、开放接口平台、SpringCloud、超级玛丽小游戏，期末备考周，太忙了实在没精力学，只好是抽空上网看看博客，了解了解</h5></li></ul><h2 id="2023-06-19"><a href="#2023-06-19" class="headerlink" title="2023/06/19"></a>2023/06/19</h2><ul><li><h5 id="上午，鱼皮的编程资源分享，语雀、腾讯文档"><a href="#上午，鱼皮的编程资源分享，语雀、腾讯文档" class="headerlink" title="上午，鱼皮的编程资源分享，语雀、腾讯文档"></a>上午，鱼皮的编程资源分享，语雀、腾讯文档</h5></li><li><h5 id="中午上传了伙伴匹配前后端的最新代码到Gitee和GitHub上了"><a href="#中午上传了伙伴匹配前后端的最新代码到Gitee和GitHub上了" class="headerlink" title="中午上传了伙伴匹配前后端的最新代码到Gitee和GitHub上了"></a>中午上传了伙伴匹配前后端的最新代码到Gitee和GitHub上了</h5></li><li><h5 id="几分钟，拥有⾃⼰的⾼颜值网站！代码都不用写-哔哩哔哩-bilibili"><a href="#几分钟，拥有⾃⼰的⾼颜值网站！代码都不用写-哔哩哔哩-bilibili" class="headerlink" title="几分钟，拥有⾃⼰的⾼颜值网站！代码都不用写_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1j341157wq/?spm_id_from=333.788.recommend_more_video.1&vd_source=4314e5bd742ea904c9675af8a6b4b07e">几分钟，拥有⾃⼰的⾼颜值网站！代码都不用写_哔哩哔哩_bilibili</a></h5></li><li><h5 id="65条消息-SpringBoot项目打包成jar包部署到宝塔面板-详细-宝塔部署jar包-UnIQUE-Eason的博客-CSDN博客"><a href="#65条消息-SpringBoot项目打包成jar包部署到宝塔面板-详细-宝塔部署jar包-UnIQUE-Eason的博客-CSDN博客" class="headerlink" title="(65条消息) SpringBoot项目打包成jar包部署到宝塔面板(详细)_宝塔部署jar包_UnIQUE Eason的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_47390965/article/details/124666474">(65条消息) SpringBoot项目打包成jar包部署到宝塔面板(详细)_宝塔部署jar包_UnIQUE Eason的博客-CSDN博客</a></h5></li><li><h5 id="拿之前免费试用的阿里云ESC云服务器，用宝塔面板运行jar包"><a href="#拿之前免费试用的阿里云ESC云服务器，用宝塔面板运行jar包" class="headerlink" title="拿之前免费试用的阿里云ESC云服务器，用宝塔面板运行jar包"></a>拿之前免费试用的阿里云ESC云服务器，用宝塔面板运行jar包</h5></li><li><h5 id="简单说明以下一晚上干了啥，学到了啥"><a href="#简单说明以下一晚上干了啥，学到了啥" class="headerlink" title="简单说明以下一晚上干了啥，学到了啥"></a>简单说明以下一晚上干了啥，学到了啥</h5></li><li><h5 id="看到程序羊搭建的动态个人博客站点教程，心血来潮也来试试"><a href="#看到程序羊搭建的动态个人博客站点教程，心血来潮也来试试" class="headerlink" title="看到程序羊搭建的动态个人博客站点教程，心血来潮也来试试"></a>看到程序羊搭建的动态个人博客站点教程，心血来潮也来试试</h5></li><li><h5 id="最终的实现：在云服务器上，成功搭建动态个人博客网站"><a href="#最终的实现：在云服务器上，成功搭建动态个人博客网站" class="headerlink" title="最终的实现：在云服务器上，成功搭建动态个人博客网站"></a>最终的实现：在云服务器上，成功搭建动态个人博客网站</h5></li><li><h5 id="具体操作步骤：购买云服务器-免费试用的也可以，我用的阿里云的免费送的三个月ESC，不用白不用-gt-远程连接服务器-gt-下载宝塔Linux面板-gt-登录宝塔面板-gt-运行jar包-gt-宝塔面板开放8090端口、阿里云服务器安全组开启8090端口"><a href="#具体操作步骤：购买云服务器-免费试用的也可以，我用的阿里云的免费送的三个月ESC，不用白不用-gt-远程连接服务器-gt-下载宝塔Linux面板-gt-登录宝塔面板-gt-运行jar包-gt-宝塔面板开放8090端口、阿里云服务器安全组开启8090端口" class="headerlink" title="具体操作步骤：购买云服务器(免费试用的也可以，我用的阿里云的免费送的三个月ESC，不用白不用) -&gt; 远程连接服务器 -&gt; 下载宝塔Linux面板 -&gt; 登录宝塔面板 -&gt; 运行jar包 -&gt; 宝塔面板开放8090端口、阿里云服务器安全组开启8090端口"></a>具体操作步骤：购买云服务器(免费试用的也可以，我用的阿里云的免费送的三个月ESC，不用白不用) -&gt; 远程连接服务器 -&gt; 下载宝塔Linux面板 -&gt; 登录宝塔面板 -&gt; 运行jar包 -&gt; 宝塔面板开放8090端口、阿里云服务器安全组开启8090端口</h5></li><li><h5 id="切实体会到了云服务器的方便和快捷，亲自上手操作，了解到宝塔面板其实就是可视化的Linux，要不然为啥叫宝塔Linux呢"><a href="#切实体会到了云服务器的方便和快捷，亲自上手操作，了解到宝塔面板其实就是可视化的Linux，要不然为啥叫宝塔Linux呢" class="headerlink" title="切实体会到了云服务器的方便和快捷，亲自上手操作，了解到宝塔面板其实就是可视化的Linux，要不然为啥叫宝塔Linux呢"></a>切实体会到了云服务器的方便和快捷，亲自上手操作，了解到宝塔面板其实就是可视化的Linux，要不然为啥叫宝塔Linux呢</h5></li><li><h5 id="操作过程中也渐渐回忆起基本的Linux命令，还遇到了一些问题："><a href="#操作过程中也渐渐回忆起基本的Linux命令，还遇到了一些问题：" class="headerlink" title="操作过程中也渐渐回忆起基本的Linux命令，还遇到了一些问题："></a>操作过程中也渐渐回忆起基本的Linux命令，还遇到了一些问题：</h5></li><li><h5 id="宝塔终端无法自动认证："><a href="#宝塔终端无法自动认证：" class="headerlink" title="宝塔终端无法自动认证："></a>宝塔终端无法自动认证：</h5></li><li><h5 id="65条消息-宝塔后台打开终端无法自动认证，一步解决问题-宝塔终端无法自动认证-唐南香榭ol的博客-CSDN博客"><a href="#65条消息-宝塔后台打开终端无法自动认证，一步解决问题-宝塔终端无法自动认证-唐南香榭ol的博客-CSDN博客" class="headerlink" title="(65条消息) 宝塔后台打开终端无法自动认证，一步解决问题_宝塔终端无法自动认证_唐南香榭ol的博客-CSDN博客"></a><a href="https://blog.csdn.net/zgyoumiao/article/details/124898052">(65条消息) 宝塔后台打开终端无法自动认证，一步解决问题_宝塔终端无法自动认证_唐南香榭ol的博客-CSDN博客</a></h5></li><li><h5 id="这个项目支持JDK11，而宝塔快捷安装的只有JDK7、JDK8，低版本的jdk是跑不起来这个项目的："><a href="#这个项目支持JDK11，而宝塔快捷安装的只有JDK7、JDK8，低版本的jdk是跑不起来这个项目的：" class="headerlink" title="这个项目支持JDK11，而宝塔快捷安装的只有JDK7、JDK8，低版本的jdk是跑不起来这个项目的："></a>这个项目支持JDK11，而宝塔快捷安装的只有JDK7、JDK8，低版本的jdk是跑不起来这个项目的：</h5></li><li><h5 id="java编译中出现了Exception-in-thread-“main”-java-lang-UnsupportedClassVersionError-Coder-Wf-博客园-cnblogs-com"><a href="#java编译中出现了Exception-in-thread-“main”-java-lang-UnsupportedClassVersionError-Coder-Wf-博客园-cnblogs-com" class="headerlink" title="java编译中出现了Exception in thread “main” java.lang.UnsupportedClassVersionError - Coder-Wf - 博客园 (cnblogs.com)"></a><a href="https://www.cnblogs.com/coder-wf/p/12221928.html">java编译中出现了Exception in thread “main” java.lang.UnsupportedClassVersionError - Coder-Wf - 博客园 (cnblogs.com)</a></h5></li><li><h5 id="于是我手动安装了JDK11并成功配置环境："><a href="#于是我手动安装了JDK11并成功配置环境：" class="headerlink" title="于是我手动安装了JDK11并成功配置环境："></a>于是我手动安装了JDK11并成功配置环境：</h5></li><li><h5 id="65条消息-阿里云服务器安装JDK11和环境配置-宝塔上安装jdk11-Object-girl-null-的博客-CSDN博客"><a href="#65条消息-阿里云服务器安装JDK11和环境配置-宝塔上安装jdk11-Object-girl-null-的博客-CSDN博客" class="headerlink" title="(65条消息) 阿里云服务器安装JDK11和环境配置_宝塔上安装jdk11_Object girl=null;的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_44954895/article/details/120231374">(65条消息) 阿里云服务器安装JDK11和环境配置_宝塔上安装jdk11_Object girl=null;的博客-CSDN博客</a></h5></li><li><h5 id="65条消息-Linux系统安装Java11环境变量配置-linux安装jdk11-拄杖忙学轻声码的博客-CSDN博客"><a href="#65条消息-Linux系统安装Java11环境变量配置-linux安装jdk11-拄杖忙学轻声码的博客-CSDN博客" class="headerlink" title="(65条消息) Linux系统安装Java11环境变量配置_linux安装jdk11_拄杖忙学轻声码的博客-CSDN博客"></a><a href="https://blog.csdn.net/hkl_Forever/article/details/123963940">(65条消息) Linux系统安装Java11环境变量配置_linux安装jdk11_拄杖忙学轻声码的博客-CSDN博客</a></h5></li><li><h5 id="访问-Memory’s-Blog-已经可以跑起来了"><a href="#访问-Memory’s-Blog-已经可以跑起来了" class="headerlink" title="访问 Memory’s Blog 已经可以跑起来了"></a>访问 <a href="http://120.55.62.195:8090/">Memory’s Blog</a> 已经可以跑起来了</h5></li><li><h5 id="之后可以考虑购买一台云服务器了，国内域名备案的话，是不能用免费服务器的"><a href="#之后可以考虑购买一台云服务器了，国内域名备案的话，是不能用免费服务器的" class="headerlink" title="之后可以考虑购买一台云服务器了，国内域名备案的话，是不能用免费服务器的"></a>之后可以考虑购买一台云服务器了，国内域名备案的话，是不能用免费服务器的</h5></li><li><h5 id="更加熟悉了宝塔面板的操作，可以考虑再写篇博客了：云服务器的购买、域名解析、域名备案、宝塔面板的基本操作、Linux部署SpringBoot项目，Linux环境安装jdk、maven、tomcat等，适当总结很有意义，备战完期末考再说吧"><a href="#更加熟悉了宝塔面板的操作，可以考虑再写篇博客了：云服务器的购买、域名解析、域名备案、宝塔面板的基本操作、Linux部署SpringBoot项目，Linux环境安装jdk、maven、tomcat等，适当总结很有意义，备战完期末考再说吧" class="headerlink" title="更加熟悉了宝塔面板的操作，可以考虑再写篇博客了：云服务器的购买、域名解析、域名备案、宝塔面板的基本操作、Linux部署SpringBoot项目，Linux环境安装jdk、maven、tomcat等，适当总结很有意义，备战完期末考再说吧"></a>更加熟悉了宝塔面板的操作，可以考虑再写篇博客了：云服务器的购买、域名解析、域名备案、宝塔面板的基本操作、Linux部署SpringBoot项目，Linux环境安装jdk、maven、tomcat等，适当总结很有意义，备战完期末考再说吧</h5></li><li><h5 id="之前一直拖欠的项目部署，现在更加有信心了，尽快交付实现"><a href="#之前一直拖欠的项目部署，现在更加有信心了，尽快交付实现" class="headerlink" title="之前一直拖欠的项目部署，现在更加有信心了，尽快交付实现"></a>之前一直拖欠的项目部署，现在更加有信心了，尽快交付实现</h5></li><li><h5 id="编程导航知识星球里好多项目、创意，什么微信机器人、ChatGPT等，多看多学"><a href="#编程导航知识星球里好多项目、创意，什么微信机器人、ChatGPT等，多看多学" class="headerlink" title="编程导航知识星球里好多项目、创意，什么微信机器人、ChatGPT等，多看多学"></a>编程导航知识星球里好多项目、创意，什么微信机器人、ChatGPT等，多看多学</h5></li></ul><h2 id="2023-06-20"><a href="#2023-06-20" class="headerlink" title="2023/06/20"></a>2023/06/20</h2><ul><li><h5 id="宝塔面板安装MySQL数据库，连接到阿里云服务器上"><a href="#宝塔面板安装MySQL数据库，连接到阿里云服务器上" class="headerlink" title="宝塔面板安装MySQL数据库，连接到阿里云服务器上"></a>宝塔面板安装MySQL数据库，连接到阿里云服务器上</h5></li><li><h5 id="安装MySQL服务很简单，新增数据库时，用户名会默认为数据库名，怪不得我用root进不去MySQL"><a href="#安装MySQL服务很简单，新增数据库时，用户名会默认为数据库名，怪不得我用root进不去MySQL" class="headerlink" title="安装MySQL服务很简单，新增数据库时，用户名会默认为数据库名，怪不得我用root进不去MySQL"></a>安装MySQL服务很简单，新增数据库时，用户名会默认为数据库名，怪不得我用root进不去MySQL</h5></li><li><h5 id="本地导入sql文件，建表，插入数据"><a href="#本地导入sql文件，建表，插入数据" class="headerlink" title="本地导入sql文件，建表，插入数据"></a>本地导入sql文件，建表，插入数据</h5></li><li><h5 id="远程连接服务器：我连接的阿里云服务器，注意这里的管理员名称和管理员密码就是-WorkBench-远程连接设置的账号密码"><a href="#远程连接服务器：我连接的阿里云服务器，注意这里的管理员名称和管理员密码就是-WorkBench-远程连接设置的账号密码" class="headerlink" title="远程连接服务器：我连接的阿里云服务器，注意这里的管理员名称和管理员密码就是 WorkBench 远程连接设置的账号密码"></a>远程连接服务器：我连接的阿里云服务器，注意这里的管理员名称和管理员密码就是 WorkBench 远程连接设置的账号密码</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620114110961.png" alt="image-20230620114110961"></p><ul><li><h5 id="这里还有个问题：通过宝塔安装的数据库root默认不支持远程权限，修改数据库权限为所有人即可"><a href="#这里还有个问题：通过宝塔安装的数据库root默认不支持远程权限，修改数据库权限为所有人即可" class="headerlink" title="这里还有个问题：通过宝塔安装的数据库root默认不支持远程权限，修改数据库权限为所有人即可"></a>这里还有个问题：通过宝塔安装的数据库root默认不支持远程权限，修改数据库权限为所有人即可</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620114216795.png" alt="image-20230620114216795"></p><ul><li><h5 id="65条消息-宝塔面板连接不上数据库，问题解决-数据库连接失败-请检查数据库服务是否启动-帅气的黑大王的博客-CSDN博客"><a href="#65条消息-宝塔面板连接不上数据库，问题解决-数据库连接失败-请检查数据库服务是否启动-帅气的黑大王的博客-CSDN博客" class="headerlink" title="(65条消息) 宝塔面板连接不上数据库，问题解决._数据库连接失败,请检查数据库服务是否启动!_帅气的黑大王的博客-CSDN博客"></a><a href="https://blog.csdn.net/dagjik/article/details/121139609">(65条消息) 宝塔面板连接不上数据库，问题解决._数据库连接失败,请检查数据库服务是否启动!_帅气的黑大王的博客-CSDN博客</a></h5></li><li><h5 id="尝试使用本地安装的FinalShell远程连接阿里云服务器，而不使用其提供的网页WorkBench远程连接"><a href="#尝试使用本地安装的FinalShell远程连接阿里云服务器，而不使用其提供的网页WorkBench远程连接" class="headerlink" title="尝试使用本地安装的FinalShell远程连接阿里云服务器，而不使用其提供的网页WorkBench远程连接"></a>尝试使用本地安装的FinalShell远程连接阿里云服务器，而不使用其提供的网页WorkBench远程连接</h5></li><li><h5 id="尝试失败，一直认证失败"><a href="#尝试失败，一直认证失败" class="headerlink" title="尝试失败，一直认证失败"></a>尝试失败，一直认证失败</h5></li><li><h5 id="下午，软工导论考完了，成功使用WorkBench远程连接到阿里云服务器"><a href="#下午，软工导论考完了，成功使用WorkBench远程连接到阿里云服务器" class="headerlink" title="下午，软工导论考完了，成功使用WorkBench远程连接到阿里云服务器"></a>下午，软工导论考完了，成功使用WorkBench远程连接到阿里云服务器</h5></li><li><h5 id="这里还涉及到阿里云实例如何SSH密匙验证"><a href="#这里还涉及到阿里云实例如何SSH密匙验证" class="headerlink" title="这里还涉及到阿里云实例如何SSH密匙验证"></a>这里还涉及到阿里云实例如何SSH密匙验证</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230620193558829.png" alt="image-20230620193558829"></p><ul><li><h5 id="下午，宝塔面板的快速安装，详见《宝塔面板安装》"><a href="#下午，宝塔面板的快速安装，详见《宝塔面板安装》" class="headerlink" title="下午，宝塔面板的快速安装，详见《宝塔面板安装》"></a>下午，宝塔面板的快速安装，详见《宝塔面板安装》</h5></li><li><h5 id="晚，CodePen是个宝藏网站，多看看好看的网页设计，提升审美。还能在线拧魔方"><a href="#晚，CodePen是个宝藏网站，多看看好看的网页设计，提升审美。还能在线拧魔方" class="headerlink" title="晚，CodePen是个宝藏网站，多看看好看的网页设计，提升审美。还能在线拧魔方"></a>晚，CodePen是个宝藏网站，多看看好看的网页设计，提升审美。还能在线拧魔方</h5></li><li><h5 id="鱼皮编程资源分享：CodePen、JavaGuide、被删的前端游乐场"><a href="#鱼皮编程资源分享：CodePen、JavaGuide、被删的前端游乐场" class="headerlink" title="鱼皮编程资源分享：CodePen、JavaGuide、被删的前端游乐场"></a>鱼皮编程资源分享：CodePen、JavaGuide、被删的前端游乐场</h5></li></ul><h2 id="2023-06-21"><a href="#2023-06-21" class="headerlink" title="2023/06/21"></a>2023/06/21</h2><ul><li><h5 id="上掘金，看好文。稀土掘金真是一个好的平台，各个方向的技术文章一应俱全。日后要坚持每天刷刷掘金，就当看小说了"><a href="#上掘金，看好文。稀土掘金真是一个好的平台，各个方向的技术文章一应俱全。日后要坚持每天刷刷掘金，就当看小说了" class="headerlink" title="上掘金，看好文。稀土掘金真是一个好的平台，各个方向的技术文章一应俱全。日后要坚持每天刷刷掘金，就当看小说了"></a>上掘金，看好文。稀土掘金真是一个好的平台，各个方向的技术文章一应俱全。日后要坚持每天刷刷掘金，就当看小说了</h5></li><li><h5 id="前两天看过的狂神的Nginx入门级教程，今天做个实操吧，顺便也可以总结一番"><a href="#前两天看过的狂神的Nginx入门级教程，今天做个实操吧，顺便也可以总结一番" class="headerlink" title="前两天看过的狂神的Nginx入门级教程，今天做个实操吧，顺便也可以总结一番"></a>前两天看过的狂神的Nginx入门级教程，今天做个实操吧，顺便也可以总结一番</h5></li><li><h5 id="Nginx访问出现403错误，尝试了好多方法，一早上还是没解决掉，下午再看看吧"><a href="#Nginx访问出现403错误，尝试了好多方法，一早上还是没解决掉，下午再看看吧" class="headerlink" title="Nginx访问出现403错误，尝试了好多方法，一早上还是没解决掉，下午再看看吧"></a>Nginx访问出现403错误，尝试了好多方法，一早上还是没解决掉，下午再看看吧</h5></li><li><h5 id="详解Nginx出现403Forbidden的解决办法-第一PHP社区-php1-cn"><a href="#详解Nginx出现403Forbidden的解决办法-第一PHP社区-php1-cn" class="headerlink" title="详解Nginx出现403Forbidden的解决办法 - 第一PHP社区 (php1.cn)"></a><a href="https://www.php1.cn/detail/XiangJie_Nginx_C_5d37dae4.html">详解Nginx出现403Forbidden的解决办法 - 第一PHP社区 (php1.cn)</a></h5></li><li><h5 id="运维排查篇-访问nginx出现403错误（2-0版本）-知乎-zhihu-com"><a href="#运维排查篇-访问nginx出现403错误（2-0版本）-知乎-zhihu-com" class="headerlink" title="运维排查篇 | 访问nginx出现403错误（2.0版本） - 知乎 (zhihu.com)"></a><a href="https://zhuanlan.zhihu.com/p/408560291">运维排查篇 | 访问nginx出现403错误（2.0版本） - 知乎 (zhihu.com)</a></h5></li><li><h5 id="四种解决Nginx出现403-forbidden-报错的方法-baidu-com"><a href="#四种解决Nginx出现403-forbidden-报错的方法-baidu-com" class="headerlink" title="四种解决Nginx出现403 forbidden 报错的方法 (baidu.com)"></a><a href="https://baijiahao.baidu.com/s?id=1614533633678689239&wfr=spider&for=pc">四种解决Nginx出现403 forbidden 报错的方法 (baidu.com)</a></h5></li><li><h5 id="晚，随便看看掘金好文"><a href="#晚，随便看看掘金好文" class="headerlink" title="晚，随便看看掘金好文"></a>晚，随便看看掘金好文</h5></li><li><h5 id="需要熟记的知识-七大前后端参数传递类型-掘金-juejin-cn"><a href="#需要熟记的知识-七大前后端参数传递类型-掘金-juejin-cn" class="headerlink" title="需要熟记的知识 七大前后端参数传递类型 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7218778345902850106">需要熟记的知识 七大前后端参数传递类型 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="策-略-模-式「指-鼠-为-鸭」-掘金-juejin-cn"><a href="#策-略-模-式「指-鼠-为-鸭」-掘金-juejin-cn" class="headerlink" title="策 略 模 式「指 鼠 为 鸭」 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7243240618787749946">策 略 模 式「指 鼠 为 鸭」 - 掘金 (juejin.cn)</a></h5></li></ul><h2 id="2023-06-22"><a href="#2023-06-22" class="headerlink" title="2023/06/22"></a>2023/06/22</h2><ul><li><h5 id="整整24小时过去了，Nginx访问403问题终于解决了！"><a href="#整整24小时过去了，Nginx访问403问题终于解决了！" class="headerlink" title="整整24小时过去了，Nginx访问403问题终于解决了！"></a>整整24小时过去了，Nginx访问403问题终于解决了！</h5></li><li><h5 id="运维排查篇-访问nginx出现403错误-知乎-zhihu-com"><a href="#运维排查篇-访问nginx出现403错误-知乎-zhihu-com" class="headerlink" title="运维排查篇 | 访问nginx出现403错误 - 知乎 (zhihu.com)"></a><a href="https://zhuanlan.zhihu.com/p/381967653">运维排查篇 | 访问nginx出现403错误 - 知乎 (zhihu.com)</a></h5></li><li><h5 id="67条消息-报错：directory-index-of-“xxx“-is-forbidden-directory-index-of-is-forbidden-AI人工智能与大数据的博客-CSDN博客"><a href="#67条消息-报错：directory-index-of-“xxx“-is-forbidden-directory-index-of-is-forbidden-AI人工智能与大数据的博客-CSDN博客" class="headerlink" title="(67条消息) 报错：directory index of “xxx“ is forbidden_directory index of is forbidden_AI人工智能与大数据的博客-CSDN博客"></a><a href="https://blog.csdn.net/guanxs/article/details/107901101">(67条消息) 报错：directory index of “xxx“ is forbidden_directory index of is forbidden_AI人工智能与大数据的博客-CSDN博客</a></h5></li><li><h5 id="为此，我写一篇文章详细记录一下Nginx的安装配置以及可能出现的报错解决办法，详见文章：《Nginx安装配置详解》"><a href="#为此，我写一篇文章详细记录一下Nginx的安装配置以及可能出现的报错解决办法，详见文章：《Nginx安装配置详解》" class="headerlink" title="为此，我写一篇文章详细记录一下Nginx的安装配置以及可能出现的报错解决办法，详见文章：《Nginx安装配置详解》"></a>为此，我写一篇文章详细记录一下Nginx的安装配置以及可能出现的报错解决办法，详见文章：《Nginx安装配置详解》</h5></li><li><h5 id="顺带记录一下最近使用的过的AI助手鱼聪明吧："><a href="#顺带记录一下最近使用的过的AI助手鱼聪明吧：" class="headerlink" title="顺带记录一下最近使用的过的AI助手鱼聪明吧："></a>顺带记录一下最近使用的过的AI助手鱼聪明吧：</h5></li><li><h5 id="访问地址：鱼聪明AI-做您强大的AI助手-yucongming-com"><a href="#访问地址：鱼聪明AI-做您强大的AI助手-yucongming-com" class="headerlink" title="访问地址：鱼聪明AI - 做您强大的AI助手 (yucongming.com)"></a>访问地址：<a href="https://www.yucongming.com/">鱼聪明AI - 做您强大的AI助手 (yucongming.com)</a></h5></li><li><h5 id="网站介绍：上线啦！-编程导航-code-nav-cn"><a href="#网站介绍：上线啦！-编程导航-code-nav-cn" class="headerlink" title="网站介绍：上线啦！ - 编程导航 (code-nav.cn)"></a>网站介绍：<a href="https://www.code-nav.cn/post/1671131561837211650#heading-10">上线啦！ - 编程导航 (code-nav.cn)</a></h5></li><li><h5 id="这个网站真的贼好用！"><a href="#这个网站真的贼好用！" class="headerlink" title="这个网站真的贼好用！"></a>这个网站真的贼好用！</h5></li><li><h5 id="计组-去年考题过了一遍，标出了该考卷的所有考点"><a href="#计组-去年考题过了一遍，标出了该考卷的所有考点" class="headerlink" title="计组 - 去年考题过了一遍，标出了该考卷的所有考点"></a>计组 - 去年考题过了一遍，标出了该考卷的所有考点</h5></li></ul><h2 id="2023-06-23"><a href="#2023-06-23" class="headerlink" title="2023/06/23"></a>2023/06/23</h2><ul><li><h5 id="上午，研究微信自动回复AI，具体情况可转至文章《AI实践中的洞见：我的AI之旅》"><a href="#上午，研究微信自动回复AI，具体情况可转至文章《AI实践中的洞见：我的AI之旅》" class="headerlink" title="上午，研究微信自动回复AI，具体情况可转至文章《AI实践中的洞见：我的AI之旅》"></a>上午，研究微信自动回复AI，具体情况可转至文章《AI实践中的洞见：我的AI之旅》</h5></li><li><h5 id="中午，解决了计组最后一块大问题：CPU与主存的连接；快速过了一遍数据库"><a href="#中午，解决了计组最后一块大问题：CPU与主存的连接；快速过了一遍数据库" class="headerlink" title="中午，解决了计组最后一块大问题：CPU与主存的连接；快速过了一遍数据库"></a>中午，解决了计组最后一块大问题：CPU与主存的连接；快速过了一遍数据库</h5></li><li><h5 id="晚上，继续研究微信自动回复AI，发生了不少糗事，哈哈哈哈"><a href="#晚上，继续研究微信自动回复AI，发生了不少糗事，哈哈哈哈" class="headerlink" title="晚上，继续研究微信自动回复AI，发生了不少糗事，哈哈哈哈"></a>晚上，继续研究微信自动回复AI，发生了不少糗事，哈哈哈哈</h5></li><li><h5 id="微信对话开放平台：微信对话开放平台-qq-com-，微信开发者的手册"><a href="#微信对话开放平台：微信对话开放平台-qq-com-，微信开发者的手册" class="headerlink" title="微信对话开放平台：微信对话开放平台 (qq.com)，微信开发者的手册"></a>微信对话开放平台：<a href="https://chatbot.weixin.qq.com/">微信对话开放平台 (qq.com)</a>，微信开发者的手册</h5></li></ul><h2 id="2023-06-24"><a href="#2023-06-24" class="headerlink" title="2023/06/24"></a>2023/06/24</h2><ul><li><h5 id="面试官：说说Spring用到了哪些设计模式？-qq-com"><a href="#面试官：说说Spring用到了哪些设计模式？-qq-com" class="headerlink" title="面试官：说说Spring用到了哪些设计模式？ (qq.com)"></a><a href="https://mp.weixin.qq.com/s/ZcKqGT2Sn4wVScExSF9Alg">面试官：说说Spring用到了哪些设计模式？ (qq.com)</a></h5></li><li><h5 id="曾经没太弄懂的动态代理，这次明白了-qq-com"><a href="#曾经没太弄懂的动态代理，这次明白了-qq-com" class="headerlink" title="曾经没太弄懂的动态代理，这次明白了 (qq.com)"></a><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODI1MjA3NQ==&mid=2247506203&idx=2&sn=8c3b9e8c059359598eb7e7ea15ae9650&chksm=fddd0fdfcaaa86c9542780e326ef0a256740f87dd36f8e795b47852ca74b32131b710aa9132c&scene=21#wechat_redirect">曾经没太弄懂的动态代理，这次明白了 (qq.com)</a></h5></li><li><h5 id="一个商城项目：电商项目系统"><a href="#一个商城项目：电商项目系统" class="headerlink" title="一个商城项目：电商项目系统"></a>一个商城项目：<a href="https://github.com/macrozheng/mall">电商项目系统</a></h5></li><li><h5 id="Docsify快速部署一个静态文档网站"><a href="#Docsify快速部署一个静态文档网站" class="headerlink" title="Docsify快速部署一个静态文档网站"></a>Docsify快速部署一个静态文档网站</h5></li><li><h5 id="搞了一早上Docsify部署静态文档站点，昨天搞微信AI，原来配好的NODE-PATH环境变量路径变了，出现了docsify命令不是内部命令的问题"><a href="#搞了一早上Docsify部署静态文档站点，昨天搞微信AI，原来配好的NODE-PATH环境变量路径变了，出现了docsify命令不是内部命令的问题" class="headerlink" title="搞了一早上Docsify部署静态文档站点，昨天搞微信AI，原来配好的NODE_PATH环境变量路径变了，出现了docsify命令不是内部命令的问题"></a>搞了一早上Docsify部署静态文档站点，昨天搞微信AI，原来配好的NODE_PATH环境变量路径变了，出现了docsify命令不是内部命令的问题</h5></li><li><h5 id="配置好环境变量后，文档站点要么跑不起来，要么网速贼拉跨，拉取docsify的GitHub仓库代码也是报资源路径错误"><a href="#配置好环境变量后，文档站点要么跑不起来，要么网速贼拉跨，拉取docsify的GitHub仓库代码也是报资源路径错误" class="headerlink" title="配置好环境变量后，文档站点要么跑不起来，要么网速贼拉跨，拉取docsify的GitHub仓库代码也是报资源路径错误"></a>配置好环境变量后，文档站点要么跑不起来，要么网速贼拉跨，拉取docsify的GitHub仓库代码也是报资源路径错误</h5></li><li><h5 id="接着本地跑hexo服务时，hexo命令又找不着了，可能是前两天误删了mode-modules的缘故，我在原目录下重新安装并初始化hexo，正常部署博客站点了"><a href="#接着本地跑hexo服务时，hexo命令又找不着了，可能是前两天误删了mode-modules的缘故，我在原目录下重新安装并初始化hexo，正常部署博客站点了" class="headerlink" title="接着本地跑hexo服务时，hexo命令又找不着了，可能是前两天误删了mode_modules的缘故，我在原目录下重新安装并初始化hexo，正常部署博客站点了"></a>接着本地跑hexo服务时，hexo命令又找不着了，可能是前两天误删了mode_modules的缘故，我在原目录下重新安装并初始化hexo，正常部署博客站点了</h5></li><li><h5 id="不过也不是毫无收获，我可以总结下流行Hexo、Hugo生成博客站点，Docsify、Vuepress、Dumi生成文档站点的基础操作"><a href="#不过也不是毫无收获，我可以总结下流行Hexo、Hugo生成博客站点，Docsify、Vuepress、Dumi生成文档站点的基础操作" class="headerlink" title="不过也不是毫无收获，我可以总结下流行Hexo、Hugo生成博客站点，Docsify、Vuepress、Dumi生成文档站点的基础操作"></a>不过也不是毫无收获，我可以总结下流行Hexo、Hugo生成博客站点，Docsify、Vuepress、Dumi生成文档站点的基础操作</h5></li><li><h5 id="CodeSheep的《编程环境和软件工具安装手册》、《Linux速查备忘手册》很有帮助"><a href="#CodeSheep的《编程环境和软件工具安装手册》、《Linux速查备忘手册》很有帮助" class="headerlink" title="CodeSheep的《编程环境和软件工具安装手册》、《Linux速查备忘手册》很有帮助"></a>CodeSheep的《编程环境和软件工具安装手册》、《Linux速查备忘手册》很有帮助</h5></li><li><h5 id="才发现Vitepress和Vuepress俩文档站点，大意了，不过这两位相似点很多，相对来说，Vitepress更加轻量级"><a href="#才发现Vitepress和Vuepress俩文档站点，大意了，不过这两位相似点很多，相对来说，Vitepress更加轻量级" class="headerlink" title="才发现Vitepress和Vuepress俩文档站点，大意了，不过这两位相似点很多，相对来说，Vitepress更加轻量级"></a>才发现Vitepress和Vuepress俩文档站点，大意了，不过这两位相似点很多，相对来说，Vitepress更加轻量级</h5></li><li><h5 id="在生成Vuepress站点时，踩了好多node配置的坑，这里也会一并记录在文章《配置指南-掌握Node-js配置》中"><a href="#在生成Vuepress站点时，踩了好多node配置的坑，这里也会一并记录在文章《配置指南-掌握Node-js配置》中" class="headerlink" title="在生成Vuepress站点时，踩了好多node配置的坑，这里也会一并记录在文章《配置指南-掌握Node.js配置》中"></a>在生成Vuepress站点时，踩了好多node配置的坑，这里也会一并记录在文章《配置指南-掌握Node.js配置》中</h5></li><li><h5 id="半个月前完成的数据库开发大作业实验报告，很有价值，写篇文章记录一番：《使用JSP构建JavaWeb项目–以数据库大作业为例》"><a href="#半个月前完成的数据库开发大作业实验报告，很有价值，写篇文章记录一番：《使用JSP构建JavaWeb项目–以数据库大作业为例》" class="headerlink" title="半个月前完成的数据库开发大作业实验报告，很有价值，写篇文章记录一番：《使用JSP构建JavaWeb项目–以数据库大作业为例》"></a>半个月前完成的数据库开发大作业实验报告，很有价值，写篇文章记录一番：《使用JSP构建JavaWeb项目–以数据库大作业为例》</h5></li><li><h5 id="AI太方便了，我用AI生成了文章《配置指南-掌握Node-js配置》和《使用JSP构建JavaWeb项目–以数据库大作业为例》的标题、副标题以及目录框架"><a href="#AI太方便了，我用AI生成了文章《配置指南-掌握Node-js配置》和《使用JSP构建JavaWeb项目–以数据库大作业为例》的标题、副标题以及目录框架" class="headerlink" title="AI太方便了，我用AI生成了文章《配置指南-掌握Node.js配置》和《使用JSP构建JavaWeb项目–以数据库大作业为例》的标题、副标题以及目录框架"></a>AI太方便了，我用AI生成了文章《配置指南-掌握Node.js配置》和《使用JSP构建JavaWeb项目–以数据库大作业为例》的标题、副标题以及目录框架</h5></li><li><h5 id="下午，报考全国计算机等级考试二级：Java基础"><a href="#下午，报考全国计算机等级考试二级：Java基础" class="headerlink" title="下午，报考全国计算机等级考试二级：Java基础"></a>下午，报考全国计算机等级考试二级：Java基础</h5></li><li><h5 id="晚上，完善《配置指南-掌握Node-js配置》和《快速生成文档站点》"><a href="#晚上，完善《配置指南-掌握Node-js配置》和《快速生成文档站点》" class="headerlink" title="晚上，完善《配置指南-掌握Node.js配置》和《快速生成文档站点》"></a>晚上，完善《配置指南-掌握Node.js配置》和《快速生成文档站点》</h5></li><li><h5 id="睡前总结待解决问题：快速安装Vuepress报错、宝塔终端远程连接服务器失败、VCN连接失败、SSH服务开启失败"><a href="#睡前总结待解决问题：快速安装Vuepress报错、宝塔终端远程连接服务器失败、VCN连接失败、SSH服务开启失败" class="headerlink" title="睡前总结待解决问题：快速安装Vuepress报错、宝塔终端远程连接服务器失败、VCN连接失败、SSH服务开启失败"></a>睡前总结待解决问题：快速安装Vuepress报错、宝塔终端远程连接服务器失败、VCN连接失败、SSH服务开启失败</h5></li></ul><h2 id="2023-06-25"><a href="#2023-06-25" class="headerlink" title="2023/06/25"></a>2023/06/25</h2><ul><li><h5 id="上午，服务器开启SSH服务一直失败，试了好多解决办法都没用的"><a href="#上午，服务器开启SSH服务一直失败，试了好多解决办法都没用的" class="headerlink" title="上午，服务器开启SSH服务一直失败，试了好多解决办法都没用的"></a>上午，服务器开启SSH服务一直失败，试了好多解决办法都没用的</h5></li><li><h5 id="简单记录一下经过吧：宝塔面板远程连接服务器时，终端连接失败-gt-尝试开启宝塔SSH服务，开启失败-gt-检查服务器SSH服务开启状态，是关闭状态-gt-修改-etc-ssh-sshd-config配置文件，检查开放端口号，尝试开启SSH服务，无效-gt-尝试各种方法，甚至是卸载重装SSH服务，仍然开启服务失败"><a href="#简单记录一下经过吧：宝塔面板远程连接服务器时，终端连接失败-gt-尝试开启宝塔SSH服务，开启失败-gt-检查服务器SSH服务开启状态，是关闭状态-gt-修改-etc-ssh-sshd-config配置文件，检查开放端口号，尝试开启SSH服务，无效-gt-尝试各种方法，甚至是卸载重装SSH服务，仍然开启服务失败" class="headerlink" title="简单记录一下经过吧：宝塔面板远程连接服务器时，终端连接失败 -&gt; 尝试开启宝塔SSH服务，开启失败 -&gt; 检查服务器SSH服务开启状态，是关闭状态 -&gt; 修改/etc/ssh/sshd_config配置文件，检查开放端口号，尝试开启SSH服务，无效 -&gt; 尝试各种方法，甚至是卸载重装SSH服务，仍然开启服务失败"></a>简单记录一下经过吧：宝塔面板远程连接服务器时，终端连接失败 -&gt; 尝试开启宝塔SSH服务，开启失败 -&gt; 检查服务器SSH服务开启状态，是关闭状态 -&gt; 修改/etc/ssh/sshd_config配置文件，检查开放端口号，尝试开启SSH服务，无效 -&gt; 尝试各种方法，甚至是卸载重装SSH服务，仍然开启服务失败</h5></li><li><h5 id="使用-方法远程连接服务器，不是root用户，甚至修改配置文件、重启服务都无权限"><a href="#使用-方法远程连接服务器，不是root用户，甚至修改配置文件、重启服务都无权限" class="headerlink" title="使用 方法远程连接服务器，不是root用户，甚至修改配置文件、重启服务都无权限"></a>使用 方法远程连接服务器，不是root用户，甚至修改配置文件、重启服务都无权限</h5></li><li><h5 id="在重置了服务器实例密码后，VNC总算正常连接了，不过还是没什么用，只要尝试开启或重启SSH服务，就会报如下错误："><a href="#在重置了服务器实例密码后，VNC总算正常连接了，不过还是没什么用，只要尝试开启或重启SSH服务，就会报如下错误：" class="headerlink" title="在重置了服务器实例密码后，VNC总算正常连接了，不过还是没什么用，只要尝试开启或重启SSH服务，就会报如下错误："></a>在重置了服务器实例密码后，VNC总算正常连接了，不过还是没什么用，只要尝试开启或重启SSH服务，就会报如下错误：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230625100319214.png" alt="image-20230625100319214"></p><ul><li><h5 id="中午，掘金阅读："><a href="#中午，掘金阅读：" class="headerlink" title="中午，掘金阅读："></a>中午，掘金阅读：</h5></li><li><h5 id="从Java到JSON：探索Jackson的魔力-掘金-juejin-cn"><a href="#从Java到JSON：探索Jackson的魔力-掘金-juejin-cn" class="headerlink" title="从Java到JSON：探索Jackson的魔力 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7231197051203092539">从Java到JSON：探索Jackson的魔力 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="四十五图，一万五千字！一文让你走出迷雾玩转Maven！-掘金-juejin-cn"><a href="#四十五图，一万五千字！一文让你走出迷雾玩转Maven！-掘金-juejin-cn" class="headerlink" title="四十五图，一万五千字！一文让你走出迷雾玩转Maven！ - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7238823745828405308#heading-5">四十五图，一万五千字！一文让你走出迷雾玩转Maven！ - 掘金 (juejin.cn)</a></h5></li><li><h5 id="【服务器】无法进行ssh连接的问题逐一排查以及解决方法-ssh连接不上服务器-别出BUG求求了的博客-CSDN博客"><a href="#【服务器】无法进行ssh连接的问题逐一排查以及解决方法-ssh连接不上服务器-别出BUG求求了的博客-CSDN博客" class="headerlink" title="【服务器】无法进行ssh连接的问题逐一排查以及解决方法_ssh连接不上服务器_别出BUG求求了的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_39589455/article/details/127937248">【服务器】无法进行ssh连接的问题逐一排查以及解决方法_ssh连接不上服务器_别出BUG求求了的博客-CSDN博客</a></h5></li><li><h5 id="刚入职的后端开发问我SpringBoot如何跨域配置？我表示😏-掘金-juejin-cn"><a href="#刚入职的后端开发问我SpringBoot如何跨域配置？我表示😏-掘金-juejin-cn" class="headerlink" title="刚入职的后端开发问我SpringBoot如何跨域配置？我表示😏 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7233208763921858616">刚入职的后端开发问我SpringBoot如何跨域配置？我表示😏 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="晚上，尝试学习如何调取微信开发者工具的Token"><a href="#晚上，尝试学习如何调取微信开发者工具的Token" class="headerlink" title="晚上，尝试学习如何调取微信开发者工具的Token"></a>晚上，尝试学习如何调取微信开发者工具的Token</h5></li></ul><h2 id="2023-06-26"><a href="#2023-06-26" class="headerlink" title="2023/06/26"></a>2023/06/26</h2><ul><li><h5 id="中午，成功解决SSH连接失败的问题，激动之情溢于言表，先放几张图片和几条链接冷静一下："><a href="#中午，成功解决SSH连接失败的问题，激动之情溢于言表，先放几张图片和几条链接冷静一下：" class="headerlink" title="中午，成功解决SSH连接失败的问题，激动之情溢于言表，先放几张图片和几条链接冷静一下："></a>中午，成功解决SSH连接失败的问题，激动之情溢于言表，先放几张图片和几条链接冷静一下：</h5></li><li><h5 id="解决方法：-67条消息-SSH无法连接：Permissions-0777-for-‘-etc-ssh-ssh-host-rsa-key’-are-too-open-筱灬卟叮的博客-CSDN博客"><a href="#解决方法：-67条消息-SSH无法连接：Permissions-0777-for-‘-etc-ssh-ssh-host-rsa-key’-are-too-open-筱灬卟叮的博客-CSDN博客" class="headerlink" title="解决方法：(67条消息) SSH无法连接：Permissions 0777 for ‘/etc/ssh/ssh_host_rsa_key’ are too open._筱灬卟叮的博客-CSDN博客"></a>解决方法：<a href="https://blog.csdn.net/fly_520/article/details/79991229">(67条消息) SSH无法连接：Permissions 0777 for ‘/etc/ssh/ssh_host_rsa_key’ are too open._筱灬卟叮的博客-CSDN博客</a></h5></li><li><h5 id="问题所在："><a href="#问题所在：" class="headerlink" title="问题所在："></a>问题所在：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230626120841860.png" alt="image-20230626120841860"></p><ul><li><h5 id="我会将远程连接服务器的各种方法以及如何解决连接过程中可能会遇到的各种问题，结合我自己的踩坑经历，写一篇文章：《云服务器远程连接指南：各种方法详解与问题解决》"><a href="#我会将远程连接服务器的各种方法以及如何解决连接过程中可能会遇到的各种问题，结合我自己的踩坑经历，写一篇文章：《云服务器远程连接指南：各种方法详解与问题解决》" class="headerlink" title="我会将远程连接服务器的各种方法以及如何解决连接过程中可能会遇到的各种问题，结合我自己的踩坑经历，写一篇文章：《云服务器远程连接指南：各种方法详解与问题解决》"></a>我会将远程连接服务器的各种方法以及如何解决连接过程中可能会遇到的各种问题，结合我自己的踩坑经历，写一篇文章：《云服务器远程连接指南：各种方法详解与问题解决》</h5></li><li><h5 id="67条消息-SSH服务3——配置文件篇-usr-sbin-sshd-d-九龍小天赐的博客-CSDN博客"><a href="#67条消息-SSH服务3——配置文件篇-usr-sbin-sshd-d-九龍小天赐的博客-CSDN博客" class="headerlink" title="(67条消息) SSH服务3——配置文件篇_/usr/sbin/sshd -d_九龍小天赐的博客-CSDN博客"></a><a href="https://blog.csdn.net/frank_ci/article/details/108755861">(67条消息) SSH服务3——配置文件篇_/usr/sbin/sshd -d_九龍小天赐的博客-CSDN博客</a></h5></li><li><h5 id="67条消息-【安全知识】——SSH的两种远程登录方法详解-ssh登录-白昼安全的博客-CSDN博客"><a href="#67条消息-【安全知识】——SSH的两种远程登录方法详解-ssh登录-白昼安全的博客-CSDN博客" class="headerlink" title="(67条消息) 【安全知识】——SSH的两种远程登录方法详解_ssh登录_白昼安全的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_63844103/article/details/127394389?ops_request_misc=%7B%22request_id%22:%22168773931116800182191413%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=168773931116800182191413&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-14-127394389-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(67条消息) 【安全知识】——SSH的两种远程登录方法详解_ssh登录_白昼安全的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH简介及两种远程登录的方法-ssh-Jack-LDZ的博客-CSDN博客"><a href="#68条消息-SSH简介及两种远程登录的方法-ssh-Jack-LDZ的博客-CSDN博客" class="headerlink" title="(68条消息) SSH简介及两种远程登录的方法_ssh @_Jack LDZ的博客-CSDN博客"></a><a href="https://blog.csdn.net/li528405176/article/details/82810342?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82810342-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH简介及两种远程登录的方法_ssh @_Jack LDZ的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH-详解（实践及应用）-再见丶孙悟空的博客-CSDN博客"><a href="#68条消息-SSH-详解（实践及应用）-再见丶孙悟空的博客-CSDN博客" class="headerlink" title="(68条消息) SSH 详解（实践及应用）_再见丶孙悟空的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_38150250/article/details/119835992?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-119835992-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH 详解（实践及应用）_再见丶孙悟空的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-ssh服务介绍-weixin-30858241的博客-CSDN博客"><a href="#68条消息-ssh服务介绍-weixin-30858241的博客-CSDN博客" class="headerlink" title="(68条消息) ssh服务介绍_weixin_30858241的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_30858241/article/details/97346942?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-97346942-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) ssh服务介绍_weixin_30858241的博客-CSDN博客</a></h5></li><li><h5 id="68条消息-SSH服务详解-敬申火的博客-CSDN博客"><a href="#68条消息-SSH服务详解-敬申火的博客-CSDN博客" class="headerlink" title="(68条消息) SSH服务详解_敬申火的博客-CSDN博客"></a><a href="https://blog.csdn.net/shuju1_/article/details/126146949?ops_request_misc=%7B%22request_id%22:%22168773931116800182134445%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168773931116800182134445&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-5-126146949-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=ssh&spm=1018.2226.3001.4449">(68条消息) SSH服务详解_敬申火的博客-CSDN博客</a></h5></li><li><h5 id="下午，巩固计组和数据库"><a href="#下午，巩固计组和数据库" class="headerlink" title="下午，巩固计组和数据库"></a>下午，巩固计组和数据库</h5></li></ul><h2 id="2023-06-27"><a href="#2023-06-27" class="headerlink" title="2023/06/27"></a>2023/06/27</h2><ul><li><h5 id="早上·，总结SSH服务启动失败的踩坑经历"><a href="#早上·，总结SSH服务启动失败的踩坑经历" class="headerlink" title="早上·，总结SSH服务启动失败的踩坑经历"></a>早上·，总结SSH服务启动失败的踩坑经历</h5></li><li><h5 id="晚上，鱼皮专栏：玩转服务器，有时间实操一番"><a href="#晚上，鱼皮专栏：玩转服务器，有时间实操一番" class="headerlink" title="晚上，鱼皮专栏：玩转服务器，有时间实操一番"></a>晚上，鱼皮专栏：玩转服务器，有时间实操一番</h5></li></ul><h2 id="2023-06-27-2023-06-29"><a href="#2023-06-27-2023-06-29" class="headerlink" title="2023/06/27-2023/06/29"></a>2023/06/27-2023/06/29</h2><ul><li><h5 id="疯狂备考计算机组成原理和数据库系统概论中"><a href="#疯狂备考计算机组成原理和数据库系统概论中" class="headerlink" title="疯狂备考计算机组成原理和数据库系统概论中"></a>疯狂备考计算机组成原理和数据库系统概论中</h5></li></ul><h2 id="2023-06-30"><a href="#2023-06-30" class="headerlink" title="2023/06/30"></a>2023/06/30</h2><ul><li><h5 id="上午，掘金看文"><a href="#上午，掘金看文" class="headerlink" title="上午，掘金看文"></a>上午，掘金看文</h5></li><li><h5 id="老菜鸟为什么喜欢代码重构-掘金-juejin-cn"><a href="#老菜鸟为什么喜欢代码重构-掘金-juejin-cn" class="headerlink" title="老菜鸟为什么喜欢代码重构 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7249586143011291192">老菜鸟为什么喜欢代码重构 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="剑走偏锋，无头浏览器是什么神奇的家伙-掘金-juejin-cn"><a href="#剑走偏锋，无头浏览器是什么神奇的家伙-掘金-juejin-cn" class="headerlink" title="剑走偏锋，无头浏览器是什么神奇的家伙 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7243780412547121208">剑走偏锋，无头浏览器是什么神奇的家伙 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="重新梳理假期目标：SpringCloud微服务、Java并发编程、力扣算法、API开放平台、聚合搜索平台、超级玛丽小游戏、云服务器、Git-GitHub托管服务、日常博客撰写、小程序云开发、Java基础巩固（疯狂Java讲义）"><a href="#重新梳理假期目标：SpringCloud微服务、Java并发编程、力扣算法、API开放平台、聚合搜索平台、超级玛丽小游戏、云服务器、Git-GitHub托管服务、日常博客撰写、小程序云开发、Java基础巩固（疯狂Java讲义）" class="headerlink" title="重新梳理假期目标：SpringCloud微服务、Java并发编程、力扣算法、API开放平台、聚合搜索平台、超级玛丽小游戏、云服务器、Git/GitHub托管服务、日常博客撰写、小程序云开发、Java基础巩固（疯狂Java讲义）"></a>重新梳理假期目标：SpringCloud微服务、Java并发编程、力扣算法、API开放平台、聚合搜索平台、超级玛丽小游戏、云服务器、Git/GitHub托管服务、日常博客撰写、小程序云开发、Java基础巩固（疯狂Java讲义）</h5></li><li><h5 id="下午，成功拉取到超级玛丽源码，修改了下游戏图片读取路径，可算成功运行了"><a href="#下午，成功拉取到超级玛丽源码，修改了下游戏图片读取路径，可算成功运行了" class="headerlink" title="下午，成功拉取到超级玛丽源码，修改了下游戏图片读取路径，可算成功运行了"></a>下午，成功拉取到超级玛丽源码，修改了下游戏图片读取路径，可算成功运行了</h5></li><li><h5 id="晚上，阅读《疯狂Java讲义》Set集合部分内容"><a href="#晚上，阅读《疯狂Java讲义》Set集合部分内容" class="headerlink" title="晚上，阅读《疯狂Java讲义》Set集合部分内容"></a>晚上，阅读《疯狂Java讲义》Set集合部分内容</h5></li></ul><h2 id="2023-07-01"><a href="#2023-07-01" class="headerlink" title="2023/07/01"></a>2023/07/01</h2><ul><li><h5 id="上午，掘金看文-1"><a href="#上午，掘金看文-1" class="headerlink" title="上午，掘金看文"></a>上午，掘金看文</h5></li><li><h5 id="SpringBoot可以同时处理多少请求？-掘金-juejin-cn"><a href="#SpringBoot可以同时处理多少请求？-掘金-juejin-cn" class="headerlink" title="SpringBoot可以同时处理多少请求？ - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7203648441721126972">SpringBoot可以同时处理多少请求？ - 掘金 (juejin.cn)</a></h5></li><li><h5 id="我的师父把-「JWT-令牌」玩到了极致-掘金-juejin-cn"><a href="#我的师父把-「JWT-令牌」玩到了极致-掘金-juejin-cn" class="headerlink" title="我的师父把 「JWT 令牌」玩到了极致 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/7250029300820869178">我的师父把 「JWT 令牌」玩到了极致 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="巩固JavaWeb学习，记录在文章《》中"><a href="#巩固JavaWeb学习，记录在文章《》中" class="headerlink" title="巩固JavaWeb学习，记录在文章《》中"></a>巩固JavaWeb学习，记录在文章《》中</h5></li><li><h5 id="晚上，博客站点、文档站点的了解"><a href="#晚上，博客站点、文档站点的了解" class="headerlink" title="晚上，博客站点、文档站点的了解"></a>晚上，博客站点、文档站点的了解</h5></li><li><h5 id="阅读《疯狂Java讲义》List集合部分内容"><a href="#阅读《疯狂Java讲义》List集合部分内容" class="headerlink" title="阅读《疯狂Java讲义》List集合部分内容"></a>阅读《疯狂Java讲义》List集合部分内容</h5></li></ul><h2 id="2023-07-02"><a href="#2023-07-02" class="headerlink" title="2023/07/02"></a>2023/07/02</h2><ul><li><h5 id="上午，了解Gitee-Page服务及SSH连接"><a href="#上午，了解Gitee-Page服务及SSH连接" class="headerlink" title="上午，了解Gitee Page服务及SSH连接"></a>上午，了解Gitee Page服务及SSH连接</h5></li><li><h5 id="SSHKey-突然失效问题解答及处理办法-Gitee-产品文档"><a href="#SSHKey-突然失效问题解答及处理办法-Gitee-产品文档" class="headerlink" title="SSHKey 突然失效问题解答及处理办法 | Gitee 产品文档"></a><a href="https://help.gitee.com/repository/ssh/questions">SSHKey 突然失效问题解答及处理办法 | Gitee 产品文档</a></h5></li><li><h5 id="ssh简单介绍和使用-掘金-juejin-cn"><a href="#ssh简单介绍和使用-掘金-juejin-cn" class="headerlink" title="ssh简单介绍和使用 - 掘金 (juejin.cn)"></a><a href="https://juejin.cn/post/6844903959040131085">ssh简单介绍和使用 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="Gitee-SVN支持-Gitee-产品文档-https-help-gitee-com-enterprise-code-manage-代码托管-代码仓库-Gitee-SVN支持"><a href="#Gitee-SVN支持-Gitee-产品文档-https-help-gitee-com-enterprise-code-manage-代码托管-代码仓库-Gitee-SVN支持" class="headerlink" title="[Gitee SVN支持 | Gitee 产品文档](https://help.gitee.com/enterprise/code-manage/代码托管/代码仓库/Gitee SVN支持)"></a>[Gitee SVN支持 | Gitee 产品文档](<a href="https://help.gitee.com/enterprise/code-manage/%E4%BB%A3%E7%A0%81%E6%89%98%E7%AE%A1/%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/Gitee">https://help.gitee.com/enterprise/code-manage/代码托管/代码仓库/Gitee</a> SVN支持)</h5></li><li><h5 id="71条消息-开发工具：Git和SVN有哪些差异，看完你就懂了？-svn和git的区别-IT技术分享社区的博客-CSDN博客"><a href="#71条消息-开发工具：Git和SVN有哪些差异，看完你就懂了？-svn和git的区别-IT技术分享社区的博客-CSDN博客" class="headerlink" title="(71条消息) 开发工具：Git和SVN有哪些差异，看完你就懂了？_svn和git的区别_IT技术分享社区的博客-CSDN博客"></a><a href="https://blog.csdn.net/xishining/article/details/123675254">(71条消息) 开发工具：Git和SVN有哪些差异，看完你就懂了？_svn和git的区别_IT技术分享社区的博客-CSDN博客</a></h5></li><li><h5 id="下午，快速搭建VuePress和VitePress文档站点，并完成主题配置"><a href="#下午，快速搭建VuePress和VitePress文档站点，并完成主题配置" class="headerlink" title="下午，快速搭建VuePress和VitePress文档站点，并完成主题配置"></a>下午，快速搭建VuePress和VitePress文档站点，并完成主题配置</h5></li><li><h5 id="71条消息-vuepress自定义主题开发-超简单模式-vitepress主题-贝茵斯都的博客-CSDN博客"><a href="#71条消息-vuepress自定义主题开发-超简单模式-vitepress主题-贝茵斯都的博客-CSDN博客" class="headerlink" title="(71条消息) vuepress自定义主题开发-超简单模式_vitepress主题_贝茵斯都的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_40532650/article/details/116064378">(71条消息) vuepress自定义主题开发-超简单模式_vitepress主题_贝茵斯都的博客-CSDN博客</a></h5></li><li><h5 id="71条消息-yarn的安装和使用（极其详细）-yarn安装-树根朽木的博客-CSDN博客"><a href="#71条消息-yarn的安装和使用（极其详细）-yarn安装-树根朽木的博客-CSDN博客" class="headerlink" title="(71条消息) yarn的安装和使用（极其详细）_yarn安装_树根朽木的博客-CSDN博客"></a><a href="https://blog.csdn.net/jiaoqi6132/article/details/130146199">(71条消息) yarn的安装和使用（极其详细）_yarn安装_树根朽木的博客-CSDN博客</a></h5></li><li><h5 id="VuePress-github-com"><a href="#VuePress-github-com" class="headerlink" title="VuePress (github.com)"></a><a href="https://github.com/vuepress">VuePress (github.com)</a></h5></li><li><h5 id="npm、pnpm、yarn的区别及安装：《理解npm、pnpm和yarn：选出最适合你的包管理器》"><a href="#npm、pnpm、yarn的区别及安装：《理解npm、pnpm和yarn：选出最适合你的包管理器》" class="headerlink" title="npm、pnpm、yarn的区别及安装：《理解npm、pnpm和yarn：选出最适合你的包管理器》"></a>npm、pnpm、yarn的区别及安装：《理解npm、pnpm和yarn：选出最适合你的包管理器》</h5></li><li><h5 id="vuepress主题：theme-hope-vuejs-press"><a href="#vuepress主题：theme-hope-vuejs-press" class="headerlink" title="vuepress主题：theme-hope.vuejs.press"></a>vuepress主题：<a href="https://theme-hope.vuejs.press/">theme-hope.vuejs.press</a></h5></li><li><h5 id="简单总结下今天的工作流程：了解Gitee-Page服务，部署静态网站（博客站点、文档站点）-gt"><a href="#简单总结下今天的工作流程：了解Gitee-Page服务，部署静态网站（博客站点、文档站点）-gt" class="headerlink" title="简单总结下今天的工作流程：了解Gitee Page服务，部署静态网站（博客站点、文档站点） -&gt;"></a>简单总结下今天的工作流程：了解Gitee Page服务，部署静态网站（博客站点、文档站点） -&gt;</h5></li><li><h5 id="Gitee-SSH-连接-gt"><a href="#Gitee-SSH-连接-gt" class="headerlink" title="Gitee SSH 连接 -&gt;"></a>Gitee SSH 连接 -&gt;</h5></li><li><h5 id="着手搭建博客站点、文档站点（Hexo、VuePress）-gt"><a href="#着手搭建博客站点、文档站点（Hexo、VuePress）-gt" class="headerlink" title="着手搭建博客站点、文档站点（Hexo、VuePress）-&gt;"></a>着手搭建博客站点、文档站点（Hexo、VuePress）-&gt;</h5></li><li><h5 id="VuePress主题配置-gt"><a href="#VuePress主题配置-gt" class="headerlink" title="VuePress主题配置 -&gt;"></a>VuePress主题配置 -&gt;</h5></li><li><h5 id="npm、pnpm、yarn的区别和安装-gt"><a href="#npm、pnpm、yarn的区别和安装-gt" class="headerlink" title="npm、pnpm、yarn的区别和安装 -&gt;"></a>npm、pnpm、yarn的区别和安装 -&gt;</h5></li><li><h5 id="查找并修改npm默认全局安装地址、缓存位置及设置安装地址、缓存位置"><a href="#查找并修改npm默认全局安装地址、缓存位置及设置安装地址、缓存位置" class="headerlink" title="查找并修改npm默认全局安装地址、缓存位置及设置安装地址、缓存位置"></a>查找并修改npm默认全局安装地址、缓存位置及设置安装地址、缓存位置</h5></li><li><h5 id="71条消息-查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置-npm-缓存位置-俺是老王的博客-CSDN博客"><a href="#71条消息-查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置-npm-缓存位置-俺是老王的博客-CSDN博客" class="headerlink" title="(71条消息) 查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置_npm 缓存位置_俺是老王的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_37600506/article/details/121067302">(71条消息) 查找npm默认全局安装地址、缓存位置及设置安装地址、缓存位置_npm 缓存位置_俺是老王的博客-CSDN博客</a></h5></li><li><h5 id="71条消息-npm将软件包安装到哪里-npm-安装软件-讓丄帝愛伱的博客-CSDN博客"><a href="#71条消息-npm将软件包安装到哪里-npm-安装软件-讓丄帝愛伱的博客-CSDN博客" class="headerlink" title="(71条消息) npm将软件包安装到哪里_npm 安装软件_讓丄帝愛伱的博客-CSDN博客"></a><a href="https://blog.csdn.net/ximaiyao1984/article/details/130230697">(71条消息) npm将软件包安装到哪里_npm 安装软件_讓丄帝愛伱的博客-CSDN博客</a></h5></li><li><h5 id="71条消息-【无标题】‘pnpm‘-不是内部或外部命令，也不是可运行的程序-或批处理文件。-pnpm’-不是内部或外部命令-玉剑横秋的博客-CSDN博客"><a href="#71条消息-【无标题】‘pnpm‘-不是内部或外部命令，也不是可运行的程序-或批处理文件。-pnpm’-不是内部或外部命令-玉剑横秋的博客-CSDN博客" class="headerlink" title="(71条消息) 【无标题】‘pnpm‘ 不是内部或外部命令，也不是可运行的程序 或批处理文件。_pnpm’ 不是内部或外部命令_玉剑横秋的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_51175188/article/details/127339371">(71条消息) 【无标题】‘pnpm‘ 不是内部或外部命令，也不是可运行的程序 或批处理文件。_pnpm’ 不是内部或外部命令_玉剑横秋的博客-CSDN博客</a></h5></li><li><h5 id="一文带你深入了解Node-js（图文详解）-gxlsystem-com"><a href="#一文带你深入了解Node-js（图文详解）-gxlsystem-com" class="headerlink" title="一文带你深入了解Node.js（图文详解） (gxlsystem.com)"></a><a href="https://www.gxlsystem.com/qianduan-2413144.html">一文带你深入了解Node.js（图文详解） (gxlsystem.com)</a></h5></li><li><h5 id="Node-js学习：基本目录结构-灰信网（软件开发博客聚合）-freesion-com"><a href="#Node-js学习：基本目录结构-灰信网（软件开发博客聚合）-freesion-com" class="headerlink" title="Node.js学习：基本目录结构 - 灰信网（软件开发博客聚合） (freesion.com)"></a><a href="https://www.freesion.com/article/55271140990/">Node.js学习：基本目录结构 - 灰信网（软件开发博客聚合） (freesion.com)</a></h5></li><li><h5 id="npm学习二：npm配置文件和修改配置，安装包路径修改-ngui-cc"><a href="#npm学习二：npm配置文件和修改配置，安装包路径修改-ngui-cc" class="headerlink" title="npm学习二：npm配置文件和修改配置，安装包路径修改 (ngui.cc)"></a><a href="https://www.ngui.cc/el/3202570.html?action=onClick">npm学习二：npm配置文件和修改配置，安装包路径修改 (ngui.cc)</a></h5></li></ul><h2 id="2023-07-03"><a href="#2023-07-03" class="headerlink" title="2023/07/03"></a>2023/07/03</h2><ul><li><h5 id="上午，完善Node-js的配置踩坑经历"><a href="#上午，完善Node-js的配置踩坑经历" class="headerlink" title="上午，完善Node.js的配置踩坑经历"></a>上午，完善Node.js的配置踩坑经历</h5></li><li><h5 id="下午，《疯狂Java讲义》Java集合部分"><a href="#下午，《疯狂Java讲义》Java集合部分" class="headerlink" title="下午，《疯狂Java讲义》Java集合部分"></a>下午，《疯狂Java讲义》Java集合部分</h5></li><li><h5 id="晚上，尝试部署伙伴匹配系统"><a href="#晚上，尝试部署伙伴匹配系统" class="headerlink" title="晚上，尝试部署伙伴匹配系统"></a>晚上，尝试部署伙伴匹配系统</h5></li><li><h5 id="记录：后端多环境实战-gt-配置多环境-gt-打包项目，检验多环境配置是否生效-gt-打包失败，解决java和javac版本不一致问题"><a href="#记录：后端多环境实战-gt-配置多环境-gt-打包项目，检验多环境配置是否生效-gt-打包失败，解决java和javac版本不一致问题" class="headerlink" title="记录：后端多环境实战 -&gt; 配置多环境 -&gt; 打包项目，检验多环境配置是否生效 -&gt; 打包失败，解决java和javac版本不一致问题"></a>记录：后端多环境实战 -&gt; 配置多环境 -&gt; 打包项目，检验多环境配置是否生效 -&gt; 打包失败，解决java和javac版本不一致问题</h5></li><li><h5 id="这个宝塔面板登录一直在转圈圈，好像还不太好解决"><a href="#这个宝塔面板登录一直在转圈圈，好像还不太好解决" class="headerlink" title="这个宝塔面板登录一直在转圈圈，好像还不太好解决"></a>这个宝塔面板登录一直在转圈圈，好像还不太好解决</h5></li></ul><h2 id="2023-07-04"><a href="#2023-07-04" class="headerlink" title="2023/07/04"></a>2023/07/04</h2><ul><li><h5 id="分别在掘金和CSDN发布了第一篇文章！"><a href="#分别在掘金和CSDN发布了第一篇文章！" class="headerlink" title="分别在掘金和CSDN发布了第一篇文章！"></a>分别在掘金和CSDN发布了第一篇文章！</h5></li><li><h5 id="掘金：宝塔面板安装教程-掘金-juejin-cn"><a href="#掘金：宝塔面板安装教程-掘金-juejin-cn" class="headerlink" title="掘金：宝塔面板安装教程 - 掘金 (juejin.cn)"></a>掘金：<a href="https://juejin.cn/post/7251786189278986301">宝塔面板安装教程 - 掘金 (juejin.cn)</a></h5></li><li><h5 id="CSDN：宝塔面板安装教程-回忆-如初的博客-CSDN博客"><a href="#CSDN：宝塔面板安装教程-回忆-如初的博客-CSDN博客" class="headerlink" title="CSDN：宝塔面板安装教程_回忆-如初的博客-CSDN博客"></a>CSDN：<a href="https://blog.csdn.net/m0_62570784/article/details/131531031?spm=1001.2014.3001.5501">宝塔面板安装教程_回忆-如初的博客-CSDN博客</a></h5></li><li><h5 id="新增文章《揭秘项目部署上线之路：流程、挑战与解决方案》，记录部署上线伙伴匹配系统的流程、所遇到的问题以及解决方法"><a href="#新增文章《揭秘项目部署上线之路：流程、挑战与解决方案》，记录部署上线伙伴匹配系统的流程、所遇到的问题以及解决方法" class="headerlink" title="新增文章《揭秘项目部署上线之路：流程、挑战与解决方案》，记录部署上线伙伴匹配系统的流程、所遇到的问题以及解决方法"></a>新增文章《揭秘项目部署上线之路：流程、挑战与解决方案》，记录部署上线伙伴匹配系统的流程、所遇到的问题以及解决方法</h5></li><li><h5 id="更加完善了《配置指南-掌握Node-js配置》、《大道至简：快速搭建博客与文档站点的终极指南》"><a href="#更加完善了《配置指南-掌握Node-js配置》、《大道至简：快速搭建博客与文档站点的终极指南》" class="headerlink" title="更加完善了《配置指南-掌握Node-js配置》、《大道至简：快速搭建博客与文档站点的终极指南》"></a>更加完善了《配置指南-掌握Node-js配置》、《大道至简：快速搭建博客与文档站点的终极指南》</h5></li><li><h5 id="接下来的博客撰写任务有：静态网站托管、项目部署上线"><a href="#接下来的博客撰写任务有：静态网站托管、项目部署上线" class="headerlink" title="接下来的博客撰写任务有：静态网站托管、项目部署上线"></a>接下来的博客撰写任务有：静态网站托管、项目部署上线</h5></li></ul><h2 id="2023-07-05"><a href="#2023-07-05" class="headerlink" title="2023/07/05"></a>2023/07/05</h2><ul><li><h5 id="上午，力扣，剑指offer75，做了两道"><a href="#上午，力扣，剑指offer75，做了两道" class="headerlink" title="上午，力扣，剑指offer75，做了两道"></a>上午，力扣，剑指offer75，做了两道</h5></li><li><h5 id="下午，《疯狂Java讲义》Java集合部分完结"><a href="#下午，《疯狂Java讲义》Java集合部分完结" class="headerlink" title="下午，《疯狂Java讲义》Java集合部分完结"></a>下午，《疯狂Java讲义》Java集合部分完结</h5></li><li><h5 id="API接口平台第一期，项目搭建"><a href="#API接口平台第一期，项目搭建" class="headerlink" title="API接口平台第一期，项目搭建"></a>API接口平台第一期，项目搭建</h5></li><li><h5 id="多了解计算机专业方面的考证和竞赛，个人赛优先"><a href="#多了解计算机专业方面的考证和竞赛，个人赛优先" class="headerlink" title="多了解计算机专业方面的考证和竞赛，个人赛优先"></a>多了解计算机专业方面的考证和竞赛，个人赛优先</h5></li></ul><h2 id="2023-07-06"><a href="#2023-07-06" class="headerlink" title="2023/07/06"></a>2023/07/06</h2><ul><li><h5 id="软考：全国计算机技术与软件专业技术资格（水平）考试-ruankao-org-cn"><a href="#软考：全国计算机技术与软件专业技术资格（水平）考试-ruankao-org-cn" class="headerlink" title="软考：全国计算机技术与软件专业技术资格（水平）考试 (ruankao.org.cn)"></a>软考：<a href="https://bm.ruankao.org.cn/sign/welcome">全国计算机技术与软件专业技术资格（水平）考试 (ruankao.org.cn)</a></h5></li><li><h5 id="全国计算机等级考试：NCRE-中国教育考试网-neea-edu-cn"><a href="#全国计算机等级考试：NCRE-中国教育考试网-neea-edu-cn" class="headerlink" title="全国计算机等级考试：NCRE - 中国教育考试网 (neea.edu.cn)"></a>全国计算机等级考试：<a href="https://ncre.neea.edu.cn/">NCRE - 中国教育考试网 (neea.edu.cn)</a></h5></li><li><h5 id="蓝桥杯：蓝桥杯大赛-lanqiao-cn"><a href="#蓝桥杯：蓝桥杯大赛-lanqiao-cn" class="headerlink" title="蓝桥杯：蓝桥杯大赛 (lanqiao.cn)"></a>蓝桥杯：<a href="https://dasai.lanqiao.cn/profile?ut=0&ub=1">蓝桥杯大赛 (lanqiao.cn)</a></h5></li><li><h5 id="微软认证、PAT：PTA-程序设计类实验辅助教学平台-pintia-cn"><a href="#微软认证、PAT：PTA-程序设计类实验辅助教学平台-pintia-cn" class="headerlink" title="微软认证、PAT：PTA | 程序设计类实验辅助教学平台 (pintia.cn)"></a>微软认证、PAT：<a href="https://pintia.cn/problem-sets/dashboard">PTA | 程序设计类实验辅助教学平台 (pintia.cn)</a></h5></li><li><h5 id="相关视频讲解："><a href="#相关视频讲解：" class="headerlink" title="相关视频讲解："></a>相关视频讲解：</h5></li><li><p><a href="https://www.bilibili.com/video/BV1Ys4y1c7we/?share_source=copy_web">软考方向</a></p></li><li><p><a href="https://www.bilibili.com/video/BV19h411j7GM/?share_source=copy_web">软考好处</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1YQ4y1C7MC/?share_source=copy_web">软考中级工程师对于找工作有没有用呢</a></p></li><li><p><a href="https://www.bilibili.com/video/BV16L4y1a7uC/?share_source=copy_web">含金量超高的计算机证书</a></p></li><li><h5 id="下载了好多软考备考资料，考个证书，充实一下自己"><a href="#下载了好多软考备考资料，考个证书，充实一下自己" class="headerlink" title="下载了好多软考备考资料，考个证书，充实一下自己"></a>下载了好多软考备考资料，考个证书，充实一下自己</h5></li><li><h5 id="【【GeekHour】30分钟Nginx入门教程】-https-www-bilibili-com-video-BV1mz4y1n7PQ-share-source-copy-web-amp-vd-source-41484c3c23d7dc1caf838d6574365b27"><a href="#【【GeekHour】30分钟Nginx入门教程】-https-www-bilibili-com-video-BV1mz4y1n7PQ-share-source-copy-web-amp-vd-source-41484c3c23d7dc1caf838d6574365b27" class="headerlink" title="【【GeekHour】30分钟Nginx入门教程】 https://www.bilibili.com/video/BV1mz4y1n7PQ/?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27"></a>【【GeekHour】30分钟Nginx入门教程】 <a href="https://www.bilibili.com/video/BV1mz4y1n7PQ/?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27">https://www.bilibili.com/video/BV1mz4y1n7PQ/?share_source=copy_web&amp;vd_source=41484c3c23d7dc1caf838d6574365b27</a></h5></li><li><h5 id="新增文章：《Nginx-入门指南：理解、配置和优化》、"><a href="#新增文章：《Nginx-入门指南：理解、配置和优化》、" class="headerlink" title="新增文章：《Nginx 入门指南：理解、配置和优化》、"></a>新增文章：《Nginx 入门指南：理解、配置和优化》、</h5></li><li><h5 id="着手备考计算机二级（Java，9月份）、软考（软件设计师，11月份）、英语六级（12月份）、蓝桥杯（3月份）"><a href="#着手备考计算机二级（Java，9月份）、软考（软件设计师，11月份）、英语六级（12月份）、蓝桥杯（3月份）" class="headerlink" title="着手备考计算机二级（Java，9月份）、软考（软件设计师，11月份）、英语六级（12月份）、蓝桥杯（3月份）"></a>着手备考计算机二级（Java，9月份）、软考（软件设计师，11月份）、英语六级（12月份）、蓝桥杯（3月份）</h5></li></ul><h2 id="2023-07-07"><a href="#2023-07-07" class="headerlink" title="2023/07/07"></a>2023/07/07</h2><ul><li><h5 id="每日3-5道算法题"><a href="#每日3-5道算法题" class="headerlink" title="每日3-5道算法题"></a>每日3-5道算法题</h5></li><li><h5 id="着手学习计算机操作系统"><a href="#着手学习计算机操作系统" class="headerlink" title="着手学习计算机操作系统"></a>着手学习计算机操作系统</h5></li><li><h5 id="【一口吃胖】下载那些事：各种下载技术原理介绍-哔哩哔哩-bilibili"><a href="#【一口吃胖】下载那些事：各种下载技术原理介绍-哔哩哔哩-bilibili" class="headerlink" title="【一口吃胖】下载那些事：各种下载技术原理介绍_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1FA4y1Q7Ck/?spm_id_from=333.337.search-card.all.click&vd_source=4314e5bd742ea904c9675af8a6b4b07e">【一口吃胖】下载那些事：各种下载技术原理介绍_哔哩哔哩_bilibili</a></h5></li><li><h5 id="74条消息-聚合和组合的区别（Java）-今日份的快乐的博客-CSDN博客"><a href="#74条消息-聚合和组合的区别（Java）-今日份的快乐的博客-CSDN博客" class="headerlink" title="(74条消息) 聚合和组合的区别（Java）_今日份的快乐的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_49357382/article/details/116098480">(74条消息) 聚合和组合的区别（Java）_今日份的快乐的博客-CSDN博客</a></h5></li><li><h5 id="Nginx反向代理、负载均衡案例实战：部署三个静态网站"><a href="#Nginx反向代理、负载均衡案例实战：部署三个静态网站" class="headerlink" title="Nginx反向代理、负载均衡案例实战：部署三个静态网站"></a>Nginx反向代理、负载均衡案例实战：部署三个静态网站</h5></li></ul><h2 id="2023-07-08"><a href="#2023-07-08" class="headerlink" title="2023/07/08"></a>2023/07/08</h2><ul><li><h5 id="《操作系统（第四版）》"><a href="#《操作系统（第四版）》" class="headerlink" title="《操作系统（第四版）》"></a>《操作系统（第四版）》</h5></li><li><h5 id="《计算机是怎么跑起来的》"><a href="#《计算机是怎么跑起来的》" class="headerlink" title="《计算机是怎么跑起来的》"></a>《计算机是怎么跑起来的》</h5></li><li><h5 id="联机轴心与同盟，比学习还累人"><a href="#联机轴心与同盟，比学习还累人" class="headerlink" title="联机轴心与同盟，比学习还累人"></a>联机轴心与同盟，比学习还累人</h5></li></ul><h2 id="2023-07-09"><a href="#2023-07-09" class="headerlink" title="2023/07/09"></a>2023/07/09</h2><ul><li><h5 id="网络适配器有黄色感叹号怎么解决-360doc-com"><a href="#网络适配器有黄色感叹号怎么解决-360doc-com" class="headerlink" title="网络适配器有黄色感叹号怎么解决 (360doc.com)"></a><a href="http://www.360doc.com/content/22/0610/19/34398161_1035489365.shtml">网络适配器有黄色感叹号怎么解决 (360doc.com)</a></h5></li><li><h5 id="下了个驱动精灵，修复网络适配器，把电脑声卡给搞坏了"><a href="#下了个驱动精灵，修复网络适配器，把电脑声卡给搞坏了" class="headerlink" title="下了个驱动精灵，修复网络适配器，把电脑声卡给搞坏了"></a>下了个驱动精灵，修复网络适配器，把电脑声卡给搞坏了</h5></li><li><h5 id="下午，《趣话计算机底层技术》收货"><a href="#下午，《趣话计算机底层技术》收货" class="headerlink" title="下午，《趣话计算机底层技术》收货"></a>下午，《趣话计算机底层技术》收货</h5></li></ul><h2 id="2023-07-10"><a href="#2023-07-10" class="headerlink" title="2023/07/10"></a>2023/07/10</h2><ul><li><h5 id="《操作系统（第四版）》第三部分-进程-已过半"><a href="#《操作系统（第四版）》第三部分-进程-已过半" class="headerlink" title="《操作系统（第四版）》第三部分 进程 已过半"></a>《操作系统（第四版）》第三部分 进程 已过半</h5></li><li><h5 id="加入编程导航算法村，加强巩固算法"><a href="#加入编程导航算法村，加强巩固算法" class="headerlink" title="加入编程导航算法村，加强巩固算法"></a>加入编程导航算法村，加强巩固算法</h5></li><li><h5 id="近期目标：快速完成API接口开放平台的开发"><a href="#近期目标：快速完成API接口开放平台的开发" class="headerlink" title="近期目标：快速完成API接口开放平台的开发"></a>近期目标：快速完成API接口开放平台的开发</h5></li></ul><h2 id="2023-07-11"><a href="#2023-07-11" class="headerlink" title="2023/07/11"></a>2023/07/11</h2><ul><li><h5 id="上午，《计算机是怎么跑起来的》第四章读完"><a href="#上午，《计算机是怎么跑起来的》第四章读完" class="headerlink" title="上午，《计算机是怎么跑起来的》第四章读完"></a>上午，《计算机是怎么跑起来的》第四章读完</h5></li><li><h5 id="快速看完《从零开始玩转ChatGPT》"><a href="#快速看完《从零开始玩转ChatGPT》" class="headerlink" title="快速看完《从零开始玩转ChatGPT》"></a>快速看完《从零开始玩转ChatGPT》</h5></li><li><h5 id="中午《深入浅出计算机网络》收货"><a href="#中午《深入浅出计算机网络》收货" class="headerlink" title="中午《深入浅出计算机网络》收货"></a>中午《深入浅出计算机网络》收货</h5></li><li><h5 id="B站-几位UP-讲干货："><a href="#B站-几位UP-讲干货：" class="headerlink" title="B站 几位UP 讲干货："></a>B站 几位UP 讲干货：</h5></li><li><h5 id="GeekHour：geekhour-哔哩哔哩-Bilibili"><a href="#GeekHour：geekhour-哔哩哔哩-Bilibili" class="headerlink" title="GeekHour：geekhour-哔哩哔哩_Bilibili"></a>GeekHour：<a href="https://search.bilibili.com/all?vt=66733246&keyword=geekhour&from_source=webtop_search&spm_id_from=333.1007&search_source=5">geekhour-哔哩哔哩_Bilibili</a></h5></li><li><h5 id="技术蛋老师：技术蛋老师的个人空间-哔哩哔哩-bilibili"><a href="#技术蛋老师：技术蛋老师的个人空间-哔哩哔哩-bilibili" class="headerlink" title="技术蛋老师：技术蛋老师的个人空间_哔哩哔哩_bilibili"></a>技术蛋老师：<a href="https://space.bilibili.com/327247876?spm_id_from=333.337.search-card.all.click">技术蛋老师的个人空间_哔哩哔哩_bilibili</a></h5></li><li><h5 id="奇乐编程学院：奇乐编程学院的个人空间-哔哩哔哩-bilibili"><a href="#奇乐编程学院：奇乐编程学院的个人空间-哔哩哔哩-bilibili" class="headerlink" title="奇乐编程学院：奇乐编程学院的个人空间_哔哩哔哩_bilibili"></a>奇乐编程学院：<a href="https://space.bilibili.com/372313671">奇乐编程学院的个人空间_哔哩哔哩_bilibili</a></h5></li><li><h5 id="互联网数据传输原理-｜OSI七层网络参考模型-哔哩哔哩-bilibili"><a href="#互联网数据传输原理-｜OSI七层网络参考模型-哔哩哔哩-bilibili" class="headerlink" title="互联网数据传输原理 ｜OSI七层网络参考模型_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1EU4y1v7ju/?spm_id_from=333.999.0.0">互联网数据传输原理 ｜OSI七层网络参考模型_哔哩哔哩_bilibili</a></h5></li><li><h5 id="Ping命令的原理及多种用法-哔哩哔哩-bilibili"><a href="#Ping命令的原理及多种用法-哔哩哔哩-bilibili" class="headerlink" title="Ping命令的原理及多种用法_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1WZ4y187ak/?spm_id_from=pageDriver&vd_source=4314e5bd742ea904c9675af8a6b4b07e">Ping命令的原理及多种用法_哔哩哔哩_bilibili</a></h5></li><li><h5 id="下午，完善《从IP到Ping命令：了解计算机网络连接的基础》并同步发布至CSDN、掘金"><a href="#下午，完善《从IP到Ping命令：了解计算机网络连接的基础》并同步发布至CSDN、掘金" class="headerlink" title="下午，完善《从IP到Ping命令：了解计算机网络连接的基础》并同步发布至CSDN、掘金"></a>下午，完善《从IP到Ping命令：了解计算机网络连接的基础》并同步发布至CSDN、掘金</h5></li><li><h5 id="奇乐编程学院的个人空间-哔哩哔哩-bilibili"><a href="#奇乐编程学院的个人空间-哔哩哔哩-bilibili" class="headerlink" title="奇乐编程学院的个人空间_哔哩哔哩_bilibili"></a><a href="https://space.bilibili.com/372313671">奇乐编程学院的个人空间_哔哩哔哩_bilibili</a></h5></li></ul><h2 id="2023-07-12"><a href="#2023-07-12" class="headerlink" title="2023/07/12"></a>2023/07/12</h2><ul><li><h5 id="上午，《操作系统第四版》第二章-处理机管理，完结"><a href="#上午，《操作系统第四版》第二章-处理机管理，完结" class="headerlink" title="上午，《操作系统第四版》第二章 处理机管理，完结"></a>上午，《操作系统第四版》第二章 处理机管理，完结</h5></li><li><h5 id="技术蛋老师-计算机网络合集："><a href="#技术蛋老师-计算机网络合集：" class="headerlink" title="技术蛋老师 计算机网络合集："></a>技术蛋老师 计算机网络合集：</h5></li><li><h5 id="互联网数据传输原理-｜OSI七层网络参考模型-哔哩哔哩-bilibili-1"><a href="#互联网数据传输原理-｜OSI七层网络参考模型-哔哩哔哩-bilibili-1" class="headerlink" title="互联网数据传输原理 ｜OSI七层网络参考模型_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1EU4y1v7ju/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=4314e5bd742ea904c9675af8a6b4b07e">互联网数据传输原理 ｜OSI七层网络参考模型_哔哩哔哩_bilibili</a></h5></li><li><h5 id="IPv4地址和子网掩码-哔哩哔哩-bilibili"><a href="#IPv4地址和子网掩码-哔哩哔哩-bilibili" class="headerlink" title="IPv4地址和子网掩码_哔哩哔哩_bilibili"></a><a href="https://www.bilibili.com/video/BV1xu411f7UW/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=4314e5bd742ea904c9675af8a6b4b07e">IPv4地址和子网掩码_哔哩哔哩_bilibili</a></h5></li><li><h5 id="75条消息-如果让你来设计网络，你会把它弄成啥样？-低并发编程-如果让你来设计网络-小白资料站的博客-CSDN博客"><a href="#75条消息-如果让你来设计网络，你会把它弄成啥样？-低并发编程-如果让你来设计网络-小白资料站的博客-CSDN博客" class="headerlink" title="(75条消息) 如果让你来设计网络，你会把它弄成啥样？_低并发编程 如果让你来设计网络_小白资料站的博客-CSDN博客"></a><a href="https://blog.csdn.net/W211953332/article/details/115255793">(75条消息) 如果让你来设计网络，你会把它弄成啥样？_低并发编程 如果让你来设计网络_小白资料站的博客-CSDN博客</a></h5></li><li><h5 id="Hexo全过程记录-从Centos到Fluid-IRIDIUM-SUB-博客园-cnblogs-com"><a href="#Hexo全过程记录-从Centos到Fluid-IRIDIUM-SUB-博客园-cnblogs-com" class="headerlink" title="Hexo全过程记录 从Centos到Fluid - IRIDIUM-SUB - 博客园 (cnblogs.com)"></a><a href="https://www.cnblogs.com/IRIDIUM-192/p/15750989.html">Hexo全过程记录 从Centos到Fluid - IRIDIUM-SUB - 博客园 (cnblogs.com)</a></h5></li><li><h5 id="时隔整整4个月，再次优化博客页面，包括首页文章图片、微调图片占比大小、文章目录、同类文章显示等等"><a href="#时隔整整4个月，再次优化博客页面，包括首页文章图片、微调图片占比大小、文章目录、同类文章显示等等" class="headerlink" title="时隔整整4个月，再次优化博客页面，包括首页文章图片、微调图片占比大小、文章目录、同类文章显示等等"></a>时隔整整4个月，再次优化博客页面，包括首页文章图片、微调图片占比大小、文章目录、同类文章显示等等</h5></li><li><h5 id="下午，《趣话计算机底层技术》第6章-计算机的攻击与安全防护"><a href="#下午，《趣话计算机底层技术》第6章-计算机的攻击与安全防护" class="headerlink" title="下午，《趣话计算机底层技术》第6章 计算机的攻击与安全防护"></a>下午，《趣话计算机底层技术》第6章 计算机的攻击与安全防护</h5></li></ul><h2 id="2023-07-13"><a href="#2023-07-13" class="headerlink" title="2023/07/13"></a>2023/07/13</h2><ul><li><h5 id="上午，继续学习SpringCloud，发现之前的微服务怎么都启动不了，下面是我的排查过程："><a href="#上午，继续学习SpringCloud，发现之前的微服务怎么都启动不了，下面是我的排查过程：" class="headerlink" title="上午，继续学习SpringCloud，发现之前的微服务怎么都启动不了，下面是我的排查过程："></a>上午，继续学习SpringCloud，发现之前的微服务怎么都启动不了，下面是我的排查过程：</h5></li><li><h5 id="原来学过的知识丢掉了，忘记开启Nacos服务了-gt"><a href="#原来学过的知识丢掉了，忘记开启Nacos服务了-gt" class="headerlink" title="原来学过的知识丢掉了，忘记开启Nacos服务了 -&gt;"></a>原来学过的知识丢掉了，忘记开启Nacos服务了 -&gt;</h5></li><li><h5 id="OrderSercice和UserService服务一直连接Nacos失败，经排查，发现是网络问题，把手机热点换成直连WIFI即可-gt"><a href="#OrderSercice和UserService服务一直连接Nacos失败，经排查，发现是网络问题，把手机热点换成直连WIFI即可-gt" class="headerlink" title="OrderSercice和UserService服务一直连接Nacos失败，经排查，发现是网络问题，把手机热点换成直连WIFI即可 -&gt;"></a>OrderSercice和UserService服务一直连接Nacos失败，经排查，发现是网络问题，把手机热点换成直连WIFI即可 -&gt;</h5></li><li><h5 id="服务注册成功，但数据库访问失败，修改成本地MySQL的用户名和密码后，仍提示：找不到这个主机。"><a href="#服务注册成功，但数据库访问失败，修改成本地MySQL的用户名和密码后，仍提示：找不到这个主机。" class="headerlink" title="服务注册成功，但数据库访问失败，修改成本地MySQL的用户名和密码后，仍提示：找不到这个主机。"></a>服务注册成功，但数据库访问失败，修改成本地MySQL的用户名和密码后，仍提示：找不到这个主机。</h5></li><li><h5 id="经排查，发现两服务配置中数据库的-url-配置如下："><a href="#经排查，发现两服务配置中数据库的-url-配置如下：" class="headerlink" title="经排查，发现两服务配置中数据库的 url 配置如下："></a>经排查，发现两服务配置中数据库的 url 配置如下：</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">url: jdbc:mysql://mysql:3306/spring_cloud_test?useSSL=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="将mysql修改为localhost即可："><a href="#将mysql修改为localhost即可：" class="headerlink" title="将mysql修改为localhost即可："></a>将mysql修改为localhost即可：</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">url: jdbc:mysql://localhost:3306/spring_cloud_test?useSSL=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="至此，两个服务成功运行"><a href="#至此，两个服务成功运行" class="headerlink" title="至此，两个服务成功运行"></a>至此，两个服务成功运行</h5></li><li><h5 id="接下来快速巩固Ribbon负载均衡、Nacos配置管理、Feign远程调用、Gateway服务网关的相关知识，向后推进"><a href="#接下来快速巩固Ribbon负载均衡、Nacos配置管理、Feign远程调用、Gateway服务网关的相关知识，向后推进" class="headerlink" title="接下来快速巩固Ribbon负载均衡、Nacos配置管理、Feign远程调用、Gateway服务网关的相关知识，向后推进"></a>接下来快速巩固Ribbon负载均衡、Nacos配置管理、Feign远程调用、Gateway服务网关的相关知识，向后推进</h5></li><li><h5 id="下午，学习了Gateway解决跨域问题，了解到-CORS-跨域问题的产生原因及解决方案："><a href="#下午，学习了Gateway解决跨域问题，了解到-CORS-跨域问题的产生原因及解决方案：" class="headerlink" title="下午，学习了Gateway解决跨域问题，了解到 CORS 跨域问题的产生原因及解决方案："></a>下午，学习了Gateway解决跨域问题，了解到 CORS 跨域问题的产生原因及解决方案：</h5></li><li><h5 id="彻底理解CORS跨域原理-喵小Q-博客园-cnblogs-com"><a href="#彻底理解CORS跨域原理-喵小Q-博客园-cnblogs-com" class="headerlink" title="彻底理解CORS跨域原理 - 喵小Q - 博客园 (cnblogs.com)"></a><a href="https://www.cnblogs.com/qiujianmei/p/11649905.html">彻底理解CORS跨域原理 - 喵小Q - 博客园 (cnblogs.com)</a></h5></li><li><p><a href="https://zhuanlan.zhihu.com/p/24411090">跨域——CORS详解 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/guorui_java/article/details/107345499">(77条消息) jsonp原理详解——终于搞清楚jsonp是啥了_哪 吒的博客-CSDN博客</a></p></li><li><h5 id="晚上，《疯狂Java讲义》网络编程，网络编程的基础知识"><a href="#晚上，《疯狂Java讲义》网络编程，网络编程的基础知识" class="headerlink" title="晚上，《疯狂Java讲义》网络编程，网络编程的基础知识"></a>晚上，《疯狂Java讲义》网络编程，网络编程的基础知识</h5></li></ul><h2 id="2023-07-14"><a href="#2023-07-14" class="headerlink" title="2023/07/14"></a>2023/07/14</h2><ul><li><h5 id="上午，《操作系统》存储管理"><a href="#上午，《操作系统》存储管理" class="headerlink" title="上午，《操作系统》存储管理"></a>上午，《操作系统》存储管理</h5></li><li><h5 id="中午，《计算机是怎么连接的》"><a href="#中午，《计算机是怎么连接的》" class="headerlink" title="中午，《计算机是怎么连接的》"></a>中午，《计算机是怎么连接的》</h5></li><li><h5 id="晚上，《操作系统》设备管理"><a href="#晚上，《操作系统》设备管理" class="headerlink" title="晚上，《操作系统》设备管理"></a>晚上，《操作系统》设备管理</h5></li></ul><h2 id="2023-07-15"><a href="#2023-07-15" class="headerlink" title="2023/07/15"></a>2023/07/15</h2><ul><li><h5 id="上午，继续学习API接口平台，拉取SQL之父前后端源码，作大致了解"><a href="#上午，继续学习API接口平台，拉取SQL之父前后端源码，作大致了解" class="headerlink" title="上午，继续学习API接口平台，拉取SQL之父前后端源码，作大致了解"></a>上午，继续学习API接口平台，拉取SQL之父前后端源码，作大致了解</h5></li><li><h5 id="《深度解析Web开发中的跨域问题》一文完成"><a href="#《深度解析Web开发中的跨域问题》一文完成" class="headerlink" title="《深度解析Web开发中的跨域问题》一文完成"></a>《深度解析Web开发中的跨域问题》一文完成</h5></li><li><h5 id="中午，持续学习SpringCloud微服务"><a href="#中午，持续学习SpringCloud微服务" class="headerlink" title="中午，持续学习SpringCloud微服务"></a>中午，持续学习SpringCloud微服务</h5></li><li><h5 id="下午，学习了Nacos配置管理：集群、命名空间、热更新、Nacos配置文件优先级-gt"><a href="#下午，学习了Nacos配置管理：集群、命名空间、热更新、Nacos配置文件优先级-gt" class="headerlink" title="下午，学习了Nacos配置管理：集群、命名空间、热更新、Nacos配置文件优先级 -&gt;"></a>下午，学习了Nacos配置管理：集群、命名空间、热更新、Nacos配置文件优先级 -&gt;</h5></li><li><h5 id="Feign远程调用：基本使用、自定义配置（配置文件-注解-类）、简化代码（继承-抽取）"><a href="#Feign远程调用：基本使用、自定义配置（配置文件-注解-类）、简化代码（继承-抽取）" class="headerlink" title="Feign远程调用：基本使用、自定义配置（配置文件/注解 + 类）、简化代码（继承/抽取）"></a>Feign远程调用：基本使用、自定义配置（配置文件/注解 + 类）、简化代码（继承/抽取）</h5></li><li><h5 id="晚上，继续开发API接口平台，建立数据库表，完成前后端代码推送至"><a href="#晚上，继续开发API接口平台，建立数据库表，完成前后端代码推送至" class="headerlink" title="晚上，继续开发API接口平台，建立数据库表，完成前后端代码推送至"></a>晚上，继续开发API接口平台，建立数据库表，完成前后端代码推送至</h5></li><li><h5 id="初步完成文章《解决Git远程推送报错的终极指南》的编写"><a href="#初步完成文章《解决Git远程推送报错的终极指南》的编写" class="headerlink" title="初步完成文章《解决Git远程推送报错的终极指南》的编写"></a>初步完成文章《解决Git远程推送报错的终极指南》的编写</h5></li></ul><h2 id="2023-07-16"><a href="#2023-07-16" class="headerlink" title="2023/07/16"></a>2023/07/16</h2><ul><li><h5 id="上午，编程导航算法通关村开营，了解相关事宜"><a href="#上午，编程导航算法通关村开营，了解相关事宜" class="headerlink" title="上午，编程导航算法通关村开营，了解相关事宜"></a>上午，编程导航算法通关村开营，了解相关事宜</h5></li><li><h5 id="（下午出门逛公园、吃烧烤、骑电动，回来继续打游戏）"><a href="#（下午出门逛公园、吃烧烤、骑电动，回来继续打游戏）" class="headerlink" title="（下午出门逛公园、吃烧烤、骑电动，回来继续打游戏）"></a>（下午出门逛公园、吃烧烤、骑电动，回来继续打游戏）</h5></li></ul><h2 id="2023-07-17"><a href="#2023-07-17" class="headerlink" title="2023/07/17"></a>2023/07/17</h2><ul><li><h5 id="《操作系统》设备管理-完结，做好思维导图"><a href="#《操作系统》设备管理-完结，做好思维导图" class="headerlink" title="《操作系统》设备管理 完结，做好思维导图"></a>《操作系统》设备管理 完结，做好思维导图</h5></li><li><h5 id="实时操作系统-百度百科-baidu-com"><a href="#实时操作系统-百度百科-baidu-com" class="headerlink" title="实时操作系统_百度百科 (baidu.com)"></a><a href="https://baike.baidu.com/item/%E5%AE%9E%E6%97%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/357530?fr=ge_ala">实时操作系统_百度百科 (baidu.com)</a></h5></li><li><h5 id="下午，SpringCloud-Docker初步学习，做好思维导图"><a href="#下午，SpringCloud-Docker初步学习，做好思维导图" class="headerlink" title="下午，SpringCloud Docker初步学习，做好思维导图"></a>下午，SpringCloud Docker初步学习，做好思维导图</h5></li><li><h5 id="算法通关村第一关-青铜挑战完成，《探索算法学习之旅：经验分享与解题思路》第一天开始了"><a href="#算法通关村第一关-青铜挑战完成，《探索算法学习之旅：经验分享与解题思路》第一天开始了" class="headerlink" title="算法通关村第一关-青铜挑战完成，《探索算法学习之旅：经验分享与解题思路》第一天开始了"></a>算法通关村第一关-青铜挑战完成，《探索算法学习之旅：经验分享与解题思路》第一天开始了</h5></li><li><h5 id="同步发布到了CSDN中，完成挑战"><a href="#同步发布到了CSDN中，完成挑战" class="headerlink" title="同步发布到了CSDN中，完成挑战"></a>同步发布到了CSDN中，完成挑战</h5></li><li><h5 id="单链表、双向链表的实现挺麻烦的，看看能不能啃下来"><a href="#单链表、双向链表的实现挺麻烦的，看看能不能啃下来" class="headerlink" title="单链表、双向链表的实现挺麻烦的，看看能不能啃下来"></a>单链表、双向链表的实现挺麻烦的，看看能不能啃下来</h5></li></ul><h2 id="2023-07-18"><a href="#2023-07-18" class="headerlink" title="2023/07/18"></a>2023/07/18</h2><ul><li><h5 id="算法通关村，第三天"><a href="#算法通关村，第三天" class="headerlink" title="算法通关村，第三天"></a>算法通关村，第三天</h5></li><li><h5 id="上午，《操作系统》文件系统，完结"><a href="#上午，《操作系统》文件系统，完结" class="headerlink" title="上午，《操作系统》文件系统，完结"></a>上午，《操作系统》文件系统，完结</h5></li><li><h5 id="晚上，算法通关村第一关-白银挑战"><a href="#晚上，算法通关村第一关-白银挑战" class="headerlink" title="晚上，算法通关村第一关-白银挑战"></a>晚上，算法通关村第一关-白银挑战</h5></li><li><h5 id="《算法通关村第一关-链表经典问题：查找两链表的第一个公共节点》CSDN发布完成"><a href="#《算法通关村第一关-链表经典问题：查找两链表的第一个公共节点》CSDN发布完成" class="headerlink" title="《算法通关村第一关-链表经典问题：查找两链表的第一个公共节点》CSDN发布完成"></a>《算法通关村第一关-链表经典问题：查找两链表的第一个公共节点》CSDN发布完成</h5></li><li><h5 id="成功使用-WebBench-远程连接云服务器了，好多天了，可算解决这个问题了"><a href="#成功使用-WebBench-远程连接云服务器了，好多天了，可算解决这个问题了" class="headerlink" title="成功使用 WebBench 远程连接云服务器了，好多天了，可算解决这个问题了"></a>成功使用 WebBench 远程连接云服务器了，好多天了，可算解决这个问题了</h5></li><li><h5 id="详情可以在《云服务器远程连接指南：各种方法详解与问题解决》一文中查看"><a href="#详情可以在《云服务器远程连接指南：各种方法详解与问题解决》一文中查看" class="headerlink" title="详情可以在《云服务器远程连接指南：各种方法详解与问题解决》一文中查看"></a>详情可以在《云服务器远程连接指南：各种方法详解与问题解决》一文中查看</h5></li><li><h5 id="明天继续学习Docker，可以看康文昌老师的视频，继续了解下云开发、继续完成API接口平台、每日算法、博客-文档站点的搭建、美化"><a href="#明天继续学习Docker，可以看康文昌老师的视频，继续了解下云开发、继续完成API接口平台、每日算法、博客-文档站点的搭建、美化" class="headerlink" title="明天继续学习Docker，可以看康文昌老师的视频，继续了解下云开发、继续完成API接口平台、每日算法、博客/文档站点的搭建、美化"></a>明天继续学习Docker，可以看康文昌老师的视频，继续了解下云开发、继续完成API接口平台、每日算法、博客/文档站点的搭建、美化</h5></li></ul><h2 id="2023-07-19"><a href="#2023-07-19" class="headerlink" title="2023/07/19"></a>2023/07/19</h2><ul><li><h5 id="API接口平台第一期完结"><a href="#API接口平台第一期完结" class="headerlink" title="API接口平台第一期完结"></a>API接口平台第一期完结</h5></li><li><h5 id="【已解决】宝塔面板登录后，一直不停的转圈圈-Linux面板-宝塔面板论坛-bt-cn"><a href="#【已解决】宝塔面板登录后，一直不停的转圈圈-Linux面板-宝塔面板论坛-bt-cn" class="headerlink" title="【已解决】宝塔面板登录后，一直不停的转圈圈 - Linux面板 - 宝塔面板论坛 (bt.cn)"></a><a href="https://www.bt.cn/bbs/forum.php?mod=viewthread&tid=114620">【已解决】宝塔面板登录后，一直不停的转圈圈 - Linux面板 - 宝塔面板论坛 (bt.cn)</a></h5></li><li><h5 id="算法通关村第一关：公共节点、回文链表判断、拼接链表，同步至CSDN"><a href="#算法通关村第一关：公共节点、回文链表判断、拼接链表，同步至CSDN" class="headerlink" title="算法通关村第一关：公共节点、回文链表判断、拼接链表，同步至CSDN"></a>算法通关村第一关：公共节点、回文链表判断、拼接链表，同步至CSDN</h5></li><li><h5 id="下午，宝塔仍然登陆失败，待解决。。。"><a href="#下午，宝塔仍然登陆失败，待解决。。。" class="headerlink" title="下午，宝塔仍然登陆失败，待解决。。。"></a>下午，宝塔仍然登陆失败，待解决。。。</h5></li><li><h5 id="API接口平台后端框架搭建、接口信息的增、删、改、查功能完成"><a href="#API接口平台后端框架搭建、接口信息的增、删、改、查功能完成" class="headerlink" title="API接口平台后端框架搭建、接口信息的增、删、改、查功能完成"></a>API接口平台后端框架搭建、接口信息的增、删、改、查功能完成</h5></li></ul><h2 id="2023-07-20"><a href="#2023-07-20" class="headerlink" title="2023/07/20"></a>2023/07/20</h2><ul><li><h5 id="搞个七牛云图床存储服务"><a href="#搞个七牛云图床存储服务" class="headerlink" title="搞个七牛云图床存储服务"></a>搞个七牛云图床存储服务</h5></li><li><h5 id="80条消息-基于Typora和七牛云配置文章图床-typora-七牛云设置图床-shark-chili的博客-CSDN博客"><a href="#80条消息-基于Typora和七牛云配置文章图床-typora-七牛云设置图床-shark-chili的博客-CSDN博客" class="headerlink" title="(80条消息) 基于Typora和七牛云配置文章图床_typora+七牛云设置图床_shark-chili的博客-CSDN博客"></a><a href="https://blog.csdn.net/shark_chili3007/article/details/123564655">(80条消息) 基于Typora和七牛云配置文章图床_typora+七牛云设置图床_shark-chili的博客-CSDN博客</a></h5></li><li><h5 id="Ant-Design组件库：分页-Pagination-Ant-Design"><a href="#Ant-Design组件库：分页-Pagination-Ant-Design" class="headerlink" title="Ant Design组件库：分页 Pagination - Ant Design"></a>Ant Design组件库：<a href="https://ant.design/components/pagination-cn">分页 Pagination - Ant Design</a></h5></li><li><h5 id="Ant-Design-Pro脚手架：文档总览-Ant-Design-Pro"><a href="#Ant-Design-Pro脚手架：文档总览-Ant-Design-Pro" class="headerlink" title="Ant Design Pro脚手架：文档总览 - Ant Design Pro"></a>Ant Design Pro脚手架：<a href="https://pro.ant.design/zh-CN/docs/overview/">文档总览 - Ant Design Pro</a></h5></li><li><h5 id="了解了Ant-Design组件库和Ant-Design-Pro目录结构、功能实现方式，打算打造一个自己的网站"><a href="#了解了Ant-Design组件库和Ant-Design-Pro目录结构、功能实现方式，打算打造一个自己的网站" class="headerlink" title="了解了Ant Design组件库和Ant Design Pro目录结构、功能实现方式，打算打造一个自己的网站"></a>了解了Ant Design组件库和Ant Design Pro目录结构、功能实现方式，打算打造一个自己的网站</h5></li><li><h5 id="打造个人网站之前，还得学会如何快速上线项目"><a href="#打造个人网站之前，还得学会如何快速上线项目" class="headerlink" title="打造个人网站之前，还得学会如何快速上线项目"></a>打造个人网站之前，还得学会如何快速上线项目</h5></li><li><h5 id="个人博客网站如何赚钱？推荐6种比较常见的赚钱方式-boke112百科"><a href="#个人博客网站如何赚钱？推荐6种比较常见的赚钱方式-boke112百科" class="headerlink" title="个人博客网站如何赚钱？推荐6种比较常见的赚钱方式 - boke112百科"></a><a href="https://boke112.com/post/10127.html">个人博客网站如何赚钱？推荐6种比较常见的赚钱方式 - boke112百科</a></h5></li><li><h5 id="个人建网站怎么赚钱？最常见的三种赚钱模式-–-副业老刁-nb386-com"><a href="#个人建网站怎么赚钱？最常见的三种赚钱模式-–-副业老刁-nb386-com" class="headerlink" title="个人建网站怎么赚钱？最常见的三种赚钱模式 – 副业老刁 (nb386.com)"></a><a href="https://laodiao.nb386.com/260/">个人建网站怎么赚钱？最常见的三种赚钱模式 – 副业老刁 (nb386.com)</a></h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/LOGO_01.jpg" alt="LOGO_01"></p><h2 id="2023-07-21"><a href="#2023-07-21" class="headerlink" title="2023/07/21"></a>2023/07/21</h2><ul><li><h5 id="SQL-之父很好用😊"><a href="#SQL-之父很好用😊" class="headerlink" title="SQL 之父很好用😊"></a>SQL 之父很好用😊</h5></li><li><h5 id="上午、中午、下午，都在搞API接口开放平台，结果因为跨域问题，后端种不上cookie，待解决"><a href="#上午、中午、下午，都在搞API接口开放平台，结果因为跨域问题，后端种不上cookie，待解决" class="headerlink" title="上午、中午、下午，都在搞API接口开放平台，结果因为跨域问题，后端种不上cookie，待解决"></a>上午、中午、下午，都在搞API接口开放平台，结果因为跨域问题，后端种不上cookie，待解决</h5></li><li><h5 id="算法村第一期直播回放看完，巩固链表"><a href="#算法村第一期直播回放看完，巩固链表" class="headerlink" title="算法村第一期直播回放看完，巩固链表"></a>算法村第一期直播回放看完，巩固链表</h5></li></ul><h2 id="2023-07-22"><a href="#2023-07-22" class="headerlink" title="2023/07/22"></a>2023/07/22</h2><ul><li><h5 id="早上，《操作系统》，巩固文件管理"><a href="#早上，《操作系统》，巩固文件管理" class="headerlink" title="早上，《操作系统》，巩固文件管理"></a>早上，《操作系统》，巩固文件管理</h5></li><li><h5 id="《计算机是怎么跑起来的》，XML是什么，SE是什么"><a href="#《计算机是怎么跑起来的》，XML是什么，SE是什么" class="headerlink" title="《计算机是怎么跑起来的》，XML是什么，SE是什么"></a>《计算机是怎么跑起来的》，XML是什么，SE是什么</h5></li><li><h5 id="晚上，算法通关村第一关-双指针专题完成，同步发布至CSDN"><a href="#晚上，算法通关村第一关-双指针专题完成，同步发布至CSDN" class="headerlink" title="晚上，算法通关村第一关-双指针专题完成，同步发布至CSDN"></a>晚上，算法通关村第一关-双指针专题完成，同步发布至CSDN</h5></li><li><h5 id="网络环境太差，Docker安装失败。"><a href="#网络环境太差，Docker安装失败。" class="headerlink" title="网络环境太差，Docker安装失败。"></a>网络环境太差，Docker安装失败。</h5></li></ul><h2 id="2023-07-23"><a href="#2023-07-23" class="headerlink" title="2023/07/23"></a>2023/07/23</h2><ul><li><h5 id="解决API开放接口平台跨域问题"><a href="#解决API开放接口平台跨域问题" class="headerlink" title="解决API开放接口平台跨域问题"></a>解决API开放接口平台跨域问题</h5></li><li><p><a href="https://blog.csdn.net/z449077880/article/details/114358531">(82条消息) 【Ant Design】新增页面非常简单，只需要四步即可_ant design 新建一个页面_zcrazy胡说八道的博客-CSDN博客</a></p></li><li><h5 id="有关API接口开放平台的开发过程，均记录在《API开放平台-开放文档》中"><a href="#有关API接口开放平台的开发过程，均记录在《API开放平台-开放文档》中" class="headerlink" title="有关API接口开放平台的开发过程，均记录在《API开放平台-开放文档》中"></a>有关API接口开放平台的开发过程，均记录在《API开放平台-开放文档》中</h5></li><li><h5 id="中午，完善了《解决Git远程推送报错的终极指南》"><a href="#中午，完善了《解决Git远程推送报错的终极指南》" class="headerlink" title="中午，完善了《解决Git远程推送报错的终极指南》"></a>中午，完善了《解决Git远程推送报错的终极指南》</h5></li><li><h5 id="下午，着手搭建自己的第一个文档站点"><a href="#下午，着手搭建自己的第一个文档站点" class="headerlink" title="下午，着手搭建自己的第一个文档站点"></a>下午，着手搭建自己的第一个文档站点</h5></li><li><h5 id="笔记：关于使用vitepress-制作静态站点并托管到gitee-代码天地-codetd-com"><a href="#笔记：关于使用vitepress-制作静态站点并托管到gitee-代码天地-codetd-com" class="headerlink" title="笔记：关于使用vitepress 制作静态站点并托管到gitee - 代码天地 (codetd.com)"></a><a href="https://www.codetd.com/article/14648586">笔记：关于使用vitepress 制作静态站点并托管到gitee - 代码天地 (codetd.com)</a></h5></li><li><h5 id="82条消息-我的-VuePress-博客部署之路-vuepress-部署到gitee-Wu-JunHui的博客-CSDN博客"><a href="#82条消息-我的-VuePress-博客部署之路-vuepress-部署到gitee-Wu-JunHui的博客-CSDN博客" class="headerlink" title="(82条消息) 我的 VuePress 博客部署之路_vuepress 部署到gitee_Wu-JunHui的博客-CSDN博客"></a><a href="https://blog.csdn.net/INT_FUTURE/article/details/128975977">(82条消息) 我的 VuePress 博客部署之路_vuepress 部署到gitee_Wu-JunHui的博客-CSDN博客</a></h5></li><li><h5 id="Gitee-Page-部署-VuePress-文档站点还挺不好搞的，先美化页面吧"><a href="#Gitee-Page-部署-VuePress-文档站点还挺不好搞的，先美化页面吧" class="headerlink" title="Gitee Page 部署 VuePress 文档站点还挺不好搞的，先美化页面吧"></a>Gitee Page 部署 VuePress 文档站点还挺不好搞的，先美化页面吧</h5></li><li><h5 id="玩一玩微信机器人："><a href="#玩一玩微信机器人：" class="headerlink" title="玩一玩微信机器人："></a>玩一玩微信机器人：</h5></li><li><h5 id="智能对话接口-微信开放文档-qq-com"><a href="#智能对话接口-微信开放文档-qq-com" class="headerlink" title="智能对话接口 | 微信开放文档 (qq.com)"></a><a href="https://developers.weixin.qq.com/doc/aispeech/platform/example/api.html">智能对话接口 | 微信开放文档 (qq.com)</a></h5></li><li><h5 id="微信对话开放平台-qq-com"><a href="#微信对话开放平台-qq-com" class="headerlink" title="微信对话开放平台 (qq.com)"></a><a href="https://chatbot.weixin.qq.com/@ten7e26d/platform/openAi/home">微信对话开放平台 (qq.com)</a></h5></li></ul><h2 id="2023-07-24"><a href="#2023-07-24" class="headerlink" title="2023/07/24"></a>2023/07/24</h2><ul><li><h5 id="中午，成功解决宝塔面板登录失败的问题，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"><a href="#中午，成功解决宝塔面板登录失败的问题，详见《宝塔面板：解放手动配置，轻松管理你的服务器》" class="headerlink" title="中午，成功解决宝塔面板登录失败的问题，详见《宝塔面板：解放手动配置，轻松管理你的服务器》"></a>中午，成功解决宝塔面板登录失败的问题，详见《宝塔面板：解放手动配置，轻松管理你的服务器》</h5></li><li><h5 id="成功安装Docker：容器镜像服务-aliyun-com"><a href="#成功安装Docker：容器镜像服务-aliyun-com" class="headerlink" title="成功安装Docker：容器镜像服务 (aliyun.com)"></a>成功安装Docker：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">容器镜像服务 (aliyun.com)</a></h5></li><li><h5 id="下午，搞微信对话开放平台，想调用API，未果"><a href="#下午，搞微信对话开放平台，想调用API，未果" class="headerlink" title="下午，搞微信对话开放平台，想调用API，未果"></a>下午，搞微信对话开放平台，想调用API，未果</h5></li><li><h5 id="着手上线伙伴匹配系统，可算部署成功了"><a href="#着手上线伙伴匹配系统，可算部署成功了" class="headerlink" title="着手上线伙伴匹配系统，可算部署成功了"></a>着手上线伙伴匹配系统，可算部署成功了</h5></li></ul><h2 id="2023-07-25"><a href="#2023-07-25" class="headerlink" title="2023/07/25"></a>2023/07/25</h2><ul><li><h5 id="上午，宝塔安装线上数据库，未果"><a href="#上午，宝塔安装线上数据库，未果" class="headerlink" title="上午，宝塔安装线上数据库，未果"></a>上午，宝塔安装线上数据库，未果</h5></li><li><p>[(83条消息) 宝塔连接云服务器mysql错误(2003, “Can‘t connect to MySQL server on ‘<a href="http://xxx.xx.xx.xx/%E2%80%98">http://xxx.xx.xx.xx/‘</a> (<a href="https://blog.csdn.net/qq_51133939/article/details/126995919">Errno -2] Name or s_千梦、流羽的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/qq_42068856/article/details/109293298">(83条消息) Navicat连接错误1130:is not allowed to connect to this mysql server_笑我归无处的博客-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_44954895/article/details/120231374">(83条消息) 阿里云服务器安装JDK11和环境配置_宝塔面板安装jdk11_Object girl=null;的博客-CSDN博客</a></p></li><li><p><a href="https://blog.51cto.com/u_16152740/6426802">宝塔安装的redis无法远程连接_51CTO博客_远程连接redis</a></p></li><li><p><a href="https://huaweicloud.csdn.net/637eeaabdf016f70ae4c99b6.html">Redis 宝塔面板配置外网远程连接_redis_高艳艳0216-华为云开发者联盟 (csdn.net)</a></p></li><li><p><a href="https://www.javaroad.cn/questions/87005">在Spring启动时在类路径资源中定义名为’redisson’的bean时出错-Java 学习之路 (javaroad.cn)</a></p></li><li><h5 id="下午，成功安装配置线上数据库和redis"><a href="#下午，成功安装配置线上数据库和redis" class="headerlink" title="下午，成功安装配置线上数据库和redis"></a>下午，成功安装配置线上数据库和redis</h5></li><li><h5 id="晚上，经过10个小时的努力，成功部署伙伴匹配系统的后端代码，虽然有点菜，但总归是成功了"><a href="#晚上，经过10个小时的努力，成功部署伙伴匹配系统的后端代码，虽然有点菜，但总归是成功了" class="headerlink" title="晚上，经过10个小时的努力，成功部署伙伴匹配系统的后端代码，虽然有点菜，但总归是成功了"></a>晚上，经过10个小时的努力，成功部署伙伴匹配系统的后端代码，虽然有点菜，但总归是成功了</h5></li><li><h5 id="继续总结项目部署全流程《揭秘项目部署上线之路：流程、挑战与解决方案》、《宝塔面板：解放手动配置，轻松管理你的服务器》"><a href="#继续总结项目部署全流程《揭秘项目部署上线之路：流程、挑战与解决方案》、《宝塔面板：解放手动配置，轻松管理你的服务器》" class="headerlink" title="继续总结项目部署全流程《揭秘项目部署上线之路：流程、挑战与解决方案》、《宝塔面板：解放手动配置，轻松管理你的服务器》"></a>继续总结项目部署全流程《揭秘项目部署上线之路：流程、挑战与解决方案》、《宝塔面板：解放手动配置，轻松管理你的服务器》</h5></li><li><h5 id="明天继续搞前端部分的部署上线"><a href="#明天继续搞前端部分的部署上线" class="headerlink" title="明天继续搞前端部分的部署上线"></a>明天继续搞前端部分的部署上线</h5></li><li><h5 id="微信开发者工具接口调用还要在研究研究，从明天开始继续搞算法题、做项目、看书"><a href="#微信开发者工具接口调用还要在研究研究，从明天开始继续搞算法题、做项目、看书" class="headerlink" title="微信开发者工具接口调用还要在研究研究，从明天开始继续搞算法题、做项目、看书"></a>微信开发者工具接口调用还要在研究研究，从明天开始继续搞算法题、做项目、看书</h5></li></ul><h2 id="2023-07-26"><a href="#2023-07-26" class="headerlink" title="2023/07/26"></a>2023/07/26</h2><ul><li><h5 id="他奶奶的，一大早推送API接口开放平台代码到Gitee，给我本地代码删改了，用这个退出那个rabase模式了"><a href="#他奶奶的，一大早推送API接口开放平台代码到Gitee，给我本地代码删改了，用这个退出那个rabase模式了" class="headerlink" title="他奶奶的，一大早推送API接口开放平台代码到Gitee，给我本地代码删改了，用这个退出那个rabase模式了"></a>他奶奶的，一大早推送API接口开放平台代码到Gitee，给我本地代码删改了，用这个退出那个rabase模式了</h5></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git rebase <span class="hljs-comment">--abort</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="还是得多了解git"><a href="#还是得多了解git" class="headerlink" title="还是得多了解git"></a>还是得多了解git</h5></li><li><h5 id="上午，持续开发API接口开放平台"><a href="#上午，持续开发API接口开放平台" class="headerlink" title="上午，持续开发API接口开放平台"></a>上午，持续开发API接口开放平台</h5></li><li><h5 id="下午，启动后端项目，竟然提示端口被占用了，虽然很疑惑，还是直接给它杀掉了："><a href="#下午，启动后端项目，竟然提示端口被占用了，虽然很疑惑，还是直接给它杀掉了：" class="headerlink" title="下午，启动后端项目，竟然提示端口被占用了，虽然很疑惑，还是直接给它杀掉了："></a>下午，启动后端项目，竟然提示端口被占用了，虽然很疑惑，还是直接给它杀掉了：</h5></li><li><h5 id="晚上《操作系统》，进程间的互斥和同步"><a href="#晚上《操作系统》，进程间的互斥和同步" class="headerlink" title="晚上《操作系统》，进程间的互斥和同步"></a>晚上《操作系统》，进程间的互斥和同步</h5></li><li><p><a href="https://jingyan.baidu.com/article/e8cdb32b42f2e776042bad7f.html">Windows查看使用端口是否被占用-百度经验 (baidu.com)</a></p></li><li><h5 id="真服了，晚上推送后端代码到Github，它把一周前的提交记录给推上去了，什么迷惑操作。。我还给他拉取到本地，把这两天写的代码全覆盖了。"><a href="#真服了，晚上推送后端代码到Github，它把一周前的提交记录给推上去了，什么迷惑操作。。我还给他拉取到本地，把这两天写的代码全覆盖了。" class="headerlink" title="真服了，晚上推送后端代码到Github，它把一周前的提交记录给推上去了，什么迷惑操作。。我还给他拉取到本地，把这两天写的代码全覆盖了。"></a>真服了，晚上推送后端代码到Github，它把一周前的提交记录给推上去了，什么迷惑操作。。我还给他拉取到本地，把这两天写的代码全覆盖了。</h5></li><li><h5 id="好不容易用Gitee，把之前上传的代码拉取下来了，打开IDEA又爆红报错。"><a href="#好不容易用Gitee，把之前上传的代码拉取下来了，打开IDEA又爆红报错。" class="headerlink" title="好不容易用Gitee，把之前上传的代码拉取下来了，打开IDEA又爆红报错。"></a>好不容易用Gitee，把之前上传的代码拉取下来了，打开IDEA又爆红报错。</h5></li><li><h5 id="他妈的还是网络问题，才导致的依赖报错"><a href="#他妈的还是网络问题，才导致的依赖报错" class="headerlink" title="他妈的还是网络问题，才导致的依赖报错"></a>他妈的还是网络问题，才导致的依赖报错</h5></li></ul><h2 id="2023-07-27"><a href="#2023-07-27" class="headerlink" title="2023/07/27"></a>2023/07/27</h2><ul><li><h5 id="算法通关村第一关完结，庆祝一下"><a href="#算法通关村第一关完结，庆祝一下" class="headerlink" title="算法通关村第一关完结，庆祝一下"></a>算法通关村第一关完结，庆祝一下</h5></li><li><h5 id="API接口开放平台，接口信息的增、删、改、查功能开发完毕"><a href="#API接口开放平台，接口信息的增、删、改、查功能开发完毕" class="headerlink" title="API接口开放平台，接口信息的增、删、改、查功能开发完毕"></a>API接口开放平台，接口信息的增、删、改、查功能开发完毕</h5></li><li><h5 id="学习这个项目，顺带学习了签名认证、网络协议等知识"><a href="#学习这个项目，顺带学习了签名认证、网络协议等知识" class="headerlink" title="学习这个项目，顺带学习了签名认证、网络协议等知识"></a>学习这个项目，顺带学习了签名认证、网络协议等知识</h5></li><li><h5 id="sdk接口是什么-•-Worktile社区"><a href="#sdk接口是什么-•-Worktile社区" class="headerlink" title="sdk接口是什么 • Worktile社区"></a><a href="https://worktile.com/kb/ask/18028.html">sdk接口是什么 • Worktile社区</a></h5></li><li><h5 id="下午，《自顶向下-计算机网络》，是一本好书，挺难的"><a href="#下午，《自顶向下-计算机网络》，是一本好书，挺难的" class="headerlink" title="下午，《自顶向下 计算机网络》，是一本好书，挺难的"></a>下午，《自顶向下 计算机网络》，是一本好书，挺难的</h5></li><li><h5 id="CSDN同步文章《绑定密钥对导致SSH服务异常》"><a href="#CSDN同步文章《绑定密钥对导致SSH服务异常》" class="headerlink" title="CSDN同步文章《绑定密钥对导致SSH服务异常》"></a>CSDN同步文章《绑定密钥对导致SSH服务异常》</h5></li><li><h5 id="真的不想写接口信息增、删、改、查的后端校验逻辑😟"><a href="#真的不想写接口信息增、删、改、查的后端校验逻辑😟" class="headerlink" title="真的不想写接口信息增、删、改、查的后端校验逻辑😟"></a>真的不想写接口信息增、删、改、查的后端校验逻辑😟</h5></li><li><h5 id="晚上，首次在语雀创建自己的知识库"><a href="#晚上，首次在语雀创建自己的知识库" class="headerlink" title="晚上，首次在语雀创建自己的知识库"></a>晚上，首次在语雀创建自己的知识库</h5></li><li><h5 id="手写链表反转的实现思路，明天再做吧"><a href="#手写链表反转的实现思路，明天再做吧" class="headerlink" title="手写链表反转的实现思路，明天再做吧"></a>手写链表反转的实现思路，明天再做吧</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大道至简：快速搭建博客与文档站点的终极指南1.0</title>
    <link href="/blog/2023/05/27/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%971.0/"/>
    <url>/blog/2023/05/27/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E6%96%87%E6%A1%A3%E7%AB%99%E7%82%B9%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%971.0/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="我们演示使用Hexo来搭建个人博客，并使用Gitee-GitHub托管"><a href="#我们演示使用Hexo来搭建个人博客，并使用Gitee-GitHub托管" class="headerlink" title="我们演示使用Hexo来搭建个人博客，并使用Gitee/GitHub托管"></a>我们演示使用Hexo来搭建个人博客，并使用Gitee/GitHub托管</h5></li></ul><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><h5 id="常见的博客站点生成器有很多，最主要的有俩：Hexo和Hugo"><a href="#常见的博客站点生成器有很多，最主要的有俩：Hexo和Hugo" class="headerlink" title="常见的博客站点生成器有很多，最主要的有俩：Hexo和Hugo"></a>常见的博客站点生成器有很多，最主要的有俩：Hexo和Hugo</h5></li><li><h5 id="那我们就先使用Hexo来搭建了"><a href="#那我们就先使用Hexo来搭建了" class="headerlink" title="那我们就先使用Hexo来搭建了"></a>那我们就先使用Hexo来搭建了</h5></li><li><h5 id="Hexo是一个静态博客站点生成工具，可以把Markdown格式的文档转换成静态页面，非常适合用来作个人技术博客"><a href="#Hexo是一个静态博客站点生成工具，可以把Markdown格式的文档转换成静态页面，非常适合用来作个人技术博客" class="headerlink" title="Hexo是一个静态博客站点生成工具，可以把Markdown格式的文档转换成静态页面，非常适合用来作个人技术博客"></a>Hexo是一个静态博客站点生成工具，可以把Markdown格式的文档转换成静态页面，非常适合用来作个人技术博客</h5></li><li><h5 id="其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建"><a href="#其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建" class="headerlink" title="其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建"></a>其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建</h5></li><li><h5 id="先放几个辅助资源："><a href="#先放几个辅助资源：" class="headerlink" title="先放几个辅助资源："></a>先放几个辅助资源：</h5></li><li><h5 id="各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack"><a href="#各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack" class="headerlink" title="各站点生成器的入口：Static Site Generators - Top Open Source SSGs | Jamstack"></a>各站点生成器的入口：<a href="https://jamstack.org/generators/">Static Site Generators - Top Open Source SSGs | Jamstack</a></h5></li><li><h5 id="Hexo官网：建站-Hexo"><a href="#Hexo官网：建站-Hexo" class="headerlink" title="Hexo官网：建站 | Hexo"></a>Hexo官网：<a href="https://hexo.io/zh-cn/docs/setup">建站 | Hexo</a></h5></li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><h5 id="使用Hexo搭建博客前要做的准备（这里不细讲）"><a href="#使用Hexo搭建博客前要做的准备（这里不细讲）" class="headerlink" title="使用Hexo搭建博客前要做的准备（这里不细讲）"></a>使用Hexo搭建博客前要做的准备（这里不细讲）</h5></li><li><h5 id="也没别的，就两点：Node-js和Git"><a href="#也没别的，就两点：Node-js和Git" class="headerlink" title="也没别的，就两点：Node.js和Git"></a>也没别的，就两点：Node.js和Git</h5></li><li><h5 id="有关Node-js环境安装及相关知识，可以移步至《配置指南-掌握Node-js配置》一文中进行相关了解"><a href="#有关Node-js环境安装及相关知识，可以移步至《配置指南-掌握Node-js配置》一文中进行相关了解" class="headerlink" title="有关Node.js环境安装及相关知识，可以移步至《配置指南-掌握Node-js配置》一文中进行相关了解"></a>有关Node.js环境安装及相关知识，可以移步至《配置指南-掌握Node-js配置》一文中进行相关了解</h5></li><li><h5 id="有关Git基础知识，可以移步至《入门指南：掌握Git的基本操作及进阶学习》一文中进行相关了解"><a href="#有关Git基础知识，可以移步至《入门指南：掌握Git的基本操作及进阶学习》一文中进行相关了解" class="headerlink" title="有关Git基础知识，可以移步至《入门指南：掌握Git的基本操作及进阶学习》一文中进行相关了解"></a>有关Git基础知识，可以移步至《入门指南：掌握Git的基本操作及进阶学习》一文中进行相关了解</h5></li></ul><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><ul><li><h5 id="全局安装hexo-cli（这玩意儿是个构建工具，就是用来安装hexo的）"><a href="#全局安装hexo-cli（这玩意儿是个构建工具，就是用来安装hexo的）" class="headerlink" title="全局安装hexo-cli（这玩意儿是个构建工具，就是用来安装hexo的）"></a>全局安装hexo-cli（这玩意儿是个构建工具，就是用来安装hexo的）</h5></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="在指定文件路径下初始化hexo"><a href="#在指定文件路径下初始化hexo" class="headerlink" title="在指定文件路径下初始化hexo"></a>在指定文件路径下初始化hexo</h5></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">hexo init<br>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="如你所见，-config-yml就是全局配置文件，我们建议复制一个-config-fluid-yml拷贝初始配置，然后在-config-yml里大刀阔斧地修改"><a href="#如你所见，-config-yml就是全局配置文件，我们建议复制一个-config-fluid-yml拷贝初始配置，然后在-config-yml里大刀阔斧地修改" class="headerlink" title="如你所见，_config.yml就是全局配置文件，我们建议复制一个_config.fluid.yml拷贝初始配置，然后在_config.yml里大刀阔斧地修改"></a>如你所见，_config.yml就是全局配置文件，我们建议复制一个_config.fluid.yml拷贝初始配置，然后在_config.yml里大刀阔斧地修改</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230528000510407.png" alt="image-20230528000510407" style="zoom: 80%;" /><ul><li><h5 id="至此，基本的hexo博客站点搭建完成"><a href="#至此，基本的hexo博客站点搭建完成" class="headerlink" title="至此，基本的hexo博客站点搭建完成"></a>至此，基本的hexo博客站点搭建完成</h5></li><li><h5 id="主题不好看，接下来我们着手配置主题"><a href="#主题不好看，接下来我们着手配置主题" class="headerlink" title="主题不好看，接下来我们着手配置主题"></a>主题不好看，接下来我们着手配置主题</h5></li></ul><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="默认主题"><a href="#默认主题" class="headerlink" title="默认主题"></a>默认主题</h3><ul><li><h5 id="这里可以在hexo官方文档里详细了解，修改默认主题定制特色主题"><a href="#这里可以在hexo官方文档里详细了解，修改默认主题定制特色主题" class="headerlink" title="这里可以在hexo官方文档里详细了解，修改默认主题定制特色主题"></a>这里可以在hexo官方文档里详细了解，修改默认主题定制特色主题</h5></li></ul><h3 id="第三方主题"><a href="#第三方主题" class="headerlink" title="第三方主题"></a>第三方主题</h3><ul><li><h5 id="这里推荐一个Hexo搭建个人博客教程：Hexo全过程记录-从Centos到Fluid-IRIDIUM-SUB-博客园-cnblogs-com"><a href="#这里推荐一个Hexo搭建个人博客教程：Hexo全过程记录-从Centos到Fluid-IRIDIUM-SUB-博客园-cnblogs-com" class="headerlink" title="这里推荐一个Hexo搭建个人博客教程：Hexo全过程记录 从Centos到Fluid - IRIDIUM-SUB - 博客园 (cnblogs.com)"></a>这里推荐一个Hexo搭建个人博客教程：<a href="https://www.cnblogs.com/IRIDIUM-192/p/15750989.html">Hexo全过程记录 从Centos到Fluid - IRIDIUM-SUB - 博客园 (cnblogs.com)</a></h5></li><li><h5 id="这个教程超级详细，从博客的搭建到主题配置介绍一应俱全，非常值得一看"><a href="#这个教程超级详细，从博客的搭建到主题配置介绍一应俱全，非常值得一看" class="headerlink" title="这个教程超级详细，从博客的搭建到主题配置介绍一应俱全，非常值得一看"></a>这个教程超级详细，从博客的搭建到主题配置介绍一应俱全，非常值得一看</h5></li><li><h5 id="比起默认主题，我会更加建议使用第三方主题，更加优秀和美观"><a href="#比起默认主题，我会更加建议使用第三方主题，更加优秀和美观" class="headerlink" title="比起默认主题，我会更加建议使用第三方主题，更加优秀和美观"></a>比起默认主题，我会更加建议使用第三方主题，更加优秀和美观</h5></li><li><h5 id="这里会简单地涉及到如何安装各式各样的主题，详细的主题配置请前往《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中学习"><a href="#这里会简单地涉及到如何安装各式各样的主题，详细的主题配置请前往《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中学习" class="headerlink" title="这里会简单地涉及到如何安装各式各样的主题，详细的主题配置请前往《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中学习"></a>这里会简单地涉及到如何安装各式各样的主题，详细的主题配置请前往《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中学习</h5></li><li><h5 id="各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack-1"><a href="#各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack-1" class="headerlink" title="各站点生成器的入口：Static Site Generators - Top Open Source SSGs | Jamstack"></a>各站点生成器的入口：<a href="https://jamstack.org/generators/">Static Site Generators - Top Open Source SSGs | Jamstack</a></h5></li><li><h5 id="在这个网站下，进入Hexo主题选择（都是人家写好的，会拉下来，拿来用就行），这里拿fluid主题举例"><a href="#在这个网站下，进入Hexo主题选择（都是人家写好的，会拉下来，拿来用就行），这里拿fluid主题举例" class="headerlink" title="在这个网站下，进入Hexo主题选择（都是人家写好的，会拉下来，拿来用就行），这里拿fluid主题举例"></a>在这个网站下，进入Hexo主题选择（都是人家写好的，会拉下来，拿来用就行），这里拿fluid主题举例</h5></li><li><h5 id="看文档，按部就班地走就行："><a href="#看文档，按部就班地走就行：" class="headerlink" title="看文档，按部就班地走就行："></a>看文档，按部就班地走就行：</h5></li><li><h5 id="安装fluid主题"><a href="#安装fluid主题" class="headerlink" title="安装fluid主题"></a>安装fluid主题</h5></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="修改-config-yml下的theme"><a href="#修改-config-yml下的theme" class="headerlink" title="修改_config.yml下的theme"></a>修改_config.yml下的theme</h5></li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="新建个关于页about（可选）"><a href="#新建个关于页about（可选）" class="headerlink" title="新建个关于页about（可选）"></a>新建个关于页about（可选）</h5></li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><ul><li><h5 id="执行下以下命令，成功访问到fluid主题的博客页面了，效果如下："><a href="#执行下以下命令，成功访问到fluid主题的博客页面了，效果如下：" class="headerlink" title="执行下以下命令，成功访问到fluid主题的博客页面了，效果如下："></a>执行下以下命令，成功访问到fluid主题的博客页面了，效果如下：</h5></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> g<span class="hljs-comment"># 生成静态站点</span><br>hexo s<span class="hljs-comment"># 本地开启服务</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230528000543197.png" alt="image-20230528000543197"></p><ul><li><h5 id="这个静态页面是由Hexo帮我们在本地搭建了一个Web服务，来支持我们访问的，适用于开发环境下的调试"><a href="#这个静态页面是由Hexo帮我们在本地搭建了一个Web服务，来支持我们访问的，适用于开发环境下的调试" class="headerlink" title="这个静态页面是由Hexo帮我们在本地搭建了一个Web服务，来支持我们访问的，适用于开发环境下的调试"></a>这个静态页面是由Hexo帮我们在本地搭建了一个Web服务，来支持我们访问的，适用于开发环境下的调试</h5></li><li><h5 id="实际生产过程中，我们需要把它部署到Nginx服务器上，方法也非常简单，"><a href="#实际生产过程中，我们需要把它部署到Nginx服务器上，方法也非常简单，" class="headerlink" title="实际生产过程中，我们需要把它部署到Nginx服务器上，方法也非常简单，"></a>实际生产过程中，我们需要把它部署到Nginx服务器上，方法也非常简单，</h5></li><li><h5 id="每个主题都有好多配置，那我们总要配置自己的特色主题吧？改成我们自己喜欢的，那就执行下面这行命令："><a href="#每个主题都有好多配置，那我们总要配置自己的特色主题吧？改成我们自己喜欢的，那就执行下面这行命令：" class="headerlink" title="每个主题都有好多配置，那我们总要配置自己的特色主题吧？改成我们自己喜欢的，那就执行下面这行命令："></a>每个主题都有好多配置，那我们总要配置自己的特色主题吧？改成我们自己喜欢的，那就执行下面这行命令：</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm <span class="hljs-keyword">update</span> <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="这时theme文件夹下找到一个-config-yml文件（往下找几层），这里我们就能自由配置、定制主题了"><a href="#这时theme文件夹下找到一个-config-yml文件（往下找几层），这里我们就能自由配置、定制主题了" class="headerlink" title="这时theme文件夹下找到一个_config.yml文件（往下找几层），这里我们就能自由配置、定制主题了"></a>这时theme文件夹下找到一个_config.yml文件（往下找几层），这里我们就能自由配置、定制主题了</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230703101737475.png" alt="image-20230703101737475"></p><ul><li><h5 id="详细的页面配置、主题配置在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中有所介绍，可跳转阅读"><a href="#详细的页面配置、主题配置在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中有所介绍，可跳转阅读" class="headerlink" title="详细的页面配置、主题配置在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中有所介绍，可跳转阅读"></a>详细的页面配置、主题配置在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中有所介绍，可跳转阅读</h5></li><li><h5 id="下面放上我的博客访问地址以及具体的页面效果："><a href="#下面放上我的博客访问地址以及具体的页面效果：" class="headerlink" title="下面放上我的博客访问地址以及具体的页面效果："></a>下面放上我的博客访问地址以及具体的页面效果：</h5></li><li><h5 id="Memory’s-blog-gitee-io"><a href="#Memory’s-blog-gitee-io" class="headerlink" title="Memory’s blog (gitee.io)"></a><a href="https://deng-2022.gitee.io/blog/">Memory’s blog (gitee.io)</a></h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230527235802901.png" alt="image-20230527235802901"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230527235830531.png" alt="image-20230527235830531"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230527235851110.png" alt="image-20230527235851110"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230528000012337.png" alt="image-20230528000012337"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230528000031027.png" alt="image-20230528000031027"></p><ul><li><h5 id="使用Hexo搭建个人博客站点教程结束（2023-05-27晚）"><a href="#使用Hexo搭建个人博客站点教程结束（2023-05-27晚）" class="headerlink" title="使用Hexo搭建个人博客站点教程结束（2023/05/27晚）"></a>使用Hexo搭建个人博客站点教程结束（2023/05/27晚）</h5></li></ul><h1 id="站点生成"><a href="#站点生成" class="headerlink" title="站点生成"></a>站点生成</h1><h2 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h2><ul><li><h5 id="常见的文档站点生成器有很多，最主要的有：VitePress、Vuepress和Docsify等"><a href="#常见的文档站点生成器有很多，最主要的有：VitePress、Vuepress和Docsify等" class="headerlink" title="常见的文档站点生成器有很多，最主要的有：VitePress、Vuepress和Docsify等"></a>常见的文档站点生成器有很多，最主要的有：VitePress、Vuepress和Docsify等</h5></li><li><h5 id="那我们就先使用Vuepress来生成文档站点了"><a href="#那我们就先使用Vuepress来生成文档站点了" class="headerlink" title="那我们就先使用Vuepress来生成文档站点了"></a>那我们就先使用Vuepress来生成文档站点了</h5></li><li><h5 id="其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建-1"><a href="#其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建-1" class="headerlink" title="其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建"></a>其实所有的搭建流程上官网就能找到，跟着文档一步一步来也能完成，那我们这个笔记就是要教会你快速完成初始搭建</h5></li><li><h5 id="先放几个辅助资源：-1"><a href="#先放几个辅助资源：-1" class="headerlink" title="先放几个辅助资源："></a>先放几个辅助资源：</h5></li><li><h5 id="各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack-2"><a href="#各站点生成器的入口：Static-Site-Generators-Top-Open-Source-SSGs-Jamstack-2" class="headerlink" title="各站点生成器的入口：Static Site Generators - Top Open Source SSGs | Jamstack"></a>各站点生成器的入口：<a href="https://jamstack.org/generators/">Static Site Generators - Top Open Source SSGs | Jamstack</a></h5></li><li><h5 id="Vitepress官网：VitePress-Vite-amp-Vue-Powered-Static-Site-Generator"><a href="#Vitepress官网：VitePress-Vite-amp-Vue-Powered-Static-Site-Generator" class="headerlink" title="Vitepress官网：VitePress | Vite &amp; Vue Powered Static Site Generator"></a>Vitepress官网：<a href="https://vitepress.dev/">VitePress | Vite &amp; Vue Powered Static Site Generator</a></h5></li><li><h5 id="Vuepress官网：VuePress-vuejs-org"><a href="#Vuepress官网：VuePress-vuejs-org" class="headerlink" title="Vuepress官网：VuePress (vuejs.org)"></a>Vuepress官网：<a href="https://vuepress.vuejs.org/">VuePress (vuejs.org)</a></h5></li><li><h5 id="Docsify官网："><a href="#Docsify官网：" class="headerlink" title="Docsify官网："></a>Docsify官网：</h5></li></ul><h2 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><h5 id="那必然是提前配置好Node-js环境了，这里不详细阐述，如有需请移步至文章：《配置指南-掌握Node-js配置》"><a href="#那必然是提前配置好Node-js环境了，这里不详细阐述，如有需请移步至文章：《配置指南-掌握Node-js配置》" class="headerlink" title="那必然是提前配置好Node.js环境了，这里不详细阐述，如有需请移步至文章：《配置指南-掌握Node.js配置》"></a>那必然是提前配置好Node.js环境了，这里不详细阐述，如有需请移步至文章：《配置指南-掌握Node.js配置》</h5></li></ul><h2 id="建站-1"><a href="#建站-1" class="headerlink" title="建站"></a>建站</h2><ul><li><h5 id="这部分我们会给出两种流行的文档站点生成器：VuePress和VitePress"><a href="#这部分我们会给出两种流行的文档站点生成器：VuePress和VitePress" class="headerlink" title="这部分我们会给出两种流行的文档站点生成器：VuePress和VitePress"></a>这部分我们会给出两种流行的文档站点生成器：VuePress和VitePress</h5></li><li><h5 id="Vitepress与VuePress相似度很高，相对来讲，VitePress更加轻量级、易上手"><a href="#Vitepress与VuePress相似度很高，相对来讲，VitePress更加轻量级、易上手" class="headerlink" title="Vitepress与VuePress相似度很高，相对来讲，VitePress更加轻量级、易上手"></a>Vitepress与VuePress相似度很高，相对来讲，VitePress更加轻量级、易上手</h5></li><li><h5 id="二者的区别与联系：-72条消息-vitepress和vuepress的区别-vuepress和vitepress-loriby的博客-CSDN博客"><a href="#二者的区别与联系：-72条消息-vitepress和vuepress的区别-vuepress和vitepress-loriby的博客-CSDN博客" class="headerlink" title="二者的区别与联系：(72条消息) vitepress和vuepress的区别_vuepress和vitepress_loriby的博客-CSDN博客"></a>二者的区别与联系：<a href="https://blog.csdn.net/qq_29669259/article/details/129712443">(72条消息) vitepress和vuepress的区别_vuepress和vitepress_loriby的博客-CSDN博客</a></h5></li></ul><h4 id="VuePress"><a href="#VuePress" class="headerlink" title="VuePress"></a>VuePress</h4><ul><li><h5 id="跟着官网操作，简简单单（手动安装和快速安装二选一即可，前者能更好的清楚执行每一条命令的目的，后者则是一键安装）："><a href="#跟着官网操作，简简单单（手动安装和快速安装二选一即可，前者能更好的清楚执行每一条命令的目的，后者则是一键安装）：" class="headerlink" title="跟着官网操作，简简单单（手动安装和快速安装二选一即可，前者能更好的清楚执行每一条命令的目的，后者则是一键安装）："></a>跟着官网操作，简简单单（手动安装和快速安装二选一即可，前者能更好的清楚执行每一条命令的目的，后者则是一键安装）：</h5></li><li><h5 id="快速安装在指定目录下，执行一条命令"><a href="#快速安装在指定目录下，执行一条命令" class="headerlink" title="快速安装在指定目录下，执行一条命令"></a>快速安装在指定目录下，执行一条命令</h5></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yarn</span> create vuepress-site<span class="hljs-meta"> [optionalDirectoryName]</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="执行这条语句后，会报错："><a href="#执行这条语句后，会报错：" class="headerlink" title="执行这条语句后，会报错："></a>执行这条语句后，会报错：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624230135176.png" alt="image-20230624230135176"></p><ul><li><h5 id="目前还没有解决，待解决。。。"><a href="#目前还没有解决，待解决。。。" class="headerlink" title="目前还没有解决，待解决。。。"></a>目前还没有解决，待解决。。。</h5></li><li><h5 id="67条消息-success-Installed-“create-umi-0-19-0”-with-binaries-create-umi-文件名、目录名或卷标语法不正确。-CodeDevMaster的博客-CSDN博客"><a href="#67条消息-success-Installed-“create-umi-0-19-0”-with-binaries-create-umi-文件名、目录名或卷标语法不正确。-CodeDevMaster的博客-CSDN博客" class="headerlink" title="(67条消息) success Installed “create-umi@0.19.0” with binaries: - create-umi 文件名、目录名或卷标语法不正确。_CodeDevMaster的博客-CSDN博客"></a><a href="https://blog.csdn.net/qq_38628046/article/details/103276577">(67条消息) success Installed “create-umi@0.19.0” with binaries: - create-umi 文件名、目录名或卷标语法不正确。_CodeDevMaster的博客-CSDN博客</a></h5></li><li><h5 id="手动安装，跟着官网一步步操作："><a href="#手动安装，跟着官网一步步操作：" class="headerlink" title="手动安装，跟着官网一步步操作："></a>手动安装，跟着官网一步步操作：</h5></li><li><h5 id="创建并更改为新目录"><a href="#创建并更改为新目录" class="headerlink" title="创建并更改为新目录"></a>创建并更改为新目录</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> vuepress-starter &amp;&amp; <span class="hljs-built_in">cd</span> vuepress-starter<br></code></pre></td></tr></table></figure><ul><li><h5 id="使用首选包管理器初始化"><a href="#使用首选包管理器初始化" class="headerlink" title="使用首选包管理器初始化"></a>使用首选包管理器初始化</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn init<br></code></pre></td></tr></table></figure><ul><li><h5 id="在本地安装-VuePress"><a href="#在本地安装-VuePress" class="headerlink" title="在本地安装 VuePress"></a>在本地安装 VuePress</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn add -D vuepress<br></code></pre></td></tr></table></figure><ul><li><h5 id="创建您的第一个文档"><a href="#创建您的第一个文档" class="headerlink" title="创建您的第一个文档"></a>创建您的第一个文档</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> docs &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;# Hello VuePress&#x27;</span> &gt; docs/README.md<br></code></pre></td></tr></table></figure><ul><li><h5 id="在package-json下添加如下配置"><a href="#在package-json下添加如下配置" class="headerlink" title="在package.json下添加如下配置"></a>在package.json下添加如下配置</h5></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;docs:dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vuepress dev docs&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;docs:build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vuepress build docs&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="本地开启文档站点"><a href="#本地开启文档站点" class="headerlink" title="本地开启文档站点"></a>本地开启文档站点</h5></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">yarn</span> docs:dev<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704120752939.png" alt="image-20230704120752939"></p><ul><li><h5 id="本地开启文档站点成功！效果如下："><a href="#本地开启文档站点成功！效果如下：" class="headerlink" title="本地开启文档站点成功！效果如下："></a>本地开启文档站点成功！效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704120855402.png" alt="image-20230704120855402"></p><h4 id="VitePress"><a href="#VitePress" class="headerlink" title="VitePress"></a>VitePress</h4><ul><li><h5 id="跟着官网操作，也是很简单的：VitePress-Vite-amp-Vue-Powered-Static-Site-Generator"><a href="#跟着官网操作，也是很简单的：VitePress-Vite-amp-Vue-Powered-Static-Site-Generator" class="headerlink" title="跟着官网操作，也是很简单的：VitePress | Vite &amp; Vue Powered Static Site Generator"></a>跟着官网操作，也是很简单的：<a href="https://vitepress.dev/">VitePress | Vite &amp; Vue Powered Static Site Generator</a></h5></li><li><h5 id="安装构建工具vitepress，可以选择执行以下命令中的其中一条："><a href="#安装构建工具vitepress，可以选择执行以下命令中的其中一条：" class="headerlink" title="安装构建工具vitepress，可以选择执行以下命令中的其中一条："></a>安装构建工具vitepress，可以选择执行以下命令中的其中一条：</h5></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -D vitepress<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">add</span> -D vitepress<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yarn <span class="hljs-built_in">add</span> -D vitepress<br></code></pre></td></tr></table></figure><ul><li><h5 id="注意，如若使用后两条命令来安装vitepress，请确保pnpm和yarn包管理器已正确安装"><a href="#注意，如若使用后两条命令来安装vitepress，请确保pnpm和yarn包管理器已正确安装" class="headerlink" title="注意，如若使用后两条命令来安装vitepress，请确保pnpm和yarn包管理器已正确安装"></a>注意，如若使用后两条命令来安装vitepress，请确保pnpm和yarn包管理器已正确安装</h5></li><li><h5 id="有兴趣了解这方面内容的话，请转移至《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中查看"><a href="#有兴趣了解这方面内容的话，请转移至《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中查看" class="headerlink" title="有兴趣了解这方面内容的话，请转移至《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中查看"></a>有兴趣了解这方面内容的话，请转移至《理解npm、pnpm和yarn：选出最适合你的包管理器》一文中查看</h5></li><li><h5 id="我们选择使用yarn来安装，效果如下："><a href="#我们选择使用yarn来安装，效果如下：" class="headerlink" title="我们选择使用yarn来安装，效果如下："></a>我们选择使用yarn来安装，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704113352687.png" alt="image-20230704113352687"></p><ul><li><h5 id="等待安装完成后，方可执行下一步操作："><a href="#等待安装完成后，方可执行下一步操作：" class="headerlink" title="等待安装完成后，方可执行下一步操作："></a>等待安装完成后，方可执行下一步操作：</h5></li><li><h5 id="初始化构建工具vitepress"><a href="#初始化构建工具vitepress" class="headerlink" title="初始化构建工具vitepress"></a>初始化构建工具vitepress</h5></li><li><h5 id="当然，选择执行以下其中一条命令即可："><a href="#当然，选择执行以下其中一条命令即可：" class="headerlink" title="当然，选择执行以下其中一条命令即可："></a>当然，选择执行以下其中一条命令即可：</h5></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">npx vitepress <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pnpm dlx vitepress <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="执行效果如下："><a href="#执行效果如下：" class="headerlink" title="执行效果如下："></a>执行效果如下：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704114248112.png" alt="image-20230704114248112" style="zoom:80%;" /><ul><li><h5 id="执行命令后，会提示你输入初始化路径、项目名、项目描述和主题配置等等，我们这里就全部设置为默认"><a href="#执行命令后，会提示你输入初始化路径、项目名、项目描述和主题配置等等，我们这里就全部设置为默认" class="headerlink" title="执行命令后，会提示你输入初始化路径、项目名、项目描述和主题配置等等，我们这里就全部设置为默认"></a>执行命令后，会提示你输入初始化路径、项目名、项目描述和主题配置等等，我们这里就全部设置为默认</h5></li><li><h5 id="这一步执行完毕后，会在本地指定路径生成VitePress文档站点目录，效果如下："><a href="#这一步执行完毕后，会在本地指定路径生成VitePress文档站点目录，效果如下：" class="headerlink" title="这一步执行完毕后，会在本地指定路径生成VitePress文档站点目录，效果如下："></a>这一步执行完毕后，会在本地指定路径生成VitePress文档站点目录，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704114539011.png" alt="image-20230704114539011"></p><ul><li><h5 id="有关该目录下文件作用以及相关配置，将会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解到，接下来我们在本地启动文档站点"><a href="#有关该目录下文件作用以及相关配置，将会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解到，接下来我们在本地启动文档站点" class="headerlink" title="有关该目录下文件作用以及相关配置，将会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解到，接下来我们在本地启动文档站点"></a>有关该目录下文件作用以及相关配置，将会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解到，接下来我们在本地启动文档站点</h5></li><li><h5 id="在该目录下，执行以下命令中的其中一条："><a href="#在该目录下，执行以下命令中的其中一条：" class="headerlink" title="在该目录下，执行以下命令中的其中一条："></a>在该目录下，执行以下命令中的其中一条：</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> docs:dev<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">run</span> docs:dev<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">yarn</span> docs:dev<br></code></pre></td></tr></table></figure><ul><li><h5 id="文档站点在本地启动成功！效果如下："><a href="#文档站点在本地启动成功！效果如下：" class="headerlink" title="文档站点在本地启动成功！效果如下："></a>文档站点在本地启动成功！效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704114926261.png" alt="image-20230704114926261"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704115516440.png" alt="image-20230704115516440"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704185140665.png" alt="image-20230704185140665"></p><ul><li><h5 id="我们可以看到，整个页面的结构和排版都是默认主题样式的"><a href="#我们可以看到，整个页面的结构和排版都是默认主题样式的" class="headerlink" title="我们可以看到，整个页面的结构和排版都是默认主题样式的"></a>我们可以看到，整个页面的结构和排版都是默认主题样式的</h5></li></ul><h2 id="主题配置-1"><a href="#主题配置-1" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="默认主题-1"><a href="#默认主题-1" class="headerlink" title="默认主题"></a>默认主题</h3><ul><li><h5 id="我们可以在主题官网里找到相关配置，在默认主题的基础上，定制自己的主题风格"><a href="#我们可以在主题官网里找到相关配置，在默认主题的基础上，定制自己的主题风格" class="headerlink" title="我们可以在主题官网里找到相关配置，在默认主题的基础上，定制自己的主题风格"></a>我们可以在主题官网里找到相关配置，在默认主题的基础上，定制自己的主题风格</h5></li><li><h5 id="VitePress官网主题配置：使用自定义主题-维特新闻-vitepress-dev"><a href="#VitePress官网主题配置：使用自定义主题-维特新闻-vitepress-dev" class="headerlink" title="VitePress官网主题配置：使用自定义主题 |维特新闻 (vitepress.dev)"></a>VitePress官网主题配置：<a href="https://vitepress.dev/guide/custom-theme">使用自定义主题 |维特新闻 (vitepress.dev)</a></h5></li><li><h5 id="VuePress官网主题配置：VuePress自定义主题-VuePress中文网-caibaojian-com"><a href="#VuePress官网主题配置：VuePress自定义主题-VuePress中文网-caibaojian-com" class="headerlink" title="VuePress官网主题配置：VuePress自定义主题 - VuePress中文网 (caibaojian.com)"></a>VuePress官网主题配置：<a href="http://caibaojian.com/vuepress/guide/custom-themes.html">VuePress自定义主题 - VuePress中文网 (caibaojian.com)</a></h5></li><li><h5 id="相关指导资料："><a href="#相关指导资料：" class="headerlink" title="相关指导资料："></a>相关指导资料：</h5></li><li><h5 id="73条消息-vuepress自定义主题开发-超简单模式-vitepress主题-贝茵斯都的博客-CSDN博客"><a href="#73条消息-vuepress自定义主题开发-超简单模式-vitepress主题-贝茵斯都的博客-CSDN博客" class="headerlink" title="(73条消息) vuepress自定义主题开发-超简单模式_vitepress主题_贝茵斯都的博客-CSDN博客"></a><a href="https://blog.csdn.net/weixin_40532650/article/details/116064378">(73条消息) vuepress自定义主题开发-超简单模式_vitepress主题_贝茵斯都的博客-CSDN博客</a></h5></li><li><h5 id="VuePress：主题和插件介绍-w3cschool-cn"><a href="#VuePress：主题和插件介绍-w3cschool-cn" class="headerlink" title="VuePress：主题和插件介绍 (w3cschool.cn)"></a><a href="https://m.w3cschool.cn/article/37890763.html">VuePress：主题和插件介绍 (w3cschool.cn)</a></h5></li></ul><h3 id="第三方主题-1"><a href="#第三方主题-1" class="headerlink" title="第三方主题"></a>第三方主题</h3><ul><li><h5 id="或者选择使用VuePress的第三方主题，VuePress提供了许多优秀的第三方主题供我们使用"><a href="#或者选择使用VuePress的第三方主题，VuePress提供了许多优秀的第三方主题供我们使用" class="headerlink" title="或者选择使用VuePress的第三方主题，VuePress提供了许多优秀的第三方主题供我们使用"></a>或者选择使用VuePress的第三方主题，VuePress提供了许多优秀的第三方主题供我们使用</h5></li><li><h5 id="Home-vuepress-theme-hope-vuejs-press"><a href="#Home-vuepress-theme-hope-vuejs-press" class="headerlink" title="Home | vuepress-theme-hope (vuejs.press)"></a><a href="https://theme-hope.vuejs.press/">Home | vuepress-theme-hope (vuejs.press)</a></h5></li><li><h5 id="vuepress-theme-blog-material-npm-npmjs-com"><a href="#vuepress-theme-blog-material-npm-npmjs-com" class="headerlink" title="vuepress-theme-blog-material - npm (npmjs.com)"></a><a href="https://www.npmjs.com/package/vuepress-theme-blog-material/v/0.0.4">vuepress-theme-blog-material - npm (npmjs.com)</a></h5></li><li><h5 id="vuepress-theme-vdoing-xugaoyi-com"><a href="#vuepress-theme-vdoing-xugaoyi-com" class="headerlink" title="vuepress-theme-vdoing (xugaoyi.com)"></a><a href="https://doc.xugaoyi.com/">vuepress-theme-vdoing (xugaoyi.com)</a></h5></li><li><h5 id="这些主题可以看官方文档，自己玩玩，这里不详细介绍"><a href="#这些主题可以看官方文档，自己玩玩，这里不详细介绍" class="headerlink" title="这些主题可以看官方文档，自己玩玩，这里不详细介绍"></a>这些主题可以看官方文档，自己玩玩，这里不详细介绍</h5></li><li><h5 id="我们这里以vuepress-theme-hope为例，下载安装该主题，执行以下两条命令其一："><a href="#我们这里以vuepress-theme-hope为例，下载安装该主题，执行以下两条命令其一：" class="headerlink" title="我们这里以vuepress-theme-hope为例，下载安装该主题，执行以下两条命令其一："></a>我们这里以vuepress-theme-hope为例，下载安装该主题，执行以下两条命令其一：</h5></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pnpm create vuepress-theme-hope hope-<span class="hljs-keyword">project</span><span class="hljs-comment">#该目录下直接下载安装主题</span><br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">pnpm <span class="hljs-built_in">create</span> vuepress-theme-hope <span class="hljs-built_in">add</span> .<span class="hljs-comment">#空目录下下载安装主题</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="执行命令，安装过程中会有提示，我们这里都选择默认，如图所示："><a href="#执行命令，安装过程中会有提示，我们这里都选择默认，如图所示：" class="headerlink" title="执行命令，安装过程中会有提示，我们这里都选择默认，如图所示："></a>执行命令，安装过程中会有提示，我们这里都选择默认，如图所示：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704175808597.png" alt="image-20230704175808597"></p><ul><li><h5 id="安装完成，在hope-project目录下执行以下任意一条命令，在本地开启文档站点服务"><a href="#安装完成，在hope-project目录下执行以下任意一条命令，在本地开启文档站点服务" class="headerlink" title="安装完成，在hope-project目录下执行以下任意一条命令，在本地开启文档站点服务"></a>安装完成，在hope-project目录下执行以下任意一条命令，在本地开启文档站点服务</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> docs:dev<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">run</span> docs:dev<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">yarn</span> docs:dev<br></code></pre></td></tr></table></figure><ul><li><h5 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704201042950.png" alt="image-20230704201042950"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704201106296.png" alt="image-20230704201106296"></p><ul><li><h5 id="基本的文档站点主题配置完成！"><a href="#基本的文档站点主题配置完成！" class="headerlink" title="基本的文档站点主题配置完成！"></a>基本的文档站点主题配置完成！</h5></li></ul><h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><h3 id="node版本过高"><a href="#node版本过高" class="headerlink" title="node版本过高"></a>node版本过高</h3><ul><li><h5 id="注意，在使用VuePress生成文档站点的最后一步：在本地启动文档站点服务时，我出现了这样的问题："><a href="#注意，在使用VuePress生成文档站点的最后一步：在本地启动文档站点服务时，我出现了这样的问题：" class="headerlink" title="注意，在使用VuePress生成文档站点的最后一步：在本地启动文档站点服务时，我出现了这样的问题："></a>注意，在使用VuePress生成文档站点的最后一步：在本地启动文档站点服务时，我出现了这样的问题：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230624211723443.png" alt="image-20230624211723443"></p><ul><li><h5 id="问题原因及解决办法：解决方法-胡八一-的博客-CSDN博客"><a href="#问题原因及解决办法：解决方法-胡八一-的博客-CSDN博客" class="headerlink" title="问题原因及解决办法：解决方法_胡八一 的博客-CSDN博客"></a>问题原因及解决办法：<a href="https://blog.csdn.net/qq_44732146/article/details/129041176">解决方法_胡八一 的博客-CSDN博客</a></h5></li><li><h5 id="这就是此时的node版本过高，导致的兼容性问题（此时我用的是v18-16-1），转换node为低版本v16-19-0后，问题解决"><a href="#这就是此时的node版本过高，导致的兼容性问题（此时我用的是v18-16-1），转换node为低版本v16-19-0后，问题解决" class="headerlink" title="这就是此时的node版本过高，导致的兼容性问题（此时我用的是v18.16.1），转换node为低版本v16.19.0后，问题解决"></a>这就是此时的node版本过高，导致的兼容性问题（此时我用的是v18.16.1），转换node为低版本v16.19.0后，问题解决</h5></li><li><h5 id="这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了，推荐使用VitePress站点生成器"><a href="#这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了，推荐使用VitePress站点生成器" class="headerlink" title="这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了，推荐使用VitePress站点生成器"></a>这里也能比较出VuePress站点生成器相较于VitePress，是有点落后了，推荐使用VitePress站点生成器</h5></li><li><h5 id="成功在本地开启VuePress文档站点服务！效果如下："><a href="#成功在本地开启VuePress文档站点服务！效果如下：" class="headerlink" title="成功在本地开启VuePress文档站点服务！效果如下："></a>成功在本地开启VuePress文档站点服务！效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624221026328.png" alt="image-20230624221026328"></p><hr><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230624220751165.png" alt="image-20230624220751165"></p><ul><li><h5 id="这个问题其实是VuePress站点生成器的共同问题，不兼容较新的node-js环境，我在配置使用vuepress-theme-vdoing主题时，也出现了这个问题"><a href="#这个问题其实是VuePress站点生成器的共同问题，不兼容较新的node-js环境，我在配置使用vuepress-theme-vdoing主题时，也出现了这个问题" class="headerlink" title="这个问题其实是VuePress站点生成器的共同问题，不兼容较新的node.js环境，我在配置使用vuepress-theme-vdoing主题时，也出现了这个问题"></a>这个问题其实是VuePress站点生成器的共同问题，不兼容较新的node.js环境，我在配置使用vuepress-theme-vdoing主题时，也出现了这个问题</h5></li><li><h5 id="遇到这种问题，要么降低node版本去兼容，要么舍弃这种程序服务"><a href="#遇到这种问题，要么降低node版本去兼容，要么舍弃这种程序服务" class="headerlink" title="遇到这种问题，要么降低node版本去兼容，要么舍弃这种程序服务"></a>遇到这种问题，要么降低node版本去兼容，要么舍弃这种程序服务</h5></li><li><h5 id="比如用VitePress替代VuePress，用vuepress-theme-hope主题替代vuepress-theme-vdoing主题"><a href="#比如用VitePress替代VuePress，用vuepress-theme-hope主题替代vuepress-theme-vdoing主题" class="headerlink" title="比如用VitePress替代VuePress，用vuepress-theme-hope主题替代vuepress-theme-vdoing主题"></a>比如用VitePress替代VuePress，用vuepress-theme-hope主题替代vuepress-theme-vdoing主题</h5></li><li><h5 id="具体怎么应对，各求所需，因人而异"><a href="#具体怎么应对，各求所需，因人而异" class="headerlink" title="具体怎么应对，各求所需，因人而异"></a>具体怎么应对，各求所需，因人而异</h5></li></ul><h3 id="node版本过低"><a href="#node版本过低" class="headerlink" title="node版本过低"></a>node版本过低</h3><ul><li><h5 id="我在安装配置VitePress文档站点主题时，报错了："><a href="#我在安装配置VitePress文档站点主题时，报错了：" class="headerlink" title="我在安装配置VitePress文档站点主题时，报错了："></a>我在安装配置VitePress文档站点主题时，报错了：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704152135707.png" alt="image-20230704152135707"></p><ul><li><h5 id="很显然，node版本过低，于是我修改node版本为18-16-1，问题成功解决"><a href="#很显然，node版本过低，于是我修改node版本为18-16-1，问题成功解决" class="headerlink" title="很显然，node版本过低，于是我修改node版本为18.16.1，问题成功解决"></a>很显然，node版本过低，于是我修改node版本为18.16.1，问题成功解决</h5></li><li><h5 id="有关node版本的修改可以在《配置指南-掌握Node-js配置》一文中详细了解"><a href="#有关node版本的修改可以在《配置指南-掌握Node-js配置》一文中详细了解" class="headerlink" title="有关node版本的修改可以在《配置指南-掌握Node.js配置》一文中详细了解"></a>有关node版本的修改可以在《配置指南-掌握Node.js配置》一文中详细了解</h5></li><li><h5 id="成功安装hope主题，开启文档站点服务，效果如下："><a href="#成功安装hope主题，开启文档站点服务，效果如下：" class="headerlink" title="成功安装hope主题，开启文档站点服务，效果如下："></a>成功安装hope主题，开启文档站点服务，效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230704190155270.png" alt="image-20230704190155270"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><h5 id="至此，快速搭建博客站点和快速生成文档站点已经完毕"><a href="#至此，快速搭建博客站点和快速生成文档站点已经完毕" class="headerlink" title="至此，快速搭建博客站点和快速生成文档站点已经完毕"></a>至此，快速搭建博客站点和快速生成文档站点已经完毕</h5></li><li><h5 id="在接下来的内容中，我们会继续分享如何使用Gitee-GitHub的Page服务来托管静态网站，详见《大道至简：快速搭建博客与文档站点的终极指南2-0》"><a href="#在接下来的内容中，我们会继续分享如何使用Gitee-GitHub的Page服务来托管静态网站，详见《大道至简：快速搭建博客与文档站点的终极指南2-0》" class="headerlink" title="在接下来的内容中，我们会继续分享如何使用Gitee/GitHub的Page服务来托管静态网站，详见《大道至简：快速搭建博客与文档站点的终极指南2.0》"></a>在接下来的内容中，我们会继续分享如何使用Gitee/GitHub的Page服务来托管静态网站，详见《大道至简：快速搭建博客与文档站点的终极指南2.0》</h5></li><li><h5 id="有关博客-文档站点的详细配置，包括主题配置、目录结构等，我们会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解"><a href="#有关博客-文档站点的详细配置，包括主题配置、目录结构等，我们会在《大道至简：快速搭建博客与文档站点的终极指南3-0》一文中详细讲解" class="headerlink" title="有关博客/文档站点的详细配置，包括主题配置、目录结构等，我们会在《大道至简：快速搭建博客与文档站点的终极指南3.0》一文中详细讲解"></a>有关博客/文档站点的详细配置，包括主题配置、目录结构等，我们会在《大道至简：快速搭建博客与文档站点的终极指南3.0》一文中详细讲解</h5></li><li><h5 id="非常感谢您能够看到这里，希望本文对您有帮助"><a href="#非常感谢您能够看到这里，希望本文对您有帮助" class="headerlink" title="非常感谢您能够看到这里，希望本文对您有帮助"></a>非常感谢您能够看到这里，希望本文对您有帮助</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>经验</category>
      
      <category>Blog</category>
      
      <category>Docs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Blog</tag>
      
      <tag>Docs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python爬虫学习</title>
    <link href="/blog/2023/05/21/Python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/"/>
    <url>/blog/2023/05/21/Python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Python爬虫学习"><a href="#Python爬虫学习" class="headerlink" title="Python爬虫学习"></a>Python爬虫学习</h1><ul><li><h5 id="一直以来都想学习爬虫技术-却一直下不了决心-不知道从何学起-也没有精力去学"><a href="#一直以来都想学习爬虫技术-却一直下不了决心-不知道从何学起-也没有精力去学" class="headerlink" title="一直以来都想学习爬虫技术, 却一直下不了决心, 不知道从何学起, 也没有精力去学"></a>一直以来都想学习爬虫技术, 却一直下不了决心, 不知道从何学起, 也没有精力去学</h5></li><li><h5 id="过年前后-看过了黑马的Python基础课-掌握了基本的语法-现在伙伴匹配系统基础功能也完成了-可以拿时间来系统且快速地学习Python爬虫了-主要是我觉得一个Java程序猿怎么能不懂爬虫呢"><a href="#过年前后-看过了黑马的Python基础课-掌握了基本的语法-现在伙伴匹配系统基础功能也完成了-可以拿时间来系统且快速地学习Python爬虫了-主要是我觉得一个Java程序猿怎么能不懂爬虫呢" class="headerlink" title="过年前后, 看过了黑马的Python基础课, 掌握了基本的语法, 现在伙伴匹配系统基础功能也完成了, 可以拿时间来系统且快速地学习Python爬虫了, 主要是我觉得一个Java程序猿怎么能不懂爬虫呢"></a>过年前后, 看过了黑马的Python基础课, 掌握了基本的语法, 现在伙伴匹配系统基础功能也完成了, 可以拿时间来系统且快速地学习Python爬虫了, 主要是我觉得一个Java程序猿怎么能不懂爬虫呢</h5></li></ul><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><ul><li><h5 id="今天是学习的第一天-学习爬虫过程中也了解到了不少计网的知识-这令我很惊喜了"><a href="#今天是学习的第一天-学习爬虫过程中也了解到了不少计网的知识-这令我很惊喜了" class="headerlink" title="今天是学习的第一天, 学习爬虫过程中也了解到了不少计网的知识, 这令我很惊喜了"></a>今天是学习的第一天, 学习爬虫过程中也了解到了不少计网的知识, 这令我很惊喜了</h5></li><li><h5 id="简要总结一下学到些什么吧-详细的知识点可以拿到老师的-待会儿可以贴上来-我就记重点了"><a href="#简要总结一下学到些什么吧-详细的知识点可以拿到老师的-待会儿可以贴上来-我就记重点了" class="headerlink" title="简要总结一下学到些什么吧, 详细的知识点可以拿到老师的, 待会儿可以贴上来, 我就记重点了"></a>简要总结一下学到些什么吧, 详细的知识点可以拿到老师的, 待会儿可以贴上来, 我就记重点了</h5></li><li><h5 id="requests-http-https协议-爬虫-XML-XHR-AJAX-axios-这是我今天了解到的概念"><a href="#requests-http-https协议-爬虫-XML-XHR-AJAX-axios-这是我今天了解到的概念" class="headerlink" title="requests, http/https协议, 爬虫, XML, XHR, AJAX, axios  这是我今天了解到的概念"></a>requests, http/https协议, 爬虫, XML, XHR, AJAX, axios  这是我今天了解到的概念</h5></li><li><h5 id="爬取步骤"><a href="#爬取步骤" class="headerlink" title="爬取步骤"></a>爬取步骤</h5></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">-- url请求路径<br>-- UA伪装<br>-- 请求参数<br>-- 发送请求<br>-- 接收响应值<br>-- 持久化数据<br></code></pre></td></tr></table></figure><ul><li><h5 id="今天爬取到了搜狗网页-百度翻译-iTab标签页-还是有很多注意点的-把代码扔这吧"><a href="#今天爬取到了搜狗网页-百度翻译-iTab标签页-还是有很多注意点的-把代码扔这吧" class="headerlink" title="今天爬取到了搜狗网页 百度翻译 iTab标签页 还是有很多注意点的, 把代码扔这吧"></a>今天爬取到了搜狗网页 百度翻译 iTab标签页 还是有很多注意点的, 把代码扔这吧</h5></li><li><h5 id="搜狗网页采集"><a href="#搜狗网页采集" class="headerlink" title="搜狗网页采集"></a>搜狗网页采集</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># UA伪装: 爬虫对应的身份标识伪装成某一浏览器, 避免请求被拒绝</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/113.0.0.0&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 请求路径</span><br>    url = <span class="hljs-string">&#x27;https://www.sogou.com/web?&#x27;</span><br>    <span class="hljs-comment"># 请求参数</span><br>    content = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;输入搜索词:&#x27;</span>)<br>    params = &#123;<br>        <span class="hljs-string">&#x27;query&#x27;</span>: content<br>    &#125;<br>    <span class="hljs-comment"># 发送请求</span><br>    response = requests.get(url=url, params=params, headers=headers)<br>    <span class="hljs-comment"># 获取响应值</span><br>    page_text = response.text<br>    <span class="hljs-comment"># 持久化存储</span><br>    fileName = content + <span class="hljs-string">&#x27;.html&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(fileName, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>        fp.write(page_text)<br>    <span class="hljs-built_in">print</span>(fileName, <span class="hljs-string">&#x27;抓取成功!&#x27;</span>)<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="百度翻译爬取"><a href="#百度翻译爬取" class="headerlink" title="百度翻译爬取"></a>百度翻译爬取</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># url路径</span><br>    url = <span class="hljs-string">&quot;https://fanyi.baidu.com/sug&quot;</span><br>    <span class="hljs-comment"># UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/113.0.0.0&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 请求参数</span><br>    content = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;输入要翻译的词:&#x27;</span>)<br>    data = &#123;<br>        <span class="hljs-string">&#x27;kw&#x27;</span>: content<br>    &#125;<br>    <span class="hljs-comment"># 发送请求</span><br>    response = requests.post(url=url, data=data, headers=headers)<br>    <span class="hljs-comment"># 获取响应</span><br>    dic_obj = response.json()<br>    <span class="hljs-comment"># 持久化存储</span><br>    filename = content + <span class="hljs-string">&#x27;.json&#x27;</span><br>    fp = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    json.dump(dic_obj, fp, ensure_ascii=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="iTab标签页爬取"><a href="#iTab标签页爬取" class="headerlink" title="iTab标签页爬取"></a>iTab标签页爬取</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># url路径</span><br>    url = <span class="hljs-string">&quot;https://api.codelife.cc/api/getWeather&quot;</span><br>    <span class="hljs-comment"># UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/113.0.0.0&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 请求参数</span><br>    params = &#123;<br>        <span class="hljs-string">&#x27;lang&#x27;</span>: <span class="hljs-string">&#x27; cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;location&#x27;</span>: <span class="hljs-string">&#x27;101101101&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 发送请求</span><br>    response = requests.get(url, params=params, headers=headers)<br>    <span class="hljs-comment"># 获取响应</span><br>    dic_obj = response.json()<br>    <span class="hljs-comment"># 持久化存储</span><br>    fp = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;iTab标签页.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    json.dump(dic_obj, fp, ensure_ascii=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><ul><li><h5 id="距离上次学习都他妈过去5天了"><a href="#距离上次学习都他妈过去5天了" class="headerlink" title="距离上次学习都他妈过去5天了"></a>距离上次学习都他妈过去5天了</h5></li><li><h5 id="交一下昨天的作业吧-比较复杂的爬取"><a href="#交一下昨天的作业吧-比较复杂的爬取" class="headerlink" title="交一下昨天的作业吧  比较复杂的爬取"></a>交一下昨天的作业吧  比较复杂的爬取</h5></li><li><h5 id="化妆品生产许可信息"><a href="#化妆品生产许可信息" class="headerlink" title="化妆品生产许可信息"></a>化妆品生产许可信息</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><br>id_list = []  <span class="hljs-comment"># 获取每个企业的id</span><br><span class="hljs-comment"># UA伪装</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                  <span class="hljs-string">&#x27;Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&#x27;</span><br>&#125;<br><span class="hljs-comment"># url请求路径</span><br>url = <span class="hljs-string">&#x27;http://scxk.nmpa.gov.cn:81/xk/itownet/portalAction.do?method=getXkzsList&#x27;</span><br><span class="hljs-comment"># 发送请求</span><br><span class="hljs-comment"># 拿取 1-19 页</span><br><span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>):<br>    page = <span class="hljs-built_in">str</span>(page)<br>    <span class="hljs-comment"># 请求参数</span><br>    data = &#123;<br>        <span class="hljs-string">&#x27;on&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;page&#x27;</span>: page,<br>        <span class="hljs-string">&#x27;pageSize&#x27;</span>: <span class="hljs-string">&#x27;15&#x27;</span>,<br>        <span class="hljs-string">&#x27;productName&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;conditionType&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>        <span class="hljs-string">&#x27;applyname&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;applysn&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 以json的格式返回response的内容（如果有的话）</span><br>    response = requests.post(url=url, headers=headers, data=data).json()<br>    <span class="hljs-keyword">for</span> dic <span class="hljs-keyword">in</span> response[<span class="hljs-string">&#x27;list&#x27;</span>]:  <span class="hljs-comment"># response是一个字典，list是一个键，而我们需要这个键对应的值，所以就有了`response[&#x27;list&#x27;],</span><br>        <span class="hljs-comment"># 稍微复杂的是dic是一个数组，这个数组里包括了一部字典，</span><br>        id_list.append(dic[<span class="hljs-string">&#x27;ID&#x27;</span>])  <span class="hljs-comment"># dic是一个字典，我们同样用‘ID’这个键访问它对应的值，并把这个值添加到id_list[]里</span><br><br><span class="hljs-comment"># 从这里开始整个程序分为两部分，上面是获取所有的id，下面是对所有的id信息进行请求，然后是保存。</span><br>all_data = []  <span class="hljs-comment"># 这个列表用来存放最终的所有公司的具体信息</span><br><span class="hljs-comment"># url请求路径</span><br>post_url = <span class="hljs-string">&#x27;http://scxk.nmpa.gov.cn:81/xk/itownet/portalAction.do?method=getXkzsById&#x27;</span><br><span class="hljs-comment"># 发送请求</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> id_list:  <span class="hljs-comment"># 把id封装到字典当作作为参数以备调用</span><br>    <span class="hljs-comment"># 请求参数</span><br>    data2 = &#123;  <span class="hljs-comment"># 遍历所有的id</span><br>        <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span><br>    &#125;<br>    result = requests.post(url=post_url, headers=headers, data=data2).json()<br>    all_data.append(result)  <span class="hljs-comment"># 通过a数据解析append方法把所有的请求结果上传到all_data[]中</span><br>    <span class="hljs-built_in">print</span>(result)  <span class="hljs-comment"># 直接输出请求返回的结果</span><br><br><span class="hljs-comment"># 持久化存储</span><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./化妆品生产许可信息.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>json.dump(all_data, fp=file, ensure_ascii=<span class="hljs-literal">False</span>)<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="今天又学习了图片的爬取-再补个作业"><a href="#今天又学习了图片的爬取-再补个作业" class="headerlink" title="今天又学习了图片的爬取 再补个作业"></a>今天又学习了图片的爬取 再补个作业</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os.path<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># 创建文件夹</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;./imgs&#x27;</span>):<br>        os.mkdir(<span class="hljs-string">&#x27;./imgs&#x27;</span>)<br>    <span class="hljs-comment"># 请求路径</span><br>    url = <span class="hljs-string">&#x27;https://www.woyaogexing.com/tupian/index_4.html&#x27;</span><br>    <span class="hljs-comment"># UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, &#x27;</span><br>                      <span class="hljs-string">&#x27;like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/113.0.0.0&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 爬取对应的网页内容</span><br>    page_text = requests.get(url=url, headers=headers).text<br>    <span class="hljs-comment"># print(page_text)</span><br>    <span class="hljs-comment"># 爬取对应网页上的图片(正则表达式)</span><br>    <span class="hljs-comment"># 编写正则表达式</span><br>    ex = <span class="hljs-string">&#x27;&lt;div class=&quot;txList &quot;&gt;.*?&lt;img.*?src=&quot;(.*?)&quot;.*?&gt;.*?&lt;/div&gt;&#x27;</span><br>    <span class="hljs-comment"># 获取所需字符串</span><br>    img_src_list = re.findall(ex, page_text, re.S)<br>    <span class="hljs-built_in">print</span>(img_src_list)<br>    <span class="hljs-keyword">for</span> img_src <span class="hljs-keyword">in</span> img_src_list:<br>        <span class="hljs-comment"># 拼接完整的图片路径</span><br>        img_src = <span class="hljs-string">&#x27;http:&#x27;</span> + img_src<br>        <span class="hljs-built_in">print</span>(img_src)<br>        <span class="hljs-comment"># 请求图片</span><br>        img = requests.get(url=img_src, headers=headers).content<br>        <span class="hljs-comment"># 图片名</span><br>        img_name = img_src.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>]<br>        <span class="hljs-comment"># 图片保存路径</span><br>        img_path = <span class="hljs-string">&#x27;./imgs/&#x27;</span> + img_name<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;img_path = &#x27;</span> + img_path)<br>        <span class="hljs-comment"># 保存图片</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(img_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>            fp.write(img)<br>        <span class="hljs-built_in">print</span>(img_name + <span class="hljs-string">&#x27;下载完成！&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这里是使用了正则表达式来处理要爬取的部分数据-我要爬取的图片就是这样的："><a href="#这里是使用了正则表达式来处理要爬取的部分数据-我要爬取的图片就是这样的：" class="headerlink" title="这里是使用了正则表达式来处理要爬取的部分数据 我要爬取的图片就是这样的："></a>这里是使用了正则表达式来处理要爬取的部分数据 我要爬取的图片就是这样的：</h5></li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230526151919628.png" alt="image-20230526151919628"></p><ul><li><h5 id="照猫画虎写了个贪婪匹配（学过都忘了，非常滴不熟练）"><a href="#照猫画虎写了个贪婪匹配（学过都忘了，非常滴不熟练）" class="headerlink" title="照猫画虎写了个贪婪匹配（学过都忘了，非常滴不熟练）"></a>照猫画虎写了个贪婪匹配（学过都忘了，非常滴不熟练）</h5></li><li><h5 id="可以爬取多个页面了"><a href="#可以爬取多个页面了" class="headerlink" title="可以爬取多个页面了"></a>可以爬取多个页面了</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os.path<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># 创建文件夹</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;./imgs&#x27;</span>):<br>        os.mkdir(<span class="hljs-string">&#x27;./imgs&#x27;</span>)<br>    <span class="hljs-comment"># 请求路径</span><br>    url = <span class="hljs-string">&#x27;https://www.woyaogexing.com/tupian/index_%d.html&#x27;</span><br>    <span class="hljs-comment"># UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, &#x27;</span><br>                      <span class="hljs-string">&#x27;like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/113.0.0.0&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">for</span> page_num <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>):<br>        new_url = <span class="hljs-built_in">format</span>(url % page_num)<br>        <span class="hljs-comment"># 爬取对应的网页内容</span><br>        page_text = requests.get(url=new_url, headers=headers).text<br>        <span class="hljs-comment"># print(page_text)</span><br>        <span class="hljs-comment"># 爬取对应网页上的图片(正则表达式)</span><br>        <span class="hljs-comment"># 编写正则表达式</span><br>        ex = <span class="hljs-string">&#x27;&lt;div class=&quot;txList &quot;&gt;.*?&lt;img.*?src=&quot;(.*?)&quot;.*?&gt;.*?&lt;/div&gt;&#x27;</span><br>        <span class="hljs-comment"># 获取所需字符串</span><br>        img_src_list = re.findall(ex, page_text, re.S)<br>        <span class="hljs-built_in">print</span>(img_src_list)<br>        <span class="hljs-keyword">for</span> img_src <span class="hljs-keyword">in</span> img_src_list:<br>            <span class="hljs-comment"># 拼接完整的图片路径</span><br>            img_src = <span class="hljs-string">&#x27;http:&#x27;</span> + img_src<br>            <span class="hljs-built_in">print</span>(img_src)<br>            <span class="hljs-comment"># 请求图片</span><br>            img = requests.get(url=img_src, headers=headers).content<br>            <span class="hljs-comment"># 图片名</span><br>            img_name = img_src.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>]<br>            <span class="hljs-comment"># 图片保存路径</span><br>            img_path = <span class="hljs-string">&#x27;./imgs/&#x27;</span> + img_name<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;img_path = &#x27;</span> + img_path)<br>            <span class="hljs-comment"># 保存图片</span><br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(img_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>                fp.write(img)<br>            <span class="hljs-built_in">print</span>(img_name + <span class="hljs-string">&#x27;下载完成！&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><ul><li><h5 id="数据分析，爬取页面中标签中的数据"><a href="#数据分析，爬取页面中标签中的数据" class="headerlink" title="数据分析，爬取页面中标签中的数据"></a>数据分析，爬取页面中标签中的数据</h5></li><li><h5 id="这边做完几个课堂练习后，自行找了个网页，练习了下："><a href="#这边做完几个课堂练习后，自行找了个网页，练习了下：" class="headerlink" title="这边做完几个课堂练习后，自行找了个网页，练习了下："></a>这边做完几个课堂练习后，自行找了个网页，练习了下：</h5></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os.path<br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># url路径</span><br>    url = <span class="hljs-string">&#x27;https://bobopic.com/4kbizhi.html&#x27;</span><br>    <span class="hljs-comment"># UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                      <span class="hljs-string">&#x27;Chrome/72.0.3626.121 Safari/537.36&#x27;</span><br>    &#125;<br>    <span class="hljs-comment"># 请求页面</span><br>    page_text = requests.get(url=url, headers=headers).text<br>    <span class="hljs-comment"># 封装页面对象</span><br>    tree = etree.HTML(page_text)<br>    <span class="hljs-comment"># 获取a标签</span><br>    a_list = tree.xpath(<span class="hljs-string">&#x27;//div[@class=&quot;related&quot;]/ul/li/a&#x27;</span>)<br>    <span class="hljs-comment"># 遍历a_list</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> a_list:<br>        <span class="hljs-comment"># 拿取每个a的href</span><br>        a_href = a.xpath(<span class="hljs-string">&#x27;./@href&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-comment"># 请求新页面</span><br>        new_page_text = requests.get(url=a_href + <span class="hljs-string">&#x27;&#x27;</span>, headers=headers).content<br>        <span class="hljs-comment"># 封装页面对象</span><br>        tree = etree.HTML(new_page_text)<br>        img_list = tree.xpath(<span class="hljs-string">&#x27;//div[@class=&quot;entry-content u-clearfix&quot;]//img&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;./二次元风景4k&#x27;</span>):<br>            os.mkdir(<span class="hljs-string">&#x27;./二次元风景4k&#x27;</span>)<br>        <span class="hljs-comment"># 获取新页面下的图片</span><br>        <span class="hljs-keyword">for</span> img <span class="hljs-keyword">in</span> img_list:<br>            <span class="hljs-comment"># 图片名</span><br>            img_name = img.xpath(<span class="hljs-string">&#x27;./@alt&#x27;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;.jpg&#x27;</span><br>            <span class="hljs-comment"># 图片路径</span><br>            img_src = img.xpath(<span class="hljs-string">&#x27;./@src&#x27;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-comment"># 爬取图片</span><br>            img_data = requests.get(url=img_src, headers=headers).content<br>            <span class="hljs-comment"># 图片存放路径</span><br>            img_path = <span class="hljs-string">&#x27;二次元风景4k/&#x27;</span> + img_name<br>            <span class="hljs-comment"># 存放图片</span><br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;二次元风景4k/&#x27;</span> + img_name, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>                fp.write(img_data)<br>            <span class="hljs-built_in">print</span>(img_name + <span class="hljs-string">&#x27;下载成功！&#x27;</span>)<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="以alt内容作为图片名，里面含有”-”符号，不能在文件名中出现，搞了老半天（2023-05-30）"><a href="#以alt内容作为图片名，里面含有”-”符号，不能在文件名中出现，搞了老半天（2023-05-30）" class="headerlink" title="以alt内容作为图片名，里面含有”|”符号，不能在文件名中出现，搞了老半天（2023/05/30）"></a>以alt内容作为图片名，里面含有”|”符号，不能在文件名中出现，搞了老半天（2023/05/30）</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开发经验</tag>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人项目总结</title>
    <link href="/blog/2023/04/22/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <url>/blog/2023/04/22/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Memory-API-接口开放平台"><a href="#Memory-API-接口开放平台" class="headerlink" title="Memory API 接口开放平台"></a>Memory API 接口开放平台</h2><h2 id="伙伴匹配"><a href="#伙伴匹配" class="headerlink" title="伙伴匹配"></a>伙伴匹配</h2><h2 id="用户中心"><a href="#用户中心" class="headerlink" title="用户中心"></a>用户中心</h2><h2 id="黄金矿工怀旧版"><a href="#黄金矿工怀旧版" class="headerlink" title="黄金矿工怀旧版"></a>黄金矿工怀旧版</h2><h2 id="坦克大战"><a href="#坦克大战" class="headerlink" title="坦克大战"></a>坦克大战</h2><h2 id="网络通讯平台"><a href="#网络通讯平台" class="headerlink" title="网络通讯平台"></a>网络通讯平台</h2><h2 id="餐厅点餐服务"><a href="#餐厅点餐服务" class="headerlink" title="餐厅点餐服务"></a>餐厅点餐服务</h2><h2 id="房屋出租系统"><a href="#房屋出租系统" class="headerlink" title="房屋出租系统"></a>房屋出租系统</h2><h2 id="零钱通服务"><a href="#零钱通服务" class="headerlink" title="零钱通服务"></a>零钱通服务</h2><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    
    <categories>
      
      <category>Project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冲刺蓝桥杯</title>
    <link href="/blog/2023/04/14/%E5%86%B2%E5%88%BA%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    <url>/blog/2023/04/14/%E5%86%B2%E5%88%BA%E8%93%9D%E6%A1%A5%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="认识数据结构和算法"><a href="#认识数据结构和算法" class="headerlink" title="认识数据结构和算法"></a>认识数据结构和算法</h1><ul><li><h4 id="数据结构：数据存储的方式-数组，字符串，树，堆，栈，队列，哈希表"><a href="#数据结构：数据存储的方式-数组，字符串，树，堆，栈，队列，哈希表" class="headerlink" title="数据结构：数据存储的方式    数组，字符串，树，堆，栈，队列，哈希表"></a>数据结构：数据存储的方式    数组，字符串，树，堆，栈，队列，哈希表</h4></li><li><h4 id="算法：数据计算的方式枚举遍历，排序，二分查找，递归，回溯"><a href="#算法：数据计算的方式枚举遍历，排序，二分查找，递归，回溯" class="headerlink" title="算法：数据计算的方式枚举遍历，排序，二分查找，递归，回溯"></a>算法：数据计算的方式枚举遍历，排序，二分查找，递归，回溯</h4></li></ul><h1 id="算法题类型"><a href="#算法题类型" class="headerlink" title="算法题类型"></a>算法题类型</h1><ul><li><h4 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h4></li><li><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4></li><li><h4 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h4></li><li><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4></li><li><h4 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h4></li><li><h4 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h4></li><li><h4 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h4></li><li><h4 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h4></li><li><h4 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h4></li><li><h4 id="树"><a href="#树" class="headerlink" title="树"></a>树</h4></li><li><h4 id="图与回溯算法"><a href="#图与回溯算法" class="headerlink" title="图与回溯算法"></a>图与回溯算法</h4></li><li><h4 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h4></li><li><h4 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h4></li></ul><h1 id="刷题顺序"><a href="#刷题顺序" class="headerlink" title="刷题顺序"></a>刷题顺序</h1><h4 id="第一轮：数学-gt-数组-gt-链表-gt-字符串-gt-哈希表-gt-双指针-gt-递归-gt-栈-gt-队列-难度简单-50"><a href="#第一轮：数学-gt-数组-gt-链表-gt-字符串-gt-哈希表-gt-双指针-gt-递归-gt-栈-gt-队列-难度简单-50" class="headerlink" title="第一轮：数学 -&gt; 数组 -&gt; 链表 -&gt; 字符串 -&gt; 哈希表 -&gt; 双指针 -&gt; 递归 -&gt; 栈 -&gt; 队列    难度简单    50%"></a>第一轮：数学 -&gt; 数组 -&gt; 链表 -&gt; 字符串 -&gt; 哈希表 -&gt; 双指针 -&gt; 递归 -&gt; 栈 -&gt; 队列    难度简单    50%</h4><h4 id="第二轮：数学-gt-数组-gt-链表-gt-字符串-gt-哈希表-gt-双指针-gt-递归-gt-栈-gt-队列-难度中等-50"><a href="#第二轮：数学-gt-数组-gt-链表-gt-字符串-gt-哈希表-gt-双指针-gt-递归-gt-栈-gt-队列-难度中等-50" class="headerlink" title="第二轮：数学 -&gt; 数组 -&gt; 链表 -&gt; 字符串 -&gt; 哈希表 -&gt; 双指针 -&gt; 递归 -&gt; 栈 -&gt; 队列    难度中等    50%"></a>第二轮：数学 -&gt; 数组 -&gt; 链表 -&gt; 字符串 -&gt; 哈希表 -&gt; 双指针 -&gt; 递归 -&gt; 栈 -&gt; 队列    难度中等    50%</h4><h4 id="第三轮：分治-贪心-动态规划-二叉搜索树-图-50"><a href="#第三轮：分治-贪心-动态规划-二叉搜索树-图-50" class="headerlink" title="第三轮：分治    贪心    动态规划    二叉搜索树    图    50%"></a>第三轮：分治    贪心    动态规划    二叉搜索树    图    50%</h4><h4 id="第四轮：难"><a href="#第四轮：难" class="headerlink" title="第四轮：难"></a>第四轮：难</h4>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>牛客-刷题</title>
    <link href="/blog/2023/04/09/%E7%89%9B%E5%AE%A2-%E5%88%B7%E9%A2%98/"/>
    <url>/blog/2023/04/09/%E7%89%9B%E5%AE%A2-%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<ul><li><h5 id="都是刷题时看到的一些精彩的题解和Java基础知识，随手复制粘贴就扔这儿了"><a href="#都是刷题时看到的一些精彩的题解和Java基础知识，随手复制粘贴就扔这儿了" class="headerlink" title="都是刷题时看到的一些精彩的题解和Java基础知识，随手复制粘贴就扔这儿了"></a>都是刷题时看到的一些精彩的题解和Java基础知识，随手复制粘贴就扔这儿了</h5></li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">final</span>修饰的方法，不允许被子类覆盖。<br><span class="hljs-keyword">final</span>修饰的类，不能被继承。<br><span class="hljs-keyword">final</span>修饰的变量，不能改变值。<br><span class="hljs-keyword">final</span>修饰的引用类型，不能再指向别的东西，但是可以改变其中的内容。<br><span class="hljs-keyword">final</span>修饰的成员变量在赋值时可以有三种方式。<span class="hljs-number">1</span>、在声明时直接赋值。<span class="hljs-number">2</span>、在构造器中赋值。<span class="hljs-number">3</span>、在初始代码块中进行赋值。<br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">关于抽象类 <br>JDK <span class="hljs-number">1.8</span>以前，抽象类的方法默认访问权限为<span class="hljs-keyword">protected</span> <br>JDK <span class="hljs-number">1.8</span>时，抽象类的方法默认访问权限变为<span class="hljs-keyword">default</span> <br><br>关于接口 <br>JDK <span class="hljs-number">1.8</span>以前，接口中的方法必须是<span class="hljs-keyword">public</span>的 <br>JDK <span class="hljs-number">1.8</span>时，接口中的方法可以是<span class="hljs-keyword">public</span>的，也可以是<span class="hljs-keyword">default</span>的 <br>JDK <span class="hljs-number">1.9</span>时，接口中的方法可以是<span class="hljs-keyword">private</span>的<br></code></pre></td></tr></table></figure><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">写法顺序：<span class="hljs-keyword">select</span>--<span class="hljs-keyword">from</span>--<span class="hljs-keyword">where</span>--<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>--<span class="hljs-keyword">having</span>--<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <br><br>执行顺序：<span class="hljs-keyword">from</span>--<span class="hljs-keyword">where</span>--<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>--<span class="hljs-keyword">having</span>--<span class="hljs-keyword">select</span>--<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <br>就是<span class="hljs-keyword">select</span>要放后面，如果有<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>，则<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>放最后，因为<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 是对结果进行排序<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">可串行化调度：所有的事物依次逐个执行，这样事物之间就完全不可能有干扰，防止脏读、不可重复读、幻读。<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">客户端对象:Socket s = new <span class="hljs-built_in">Socket</span>(<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-number">6666</span>); <br>服务端对象:ServerSocket ss = new <span class="hljs-built_in">ServerSocket</span>(<span class="hljs-number">6666</span>); <br>监听服务器的连接: <br>    s=ss.<span class="hljs-built_in">accept</span>()<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">s</span>.getBytes(<span class="hljs-string">&quot;GBK&quot;</span>).length就是求的字节数。如果是GBK，一个中文字符占<span class="hljs-number">2</span>字节，如果是UTF-<span class="hljs-number">8</span>则是<span class="hljs-number">3</span>个字节，<br></code></pre></td></tr></table></figure><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ocaml"><span class="hljs-type">Java</span>一维数组有两种初始化方法 <br><span class="hljs-number">1</span>、静态初始化 <br><span class="hljs-built_in">int</span> <span class="hljs-built_in">array</span><span class="hljs-literal">[]</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span><span class="hljs-literal">[]</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>或者<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">array</span><span class="hljs-literal">[]</span> = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>需要注意的是，写成如下形式也是错误的<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">array</span><span class="hljs-literal">[]</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>]&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br><span class="hljs-number">2</span>、动态初始化 <br><span class="hljs-built_in">int</span> <span class="hljs-built_in">array</span><span class="hljs-literal">[]</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>];<br><span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-built_in">array</span>[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span>;<br><span class="hljs-built_in">array</span>[<span class="hljs-number">2</span>] = <span class="hljs-number">3</span>;<br><span class="hljs-built_in">array</span>[<span class="hljs-number">3</span>] = <span class="hljs-number">4</span>;<br><span class="hljs-built_in">array</span>[<span class="hljs-number">4</span>] = <span class="hljs-number">5</span>;<br>静态与动态初始化的区别就在于，前者是声明的时候就初始化，后者是先声明，再动态初始化<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arduino">小到大算自动类型转换<br>就是隐式转换（自动类型转换）：<br>数值型数据的转换：<span class="hljs-type">byte</span>→<span class="hljs-type">short</span>→<span class="hljs-type">int</span>→<span class="hljs-type">long</span>→<span class="hljs-type">float</span>→<span class="hljs-type">double</span>。<br>字符型转换为整型：<span class="hljs-type">char</span>→<span class="hljs-type">int</span>。<br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">Java一个源程序只能有一个<span class="hljs-keyword">public</span>类存在，且类名与文件名相同。Java程序是从main方法开始执行的，<span class="hljs-keyword">public</span>为类加载器提供入口，然后找到<span class="hljs-keyword">public</span>类中的main方法开始执行。如果存在多个<span class="hljs-keyword">public</span>类，程序将不知道该从哪里执行。<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">ava分为基本数据据类型和引用数据类型，基本数据类型又分为数值型（整数类型（<span class="hljs-keyword">byte</span>、<span class="hljs-keyword">short</span>、<span class="hljs-keyword">int</span>、<span class="hljs-keyword">long</span>）和浮点型（<span class="hljs-keyword">float</span>、<span class="hljs-keyword">double</span>））、字符型（<span class="hljs-keyword">char</span>）和布尔型（<span class="hljs-keyword">boolean</span>），引用数据类型包括类（<span class="hljs-keyword">class</span>）、接口（<span class="hljs-keyword">interface</span>）、数组和一些特殊的<span class="hljs-keyword">null</span>类型。<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">JDK</span>=JRE+编译、运行等命令工具<br>      <span class="hljs-attr">JRE</span>=JVM+Java系统类库<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Servlet</span>的生命周期分为<span class="hljs-number">5</span>个阶段：加载、创建、初始化、处理客户请求、卸载。 (<span class="hljs-number">1</span>)加载：容器通过类加载器使用servlet类对应的文件加载servlet (<span class="hljs-number">2</span>)创建：通过调用servlet构造函数创建一个servlet对象 (<span class="hljs-number">3</span>)初始化：调用init方法初始化 (<span class="hljs-number">4</span>)处理客户请求：每当有一个客户请求，容器会创建一个线程来处理客户请求 (<span class="hljs-number">5</span>)卸载：调用destroy方法让servlet自己释放其占用的资源<br></code></pre></td></tr></table></figure><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cos">Spring 框架是一个分层架构，由 <span class="hljs-number">7</span> 个定义良好的模块组成。 <br><br>核心容器，Spring上下文，Spring AOP， Spring DAO， Spring ORM， Spring Web， Spring <span class="hljs-keyword">MV</span><br></code></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs delphi">方法重载（<span class="hljs-keyword">overload</span>）： <br><span class="hljs-number">1</span>.必须是同一个类 <br><span class="hljs-number">2</span>方法名（也可以叫函数）一样 <br><span class="hljs-number">3</span>参数类型不一样或参数数量不一样 <br><br>方法的重写（<span class="hljs-keyword">override</span>）两同两小一大原则： <br>方法名相同，参数类型相同 <br>子类返回类型小于等于父类方法返回类型， <br>子类抛出异常小于等于父类方法抛出异常， <br>子类访问权限大于等于父类方法访问权限<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Jdbc</span>六大步骤: <span class="hljs-number">1</span>.注册驱动 <span class="hljs-number">2</span>.获取连接 <span class="hljs-number">3</span>.创建语句对象 <span class="hljs-number">4</span>.执行sql <span class="hljs-number">5</span>.处理语句集 <span class="hljs-number">6</span>关闭连接<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">按照流是否直接与特定的地方（如磁盘、内存、设备等）相连，分为节点流和处理流两类。 <br>节点流：可以从或向一个特定的地方（节点）读写数据。如FileReader. <br>处理流：是对一个已存在的流的连接和封装，通过所封装的流的功能调用实现数据读写。如<span class="hljs-keyword">BufferedReader.处理流的构造方法总是要带一个其他的流对象做参数。一个流对象经过其他流的多次包装，称为流的链接。 </span><br><span class="hljs-keyword">JAVA常用的节点流： </span><br>文 件 FileInputStream FileOutputStrean FileReader FileWriter 文件进行处理的节点流。 <br>字符串 StringReader StringWriter 对字符串进行处理的节点流。 <br>数 组 <span class="hljs-keyword">ByteArrayInputStream </span><span class="hljs-keyword">ByteArrayOutputStreamCharArrayReader </span>CharArrayWriter 对数组进行处理的节点流（对应的不再是文件，而是内存中的一个数组）。 <br>管 道 PipedInputStream PipedOutputStream PipedReaderPipedWriter对管道进行处理的节点流。 <br>常用处理流（关闭处理流使用关闭里面的节点流） <br>缓冲流：<span class="hljs-keyword">BufferedInputStrean </span><span class="hljs-keyword">BufferedOutputStream </span><span class="hljs-keyword">BufferedReader </span><span class="hljs-keyword">BufferedWriter </span> 增加缓冲功能，避免频繁读写硬盘。 <br>转换流：InputStreamReader OutputStreamReader 实现字节流和字符流之间的转换。 <br>数据流 DataInputStream DataOutputStream  等-提供将基础数据类型写入到文件中，或者读取出来. <br>流的关闭顺序 <br>一般情况下是：先打开的后关闭，后打开的先关闭 <br>另一种情况：看依赖关系，如果流a依赖流<span class="hljs-keyword">b，应该先关闭流a，再关闭流b。例如，处理流a依赖节点流b，应该先关闭处理流a，再关闭节点流b </span><br>可以只关闭处理流，不用关闭节点流。处理流关闭的时候，会调用其处理的节点流的关闭方法。<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">Integer对象的方法 <br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span>parse<span class="hljs-constructor">Int(<span class="hljs-string">&quot;&quot;</span>)</span>;是将字符串类型转换为<span class="hljs-built_in">int</span>的基础数据类型 <br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span>value<span class="hljs-constructor">Of(<span class="hljs-string">&quot;&quot;</span>)</span>是将字符串类型数据转换为Integer对象 <br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-built_in">int</span><span class="hljs-constructor">Value()</span>;是将Integer对象中的数据取出，返回一个基础数据类型<span class="hljs-built_in">int</span><br></code></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">在这里帮大家总结一下hashMap和hashtable方面的知识点吧： <span class="hljs-number">1.</span>  关于HashMap的一些说法： a)  HashMap实际上是一个“链表散列”的数据结构，即数组和链表的结合体。HashMap的底层结构是一个数组，数组中的每一项是一条链表。 b)  HashMap的实例有俩个参数影响其性能： “初始容量” 和 装填因子。 c)  HashMap实现不同步，线程不安全。  HashTable线程安全 d)  HashMap中的key-value都是存储在Entry中的。 e)  HashMap可以存<span class="hljs-literal">null</span>键和<span class="hljs-literal">null</span>值，不保证元素的顺序恒久不变，它的底层使用的是数组和链表，通过hashCode()方法和equals方法保证键的唯一性 f)  解决冲突主要有三种方法：定址法，拉链法，再散列法。HashMap是采用拉链法解决哈希冲突的。 注：链表法是将相同hash值的对象组成一个链表放在hash值对应的槽位；    用开放定址法解决冲突的做法是：当冲突发生时，使用某种探查(亦称探测)技术在散列表中形成一个探查(测)序列。沿此序列逐个单元地查找，直到找到给定的关键字，或者碰到一个开放的地址(即该地址单元为空)为止（若要插入，在探查到开放的地址，则可将待插入的新结点存人该地址单元）。   拉链法解决冲突的做法是： 将所有关键字为同义词的结点链接在同一个单链表中。若选定的散列表长度为m，则可将散列表定义为一个由m个头指针组成的指针数组T[<span class="hljs-number">0.</span>.m<span class="hljs-number">-1</span>]。凡是散列地址为i的结点，均插入到以T[i]为头指针的单链表中。T中各分量的初值均应为空指针。在拉链法中，装填因子α可以大于<span class="hljs-number">1</span>，但一般均取α≤<span class="hljs-number">1</span>。拉链法适合未规定元素的大小。     <span class="hljs-number">2.</span>  Hashtable和HashMap的区别： a)   继承不同。  <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">Hashtable</span> <span class="hljs-symbol">extends</span> <span class="hljs-symbol">Dictionary</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">Map</span> <span class="hljs-symbol">public</span> <span class="hljs-symbol">class</span> <span class="hljs-symbol">HashMap</span> <span class="hljs-symbol">extends</span>  <span class="hljs-symbol">AbstractMap</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">Map</span> <span class="hljs-symbol">b</span>)  <span class="hljs-symbol">Hashtable</span>中的方法是同步的，而<span class="hljs-symbol">HashMap</span>中的方法在缺省情况下是非同步的。在多线程并发的环境下，可以直接使用<span class="hljs-symbol">Hashtable</span>，但是要使用<span class="hljs-symbol">HashMap</span>的话就要自己增加同步处理了。 <span class="hljs-symbol">c</span>)  <span class="hljs-symbol">Hashtable</span> 中， <span class="hljs-symbol">key</span> 和 <span class="hljs-symbol">value</span> 都不允许出现 <span class="hljs-symbol">null</span> 值。 在 <span class="hljs-symbol">HashMap</span> 中， <span class="hljs-symbol">null</span> 可以作为键，这样的键只有一个；可以有一个或多个键所对应的值为 <span class="hljs-symbol">null</span> 。当 <span class="hljs-symbol">get</span>() 方法返回 <span class="hljs-symbol">null</span> 值时，即可以表示 <span class="hljs-symbol">HashMap</span> 中没有该键，也可以表示该键所对应的值为 <span class="hljs-symbol">null</span> 。因此，在 <span class="hljs-symbol">HashMap</span> 中不能由 <span class="hljs-symbol">get</span>() 方法来判断 <span class="hljs-symbol">HashMap</span> 中是否存在某个键， 而应该用 <span class="hljs-symbol">containsKey</span>() 方法来判断。 <span class="hljs-symbol">d</span>)  两个遍历方式的内部实现上不同。<span class="hljs-symbol">Hashtable</span>、<span class="hljs-symbol">HashMap</span>都使用了<span class="hljs-symbol">Iterator</span>。而由于历史原因，<span class="hljs-symbol">Hashtable</span>还使用了<span class="hljs-symbol">Enumeration</span>的方式。 <span class="hljs-symbol">e</span>)  哈希值的使用不同，<span class="hljs-symbol">HashTable</span>直接使用对象的<span class="hljs-symbol">hashCode</span>。而<span class="hljs-symbol">HashMap</span>重新计算<span class="hljs-symbol">hash</span>值。 <span class="hljs-symbol">f</span>)  <span class="hljs-symbol">Hashtable</span>和<span class="hljs-symbol">HashMap</span>它们两个内部实现方式的数组的初始大小和扩容的方式。<span class="hljs-symbol">HashTable</span>中<span class="hljs-symbol">hash</span>数组默认大小是<span class="hljs-symbol">11</span>，增加的方式是<span class="hljs-symbol">old</span>*<span class="hljs-symbol">2</span>+<span class="hljs-symbol">1</span>。<span class="hljs-symbol">HashMap</span>中<span class="hljs-symbol">hash</span>数组的默认大小是<span class="hljs-symbol">16</span>，而且一定是<span class="hljs-symbol">2</span>的指数。   注：  <span class="hljs-symbol">HashSet</span>子类依靠<span class="hljs-symbol">hashCode</span>()和<span class="hljs-symbol">equal</span>()方法来区分重复元素。      <span class="hljs-symbol">HashSet</span>内部使用<span class="hljs-symbol">Map</span>保存数据，即将<span class="hljs-symbol">HashSet</span>的数据作为<span class="hljs-symbol">Map</span>的<span class="hljs-symbol">key</span>值保存，这也是<span class="hljs-symbol">HashSet</span>中元素不能重复的原因。而<span class="hljs-symbol">Map</span>中保存<span class="hljs-symbol">key</span>值的,会去判断当前<span class="hljs-symbol">Map</span>中是否含有该<span class="hljs-symbol">Key</span>对象，内部是先通过<span class="hljs-symbol">key</span>的<span class="hljs-symbol">hashCode,</span>确定有相同的<span class="hljs-symbol">hashCode</span>之后，再通过<span class="hljs-symbol">equals</span>方法判断是否相同。<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">重写 要求两同两小一大原则， 方法名相同，参数类型相同，子类返回类型小于等于父类方法返回类型， 子类抛出异常小于等于父类方法抛出异常， 子类访问权限大于等于父类方法访问权限。［注意：这里的返回类型必须要在有继承关系的前提下比较］ <br>重载 方法名必须相同，参数类型必须不同，包括但不限于一项，参数数目，参数类型，参数顺序<br>再来说说这道题 <span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">B</span> 都是方法名和参数相同，是重写，但是返回类型没与父类返回类型有继承关系，错误 D 返回一个类错误 c的参数类型与父类不同，所以不是重写，可以理解为广义上的重载访问权限小于父类，都会显示错误<br>虽然题目没点明一定要重载或者重写，但是当你的方法名与参数类型与父类相同时，已经是重写了，这时候如果返回类型或者异常类型比父类大，或者访问权限比父类小都会编译错误<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp">难道我们只能单纯的背java的那个类是线程安全的，那个类不是线程安全的么？<br>这和授人以鱼有何区别呢？难道就没有一种方法授人以渔？直接教我们如何去判断一个类是否是线程安全的？<br>java中的线程安全是什么：<br>就是线程同步的意思，就是当一个程序对一个线程安全的方法或者语句进行访问的时候，其他的不能再对他进行操作了，必须等到这次访问结束以后才能对这个线程安全的方法进行访问<br>什么叫线程安全：<br>如果你的代码所在的进程中有多个线程在同时运行，而这些线程可能会同时运行这段代码。如果每次运行结果和单线程运行的结果是一样的，而且其他的变量的值也和预期的是一样的，就是线程安全的。 <br>或者说:一个类或者程序所提供的接口对于线程来说是原子操作或者多个线程之间的切换不会导致该接口的执行结果存在二义性,也就是说我们不用考虑同步的问题。<br>线程安全问题都是由全局变量及静态变量引起的。<br>若每个线程中对全局变量、静态变量只有读操作，而无写操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步，否则就可能影响线程安全。<br>看过vector源码的同学就会知道他的许多操作都是加了<span class="hljs-keyword">synchronized</span>修饰的比如他的添加元素。(不知道<span class="hljs-keyword">synchronized</span>是什么意思的自行百度！)<br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">只要是被子类重写的方法，不被<span class="hljs-keyword">super</span>调用都是调用子类方法<br></code></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">一旦在<span class="hljs-keyword">finally</span>块中使用了<span class="hljs-keyword">return</span>或<span class="hljs-keyword">throw</span>语句，将会导致<span class="hljs-keyword">try</span>块，<span class="hljs-keyword">catch</span>块中的<span class="hljs-keyword">return</span>，<span class="hljs-keyword">throw</span>语句失效<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">链接：https:<span class="hljs-regexp">//</span>www.nowcoder.com<span class="hljs-regexp">/questionTerminal/</span><span class="hljs-number">073</span>fe9f1e5c84a689bcdb9ea899d295e?<br>来源：牛客网<br><br>对于管道，有下面这几种类型：<br>①普通管道（PIPE）：通常有两种限制，一是单工，即只能单向传输；二是血缘，即常用于父子进程间（或有血缘关系的进程间）。<br>②流管道（s_pipe）：去除了上述的第一种限制，实现了双向传输。<br><br>③命名管道（name_pipe）：去除了上述的第二种限制，实现了无血缘关系的不同进程间通信。<br>显然，要求是对于不同的服务器之间的通信，是要要求全双工形式的，而管道只能是半双工，虽然可以双向，但是同一时间只能有一个方向传输，全双工和半双工的区别可以如下图示理解：<br></code></pre></td></tr></table></figure><p>链接：<a href="https://www.nowcoder.com/questionTerminal/073fe9f1e5c84a689bcdb9ea899d295e">https://www.nowcoder.com/questionTerminal/073fe9f1e5c84a689bcdb9ea899d295e</a>?<br>来源：牛客网<img src="https://gitee.com/deng-2022/pictures/raw/master/images/4846014_1521723853172_FF523AF3E7DA7B365BEA995386A30039" alt="img">**</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">is-<span class="hljs-keyword">a</span>:继承关系 has-<span class="hljs-keyword">a</span>:从属关系 like-<span class="hljs-keyword">a</span>:组合关系<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">链接：https:<span class="hljs-comment">//www.nowcoder.com/questionTerminal/049085c1e4204b20b6171a0c13dfbfe7?</span><br>来源：牛客网<br><br>java<span class="hljs-selector-class">.lang</span>.NullPoninterException：变量未被初始化、对象未赋值、对象为空（俗称的空指针异常）<br>java<span class="hljs-selector-class">.lang</span>.NumberFormatException：数据格式转换失败（integer的取值范围为：-<span class="hljs-number">128</span>~<span class="hljs-number">127</span>，超过范围都会访问false）<br>java<span class="hljs-selector-class">.lang</span>.RuntimeException：运行时异常<br>java<span class="hljs-selector-class">.lang</span>.ArrayindexOutOfBoundsException：数组下标越界<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gradle">链接：https:<span class="hljs-comment">//www.nowcoder.com/questionTerminal/22a7fd3328124530be8ced520a9eaceb?</span><br>来源：牛客网<br><br>接口是一种特殊的抽象类，先说明抽象类中的抽象方法，再说明接口<br><br>抽象类中的抽象方法(其前有 abstract1修饰)不能用 <span class="hljs-keyword">private</span>、 <span class="hljs-keyword">static</span>、 <span class="hljs-keyword">synchronized</span>、na<br>tive访回修饰符修饰。原因如下:<br><span class="hljs-number">1</span>. <span class="hljs-keyword">private</span><br>抽象方法没有方法体,是用来被继承的,所以不能用 <span class="hljs-keyword">private</span>修饰;<br><span class="hljs-number">2</span>.<span class="hljs-keyword">static</span><br><span class="hljs-keyword">static</span>修饰的方法可以通过类名来访间该方法(即该方法的方法体),抽象方法用sttic修饰没有意义;<br><span class="hljs-number">3</span>. <span class="hljs-keyword">synchronized</span><br>该关键字是为该方法加一个锁。而如果该关键字修饰的方法是 <span class="hljs-keyword">static</span>方法。则使用的锁就是<span class="hljs-keyword">class</span>变量的锁。如果是修饰类方法。则用<span class="hljs-keyword">this</span>变量锁。<br>但是抽象类不能实例化对象,因为该方法不是在该抽象类中实现的。是在其子类实现的。所以，锁应该归其子类所有。所以，抽象方法也就不能用 <span class="hljs-keyword">synchronized</span>关键字修饰了;<br><span class="hljs-number">3</span>. <span class="hljs-keyword">native</span><br><span class="hljs-keyword">native</span>这个东西本身就和 <span class="hljs-keyword">abstract</span>冲突,他们都是方法的声明,只是一个把方法实现移交给子类,另一个是移交给本地操作系统。如果同时出现,就相当于即把实现移交给子类,又把实现移交给本地操作系统,那到底谁来实现具体方法呢<br><br>终于说到了接口！<br>接口是一种特殊的抽象类,接口中的方法全部是抽象方法(但其前的 <span class="hljs-keyword">abstract</span>可以省略),所以抽象类中的抽象方法不能用的访间修饰符这里也不能用。同时额外说明一下protect关键词<br><span class="hljs-number">4</span>. protect<br><span class="hljs-keyword">protected</span>访同修饰符也不能使用,因为接口可以让所有的类去实现(非继承),不只是其子类,但是要用<span class="hljs-keyword">public</span>去修饰。接口可以去继承一个已有的接口。<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">我们一般使用thread都是<span class="hljs-keyword">new</span>一个线程，然后调用start方法启动，使用start方法才真正实现了多线程运行，thread线程有<span class="hljs-number">5</span>种状态，创建-就绪-运行-阻塞-死亡，我们的start方法呢就是就绪这一步，因为这个时候我们的线程并没有立即的执行，而是得等待，等到我们的cpu有空闲的时候，才会执行线程里面的run方法，等run方法执行完了，线程就结束了。 <br> <br>  直接使用thread执行run方***咋样呢？因为run方法是thread里面的一个普通的方法，所以我们直接调用run方法，这个时候它是会运行在我们的主线程中的，因为这个时候我们的程序中只有主线程一个线程，所以这样并没有做到多线程的这种目的。<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">volatile</span>关键字有两个作用：<br><span class="hljs-number">1.</span>并发环境可见性：<span class="hljs-keyword">volatile</span>修饰后的变量能够保证该变量在线程间的可见性，线程进行数据的读写操作时将绕开工作内存（CPU缓存）而直接跟主内存进行数据交互，即线程进行读操作时直接从主内存中读取，写操作时直接将修改后端变量刷新到主内存中，这样就能保证其他线程访问到的数据是最新数据<br><span class="hljs-number">2.</span>并发环境有序性：通过对<span class="hljs-keyword">volatile</span>变量采取内存屏障（Memory barrier）的方式来防止编译重排序和CPU指令重排序，具体方式是通过在操作<span class="hljs-keyword">volatile</span>变量的指令前后加入内存屏障，来实现happens-before关系，保证在多线程环境下的数据交互不会出现紊乱。<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">中间件位于操作系统之上，应用软件之下，而不是操作系统内核中<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;为带符号右移，右移后左边的空位被填充为符号位</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt;为不带符号右移，右移后左边的空位被填充为0</span><br><br><br>没有&lt;&lt;&lt; 因为&lt;&lt;后右边总是补0<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">java,<span class="hljs-keyword">exe</span>是java虚拟机<br><br>javadoc.<span class="hljs-keyword">exe</span>用来制作java文档<br><br>jdb.<span class="hljs-keyword">exe</span>是java的调试器<br><br>javaprof,<span class="hljs-keyword">exe</span>是剖析工具<br></code></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@Autowired</span><br>注入声明的SpringBean对象,根据一定的规则首先按照注入的类型去查找，如果没有找到安装注入的名称去匹配你要注入的属性名称，如果都没有找到启动项目时抛出异常，<span class="hljs-variable">@Autowired</span>(required = false) 表示没有找到注入对象时，不抛异常，注入null。<br><br><br><span class="hljs-variable">@Primary</span><br>如果有多个相同类型的SpringBean,我们可以使用<span class="hljs-variable">@Primary</span>注解,优先注入带该注解标识的类,<span class="hljs-variable">@Primary</span>可以在多个类上标注，那就会抛异常。<br><span class="hljs-variable">@Quelifier</span><br>使用SpringBean的名称(SpringBean的名称都是唯一的)进行注入<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">序列化：将数据结构转换称为二进制数据流或者文本流的过程。序列化后的数据方便在网络上传输和在硬盘上存储。<br>反序列化：与序列化相反，是将二进制数据流或者文本流转换称为易于处理和阅读的数据结构的过程。<br><br>本质其实还是一种协议，一种数据格式，方便数据的存储和传输。<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-type">int</span>和<span class="hljs-type">int</span>之间，用==比较，肯定为<span class="hljs-keyword">true</span>。基本数据类型没有equals方法<br><span class="hljs-type">int</span>和<span class="hljs-type">Integer</span>比较，<span class="hljs-type">Integer</span>会自动拆箱，== 和 equals都肯定为<span class="hljs-keyword">true</span><br><span class="hljs-type">int</span>和<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>比较，<span class="hljs-type">Integer</span>会自动拆箱，调用intValue方法, 所以 == 和 equals都肯定为<span class="hljs-keyword">true</span><br><span class="hljs-type">Integer</span>和<span class="hljs-type">Integer</span>比较的时候，由于直接赋值的话会进行自动的装箱。所以当值在[<span class="hljs-number">-128</span>,<span class="hljs-number">127</span>]中的时候，由于值缓存在IntegerCache中，那么当赋值在这个区间的时候，不会创建新的<span class="hljs-type">Integer</span>对象，而是直接从缓存中获取已经创建好的<span class="hljs-type">Integer</span>对象。而当大于这个区间的时候，会直接<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>。<br>当<span class="hljs-type">Integer</span>和<span class="hljs-type">Integer</span>进行==比较的时候，在[<span class="hljs-number">-128</span>,<span class="hljs-number">127</span>]区间的时候，为<span class="hljs-keyword">true</span>。不在这个区间，则为<span class="hljs-keyword">false</span><br>当<span class="hljs-type">Integer</span>和<span class="hljs-type">Integer</span>进行equals比较的时候，由于<span class="hljs-type">Integer</span>的equals方法进行了重写，比较的是内容，所以为<span class="hljs-keyword">true</span><br><br><span class="hljs-type">Integer</span>和<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span> ： <span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>会创建对象，存储在堆中。而<span class="hljs-type">Integer</span>在[<span class="hljs-number">-128</span>,<span class="hljs-number">127</span>]中，从缓存中取，否则会<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>.<br>所以 <span class="hljs-type">Integer</span>和<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span> 进行==比较的话，肯定为<span class="hljs-keyword">false</span> ; <span class="hljs-type">Integer</span>和<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span> 进行equals比较的话，肯定为<span class="hljs-keyword">true</span><br><br><span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>和<span class="hljs-built_in">new</span> <span class="hljs-type">Integer</span>进行==比较的时候，肯定为<span class="hljs-keyword">false</span> ; 进行equals比较的时候，肯定为<span class="hljs-keyword">true</span><br>原因是<span class="hljs-built_in">new</span>的时候，会在堆中创建对象，分配的地址不同，==比较的是内存地址，所以肯定不同<br><br>装箱过程是通过调用包装器的valueOf方法实现的<br>拆箱过程是通过调用包装器的xxxValue方法实现的（xxx表示对应的基本数据类型）<br><br>总结：Byte、Short、<span class="hljs-type">Integer</span>、Long这几个类的valueOf方法实现类似的。所以在[<span class="hljs-number">-128</span>,<span class="hljs-number">127</span>]区间内，==比较的时候，值总是相等的（指向的是同一对象），在这个区间外是不等的。<br>而<span class="hljs-type">Float</span>和<span class="hljs-type">Double</span>则不相等， <span class="hljs-type">Boolean</span>的值总是相等的<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs csharp">File类的一下常用方法和说明<br><br><span class="hljs-number">1.</span>访问文件名相关方法：<br><br><span class="hljs-function">String <span class="hljs-title">getName</span>()</span>; 返回此File对象所表示的文件名和路径名（如果是路径，则返回最后一级子路径名）。<br><br><span class="hljs-function">String <span class="hljs-title">getPath</span>()</span>; 返回此File对象所对应的路径名。<br><br><span class="hljs-function">File <span class="hljs-title">getAbsolutePath</span>()</span>; 返回此File对象所对应的绝对路径名。<br><br><span class="hljs-function">String <span class="hljs-title">getParent</span>()</span>; 返回此File对象所对应目录（最后一级子目录）的父路径名。<br><br><span class="hljs-function">boolean <span class="hljs-title">renameTo</span>(<span class="hljs-params">File newName</span>)</span>; 重命名此File对象所对应的文件或目录，如果重命名成功，则返回<span class="hljs-literal">true</span>:否则返回<span class="hljs-literal">false</span>.（A）<br><br><span class="hljs-number">2.</span>文件检测相关方法<br><br><span class="hljs-function">boolean <span class="hljs-title">exists</span>()</span>; 判断File对象所对应的文件或目录是否存在。<br><br><span class="hljs-function">boolean <span class="hljs-title">canWrite</span>()</span>; 判断File对象所对应的目录或文件是否可写。<br><br><span class="hljs-function">boolean <span class="hljs-title">canRead</span>()</span>; 判断File对象所对应的目录或文件是否可读。<br><br><span class="hljs-function">boolean <span class="hljs-title">isFile</span>()</span>; 判断File对象所对应的是否是文件，而不是目录。<br><br><span class="hljs-function">boolean <span class="hljs-title">isDirectory</span>()</span>; 判断File对象所对应的是否是目录，而不是文件。<br><br><span class="hljs-function">boolean <span class="hljs-title">isAbsolute</span>()</span>; 判断File对象所对应的文件或目录是否是绝对路径。该方法消除了不同平台的差异，可以直接判断File对象是否为绝对路径。在UNIX/Linux/BSD等系统上，如果路径名开头是一条斜线（/）,则表明该File对象对应一个绝对路径；在Windows等系统上，如果路径开头是盘符，则说明它是绝对路径。<br><br><span class="hljs-number">3.</span>获取常规文件信息<br><br><span class="hljs-function"><span class="hljs-built_in">long</span> <span class="hljs-title">lastModified</span>()</span>; 返回文件最后修改时间。<br><br><span class="hljs-function"><span class="hljs-built_in">long</span> <span class="hljs-title">length</span>()</span>; 返回文件内容的长度。<br><br><span class="hljs-number">4.</span>文件操作相关的方法<br><br><span class="hljs-function">boolean <span class="hljs-title">createNewFile</span>()</span>; 当此File对象所对应的文件不存在时，该方法将新建的一个该File对象所指定的新文件，如果创建成功则返回<span class="hljs-literal">true</span>；否则返回<span class="hljs-literal">false</span>.(C)<br><br><span class="hljs-function">boolean <span class="hljs-title">delete</span>()</span>; 删除File对象所对应的文件或路径。<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> File <span class="hljs-title">CreateTempFile</span>(<span class="hljs-params">String prefix,String suffix</span>)</span>;在默认的临时文件目录创建一个临时空文件，使用给定前缀、系统生成的随机数和给定后缀作为文件名。这是一个静态方法，可以直接通过File来调用。preFix参数必须至少是<span class="hljs-number">3</span>个字节长。建议前缀使用一个短的、有意义的字符串。建议前缀使用一个短的、有意义的字符串，比如”hjb“ 或”main”. suffix参数可以为<span class="hljs-literal">null</span>,在这种情况下，将使用默认的后缀”.tmp”.<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> File <span class="hljs-title">CreateTempFile</span>(<span class="hljs-params">String prefix,String suffix,File directory</span>)</span>;在directory所指定的目录中创建一个临时空文件，使用给定前缀、系统生成的随机数和给定后缀作为文件名。这是一个静态方法，可以直接通过File来调用。<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deleteOnExit</span>()</span>; 注册一个删除钩子，指定当Java虚拟机退出时，删除File对象随对应的文件和目录。<br><br><span class="hljs-number">5.</span>目录操作相关方法（D）<br><br><span class="hljs-function">boolean <span class="hljs-title">mkdir</span>()</span>; 试图创建一个File对象所对应的目录，如果创建成功，则返回<span class="hljs-literal">true</span>;否则返回<span class="hljs-literal">false</span>. 调用该方法时File对象必须对应一个路径，而不是一个文件。<br><br><span class="hljs-function">String[] <span class="hljs-title">list</span>()</span>; 列出File对象的所有子文件名和路径名，返回String数组。<br><br><span class="hljs-function">File[] <span class="hljs-title">listFiles</span>()</span>; 列出File对象的所有子文件和路径，返回File数组。<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> File[] <span class="hljs-title">listRoots</span>()</span>; 列出系统所有的根路径。这是一个静态方法，可以直接通过File类来调用。<br></code></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">基本上我们平常用到的都是非线程安全的集合类，因为要使线程安全，是要加锁来实现的，势必造成性能降低。如hashset、hashmap、<span class="hljs-built_in">array</span>list、linkedlist、treemap、treeset、<span class="hljs-built_in">string</span>bulider等。 <br>像<span class="hljs-built_in">string</span>buhffer、vector、hashtable这些都是专用于多线程的，再者以concurrent（意为：同时发生的）为前缀的集合类大多是线程安全的。<br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">Servlet的生命周期一般可以用三个方法来表示： <span class="hljs-built_in">init</span>()：仅执行一次，负责在装载Servlet时初始化Servlet对象 <span class="hljs-built_in">service</span>() ：核心方法，一般HttpServlet中会有get,post两种处理方式。在调用doGet和doPost方法时会构造servletRequest和servletResponse请求和响应对象作为参数。 <span class="hljs-built_in">destory</span>()：在停止并且卸载Servlet时执行，负责释放资源 初始化阶段：Servlet启动，会读取配置文件中的信息，构造指定的Servlet对象，创建ServletConfig对象，将ServletConfig作为参数来调用<span class="hljs-built_in">init</span>()方法。所以选ACD。<span class="hljs-selector-tag">B</span>是在调用service方法时才构造的<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino">JAVA语言中定义了<span class="hljs-number">8</span>种基本的数据类型，来保存变量。JAVA要求程序中的每一个变量都规定自己的类型。正因为如此，JAVA属于强类型语言，从而不同于JavaScript这样的弱类型脚本语言。 <br><br>  下面我们来看看这<span class="hljs-number">8</span>种类型：  <br><span class="hljs-type">byte</span>：<span class="hljs-number">8</span>位，最大存储数据量是<span class="hljs-number">255</span>，存放的数据范围是<span class="hljs-number">-128</span>~<span class="hljs-number">127</span>之间。 <br><span class="hljs-type">short</span>：<span class="hljs-number">16</span>位，最大数据存储量是<span class="hljs-number">65536</span>，数据范围是<span class="hljs-number">-32768</span>~<span class="hljs-number">32767</span>之间。 <br><span class="hljs-type">int</span>：<span class="hljs-number">32</span>位，最大数据存储容量是<span class="hljs-number">2</span>的<span class="hljs-number">32</span>次方减<span class="hljs-number">1</span>，数据范围是负的<span class="hljs-number">2</span>的<span class="hljs-number">31</span>次方到正的<span class="hljs-number">2</span>的<span class="hljs-number">31</span>次方减<span class="hljs-number">1</span>。 <br><span class="hljs-type">long</span>：<span class="hljs-number">64</span>位，最大数据存储容量是<span class="hljs-number">2</span>的<span class="hljs-number">64</span>次方减<span class="hljs-number">1</span>，数据范围为负的<span class="hljs-number">2</span>的<span class="hljs-number">63</span>次方到正的<span class="hljs-number">2</span>的<span class="hljs-number">63</span>次方减<span class="hljs-number">1</span>。 <br><span class="hljs-type">float</span>：<span class="hljs-number">32</span>位，数据范围在<span class="hljs-number">3.4e-45</span>~<span class="hljs-number">1.4e38</span>，直接赋值时必须在数字后加上f或F。 <br><span class="hljs-type">double</span>：<span class="hljs-number">64</span>位，数据范围在<span class="hljs-number">4.9e-324</span>~<span class="hljs-number">1.8e308</span>，赋值时可以加d或D也可以不加。 <br><span class="hljs-type">boolean</span>：只有<span class="hljs-literal">true</span>和<span class="hljs-literal">false</span>两个取值。 <br><span class="hljs-type">char</span>：<span class="hljs-number">16</span>位，存储Unicode码，用单引号赋值。<br>注：一个字节=<span class="hljs-number">8</span>位。<br>所以，整型数据类型中，需要内存空间最多的是<span class="hljs-type">long</span><br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">修饰一个方法被修饰的方法称为同步方法，其作用的范围是整个方法，作用的对象是调用这个方法的对象； 修饰一个静态的方法其作用的范围是整个静态方法，作用的对象是这个类的所有对象； 修饰一个代码块被修饰的代码块称为同步语句块，其作用的范围是大括号&#123;&#125;括起来的代码，作用的对象是调用这个代码块的对象； 修饰一个类其作用的范围是<span class="hljs-keyword">synchronized</span>后面括号括起来的部分，作用主的对象是这个类的所有对象。<br></code></pre></td></tr></table></figure><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs aspectj">(<span class="hljs-number">1</span>)<span class="hljs-keyword">throw</span>是语句抛出一个异常，一般是在代码块的内部，当程序出现某种逻辑错误时由程序员主动抛出某种特定类型的异常<br>(<span class="hljs-number">2</span>)当某个方法可能会抛出某种异常时用于<span class="hljs-keyword">throws</span> 声明可能抛出的异常，然后交给上层调用它的方法程序处理<br>(<span class="hljs-number">3</span>)<span class="hljs-keyword">throws</span>出现在方法函数头；而<span class="hljs-keyword">throw</span>出现在函数体.<span class="hljs-keyword">throws</span>表示出现异常的一种可能性，并不一定会发生这些异常；<span class="hljs-keyword">throw</span>则是抛出了异常，执行<span class="hljs-keyword">throw</span>则一定抛出了某种异常对象。两者都是消极处理异常的方式（这里的消极并不是说这种方式不好），只是抛出或者可能抛出异常，但是不会由函数去处理异常，真正的处理异常由函数的上层调用处理。 <br>(<span class="hljs-number">4</span>)如果<span class="hljs-keyword">try</span>快中抛出了一个在<span class="hljs-keyword">catch</span>子句中说明的异常类，那么程序将跳过<span class="hljs-keyword">try</span>语句的其余代码,执行<span class="hljs-keyword">catch</span>子句中的处理器代码。<br>(<span class="hljs-number">5</span>)如果方法中的任何代码抛出了一个在<span class="hljs-keyword">catch</span>子句中都有声明的异常类型，那么方***立即退出。<br>(<span class="hljs-number">6</span>)无论是否抛出异常<span class="hljs-keyword">finally</span>语句块最终都会执行。<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs abnf">比如表达式<br>byte a<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-comment">;</span><br><span class="hljs-attribute">a</span><span class="hljs-operator">=</span>a-<span class="hljs-number">10</span>；<br>由于<span class="hljs-number">10</span>是整型int，因此表达式a-<span class="hljs-number">10</span>；将自动转换成int类型，int类型在赋值给byte，会编译错误<br>byte a<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-comment">;</span><br><span class="hljs-attribute">a-</span><span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-comment">;</span><br>不会发生编译错误，因为复合运算符是一个带有隐式转换的运算符，将右侧表达式类型自动转换成左侧表达式类型<br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">成员变量和局部变量的区别<br><span class="hljs-number">1</span>、成员变量是独立于方法外的变量，是类的方法中的变量<br><span class="hljs-number">1</span>）、成员变量：包括和，用<span class="hljs-keyword">static</span>修饰的是，不用<span class="hljs-keyword">static</span>修饰的是，所有类的成员变量可以通过<span class="hljs-keyword">this</span>来引用。<br><span class="hljs-number">2</span>）、局部变量：包括形参，方法局部变量，代码块局部变量，存在于方法的参数列表和方法定义中以及代码块中。<br><span class="hljs-number">2</span>、成员变量可以被<span class="hljs-keyword">public</span>，protect，<span class="hljs-keyword">private</span>，<span class="hljs-keyword">static</span>等修饰符修饰，而局部变量不能被控制修饰符及 <span class="hljs-keyword">static</span>修饰；两者都可以定义成<span class="hljs-keyword">final</span>型。<br><span class="hljs-number">3</span>、成员变量存储在堆，局部变量存储在栈。局部变量的作用域仅限于定义它的方法，在该方法的外部无法访问它。成员变量的作用域在整个类内部都是可见的，所有成员方法都可以使用它。如果允许，还可以在类的外部使用成员变量。<br><span class="hljs-number">4</span>、局部变量的生存周期与方法的执行期相同。当方法执行到定义局部变量的语句时，局部变量被创建；执行到它所在的作用域的最后一条语句时，局部变量被销毁。类的成员变量，如果是实例成员变量，它和对象的生存期相同。而的生存期是整个程序运行期。<br><span class="hljs-number">5</span>、成员变量在累加载或实例被创建时，系统自动空间，并在分配空间后自动为成员变量指定初始化值，初始化值为默认值，基本类型的默认值为<span class="hljs-number">0</span>，复合类型的默认值为<span class="hljs-literal">null</span>。（被<span class="hljs-keyword">final</span>修饰且没有<span class="hljs-keyword">static</span>的必须显式赋值），局部变量在定义后必须经过显式初始化后才能使用，系统不会为局部变量执行初始化。<br><span class="hljs-number">6</span>、局部变量可以和成员变量 同名，且在使用时，局部变量具有更高的优先级，直接使用同名访问，访问的是局部变量，如需要访问成员变量可以用<span class="hljs-keyword">this</span>.变量名访问<br>本例中i为成员变量，有默认的初始值，如果定义在方法内部，就没有初始值<br></code></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">编译器将Java源代码编译成字节码<span class="hljs-keyword">class</span>文件<br>类加载到<span class="hljs-symbol">JVM</span>里面后，执行引擎把字节码转为可执行代码<br>执行的过程，再把可执行代码转为机器码，由底层的操作系统完成执行。<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arduino">本题易错点是A选项，<span class="hljs-keyword">volatile</span>关键字对任意单个<span class="hljs-keyword">volatile</span>变量的的读写操作可以保证原子性，但类似于<span class="hljs-keyword">volatile</span>++这种复合操作就无法保证原子性了。如果需要对这种复合操作保证原子性，最好用<span class="hljs-keyword">synchronized</span>关键字。即<span class="hljs-keyword">synchronized</span>保证三大性，原子性，有序性，可见性，<span class="hljs-keyword">volatile</span>保证有序性，可见性，不能保证原子性。<br><br>B选项，为了实现<span class="hljs-keyword">volatile</span>的内存语义，编译器在生成字节码时会在指令序列中插入内存屏障来禁止特定类型的处理器重排序，以此来保证有序性。<br><br>C选项，可见性是指当多个线程并发访问共享变量时，一个线程对共享变量的修改，其它线程能够立即看到。对于一个<span class="hljs-keyword">volatile</span>变量的读，总是能看到对这个<span class="hljs-keyword">volatile</span>变量最后的写入，保证了可见性。<br><br>D选项为干扰选项。<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">以前我是堆，你是栈<br><br>你总是能精准的找到我，给我指明出路<br><br>后来有一天我明白了<br><br>我变成了栈，你却隐身堆海<br><br>我却找不到你了，空指针了<br><br><br><br>我不愿意如此，在下一轮<span class="hljs-keyword">full</span> gc前<br><br>我找到了<span class="hljs-keyword">object</span>家的finalize<br><br>又找到了你，这次我不会放手<br><br><br><br>在世界重启前，一边躲着<span class="hljs-keyword">full</span> gc一边老去<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs arduino">在Java中，可以将一个类定义在另一个类里面或者一个方法里边，这样的类称为内部类，广泛意义上的内部类一般包括四种：成员内部类，局部内部类，匿名内部类，静态内部类 。<br><br><span class="hljs-number">1.</span>成员内部类<br><br>（<span class="hljs-number">1</span>）该类像是外部类的一个成员，可以无条件的访问外部类的所有成员属性和成员方法（包括<span class="hljs-keyword">private</span>成员和静态成员）；<br><br>（<span class="hljs-number">2</span>）成员内部类拥有与外部类同名的成员变量时，会发生隐藏现象，即默认情况下访问的是成员内部类中的成员。如果要访问外部类中的成员，需要以下形式访问：【外部类.<span class="hljs-keyword">this</span>.成员变量  或  外部类.<span class="hljs-keyword">this</span>.成员方法】；<br><br>（<span class="hljs-number">3</span>）在外部类中如果要访问成员内部类的成员，必须先创建一个成员内部类的对象，再通过指向这个对象的引用来访问；<br><br>（<span class="hljs-number">4</span>）成员内部类是依附外部类而存在的，也就是说，如果要创建成员内部类的对象，前提是必须存在一个外部类的对象；<br><br>（<span class="hljs-number">5</span>）内部类可以拥有<span class="hljs-keyword">private</span>访问权限、<span class="hljs-keyword">protected</span>访问权限、<span class="hljs-keyword">public</span>访问权限及包访问权限。如果成员内部类用<span class="hljs-keyword">private</span>修饰，则只能在外部类的内部访问；如果用<span class="hljs-keyword">public</span>修饰，则任何地方都能访问；如果用<span class="hljs-keyword">protected</span>修饰，则只能在同一个包下或者继承外部类的情况下访问；如果是默认访问权限，则只能在同一个包下访问。外部类只能被<span class="hljs-keyword">public</span>和包访问两种权限修饰。<br><br><span class="hljs-number">2.</span>局部内部类<br><br>（<span class="hljs-number">1</span>）局部内部类是定义在一个方法或者一个作用域里面的类，它和成员内部类的区别在于局部内部类的访问仅限于方法内或者该作用域内；<br><br>（<span class="hljs-number">2</span>）局部内部类就像是方法里面的一个局部变量一样，是不能有<span class="hljs-keyword">public</span>、<span class="hljs-keyword">protected</span>、<span class="hljs-keyword">private</span>以及<span class="hljs-type">static</span>修饰符的。<br><br><span class="hljs-number">3.</span>匿名内部类<br><br>（<span class="hljs-number">1</span>）一般使用匿名内部类的方法来编写事件监听代码；<br><br>（<span class="hljs-number">2</span>）匿名内部类是不能有访问修饰符和<span class="hljs-type">static</span>修饰符的；<br><br>（<span class="hljs-number">3</span>）匿名内部类是唯一一种没有构造器的类；<br><br>（<span class="hljs-number">4</span>）匿名内部类用于继承其他类或是实现接口，并不需要增加额外的方法，只是对继承方法的实现或是重写。<br><br><span class="hljs-number">4.</span>内部静态类<br><br>（<span class="hljs-number">1</span>）静态内部类是不需要依赖于外部类的，这点和类的静态成员属性有点类似；<br><br>（<span class="hljs-number">2</span>）不能使用外部类的非<span class="hljs-type">static</span>成员变量或者方法。<br></code></pre></td></tr></table></figure><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs processing"><span class="hljs-built_in">HashMap</span>和Hashtable都是典型的Map实现，选项A正确。<br><br>Hashtable在实现Map接口时保证了线程安全性，而<span class="hljs-built_in">HashMap</span>则是非线程安全的。所以，Hashtable的性能不如<span class="hljs-built_in">HashMap</span>，因为为了保证线程安全它牺牲了一些性能。因此选项B错误<br><br>Hashtable不允许存入<span class="hljs-literal">null</span>，无论是以<span class="hljs-literal">null</span>作为<span class="hljs-built_in">key</span>或value，都会引发异常。而<span class="hljs-built_in">HashMap</span>是允许存入<span class="hljs-literal">null</span>的，无论是以<span class="hljs-literal">null</span>作为<span class="hljs-built_in">key</span>或value，<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Collection<br><br>    <span class="hljs-comment">-----List</span><br><br>               <span class="hljs-comment">-----LinkedList    非同步</span><br><br>                <span class="hljs-comment">----ArrayList      非同步，实现了可变大小的元素数组</span><br><br>                <span class="hljs-comment">----Vector          同步           </span><br><br>    <span class="hljs-comment">-----Set   不允许有相同的元素</span><br><br> <span class="hljs-keyword">Map</span><br><br>    <span class="hljs-comment">-----HashTable        同步，实现一个key--value映射的哈希表，key和value都不允许出现null值</span><br><br>    <span class="hljs-comment">-----HashMap          非同步，</span><br><br>    <span class="hljs-comment">-----WeakHashMap   改进的HashMap，实现了“弱引用”，如果一个key不被引用，则被GC回收</span><br>注：<br>List接口中的对象按一定顺序排列，允许重复 <br>Set接口中的对象没有顺序，但是不允许重复 <br><span class="hljs-keyword">Map</span>接口中的对象是key、value的映射关系，key不允许重复<br></code></pre></td></tr></table></figure><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">Java参数，不管是原始类型还是引用类型，传递的都是副本(有另外一种说法是传值，但是说传副本更好理解吧，传值通常是相对传址而言)。 如果参数类型是原始类型，那么传过来的就是这个参数的一个副本，也就是这个原始参数的值，这个跟之前所谈的传值是一样的。如果在函数中改变了副本的 值不会改变原始的值. 如果参数类型是引用类型，那么传过来的就是这个引用参数的副本，这个副本存放的是参数的地址。如果在函数中没有改变这个副本的地址，而是改变了地址中的 值，那么在函数内的改变会影响到传入的参数。如果在函数中改变了副本的地址，如<span class="hljs-keyword">new</span><span class="hljs-type"></span>一个，那么副本就指向了一个新的地址，此时传入的参数还是指向原来的 地址，所以不会改变参数的值。<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle">堆可以分为两部分：新生代，老年代。 <br>新生代：<span class="hljs-number">1</span><span class="hljs-regexp">/3的堆空间 老年代：2/</span><span class="hljs-number">3</span>的堆空间 <br>而新生代可以细分：<span class="hljs-number">8</span><span class="hljs-regexp">/10的Eden区。2/</span><span class="hljs-number">10</span>的Survivor区 <br>Suivivor又可以细分为<span class="hljs-keyword">From</span>区和To区，各占一半。 <br> <br>注意： <br><span class="hljs-number">1</span>.永久代MetaData在jdk1.<span class="hljs-number">8</span>之前属于堆，现在属于物理内存，与堆完全隔开了 <br><span class="hljs-number">2</span>.方法区只是逻辑概念，MetaData永久代和元空间是实实在在存在的，不能混为一体，元空间是方法区的具体实现。 <br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">静态方法的使用不依靠对象，只看类型，在编译时就确定了 <br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">application对象是共享的，多个用户共享一个，以此实现数据共享和通信<br><br>JSP内置对象和属性列举如下： <br><span class="hljs-number">1.</span>request对象 <br>     客户端的请求信息被封装在request对象中，通过它才能了解到客户的需求，然后做出响应。它是HttpServletRequest类的实例。 <br><span class="hljs-number">2.</span>response对象 <br>     response对象包含了响应客户请求的有关信息，但在JSP中很少直接用到它。它是HttpServletResponse类的实例。 <br><span class="hljs-number">3.</span><span class="hljs-keyword">session</span>对象 <br>     <span class="hljs-keyword">session</span>对象指的是客户端与服务器的一次会话，从客户连到服务器的一个WebApplication开始，直到客户端与服务器断开连接为止。它是HttpSession类的实例. <br><span class="hljs-number">4.</span><span class="hljs-keyword">out</span>对象 <br>     <span class="hljs-keyword">out</span>对象是JspWriter类的实例,是向客户端输出内容常用的对象 <br><span class="hljs-number">5.</span>page对象 <br>     page对象就是指向当前JSP页面本身，有点象类中的this指针，它是java.lang.<span class="hljs-keyword">Object</span>类的实例 <br><span class="hljs-number">6.</span>application对象 <br>     application对象实现了用户间数据的共享，可存放全局变量。它开始于服务器的启动，直到服务器的关闭，在此期间，此对象将一直存在；这样在用户的前后连接或不同用户之间的连接中，可以对此对象的同一属性进行操作；在任何地方对此对象属性的操作，都将影响到其他用户对此的访问。服务器的启动和关闭决定了application对象的生命。它是ServletContext类的实例。 <br><span class="hljs-number">7.</span><span class="hljs-keyword">exception</span>对象 <br>   <span class="hljs-keyword">exception</span>对象是一个例外对象，当一个页面在运行过程中发生了例外，就产生这个对象。如果一个JSP页面要应用此对象，就必须把isErrorPage设为<span class="hljs-keyword">true</span>，否则无法编译。他实际上是java.lang.Throwable的对象 <br><span class="hljs-number">8.</span>pageContext对象 <br>pageContext对象提供了对JSP页面内所有的对象及名字空间的访问，也就是说他可以访问到本页所在的<span class="hljs-keyword">SESSION</span>，也可以取本页面所在的application的某一属性值，他相当于页面中所有功能的集大成者，它的本 类名也叫pageContext。 <br><span class="hljs-number">9.</span>config对象 <br>config对象是在一个Servlet初始化时，JSP引擎向它传递信息用的，此信息包括Servlet初始化时所要用到的参数（通过属性名和属性值构成）以及服务器的有关信息（通过传递一个ServletContext对象） <br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">父类的静态代码块 子类的静态代码块 父类的普通代码块 父类的构造方法 子类的普通代码块 子类的构造方法 <br></code></pre></td></tr></table></figure><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">不会初始化子类的几种 <br><span class="hljs-number">1.</span> 调用的是父类的<span class="hljs-keyword">static</span>方法或者字段 <br><span class="hljs-number">2.</span>调用的是父类的<span class="hljs-keyword">final</span>方法或者字段 <br><span class="hljs-number">3.</span> 通过数组来引用 <br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">new</span> <span class="hljs-built_in">URL</span>()时必须捕获检查异常，但这个异常是由于字符串格式和<span class="hljs-built_in">URL</span>不符导致的，与网址是否存在无关。<span class="hljs-built_in">URL</span>的toString方法返回字符串，无论网址是否存在。<br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">服务器端，首先是服务器初始化Socket，然后是与端口进行绑定(blind()),端口创建ServerSocket进行监听(listen()),然后调用阻塞(accept()),等待客户端连接。与客户端发生连接后，会进行相关的读写操作(read(),<span class="hljs-built_in">write</span>())，最后调用<span class="hljs-built_in">close</span>()关闭连接。博客上看的，不知道全面不全面，大神轻喷。<br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-number">1</span><span class="hljs-selector-class">.clone</span>()：创建并返回此对象的一个副本。 <span class="hljs-number">2</span><span class="hljs-selector-class">.equals</span>(Object<br>obj)：指示一个对象是否与此对象&quot;相等&quot;。<br><span class="hljs-number">3</span><span class="hljs-selector-class">.finalize</span>()：当垃圾回收器确定不存在该对象的引用时，有对象的垃圾回收器进行调用，可以人工调用，但是不确定什么时候执行。<br><span class="hljs-number">4</span><span class="hljs-selector-class">.getClass</span>()：返回此<span class="hljs-selector-tag">Object</span>的运行时的类。 <span class="hljs-number">5</span><span class="hljs-selector-class">.hashCode</span>()：返回该对象的哈希码值，此方法是为了提高哈希表的性能。<br><span class="hljs-number">6</span><span class="hljs-selector-class">.notify</span>()：唤醒在此对象监视器上等待的单个线程。 <span class="hljs-number">7</span><span class="hljs-selector-class">.notifyAll</span>()：则是唤醒在此对象监视器上等待的所有线程。<br><span class="hljs-number">8</span><span class="hljs-selector-class">.toString</span>()：返回该对象的字符串表示。 <span class="hljs-number">9</span><span class="hljs-selector-class">.wait</span>()：在其他线程调用此对象的<span class="hljs-built_in">notify</span>()方法或<span class="hljs-built_in">notifyAll</span>()<br>方法前，导致当前线程等待。<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">散列表之开放定址法 在前面的文章中我们介绍过《散列表之链接法》，在链接法中，如果不同键值却将有相同的映射值，即有不同键值的元素却映射到散列表中的同一位置，那么就采用链表的方法，将映射到同一位置的元素插入到同一个链表之中，当需要删除， 查询元素时，只需要遍历该链表即可，链接法在最坏情况下删除和查询元素的时间代价为<span class="hljs-constructor">O(<span class="hljs-params">n</span>)</span><span class="hljs-constructor">O(<span class="hljs-params">n</span>)</span> 今天我们来讲散列表中另外一种解决冲突的方法，那就是开放定址法(<span class="hljs-keyword">open</span> addressing)。 假如你在外面旅游时，吃坏东西，急需上厕所，当你好不容易找到一件洗手间的时候，发现排了好多人，这时你会怎么做？ 如果是链接法:排队不就行了，我就在外面等，迟早会排到我的 如果是开放定址法:直接放弃现有厕所，去寻找新的厕所 没错，放弃已被占用的位置，寻找新的插入位置就是开放定址法的思想，开放定址法中的开放二字指的是没有被占用的位置，定址指的是确定位置。开放定址法中，所有的元素都放在散列表中(链接法放在链表中)。也就是说散列表中的每一个位置，要么有元素，要么没有元素。当需要删除，查询元素时，我们从某一个位置开始，按照某种特定的确定下一个位置的方法来检查所有表项，直到找到目标元素，或者没有找到。<br></code></pre></td></tr></table></figure><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">构造函数的作用是完成对象的初始化。当程序执行到<span class="hljs-keyword">new</span><span class="hljs-type"></span>操作符时， 首先去看<span class="hljs-keyword">new</span><span class="hljs-type"></span>操作符后面的类型，因为知道了类型，才能知道要分配多大的内存空间。分配完内存之后，再调用构造函数，填充对象的各个域，这一步叫做对象的初始化。而选项B、D中，对象的初始化并不是通过构造函数完成的，而是读取别的内存区域中的对象的各个域来完成。<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-number">1</span>. <span class="hljs-keyword">java.awt：提供了绘图和图像类，主要用于编写GUI程序，包括按钮、标签等常用组件以及相应的事件类。</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">2</span>. <span class="hljs-keyword">java.lang：java的语言包，是核心包，默认导入到用户程序，包中有object类，数据类型包装类，数学类，字符串类，系统和运行时类，操作类，线程类，错误和异常处理类，过程类。</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">3</span>. <span class="hljs-keyword">java.io：包含提供多种输出输入功能的类。</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">4</span>. <span class="hljs-keyword">java.net： </span>包含执行与网络有关的类，如URL，<span class="hljs-keyword">SCOKET，SEVERSOCKET等。</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">5</span>. <span class="hljs-keyword">java.applet：包含java小应用程序的类。</span><br><span class="hljs-keyword"></span><br><span class="hljs-number">6</span>. <span class="hljs-keyword">java.util：包含集合框架、遗留的 </span>collection 类、事件模型、日期和时间设施、国际化和各种实用工具类（字符串标记生成器、随机数生成器和位数组、日期Date类、堆栈Stack类、向量Vector类等）。集合类、时间处理模式、日期时间工具等各类常用工具包。<br><span class="hljs-number">7</span>. <span class="hljs-keyword">java.sql：提供使用 </span><span class="hljs-keyword">JavaTM </span>编程语言访问并处理存储在数据源（通常是一个关系数据库）中的数据的 API。<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230518090644092.png" alt="image-20230518090644092"></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">三元操作符类型的转换规则： <span class="hljs-number">1</span>.若两个操作数不可转换，则不做转换，返回值为Object类型 <span class="hljs-number">2</span>.若两个操作数是明确类型的表达式（比如变量），则按照正常的二进制数字来转换，<span class="hljs-built_in">int</span>类型转换为long类型，long类型转换为float类型等。 <span class="hljs-number">3</span>.若两个操作数中有一个是数字S,另外一个是表达式，且其类型标示为<span class="hljs-built_in">T</span>，那么，若数字S在<span class="hljs-built_in">T</span>的范围内，则转换为<span class="hljs-built_in">T</span>类型；若S超出了<span class="hljs-built_in">T</span>类型的范围，则<span class="hljs-built_in">T</span>转换为S类型。 <span class="hljs-number">4</span>.若两个操作数都是直接量数字，则返回值类型为范围较大者 <br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Object</span> a = <span class="hljs-keyword">true</span> ? <span class="hljs-built_in">new</span> <span class="hljs-type">Boolean</span>(<span class="hljs-keyword">false</span>) : <span class="hljs-built_in">new</span> <span class="hljs-type">Character</span>(<span class="hljs-string">&#x27;1&#x27;</span>).getClass(); // java.lang.Boolean <span class="hljs-keyword">Object</span> b = <span class="hljs-keyword">true</span> ? <span class="hljs-built_in">new</span> Byte((byte) <span class="hljs-number">1</span>) : <span class="hljs-built_in">new</span> <span class="hljs-type">Character</span>(<span class="hljs-string">&#x27;1&#x27;</span>); // java.lang.Integer <span class="hljs-keyword">Object</span> c = <span class="hljs-keyword">true</span> ? <span class="hljs-built_in">new</span> Byte((byte) <span class="hljs-number">1</span>) : <span class="hljs-built_in">new</span> Short((short) <span class="hljs-number">1</span>); // java.lang.Short <br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk">兄弟们，记得住吗？ <br>byte b = <span class="hljs-number">1</span>;<br>char c = <span class="hljs-number">1</span>;<br>short s = <span class="hljs-number">1</span>;<br>int i = <span class="hljs-number">1</span>;<br><br><span class="hljs-regexp">//</span> 三目，一边为byte另一边为char，结果为int<br><span class="hljs-regexp">//</span> 其它情况结果为两边中范围大的。适用包装类型<br>i = true ? b : c; <span class="hljs-regexp">//</span> int<br>b = true ? b : b; <span class="hljs-regexp">//</span> byte<br>s = true ? b : s; <span class="hljs-regexp">//</span> short<br><br><span class="hljs-regexp">//</span> 表达式，两边为byte,short,char，结果为int型<br><span class="hljs-regexp">//</span> 其它情况结果为两边中范围大的。适用包装类型<br>i = b + c; <span class="hljs-regexp">//</span> int<br>i = b + b; <span class="hljs-regexp">//</span> int<br>i = b + s; <span class="hljs-regexp">//</span> int<br><br><span class="hljs-regexp">//</span> 当 a 为基本数据类型时，a += b，相当于 a = (a) (a + b)<br><span class="hljs-regexp">//</span> 当 a 为包装类型时， a += b 就是 a = a + b<br>b += s; <span class="hljs-regexp">//</span> 没问题<br>c += i; <span class="hljs-regexp">//</span> 没问题<br><br><span class="hljs-regexp">//</span> 常量任君搞，long以上不能越<br>b = (char) <span class="hljs-number">1</span> + (short) <span class="hljs-number">1</span> + (int) <span class="hljs-number">1</span>; <span class="hljs-regexp">//</span> 没问题<br><span class="hljs-regexp">//</span> i = (long) <span class="hljs-number">1</span> <span class="hljs-regexp">//</span> 错误<br></code></pre></td></tr></table></figure><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs aspectj">  <span class="hljs-number">1.</span>抽象类可以有构造方法，接口中不能有构造方法。  <span class="hljs-number">2.</span>抽象类中可以有普通成员变量，接口中没有普通成员变量  <span class="hljs-number">3.</span>抽象类中可以包含非抽象的普通方法，接口中的所有方法必须都是抽象的，不能有非抽象的普通方法。  <span class="hljs-number">4.</span> 抽象类中的抽象方法的访问类型可以是<span class="hljs-keyword">public</span>，<span class="hljs-keyword">protected</span>和（默认类型,虽然  eclipse下不报错，但应该也不行），但接口中的抽象方法只能是<span class="hljs-keyword">public</span>类型的，并且默认即为<span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span>类型。  <span class="hljs-number">5.</span> 抽象类中可以包含静态方法，接口中不能包含静态方法  <span class="hljs-number">6.</span> 抽象类和接口中都可以包含静态成员变量，抽象类中的静态成员变量的访问类型可以任意，但接口中定义的变量只能是<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span>类型，并且默认即为<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span>类型。  <span class="hljs-number">7.</span> 一个类可以实现多个接口，但只能继承一个抽象类。 <br></code></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-keyword">static</span>修饰的为类成员,会随着类的加载而加载,比如静态代码块,静态成员,静态方法(这里只是加载,并没有调用)等等,可以想象一下,如果把一个<span class="hljs-keyword">Class</span>文件中的外部类设为<span class="hljs-keyword">static</span>,目的难道是让这个类随着应用的启动而加载吗？如果在这次使用过程中根本没有使用过这个类,那么是不是就会浪费内存。这样来说设计不合理,总而言之,设计不合理的地方,Java是不会让它存在的。<br>而为什么内部类可以使用<span class="hljs-keyword">static</span>修饰呢,因为内部类算是类的成员了,如果没有使用静态来修饰,那么在创建内部类的时候就需要先有一个外部类的对象,如果我们一直在使用内部类,那么内存中就会一直存在外部类的引用,而我们有时候只需要使用内部类,不需要外部类,那么还是会浪费内存,甚至会造成内存溢出。使用<span class="hljs-keyword">static</span>修饰内部类之后,内部类在创建对象时就不需要有外部类对象的引用了。<br>最终结论就是:<span class="hljs-keyword">static</span>可以用来修饰内部类,但是不可以用来修饰外部类 <br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">run</span>()相当于线程的任务处理逻辑的入口方法，它由Java虚拟机在运行相应线程时直接调用，而不是由应用代码进行调用。 <br>而<span class="hljs-built_in">start</span>()的作用是启动相应的线程。启动一个线程实际是请求Java虚拟机运行相应的线程，而这个线程何时能够运行是由线程调度器决定的。<span class="hljs-built_in">start</span>()调用结束并不表示相应线程已经开始运行，这个线程可能稍后运行，也可能永远也不会运行。 <br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs scss"><br>hashCode方法本质就是一个哈希函数，这是<span class="hljs-selector-tag">Object</span>类的作者说明的。<span class="hljs-selector-tag">Object</span>类的作者在注释的最后一段的括号中写道：将对象的地址值映射为integer类型的哈希值。但<span class="hljs-built_in">hashCode</span>()并不完全可靠的，有时候不同的对象他们生成的hashcode也会一样，因此<span class="hljs-built_in">hashCode</span>()只能说是大部分时候可靠。<br>因此我们也需要重写<span class="hljs-built_in">equals</span>()方法，但因为重写的<span class="hljs-built_in">equals</span>()比较全面比较复杂，会造成程序效率低下，而利用<span class="hljs-built_in">hashCode</span>()进行对比，则只要生成一个hash值进行比较就可以了，效率很高。因此，正常的操作流程是先用<span class="hljs-built_in">hashCode</span>()去对比两个对象，如果<span class="hljs-built_in">hashCode</span>()不一样，则表示这两个对象肯定不相等，直接返回false,如果<span class="hljs-built_in">hashCode</span>()相同，再对比他们的<span class="hljs-built_in">equals</span>()。<br>综上所述：<br><span class="hljs-built_in">equals</span>()相等的两个对象<span class="hljs-built_in">hashCode</span>()一定相等。<br><span class="hljs-built_in">hashCode</span>()相等的两个对象<span class="hljs-built_in">equal</span>()不一定相等。<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">String</span> split 这个方法默认返回一个数组， 如果没有找到分隔符， 会把整个字符串当成一个长度为<span class="hljs-number">1</span>的字符串数组返回到结果， 所以此处结果就是<span class="hljs-number">1</span> <br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">既然是实现接口，就要实现接口的所以方法，相当于重写方法，方法的重写需要满足：三同一大一小（方法名、返回值类型、形参相同；访问权限&gt;<span class="hljs-operator">=</span>重写前；抛出异常&lt;<span class="hljs-operator">=</span>重写前） <br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">switch</span>支持 <span class="hljs-type">int</span>及以下（<span class="hljs-type">char</span>， <span class="hljs-type">short</span>， <span class="hljs-type">byte</span>），<span class="hljs-type">String</span>， Enum<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230526173031485.png" alt="image-20230526173031485"></p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230526173038011.png" alt="image-20230526173038011"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>出现多个<span class="hljs-keyword">catch</span>块时，应该先处理小异常，再处理大异常，也就是将处理父类异常的<span class="hljs-keyword">catch</span>块放在处理子类异常的<span class="hljs-keyword">catch</span>块之后。<span class="hljs-built_in">Exception</span>是所有异常的父类，如果处理<span class="hljs-built_in">Exception</span>的<span class="hljs-keyword">catch</span>语句块放在前面，会导致任何异常在这个<span class="hljs-keyword">catch</span>块都能被匹配，后续<span class="hljs-keyword">catch</span>块将变得没有意义。<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">当一个类的一个或多个方法是抽象方法时<br>当类是一个抽象类的子类，并且不能为任何抽象方法提供任何实现细节或方法体时<br>当一个类实现一个接口，并且不能为任何抽象方法提供实现细节或方法体时<br>该类一定为抽象类<br></code></pre></td></tr></table></figure><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><span class="hljs-keyword">int</span> 是八大基本数据类型之一（<span class="hljs-keyword">byte</span>,<span class="hljs-keyword">char</span>,<span class="hljs-keyword">short</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">long</span>,<span class="hljs-keyword">float</span>,<span class="hljs-keyword">double</span>,<span class="hljs-keyword">boolean</span>）<br>Integer 是 <span class="hljs-keyword">int</span> 包装类;<br><span class="hljs-keyword">int</span>是基本数据类型，默认值为<span class="hljs-number">0</span>,<br>Integer 是类，默认值为<span class="hljs-keyword">null</span>；<br>Integer 表示的是对象，用一个引用指向这个对象,<br><span class="hljs-keyword">int</span>是基本数据类型，直接存储数值。<br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-type">String</span>重写后的<span class="hljs-keyword">equals</span>底层源码:<br><span class="hljs-number">1</span>、判断比较的内容是否为<span class="hljs-type">Object</span>对象<br><span class="hljs-number">2</span>、判断是否为<span class="hljs-type">String</span>对象<br>符合以上条件才能开始比较，否则直接返回<span class="hljs-literal">false</span>，所以拿<span class="hljs-type">String</span>字符串对象 <span class="hljs-keyword">equals</span> <span class="hljs-type">char</span>数组对象，结果一定为<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Spring</span> 支持 <span class="hljs-number">7</span> 种事务传播行为： PROPAGATION_REQUIRED 如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是最常见的选择。 PROPAGATION_SUPPORTS 支持当前事务，如果当前没有事务，就以非事务方式执行。 PROPAGATION_MANDATORY 使用当前的事务，如果当前没有事务，就抛出异常。 PROPAGATION_REQUIRES_NEW 新建事务，如果当前存在事务，把当前事务挂起。 PROPAGATION_NOT_SUPPORTED 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。 PROPAGATION_NEVER 以非事务方式执行，如果当前存在事务，则抛出异常。 PROPAGATION_NESTED 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与 PROPAGATION_REQUIRED 类似的操作。<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">事务的传播性一般用在事务嵌套的场景，比如一个事务方法里面调用了另外一个事务方法，那么两个方法是各自作为独立的方法提交还是内层的事务合并到外层的事务一起提交，这就是需要事务传播机制的配置来确定怎么样执行。 <br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">checked <span class="hljs-keyword">exception</span>：指的是编译时异常，该类异常需要本函数必须处理的，用<span class="hljs-keyword">try</span>和catch处理，或者用throws抛出异常，然后交给调用者去处理异常。 <br>runtime <span class="hljs-keyword">exception</span>：指的是运行时异常，该类异常不必须本函数必须处理，当然也可以处理。 <br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thread</span>.</span></span>sleep<span class="hljs-literal">()</span>抛出的InterruptException属于checked <span class="hljs-keyword">exception</span>；IllegalArgumentException属于Runtime <span class="hljs-keyword">exception</span>;<br></code></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">A</span><span class="hljs-operator">.</span>文件分为文本文件和二进制文件，计算机只认识二进制，所以实际上都是二进制的不同解释方式。文本文件是以不同编码格式显示的字符，例如<span class="hljs-variable">Ascii</span>、<span class="hljs-variable">Unicode</span>等，<span class="hljs-variable">window</span>中文本文件的后缀名有<span class="hljs-string">&quot;.txt&quot;</span><span class="hljs-operator">,</span><span class="hljs-string">&quot;.log&quot;</span><span class="hljs-operator">,</span>各种编程语言的源码文件等；二进制文件就是用文本文档打开是看不懂乱码，只要能用文本打开的文件都可以算是文本文件，只是显示的结果不是你想要的，二进制文件只有用特殊的应用才能读懂的文件，例如<span class="hljs-string">&quot;.png&quot;</span><span class="hljs-operator">,</span><span class="hljs-string">&quot;.bmp&quot;</span>等，计算机中大部分的文件还是二进制文件。 <br><span class="hljs-variable">B</span><span class="hljs-operator">.</span><span class="hljs-built_in">File</span>类是对文件整体或者文件属性操作的类，例如创建文件、删除文件、查看文件是否存在等功能，不能操作文件内容；文件内容是用<span class="hljs-variable">IO</span>流操作的。 <br><span class="hljs-built_in">C</span><span class="hljs-operator">.</span>当输入过程中意外到达文件或流的末尾时，抛出<span class="hljs-variable">EOFException</span>异常<span class="hljs-operator">,</span>正常情况下读取到文件末尾时，返回一个特殊值表示文件读取完成，例如<span class="hljs-variable">read</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>返回<span class="hljs-operator">-</span><span class="hljs-number">1</span>表示文件读取完成。 <br><span class="hljs-built_in">D</span><span class="hljs-operator">.</span>上面<span class="hljs-variable">A</span>选项已经说了，不论是文本文件还是二进制文件，在计算机中都是以二进制形式存储的，所以都当做二进制文件读取。<br></code></pre></td></tr></table></figure><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs processing">数组长度在创建时就确定了，要改变数组长度只能重新创建新的数组，将原有数组复制到新的数组之中。这也是<span class="hljs-built_in">ArrayList</span>扩容时候的效率低于LinkedList的原因。<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230609220413734.png" alt="image-20230609220413734"></p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs isbl">下面的方法可用在 <span class="hljs-variable">Servlet</span> 程序中读取 <span class="hljs-variable">HTTP</span> 头。这些方法通过 <span class="hljs-variable">HttpServletRequest</span> 对象可用： <br><span class="hljs-number">1</span>）<span class="hljs-variable">Cookie</span>[] <span class="hljs-function"><span class="hljs-title">getCookies</span>()</span><br>返回一个数组，包含客户端发送该请求的所有的 <span class="hljs-variable">Cookie</span> 对象。<br><span class="hljs-number">2</span>）<span class="hljs-variable"><span class="hljs-class">Object</span></span> <span class="hljs-function"><span class="hljs-title">getAttribute</span>(<span class="hljs-variable">String</span> <span class="hljs-variable">name</span>)</span><br>以对象形式返回已命名属性的值，如果没有给定名称的属性存在，则返回 <span class="hljs-variable"><span class="hljs-literal">null</span></span>。<br><span class="hljs-number">3</span>）<span class="hljs-variable">String</span> <span class="hljs-function"><span class="hljs-title">getHeader</span>(<span class="hljs-variable">String</span> <span class="hljs-variable">name</span>)</span><br>以字符串形式返回指定的请求头的值。<span class="hljs-variable">Cookie</span>也是头的一种；<br><span class="hljs-number">4</span>）<span class="hljs-variable">String</span> <span class="hljs-function"><span class="hljs-title">getParameter</span>(<span class="hljs-variable">String</span> <span class="hljs-variable">name</span>)</span><br>以字符串形式返回请求参数的值，或者如果参数不存在则返回 <span class="hljs-variable"><span class="hljs-literal">null</span></span>。<br></code></pre></td></tr></table></figure><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">HttpServlet容器响应Web客户请求流程如下： <span class="hljs-number">1</span>）Web客户向Servlet容器发出Http请求； <br><span class="hljs-number">2</span>）Servlet容器解析Web客户的Http请求； <br><span class="hljs-number">3</span>）Servlet容器创建一个HttpRequest对象，在这个对象中封装Http请求信息； <br><span class="hljs-number">4</span>）Servlet容器创建一个HttpResponse对象； <br><span class="hljs-number">5</span>）Servlet容器调用HttpServlet的service方法，这个方法中会根据request的<span class="hljs-keyword">Method</span>来判断具体是执行<span class="hljs-title function_">doGet</span>还是<span class="hljs-title function_">doPost</span>，把<span class="hljs-title function_">HttpRequest</span>和<span class="hljs-title function_">HttpResponse</span>对象作为<span class="hljs-title function_">service</span>方法的参数传给<span class="hljs-title function_">HttpServlet</span>对象； <br>6）<span class="hljs-title function_">HttpServlet</span>调用<span class="hljs-title function_">HttpRequest</span>的有关方法，获取<span class="hljs-title function_">HTTP</span>请求信息； <br>7）<span class="hljs-title function_">HttpServlet</span>调用<span class="hljs-title function_">HttpResponse</span>的有关方法，生成响应数据； <br>8）<span class="hljs-title function_">Servlet</span>容器把<span class="hljs-title function_">HttpServlet</span>的响应结果传给<span class="hljs-title function_">Web</span>客户。<br><br><span class="hljs-title function_">doGet</span><span class="hljs-params">()</span> 或 <span class="hljs-title function_">doPost</span><span class="hljs-params">()</span> 是创建<span class="hljs-title function_">HttpServlet</span>时需要覆盖的方法.<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">通过ServletConfig接口的get<span class="hljs-constructor">InitParameter(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.String <span class="hljs-params">name</span>)</span>方法 ServletContext对象：servlet容器在启动时会加载web应用，并为每个web应用创建唯一的servlet context对象，可以把ServletContext看成是一个Web应用的服务器端组件的共享内存，在ServletContext中可以存放共享数据。ServletContext对象是真正的一个全局对象，凡是web容器中的Servlet都可以访问。    整个web应用只有唯一的一个ServletContext对象 servletConfig对象：用于封装servlet的配置信息。从一个servlet被实例化后，对任何客户端在任何时候访问有效，但仅对servlet自身有效，一个servlet的ServletConfig对象不能被另一个servlet访问。 <br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">常见的代码优化技术：复写传播（代码外提）、删除死代码、强度削弱、归纳变量删除 <br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">set</span>Daemon（）可以把线程设置为守护线程（也叫精灵线程，后台线程），它必须在线程启动前调用。<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230609220455513.png" alt="image-20230609220455513"></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">java</span>源文件的后缀名是.java。源文件通过<span class="hljs-keyword">jvm</span>虚拟机编译后会生成二进制字节码文件，后缀是.<span class="hljs-keyword">class</span><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">java的基本编程单元是类，基本存储单元是变量。<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230609220519656.png" alt="image-20230609220519656"></p><p><img src="https://uploadfiles.nowcoder.com/images/20190921/242025553_1569075361009_BA9669C5826A238ACEC0BD86755FA5DB" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>黄金矿工怀旧版-开发文档</title>
    <link href="/blog/2023/04/09/%E9%BB%84%E9%87%91%E7%9F%BF%E5%B7%A5%E6%80%80%E6%97%A7%E7%89%88-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <url>/blog/2023/04/09/%E9%BB%84%E9%87%91%E7%9F%BF%E5%B7%A5%E6%80%80%E6%97%A7%E7%89%88-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="欢迎阅读黄金矿工怀旧版的开发文档"><a href="#欢迎阅读黄金矿工怀旧版的开发文档" class="headerlink" title="欢迎阅读黄金矿工怀旧版的开发文档"></a>欢迎阅读黄金矿工怀旧版的开发文档</h2><ul><li><h5 id="这个游戏是在3月份初着手的，慢悠悠写了半个月功能就差不多实现了"><a href="#这个游戏是在3月份初着手的，慢悠悠写了半个月功能就差不多实现了" class="headerlink" title="这个游戏是在3月份初着手的，慢悠悠写了半个月功能就差不多实现了"></a>这个游戏是在3月份初着手的，慢悠悠写了半个月功能就差不多实现了</h5></li><li><h5 id="到了3月下旬又想起这玩意儿了，赶工优化了一下游戏画面，增加了关卡跳转时的3秒倒计时效果，匆匆打包好了，也是非常有成就感的"><a href="#到了3月下旬又想起这玩意儿了，赶工优化了一下游戏画面，增加了关卡跳转时的3秒倒计时效果，匆匆打包好了，也是非常有成就感的" class="headerlink" title="到了3月下旬又想起这玩意儿了，赶工优化了一下游戏画面，增加了关卡跳转时的3秒倒计时效果，匆匆打包好了，也是非常有成就感的"></a>到了3月下旬又想起这玩意儿了，赶工优化了一下游戏画面，增加了关卡跳转时的3秒倒计时效果，匆匆打包好了，也是非常有成就感的</h5></li><li><h5 id="那么这篇文档当然不能够再现完整的开发流程了，只能是简单审视下整个项目开发完毕之后的逻辑实现"><a href="#那么这篇文档当然不能够再现完整的开发流程了，只能是简单审视下整个项目开发完毕之后的逻辑实现" class="headerlink" title="那么这篇文档当然不能够再现完整的开发流程了，只能是简单审视下整个项目开发完毕之后的逻辑实现"></a>那么这篇文档当然不能够再现完整的开发流程了，只能是简单审视下整个项目开发完毕之后的逻辑实现</h5></li><li><h5 id="废话不多说，开始吧"><a href="#废话不多说，开始吧" class="headerlink" title="废话不多说，开始吧"></a>废话不多说，开始吧</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>开发经验</tag>
      
      <tag>Game</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java泛型</title>
    <link href="/blog/2023/04/09/Java%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <url>/blog/2023/04/09/Java%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h4 id="这一批代码比较全面的展示了泛型的各种使用场景了"><a href="#这一批代码比较全面的展示了泛型的各种使用场景了" class="headerlink" title="这一批代码比较全面的展示了泛型的各种使用场景了"></a>这一批代码比较全面的展示了泛型的各种使用场景了</h4><ul><li><h5 id="泛型接口-EndA"><a href="#泛型接口-EndA" class="headerlink" title="泛型接口 EndA"></a>泛型接口 EndA<T></h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> entity.c;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">EndA</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">fun_1</span><span class="hljs-params">(T t)</span>;<br><br>    &lt;R&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">fun_2</span><span class="hljs-params">(T t, R r)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="泛型类-EndB"><a href="#泛型类-EndB" class="headerlink" title="泛型类 EndB"></a>泛型类 EndB<T></h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> entity.c;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/9 21:51</span><br><span class="hljs-comment"> * Function:</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EndB</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">public</span> &lt;R&gt; EndB(T t, R r) &#123;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="泛型类-EndC-lt-T-E-gt-extends-EndB-implements-EndA"><a href="#泛型类-EndC-lt-T-E-gt-extends-EndB-implements-EndA" class="headerlink" title="泛型类 EndC&lt;T, E&gt; extends EndB implements EndA"></a>泛型类 EndC&lt;T, E&gt; extends EndB<T> implements EndA<E></h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> entity.c;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/9 21:39</span><br><span class="hljs-comment"> * Function:</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EndC</span>&lt;T, E&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title class_">EndB</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">EndA</span>&lt;E&gt; &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fun_1</span><span class="hljs-params">(E t)</span> &#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;R&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">fun_2</span><span class="hljs-params">(E e, R r)</span> &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> &lt;R&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">fun_3</span><span class="hljs-params">(T t, R r)</span> &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> &lt;R&gt; EndC(T t, R r) &#123;<br>        <span class="hljs-built_in">super</span>(t, r);<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="泛型的使用"><a href="#泛型的使用" class="headerlink" title="泛型的使用"></a>泛型的使用</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> entity.c;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/9 21:50</span><br><span class="hljs-comment"> * Function: 这一批代码比较全面的展示了泛型的各种使用场景了</span><br><span class="hljs-comment"> * 接下来介绍泛型使用中的诸多语法和注意事项:</span><br><span class="hljs-comment"> * 泛型类, 泛型接口, 泛型类</span><br><span class="hljs-comment"> * 定义泛型接口 EndA, 内含抽象方法 fun_1 fun_2待实现;</span><br><span class="hljs-comment"> * 定义泛型类 EndB, 内含构造器</span><br><span class="hljs-comment"> * 定义泛型类 EndC, 继承EndB, 实现EndA</span><br><span class="hljs-comment"> * 注意:</span><br><span class="hljs-comment"> * 泛型类 EndC实现了 fun_1, fun_2方法, 自定义了 fun_3方法 和 有参构造器</span><br><span class="hljs-comment"> * 实例化泛型类, 要声明泛型类中的泛型</span><br><span class="hljs-comment"> * EndB 声明 T, EndC 声明 T, E</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Result</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        EndB&lt;String&gt; endB = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EndB</span>&lt;&gt;(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">18</span>);<br><br>        EndC&lt;String, Double&gt; EndC_1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EndC</span>&lt;&gt;(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">10</span>);<br><br>        EndC&lt;Integer, Double&gt; EndC_2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EndC</span>&lt;&gt;(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>基础知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>技术</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>伙伴匹配-开发文档</title>
    <link href="/blog/2023/03/24/%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <url>/blog/2023/03/24/%E4%BC%99%E4%BC%B4%E5%8C%B9%E9%85%8D-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="前端项目初始化"><a href="#前端项目初始化" class="headerlink" title="前端项目初始化"></a>前端项目初始化</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Vue 3 开发框架（提高页面开发的效率）<br><br>Vant UI（基于 Vue 的移动端组件库）（React 版 Zent）<br><br>Vite 2（打包工具，快！）<br><br>Nginx 来单机部署<br></code></pre></td></tr></table></figure><ul><li><h4 id="使用vite快速搭建一个项目-跟着文档操作就好了"><a href="#使用vite快速搭建一个项目-跟着文档操作就好了" class="headerlink" title="使用vite快速搭建一个项目(跟着文档操作就好了)"></a>使用vite快速搭建一个项目(跟着文档操作就好了)</h4></li><li><h5 id="在指定目录下执行该命令-初始化项目"><a href="#在指定目录下执行该命令-初始化项目" class="headerlink" title="在指定目录下执行该命令, 初始化项目"></a>在指定目录下执行该命令, 初始化项目</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">yarn create vite<br></code></pre></td></tr></table></figure><ul><li><h5 id="package-json下的文件"><a href="#package-json下的文件" class="headerlink" title="package.json下的文件"></a>package.json下的文件</h5></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;partnermatch&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;private&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;module&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vite&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vue-tsc &amp;&amp; vite build&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;preview&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vite preview&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;vant&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.1.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.2.47&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@vitejs/plugin-vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.1.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.9.3&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;unplugin-vue-components&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.24.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vite&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.2.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue-tsc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.2.0&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h5></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/svg+xml&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/vite.svg&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Vite + Vue + TS<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/src/main.ts&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./style.css&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>import HelloWorld from &quot;./components/HelloWorld.vue&quot;;<br>&lt;/script&gt;<br><br>&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;a href=&quot;https://vitejs.dev&quot; target=&quot;_blank&quot;&gt;<br>      &lt;img src=&quot;/vite.svg&quot; class=&quot;logo&quot; alt=&quot;Vite logo&quot; /&gt;<br>    &lt;/a&gt;<br>    &lt;a href=&quot;https://vuejs.org/&quot; target=&quot;_blank&quot;&gt;<br>      &lt;img src=&quot;./assets/vue.svg&quot; class=&quot;logo vue&quot; alt=&quot;Vue logo&quot; /&gt;<br>    &lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;HelloWorld msg=&quot;Vite + Vue&quot; /&gt;<br><br>  &lt;van-button type=&quot;primary&quot; /&gt;<br>&lt;/template&gt;<br><br>&lt;style scoped&gt;<br>.logo &#123;<br>  height: 6em;<br>  padding: 1.5em;<br>  will-change: filter;<br>  transition: filter 300ms;<br>&#125;<br>.logo:hover &#123;<br>  filter: drop-shadow(0 0 2em #646cffaa);<br>&#125;<br>.logo.vue:hover &#123;<br>  filter: drop-shadow(0 0 2em #42b883aa);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5></li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> dev<br></code></pre></td></tr></table></figure><ul><li><h5 id="项目正常启动-接下来就是引入组件-开发我们自己的页面了-详见官方文档"><a href="#项目正常启动-接下来就是引入组件-开发我们自己的页面了-详见官方文档" class="headerlink" title="项目正常启动, 接下来就是引入组件, 开发我们自己的页面了(详见官方文档)"></a>项目正常启动, 接下来就是引入组件, 开发我们自己的页面了(详见官方文档)</h5></li></ul><ul><li><h5 id="安装最新版vant"><a href="#安装最新版vant" class="headerlink" title="安装最新版vant"></a>安装最新版vant</h5></li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i vant<br></code></pre></td></tr></table></figure><ul><li><h5 id="引入vant组件-这里我们使用按需引入的方法"><a href="#引入vant组件-这里我们使用按需引入的方法" class="headerlink" title="引入vant组件(这里我们使用按需引入的方法)"></a>引入vant组件(这里我们使用按需引入的方法)</h5></li></ul><ul><li><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 通过 yarn 安装</span><br>yarn <span class="hljs-built_in">add</span> unplugin-vue-components -D<br></code></pre></td></tr></table></figure><ul><li><h5 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h5></li></ul><ul><li><h5 id="在vite-config-js下配置插件"><a href="#在vite-config-js下配置插件" class="headerlink" title="在vite.config.js下配置插件"></a>在vite.config.js下配置插件</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/vite&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">VantResolver</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/resolvers&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>(),<br>    <span class="hljs-title class_">Components</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">VantResolver</span>()],<br>    &#125;),<br>  ],<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h5></li></ul><ul><li><h5 id="在App-vue中引入组件"><a href="#在App-vue中引入组件" class="headerlink" title="在App.vue中引入组件"></a>在App.vue中引入组件</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;van-button type=&quot;primary&quot;&gt;主要按钮&lt;/van-button&gt;<br>  &lt;van-button type=&quot;success&quot;&gt;成功按钮&lt;/van-button&gt;<br>  &lt;van-button type=&quot;default&quot;&gt;默认按钮&lt;/van-button&gt;<br>  &lt;van-button type=&quot;warning&quot;&gt;警告按钮&lt;/van-button&gt;<br>  &lt;van-button type=&quot;danger&quot;&gt;危险按钮&lt;/van-button&gt;<br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="在main-js中导入相应的库-因为我们使用按需引入的方法来引入组件-所以这些库得自己导"><a href="#在main-js中导入相应的库-因为我们使用按需引入的方法来引入组件-所以这些库得自己导" class="headerlink" title="在main.js中导入相应的库(因为我们使用按需引入的方法来引入组件, 所以这些库得自己导)"></a>在main.js中导入相应的库(因为我们使用按需引入的方法来引入组件, 所以这些库得自己导)</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Button</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./style.css&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="完成-页面已经成功被我们自定义了"><a href="#完成-页面已经成功被我们自定义了" class="headerlink" title="完成! 页面已经成功被我们自定义了"></a>完成! 页面已经成功被我们自定义了</h5></li><li><h5 id="接下来就是快速搭建我们自己的页面了"><a href="#接下来就是快速搭建我们自己的页面了" class="headerlink" title="接下来就是快速搭建我们自己的页面了"></a>接下来就是快速搭建我们自己的页面了</h5></li><li><h5 id="layouts-BasicLayout-vue"><a href="#layouts-BasicLayout-vue" class="headerlink" title="/layouts/BasicLayout.vue"></a>/layouts/BasicLayout.vue</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- 导航栏 --&gt;<br>  &lt;van-nav-bar<br>    title=&quot;标题&quot;<br>    fixed<br>    left-arrow<br>    @click-left=&quot;onClickLeft&quot;<br>    @click-right=&quot;onClickRight&quot;<br>  &gt;<br>    &lt;template #right&gt;<br>      &lt;van-icon name=&quot;search&quot; size=&quot;18&quot; /&gt;<br>    &lt;/template&gt;<br>  &lt;/van-nav-bar&gt;<br><br>  &lt;!-- 内容 --&gt;<br>  &lt;div id=&quot;content&quot;&gt;<br>    &lt;template v-if=&quot;active === &#x27;index&#x27;&quot;&gt;<br>      &lt;Index /&gt;<br>    &lt;/template&gt;<br>    &lt;template v-if=&quot;active === &#x27;team&#x27;&quot;&gt;<br>      &lt;Team /&gt;<br>    &lt;/template&gt;<br>  &lt;/div&gt;<br><br>  &lt;slot&gt; 这里是内容 &lt;/slot&gt;<br>  &lt;!-- 标签页 --&gt;<br>  &lt;van-tabbar v-model=&quot;active&quot; @change=&quot;onChange&quot;&gt;<br>    &lt;van-tabbar-item icon=&quot;home-o&quot; name=&quot;index&quot;&gt;主页&lt;/van-tabbar-item&gt;<br>    &lt;van-tabbar-item icon=&quot;search&quot; name=&quot;team&quot;&gt;队伍&lt;/van-tabbar-item&gt;<br>    &lt;van-tabbar-item icon=&quot;friends-o&quot; name=&quot;user&quot;&gt;个人&lt;/van-tabbar-item&gt;<br>  &lt;/van-tabbar&gt;<br>&lt;/template&gt;<br><br>&lt;!-- 脚本 --&gt;<br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &quot;vue&quot;;<br><br>import Index from &quot;./../pages/Index.vue&quot;;<br>import Team from &quot;./../pages/Team.vue&quot;;<br><br>const onClickLeft = () =&gt; alert(&quot;左&quot;);<br>const onClickRight = () =&gt; alert(&quot;右&quot;);<br><br>const active = ref(&quot;index&quot;);<br>// const onChange = (index) =&gt; alert(`$&#123;index&#125;`);<br>&lt;/script&gt;<br><br>&lt;!-- 样式 --&gt;<br>&lt;style&gt;&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="注意vant组件的导入和vue的引入"><a href="#注意vant组件的导入和vue的引入" class="headerlink" title="注意vant组件的导入和vue的引入"></a>注意vant组件的导入和vue的引入</h5></li><li><h5 id="开发主页和队伍页-pages-Index-vue-pages-Team-vue"><a href="#开发主页和队伍页-pages-Index-vue-pages-Team-vue" class="headerlink" title="开发主页和队伍页 (/pages/Index.vue    /pages/Team.vue)"></a>开发主页和队伍页 (/pages/Index.vue    /pages/Team.vue)</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br><br> &lt;slot&gt; 主页 &lt;/slot&gt;<br><br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br><br> &lt;slot&gt; 队伍 &lt;/slot&gt;<br><br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><h1 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h1><ul><li><h5 id="设计标签表"><a href="#设计标签表" class="headerlink" title="设计标签表"></a>设计标签表</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tag<br>(<br>    id          <span class="hljs-type">bigint</span> auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    tag_name    <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                                    <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;标签名称&#x27;</span>,<br>    userId      <span class="hljs-type">bigint</span>                                          <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户id&#x27;</span>,<br>    is_Parent   tinyint                                         <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否为父标签 0 - 不是 1 - 是&#x27;</span>,<br>    parentId    <span class="hljs-type">bigint</span>                                          <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;父标签id&#x27;</span>,<br>    create_time datetime              <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time datetime              <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    is_delete   tinyint               <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除 0 - 正常&#x27;</span><br>) comment <span class="hljs-string">&#x27;标签表&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="用户表添加tags字段"><a href="#用户表添加tags字段" class="headerlink" title="用户表添加tags字段"></a>用户表添加tags字段</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">user</span><br>(<br>    id            <span class="hljs-type">bigint</span>                                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    user_account  <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    username      <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;昵称&#x27;</span>,<br>    user_password <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;密码&#x27;</span>,<br>    avatar_url    <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;头像&#x27;</span>,<br>    gender        <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;0&#x27;</span>               <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    phone         <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;电话&#x27;</span>,<br>    email         <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    user_status   <span class="hljs-type">int</span>          <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;状态 0 - 正常&#x27;</span>,<br>    create_time   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    is_delete     tinyint      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除 0 - 正常&#x27;</span>,<br>    user_role     <span class="hljs-type">int</span>(<span class="hljs-number">1</span>)       <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户权限 0 - 管理员 1 - 普通用户&#x27;</span>,<br>    planet_code   <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;星球编号&#x27;</span><br>    tags          <span class="hljs-type">varchar</span>(<span class="hljs-number">1024</span>)     <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;标签&#x27;</span><br>)<br>    comment <span class="hljs-string">&#x27;用户&#x27;</span>;<br></code></pre></td></tr></table></figure><h1 id="后端接口开发"><a href="#后端接口开发" class="headerlink" title="后端接口开发"></a>后端接口开发</h1><h2 id="根据标签查询"><a href="#根据标签查询" class="headerlink" title="根据标签查询"></a>根据标签查询</h2><ul><li><h5 id="初始化后端环境"><a href="#初始化后端环境" class="headerlink" title="初始化后端环境"></a>初始化后端环境</h5></li></ul><ul><li><h5 id="开发根据标签查询符合条件用户的方法-service层"><a href="#开发根据标签查询符合条件用户的方法-service层" class="headerlink" title="开发根据标签查询符合条件用户的方法 (service层)"></a>开发根据标签查询符合条件用户的方法 (service层)</h5></li><li><h5 id="在内存中判断用户是个否拥有选中的标签"><a href="#在内存中判断用户是个否拥有选中的标签" class="headerlink" title="在内存中判断用户是个否拥有选中的标签"></a>在内存中判断用户是个否拥有选中的标签</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据标签查询用户(在内存中判断用户是个否拥有选中的标签)</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> tagNameList 打上的标签列表</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 查询到的用户</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">searchUserByTags</span><span class="hljs-params">(List&lt;String&gt; tagNameList)</span> &#123;<br>    <span class="hljs-comment">// 1.默认查询全部用户</span><br>    QueryWrapper&lt;User&gt; uqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    List&lt;User&gt; userList = userMapper.selectList(uqw);<br><br>    <span class="hljs-type">Gson</span> <span class="hljs-variable">gson</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br>    <span class="hljs-comment">// 2.从查询到的用户中, 根据标签筛选出符合的用户, 组合成列表并返回</span><br>    <span class="hljs-keyword">return</span> userList.stream().filter(user -&gt; &#123;<br>        <span class="hljs-comment">// 2.1.获取用户标签</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">tagsStr</span> <span class="hljs-operator">=</span> user.getTags();<br>        <span class="hljs-comment">// 2.1.校验是否有标签</span><br>        <span class="hljs-keyword">if</span> (StringUtils.isBlank(tagsStr))<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        <span class="hljs-comment">// 2.2.将标签从json字符串转换为List集合</span><br>        List&lt;String&gt; tempTagsNameSet = gson.fromJson(tagsStr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>        &#125;.getType());<br>        <span class="hljs-comment">// 2.3.筛出标签不符合的用户</span><br>        <span class="hljs-keyword">for</span> (String tagName : tagNameList) &#123;<br>            <span class="hljs-keyword">if</span> (!tempTagsNameSet.contains(tagName))<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-comment">// 2.4.返回符合用户</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;).map(<span class="hljs-built_in">this</span>::getSafetyUser).collect(Collectors.toList());<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="SQL查询数据库"><a href="#SQL查询数据库" class="headerlink" title="SQL查询数据库"></a>SQL查询数据库</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据标签查询用户(SQL查询数据库)</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> tagNameList 打上的标签列表</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 查询到的用户</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Deprecated</span><br><span class="hljs-comment">//    @Override</span><br>    <span class="hljs-keyword">private</span> List&lt;User&gt; <span class="hljs-title function_">searchUserByTags2</span><span class="hljs-params">(List&lt;String&gt; tagNameList)</span> &#123;<br>        <span class="hljs-comment">// 1.设置查询条件</span><br>        QueryWrapper&lt;User&gt; uqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-comment">// where tags like &quot;...&quot; and like &quot;...&quot; and ......</span><br>        <span class="hljs-keyword">for</span> (String tagName : tagNameList) &#123;<br>            uqw.like(<span class="hljs-string">&quot;tags&quot;</span>, tagName);<br>        &#125;<br>        <span class="hljs-comment">// 2.查询到符合标签的用户</span><br>        List&lt;User&gt; userList = userMapper.selectList(uqw);<br>        <span class="hljs-comment">// 3.用户信息脱敏</span><br>        <span class="hljs-keyword">return</span> userList.stream().map(<span class="hljs-built_in">this</span>::getSafetyUser).collect(Collectors.toList());<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="数据库表中添加几条测试数据"><a href="#数据库表中添加几条测试数据" class="headerlink" title="数据库表中添加几条测试数据"></a>数据库表中添加几条测试数据</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230326091433304.png" alt="image-20230326091433304"></p><ul><li><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImplTest</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">searchUserByTags</span><span class="hljs-params">()</span> &#123;<br>        List&lt;String&gt; tagNameList = Arrays.asList(<span class="hljs-string">&quot;java&quot;</span>, <span class="hljs-string">&quot;python&quot;</span>);<br>        List&lt;User&gt; userList = userService.searchUserByTags(tagNameList);<br>        Assertions.assertNotNull(userList);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="该功能开发完成"><a href="#该功能开发完成" class="headerlink" title="该功能开发完成"></a>该功能开发完成</h5></li></ul><h1 id="前端整合路由"><a href="#前端整合路由" class="headerlink" title="前端整合路由"></a>前端整合路由</h1><ul><li><h5 id="记得之前开发好的前端页面吧-当时实现跳转的方法是这样的"><a href="#记得之前开发好的前端页面吧-当时实现跳转的方法是这样的" class="headerlink" title="记得之前开发好的前端页面吧, 当时实现跳转的方法是这样的"></a>记得之前开发好的前端页面吧, 当时实现跳转的方法是这样的</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue"> &lt;!-- 内容 --&gt;<br>&lt;div id=&quot;content&quot;&gt;<br>   &lt;template v-if=&quot;active === &#x27;index&#x27;&quot;&gt;<br>     &lt;Index /&gt;<br>   &lt;/template&gt;<br>   &lt;template v-if=&quot;active === &#x27;team&#x27;&quot;&gt;<br>     &lt;Team /&gt;<br>   &lt;/template&gt;<br> &lt;/div&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 标签页 --&gt;<br><br> &lt;van-tabbar v-model=&quot;active&quot;&gt;<br>  &lt;van-tabbar-item to=&quot;/&quot; icon=&quot;home-o&quot; name=&quot;index&quot;&gt;主页&lt;/van-tabbar-item&gt;<br>  &lt;van-tabbar-item to=&quot;/team&quot; icon=&quot;search&quot; name=&quot;team&quot;&gt;队伍&lt;/van-tabbar-item&gt;<br>  &lt;van-tabbar-item to=&quot;/user&quot; icon=&quot;friends-o&quot; name=&quot;user&quot;<br>   \&gt;个人&lt;/van-tabbar-item&gt;<br>   &lt;/van-tabbar&gt;\<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 默认选中页</span><br><span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;index&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="真他妈原始-我们要整点高级的-gt-使用路由跳转的方式实现页面跳转"><a href="#真他妈原始-我们要整点高级的-gt-使用路由跳转的方式实现页面跳转" class="headerlink" title="真他妈原始, 我们要整点高级的 ==&gt; 使用路由跳转的方式实现页面跳转"></a>真他妈原始, 我们要整点高级的 ==&gt; 使用路由跳转的方式实现页面跳转</h5></li><li><h5 id="引入Vue-Router组件"><a href="#引入Vue-Router组件" class="headerlink" title="引入Vue-Router组件"></a>引入Vue-Router组件</h5></li></ul><ul><li><h5 id="看官方文档-就好了"><a href="#看官方文档-就好了" class="headerlink" title="看官方文档, 就好了"></a>看官方文档, 就好了</h5></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 定义路由组件.</span><br><span class="hljs-comment">// 也可以从其他文件导入</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Home</span> = &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;Home&lt;/div&gt;&#x27;</span> &#125;<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">About</span> = &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;About&lt;/div&gt;&#x27;</span> &#125;<br><br><span class="hljs-comment">// 2. 定义一些路由</span><br><span class="hljs-comment">// 每个路由都需要映射到一个组件。</span><br><span class="hljs-comment">// 我们后面再讨论嵌套路由。</span><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">Home</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">About</span> &#125;,<br>]<br><br><span class="hljs-comment">// 3. 创建路由实例并传递 `routes` 配置</span><br><span class="hljs-comment">// 你可以在这里输入更多的配置，但我们在这里</span><br><span class="hljs-comment">// 暂时保持简单</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-title class_">VueRouter</span>.<span class="hljs-title function_">createRouter</span>(&#123;<br>  <span class="hljs-comment">// 4. 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。</span><br>  <span class="hljs-attr">history</span>: <span class="hljs-title class_">VueRouter</span>.<span class="hljs-title function_">createWebHashHistory</span>(),<br>  routes, <span class="hljs-comment">// `routes: routes` 的缩写</span><br>&#125;)<br><br><span class="hljs-comment">// 5. 创建并挂载根实例</span><br><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;&#125;)<br><span class="hljs-comment">//确保 _use_ 路由实例使</span><br><span class="hljs-comment">//整个应用支持路由。</span><br>app.<span class="hljs-title function_">use</span>(router)<br><br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br><br><span class="hljs-comment">// 现在，应用已经启动了！</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="我们稍微修改一下-实现我们自定义页面的路由跳转"><a href="#我们稍微修改一下-实现我们自定义页面的路由跳转" class="headerlink" title="我们稍微修改一下, 实现我们自定义页面的路由跳转"></a>我们稍微修改一下, 实现我们自定义页面的路由跳转</h5></li><li><h5 id="把路由的定义封装到src-config-route-ts下-在main文件中引入就可以了"><a href="#把路由的定义封装到src-config-route-ts下-在main文件中引入就可以了" class="headerlink" title="把路由的定义封装到src/config/route.ts下, 在main文件中引入就可以了"></a>把路由的定义封装到src/config/route.ts下, 在main文件中引入就可以了</h5></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 定义路由组件.</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">IndexPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/IndexPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/TeamPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/UserPage.vue&quot;</span>;<br><br><span class="hljs-comment">// 2. 定义一些路由</span><br><span class="hljs-comment">// 每个路由都需要映射到一个组件。</span><br><span class="hljs-comment">// 我们后面再讨论嵌套路由。</span><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">IndexPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserPage</span> &#125;,<br>];<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> routes;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这是我们的main-ts文件了"><a href="#这是我们的main-ts文件了" class="headerlink" title="这是我们的main.ts文件了"></a>这是我们的main.ts文件了</h5></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Button</span>, <span class="hljs-title class_">Icon</span>, <span class="hljs-title class_">NavBar</span>, <span class="hljs-title class_">Tabbar</span>, <span class="hljs-title class_">TabbarItem</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> routes <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./config/route&quot;</span>;<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Icon</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NavBar</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabbar</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabbarItem</span>);<br><br><span class="hljs-comment">// 3. 创建路由实例并传递 `routes` 配置</span><br><span class="hljs-comment">// 你可以在这里输入更多的配置，但我们在这里</span><br><span class="hljs-comment">// 暂时保持简单</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-title class_">VueRouter</span>.<span class="hljs-title function_">createRouter</span>(&#123;<br>  <span class="hljs-comment">// 4. 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。</span><br>  <span class="hljs-attr">history</span>: <span class="hljs-title class_">VueRouter</span>.<span class="hljs-title function_">createWebHashHistory</span>(),<br>  <span class="hljs-attr">routes</span>: routes, <span class="hljs-comment">// `routes: routes` 的缩写</span><br>&#125;);<br><span class="hljs-comment">// 5. 创建并挂载根实例</span><br><span class="hljs-comment">//确保 _use_ 路由实例使</span><br><span class="hljs-comment">//整个应用支持路由。</span><br>app.<span class="hljs-title function_">use</span>(router);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里我们的路由就配置好了-总体来说还是很简单的"><a href="#这里我们的路由就配置好了-总体来说还是很简单的" class="headerlink" title="这里我们的路由就配置好了, 总体来说还是很简单的"></a>这里我们的路由就配置好了, 总体来说还是很简单的</h5></li><li><h5 id="浅浅尝试一下用法吧-尝完就可以删了"><a href="#浅浅尝试一下用法吧-尝完就可以删了" class="headerlink" title="浅浅尝试一下用法吧 (尝完就可以删了)"></a>浅浅尝试一下用法吧 (尝完就可以删了)</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;content&quot;&gt;<br>  &lt;router-view /&gt;<br>&lt;/div&gt;<br><br>&lt;router-link to=&quot;/&quot;&gt;Go to Home&lt;/router-link&gt;<br>&lt;router-link to=&quot;/about&quot;&gt;Go to About&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="如上-这样就能够使用路由实现页面跳转了-非常方便"><a href="#如上-这样就能够使用路由实现页面跳转了-非常方便" class="headerlink" title="如上, 这样就能够使用路由实现页面跳转了, 非常方便!"></a>如上, 这样就能够使用路由实现页面跳转了, 非常方便!</h5></li><li><h5 id="幸运的是-我们的van-tabbar组件也内置了路由跳转-改写为以下形式"><a href="#幸运的是-我们的van-tabbar组件也内置了路由跳转-改写为以下形式" class="headerlink" title="幸运的是, 我们的van-tabbar组件也内置了路由跳转, 改写为以下形式:"></a>幸运的是, 我们的van-tabbar组件也内置了路由跳转, 改写为以下形式:</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 标签页 --&gt;<br> &lt;van-tabbar route&gt;<br>   &lt;van-tabbar-item to=&quot;/&quot; icon=&quot;home-o&quot; name=&quot;index&quot;&gt;主页&lt;/van-tabbar-item&gt;<br>   &lt;van-tabbar-item to=&quot;/team&quot; icon=&quot;search&quot; name=&quot;team&quot;&gt;队伍&lt;/van-tabbar-item&gt;<br>   &lt;van-tabbar-item to=&quot;/user&quot; icon=&quot;friends-o&quot; name=&quot;user&quot;<br>     &gt;个人&lt;/van-tabbar-item<br>   &gt;<br> &lt;/van-tabbar&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="路由整合完成了呢"><a href="#路由整合完成了呢" class="headerlink" title="路由整合完成了呢"></a>路由整合完成了呢</h5></li><li><h5 id="差点忘记了-这里有个非常恶心的BUG-我配完vue-router配置后-启动服务显示页面为空白-怎么搞都没反应-结果把自定义路由那儿的-“-“-删了改成-“-index”后-就他妈有页面了-我他妈给改回去后-既然能正常显示了-真奶奶的无语-还好老子聪明机智哈哈哈-差点栽这儿出不来了"><a href="#差点忘记了-这里有个非常恶心的BUG-我配完vue-router配置后-启动服务显示页面为空白-怎么搞都没反应-结果把自定义路由那儿的-“-“-删了改成-“-index”后-就他妈有页面了-我他妈给改回去后-既然能正常显示了-真奶奶的无语-还好老子聪明机智哈哈哈-差点栽这儿出不来了" class="headerlink" title="差点忘记了, 这里有个非常恶心的BUG, 我配完vue-router配置后, 启动服务显示页面为空白, 怎么搞都没反应, 结果把自定义路由那儿的 “/“ 删了改成 “/index”后, 就他妈有页面了, 我他妈给改回去后, 既然能正常显示了?!真奶奶的无语, 还好老子聪明机智哈哈哈, 差点栽这儿出不来了"></a>差点忘记了, 这里有个非常恶心的BUG, 我配完vue-router配置后, 启动服务显示页面为空白, 怎么搞都没反应, 结果把自定义路由那儿的 “/“ 删了改成 “/index”后, 就他妈有页面了, 我他妈给改回去后, 既然能正常显示了?!真奶奶的无语, 还好老子聪明机智哈哈哈, 差点栽这儿出不来了</h5></li></ul><h1 id="前端页面开发"><a href="#前端页面开发" class="headerlink" title="前端页面开发"></a>前端页面开发</h1><ul><li><strong>路由整合完毕之后，接下来就要开发我们的搜索页面了：</strong></li></ul><h2 id="搜索页面"><a href="#搜索页面" class="headerlink" title="搜索页面"></a>搜索页面</h2><ul><li><strong>开发页面之前，我们先把搜索页面的路由配置好吧 （src/config/route.ts）</strong></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 2. 定义一些路由</span><br><span class="hljs-comment">// 每个路由都需要映射到一个组件。</span><br><span class="hljs-comment">// 我们后面再讨论嵌套路由。</span><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">IndexPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/search&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">SearchPage</span> &#125;,<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserEditPage</span> &#125;,<br>];<br></code></pre></td></tr></table></figure><ul><li><p><strong>这里顺带把后面的用户信息页和用户信息修改页路由页配置好了，后面就不涉及了</strong></p></li><li><h5 id="点击导航栏的搜索符号跳转到搜索页面"><a href="#点击导航栏的搜索符号跳转到搜索页面" class="headerlink" title="点击导航栏的搜索符号跳转到搜索页面"></a>点击导航栏的搜索符号跳转到搜索页面</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickRight</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/search&quot;</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><strong>去找到合适的组件，完成页面开发</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索栏 --&gt;<br> &lt;form action=&quot;/&quot;&gt;<br>   &lt;van-search<br>     v-model=&quot;searchText&quot;<br>     show-action<br>     placeholder=&quot;请输入搜索关键词&quot;<br>     @search=&quot;onSearch&quot;<br>     @cancel=&quot;onCancel&quot;<br>   /&gt;<br> &lt;/form&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 分割线 --&gt;<br>  &lt;van-divider content-position=&quot;left&quot;&gt;已选标签&lt;/van-divider&gt;  <br>  &lt;van-divider content-position=&quot;right&quot;&gt;可选标签&lt;/van-divider&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 选中的标签  layout布局 --&gt;<br>  &lt;van-row gutter=&quot;20&quot;&gt;<br>    &lt;van-col v-for=&quot;tag in activeIds&quot;&gt;<br>      &lt;van-tag closeable size=&quot;medium&quot; type=&quot;primary&quot; @close=&quot;close&quot;&gt;<br>        &#123;&#123; tag &#125;&#125;<br>      &lt;/van-tag&gt;<br>    &lt;/van-col&gt;<br>  &lt;/van-row&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 标签列表 --&gt;<br>  &lt;van-tree-select<br>    v-model:active-id=&quot;activeIds&quot;<br>    v-model:main-active-index=&quot;activeIndex&quot;<br>    :items=&quot;tagList&quot;<br>  /&gt;<br></code></pre></td></tr></table></figure><ul><li><strong>在脚本里编写一些逻辑，最终达成了：</strong></li></ul><ol><li><h5 id="搜索栏可以筛选标签列表里的标签"><a href="#搜索栏可以筛选标签列表里的标签" class="headerlink" title="搜索栏可以筛选标签列表里的标签"></a>搜索栏可以筛选标签列表里的标签</h5></li><li><h5 id="选中标签列表后可以把标签整合成json字符串，将来可以发送json字符串实现根据标签搜索用户"><a href="#选中标签列表后可以把标签整合成json字符串，将来可以发送json字符串实现根据标签搜索用户" class="headerlink" title="选中标签列表后可以把标签整合成json字符串，将来可以发送json字符串实现根据标签搜索用户"></a>选中标签列表后可以把标签整合成json字符串，将来可以发送json字符串实现根据标签搜索用户</h5></li><li><h5 id="注：这块逻辑比较难，可以多加理解消化，这里不做过多介绍了（因为我自己也看懵了，照着人家的代码写下来的）"><a href="#注：这块逻辑比较难，可以多加理解消化，这里不做过多介绍了（因为我自己也看懵了，照着人家的代码写下来的）" class="headerlink" title="注：这块逻辑比较难，可以多加理解消化，这里不做过多介绍了（因为我自己也看懵了，照着人家的代码写下来的）"></a>注：这块逻辑比较难，可以多加理解消化，这里不做过多介绍了（因为我自己也看懵了，照着人家的代码写下来的）</h5><h5 id="展示一下搜索页最终代码和实现效果吧"><a href="#展示一下搜索页最终代码和实现效果吧" class="headerlink" title="展示一下搜索页最终代码和实现效果吧"></a>展示一下搜索页最终代码和实现效果吧</h5></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- 搜索栏 --&gt;<br>  &lt;form action=&quot;/&quot;&gt;<br>    &lt;van-search<br>      v-model=&quot;searchText&quot;<br>      show-action<br>      placeholder=&quot;请输入搜索关键词&quot;<br>      @search=&quot;onSearch&quot;<br>      @cancel=&quot;onCancel&quot;<br>    /&gt;<br>  &lt;/form&gt;<br>  &lt;!-- 分割线 --&gt;<br>  &lt;van-divider content-position=&quot;left&quot;&gt;已选标签&lt;/van-divider&gt;<br>  &lt;div v-if=&quot;activeIds.length === 0&quot;&gt;请选择标签&lt;/div&gt;<br>  &lt;!-- 选中的标签  layout布局 --&gt;<br>  &lt;van-row gutter=&quot;20&quot;&gt;<br>    &lt;van-col v-for=&quot;tag in activeIds&quot;&gt;<br>      &lt;van-tag closeable size=&quot;medium&quot; type=&quot;primary&quot; @close=&quot;close&quot;&gt;<br>        &#123;&#123; tag &#125;&#125;<br>      &lt;/van-tag&gt;<br>    &lt;/van-col&gt;<br>  &lt;/van-row&gt;<br><br>  &lt;van-divider content-position=&quot;right&quot;&gt;可选标签&lt;/van-divider&gt;<br>  &lt;!-- 标签列表 --&gt;<br>  &lt;van-tree-select<br>    v-model:active-id=&quot;activeIds&quot;<br>    v-model:main-active-index=&quot;activeIndex&quot;<br>    :items=&quot;tagList&quot;<br>  /&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &quot;vue&quot;;<br><br>const searchText = ref(&quot;&quot;);<br><br>// 已选中的标签<br>const activeIds = ref([]);<br>const activeIndex = ref(0);<br><br>// 原始标签列表<br>const originTagList = [<br>  &#123;<br>    text: &quot;年级&quot;,<br>    children: [<br>      &#123; text: &quot;大一&quot;, id: &quot;大一&quot; &#125;,<br>      &#123; text: &quot;大二&quot;, id: &quot;大二&quot; &#125;,<br>      &#123; text: &quot;大三&quot;, id: &quot;大三&quot; &#125;,<br>      &#123; text: &quot;大四&quot;, id: &quot;大四&quot; &#125;,<br>      &#123; text: &quot;大五&quot;, id: &quot;大五&quot;, disabled: true &#125;,<br>    ],<br>  &#125;,<br>  &#123;<br>    text: &quot;性别&quot;,<br>    children: [<br>      &#123; text: &quot;男&quot;, id: &quot;男&quot; &#125;,<br>      &#123; text: &quot;女&quot;, id: &quot;女&quot; &#125;,<br>    ],<br>  &#125;,<br>];<br><br>// 实际标签列表<br>let tagList = ref(originTagList);<br><br>/**<br> * 搜索过滤<br> * @param val<br> */<br>const onSearch = (val: any) =&gt; &#123;<br>  tagList.value = originTagList.map((parentTag) =&gt; &#123;<br>    const tempChildren = [...parentTag.children];<br>    const tempParentTag = &#123; ...parentTag &#125;;<br>    tempParentTag.children = tempChildren.filter((item) =&gt;<br>      item.text.includes(searchText.value)<br>    );<br>    return tempParentTag;<br>  &#125;);<br>&#125;;<br><br>// 取消<br>const onCancel = () =&gt; &#123;<br>  searchText.value = &quot;&quot;;<br>  tagList.value = originTagList;<br>&#125;;<br><br>// 关闭标签<br>const close = (tag: any) =&gt; &#123;<br>  activeIds.value = activeIds.value.filter((item) =&gt; &#123;<br>    return item !== tag;<br>  &#125;);<br>&#125;;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230402160806287.png" alt="image-20230402160806287"></p><h2 id="用户信息页"><a href="#用户信息页" class="headerlink" title="用户信息页"></a>用户信息页</h2><ul><li><h5 id="这里就比较简单了，开发！"><a href="#这里就比较简单了，开发！" class="headerlink" title="这里就比较简单了，开发！"></a>这里就比较简单了，开发！</h5></li><li><h5 id="引入相关表单组件-Cell单元格"><a href="#引入相关表单组件-Cell单元格" class="headerlink" title="引入相关表单组件    Cell单元格"></a>引入相关表单组件    Cell单元格</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- &lt;slot&gt; 个人 &lt;/slot&gt; --&gt;<br>  &lt;van-cell title=&quot;账号&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.username&quot; /&gt;<br>  &lt;van-cell title=&quot;昵称&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.userAccount&quot; /&gt;<br>  &lt;van-cell title=&quot;头像&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.avatarUrl&quot; /&gt;<br>  &lt;van-cell title=&quot;性别&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.gender&quot; /&gt;<br>  &lt;van-cell title=&quot;电话&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.phone&quot; /&gt;<br>  &lt;van-cell title=&quot;邮箱&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.email&quot; /&gt;<br>  &lt;van-cell title=&quot;星球编号&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.planetCode&quot; /&gt;<br>  &lt;van-cell title=&quot;注册时间&quot; is-link to=&quot;/user/edit&quot; :value=&quot;user.createTime.toISOString()&quot;/&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="自己在src-models下写一个user-d-ts，自定义userType类型，将来填充表单"><a href="#自己在src-models下写一个user-d-ts，自定义userType类型，将来填充表单" class="headerlink" title="自己在src/models下写一个user.d.ts，自定义userType类型，将来填充表单"></a>自己在src/models下写一个user.d.ts，自定义userType类型，将来填充表单</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 用户信息</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> userType = &#123;<br>  id?: <span class="hljs-built_in">number</span>;<br>  userAccount?: <span class="hljs-built_in">string</span>;<br>  username?: <span class="hljs-built_in">string</span>;<br>  avatarUrl?: <span class="hljs-built_in">string</span>;<br>  gender?: <span class="hljs-built_in">string</span>;<br>  phone?: <span class="hljs-built_in">string</span>;<br>  email?: <span class="hljs-built_in">string</span>;<br>  createTime?: <span class="hljs-title class_">Date</span>;<br>  userStatus?: <span class="hljs-built_in">string</span>;<br>  userRole?: <span class="hljs-built_in">number</span>;<br>  planetCode?: <span class="hljs-built_in">string</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="自定义一个用户对象，由于目前没有相关接口从后端拿取数据，给定一些假数据测试效果"><a href="#自定义一个用户对象，由于目前没有相关接口从后端拿取数据，给定一些假数据测试效果" class="headerlink" title="自定义一个用户对象，由于目前没有相关接口从后端拿取数据，给定一些假数据测试效果"></a>自定义一个用户对象，由于目前没有相关接口从后端拿取数据，给定一些假数据测试效果</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> user = &#123;<br>  <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">userAccount</span>: <span class="hljs-string">&quot;memory&quot;</span>,<br>  <span class="hljs-attr">username</span>: <span class="hljs-string">&quot;邓哈哈&quot;</span>,<br>  <span class="hljs-attr">avatarUrl</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">gender</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>  <span class="hljs-attr">phone</span>: <span class="hljs-string">&quot;18887786754&quot;</span>,<br>  <span class="hljs-attr">email</span>: <span class="hljs-string">&quot;3348407547@qq.com&quot;</span>,<br>  <span class="hljs-attr">planetCode</span>: <span class="hljs-string">&quot;17625&quot;</span>,<br>  <span class="hljs-attr">createTime</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="对表单稍作修改，给表单列绑定数据模型，同时点击相关列后可以修改该项，并跳转至用户修改页"><a href="#对表单稍作修改，给表单列绑定数据模型，同时点击相关列后可以修改该项，并跳转至用户修改页" class="headerlink" title="对表单稍作修改，给表单列绑定数据模型，同时点击相关列后可以修改该项，并跳转至用户修改页"></a>对表单稍作修改，给表单列绑定数据模型，同时点击相关列后可以修改该项，并跳转至用户修改页</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- &lt;slot&gt; 个人 &lt;/slot&gt; --&gt;<br>  &lt;van-cell<br>    title=&quot;账号&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.userAccount&quot;<br>    @click=&quot;toEdit(&#x27;userAccount&#x27;, &#x27;账号&#x27;, user.userAccount)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;昵称&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.username&quot;<br>    @click=&quot;toEdit(&#x27;username&#x27;, &#x27;昵称&#x27;, user.username)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;头像&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.avatarUrl&quot;<br>    @click=&quot;toEdit(&#x27;avatarUrl&#x27;, &#x27;头像&#x27;, user.avatarUrl)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;性别&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.gender&quot;<br>    @click=&quot;toEdit(&#x27;gender&#x27;, &#x27;性别&#x27;, user.gender)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;电话&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.phone&quot;<br>    @click=&quot;toEdit(&#x27;phone&#x27;, &#x27;电话&#x27;, user.phone)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;邮箱&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.email&quot;<br>    @click=&quot;toEdit(&#x27;email&#x27;, &#x27;邮箱&#x27;, user.email)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;星球编号&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.planetCode&quot;<br>    @click=&quot;toEdit(&#x27;planetCode&#x27;, &#x27;星球编号&#x27;, user.planetCode)&quot;<br>  /&gt;<br>  &lt;van-cell<br>    title=&quot;注册时间&quot;<br>    is-link<br>    to=&quot;/user/edit&quot;<br>    :value=&quot;user.createTime.toISOString()&quot;<br>    @click=&quot;toEdit(&#x27;createTime&#x27;, &#x27;注册时间&#x27;, user.createTime.toISOString())&quot;<br>  /&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="script下实现toEdit方法，携带相关参数并跳转至用户修改页下（路由我们前面写过了）"><a href="#script下实现toEdit方法，携带相关参数并跳转至用户修改页下（路由我们前面写过了）" class="headerlink" title="script下实现toEdit方法，携带相关参数并跳转至用户修改页下（路由我们前面写过了）"></a>script下实现toEdit方法，携带相关参数并跳转至用户修改页下（路由我们前面写过了）</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toEdit</span> = (<span class="hljs-params">editKey: <span class="hljs-built_in">string</span>, editName: <span class="hljs-built_in">string</span>, currentValue: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>,<br>    <span class="hljs-attr">query</span>: &#123;<br>      editKey,<br>      editName,<br>      currentValue,<br>    &#125;,<br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这个跳转并携带参数涉及到vue-Router的两个组件，非常重要，马上讲到👇"><a href="#这个跳转并携带参数涉及到vue-Router的两个组件，非常重要，马上讲到👇" class="headerlink" title="这个跳转并携带参数涉及到vue-Router的两个组件，非常重要，马上讲到👇"></a>这个跳转并携带参数涉及到vue-Router的两个组件，非常重要，马上讲到👇</h5></li></ul><h2 id="用户信息修改页"><a href="#用户信息修改页" class="headerlink" title="用户信息修改页"></a>用户信息修改页</h2><ul><li><h5 id="跟前面同样的操作，引入相关组件-From表单"><a href="#跟前面同样的操作，引入相关组件-From表单" class="headerlink" title="跟前面同样的操作，引入相关组件   From表单"></a>跟前面同样的操作，引入相关组件   From表单</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>  &lt;van-cell-group inset&gt;<br>    &lt;van-field<br>      v-model=&quot;username&quot;<br>      name=&quot;用户名&quot;<br>      label=&quot;用户名&quot;<br>      placeholder=&quot;用户名&quot;<br>    /&gt;<br>  &lt;/van-cell-group&gt;<br>  <br>  &lt;div style=&quot;margin: 16px;&quot;&gt;<br>    &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>      提交<br>    &lt;/van-button&gt;<br>  &lt;/div&gt;<br>&lt;/van-form&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="自定义一个修改后的用户信息对象"><a href="#自定义一个修改后的用户信息对象" class="headerlink" title="自定义一个修改后的用户信息对象"></a>自定义一个修改后的用户信息对象</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> <span class="hljs-attr">editUser</span>: editUserType = <span class="hljs-title function_">ref</span>(&#123;<br>  <span class="hljs-attr">editKey</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">editKey</span>,<br>  <span class="hljs-attr">editName</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">editName</span>,<br>  <span class="hljs-attr">currentValue</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">currentValue</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改一下表单，能不能实现用户编辑信息页的某项信息时，用户信息修改页正确显示"><a href="#修改一下表单，能不能实现用户编辑信息页的某项信息时，用户信息修改页正确显示" class="headerlink" title="修改一下表单，能不能实现用户编辑信息页的某项信息时，用户信息修改页正确显示"></a>修改一下表单，能不能实现用户编辑信息页的某项信息时，用户信息修改页正确显示</h5></li></ul><ul><li><h5 id="改成这样👇："><a href="#改成这样👇：" class="headerlink" title="改成这样👇："></a>改成这样👇：</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- &lt;slot&gt;用户编辑页&lt;/slot&gt; --&gt;<br> &lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>   &lt;van-field<br>     v-model=&quot;editUser.currentValue&quot;<br>     :name=&quot;editUser.editKey&quot;<br>     :label=&quot;editUser.editName&quot;<br>     :placeholder=&quot;`$&#123;editUser.editKey&#125;`&quot;<br>   /&gt;<br><br>   &lt;div style=&quot;margin: 16px&quot;&gt;<br>     &lt;van-button<br>       round<br>       block<br>       type=&quot;primary&quot;<br>       native-type=&quot;submit&quot;<br>     &gt;<br>       提交<br>     &lt;/van-button&gt;<br>   &lt;/div&gt;<br> &lt;/van-form&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="测试一下，完成功能！"><a href="#测试一下，完成功能！" class="headerlink" title="测试一下，完成功能！"></a>测试一下，完成功能！</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230402163407935.png" alt="image-20230402163407935"></p><ul><li><h5 id="什么原理呢？用户信息页的信息是怎样传到用户信息修改页并正确显示的呢？我们捋一捋："><a href="#什么原理呢？用户信息页的信息是怎样传到用户信息修改页并正确显示的呢？我们捋一捋：" class="headerlink" title="什么原理呢？用户信息页的信息是怎样传到用户信息修改页并正确显示的呢？我们捋一捋："></a>什么原理呢？用户信息页的信息是怎样传到用户信息修改页并正确显示的呢？我们捋一捋：</h5></li><li><h5 id="用户信息页我们写过这个："><a href="#用户信息页我们写过这个：" class="headerlink" title="用户信息页我们写过这个："></a>用户信息页我们写过这个：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toEdit</span> = (<span class="hljs-params">editKey: <span class="hljs-built_in">string</span>, editName: <span class="hljs-built_in">string</span>, currentValue: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>,<br>    <span class="hljs-attr">query</span>: &#123;<br>      editKey,<br>      editName,<br>      currentValue,<br>    &#125;,<br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="干了什么？一句话：就是携带了参数-query-并跳转到了对应路由组件-“-user-edit”-里"><a href="#干了什么？一句话：就是携带了参数-query-并跳转到了对应路由组件-“-user-edit”-里" class="headerlink" title="干了什么？一句话：就是携带了参数 query 并跳转到了对应路由组件 “/user/edit” 里"></a>干了什么？一句话：就是携带了参数 query 并跳转到了对应路由组件 “/user/edit” 里</h5></li><li><h5 id="当然，组件-router-实现了这个功能"><a href="#当然，组件-router-实现了这个功能" class="headerlink" title="当然，组件 router 实现了这个功能"></a>当然，组件 router 实现了这个功能</h5></li><li><h5 id="那用户信心修改页呢，又干了什么？"><a href="#那用户信心修改页呢，又干了什么？" class="headerlink" title="那用户信心修改页呢，又干了什么？"></a>那用户信心修改页呢，又干了什么？</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; useRoute &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><br><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">editUser</span>: editUserType = <span class="hljs-title function_">ref</span>(&#123;<br>  <span class="hljs-attr">editKey</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">editKey</span>,<br>  <span class="hljs-attr">editName</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">editName</span>,<br>  <span class="hljs-attr">currentValue</span>: route.<span class="hljs-property">query</span>.<span class="hljs-property">currentValue</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-field<br>      v-model=&quot;editUser.currentValue&quot;<br>      :name=&quot;editUser.editKey&quot;<br>      :label=&quot;editUser.editName&quot;<br>      :placeholder=&quot;`$&#123;editUser.editKey&#125;`&quot;<br>    /&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="也是一句话：拿到了-当前路由组件下接收的参数-query-并在表单上-绑定了数据模型，同步显示了而已"><a href="#也是一句话：拿到了-当前路由组件下接收的参数-query-并在表单上-绑定了数据模型，同步显示了而已" class="headerlink" title="也是一句话：拿到了 当前路由组件下接收的参数 query , 并在表单上 绑定了数据模型，同步显示了而已"></a>也是一句话：拿到了 当前路由组件下接收的参数 query , 并在表单上 绑定了数据模型，同步显示了而已</h5></li><li><h5 id="当然，组件-route-实现了这个功能"><a href="#当然，组件-route-实现了这个功能" class="headerlink" title="当然，组件 route 实现了这个功能"></a>当然，组件 route 实现了这个功能</h5></li></ul><h1 id="Swagger-knif4j-自动生成接口文档"><a href="#Swagger-knif4j-自动生成接口文档" class="headerlink" title="Swagger + knif4j 自动生成接口文档"></a>Swagger + knif4j 自动生成接口文档</h1><ul><li><h5 id="这里我们用knif4j，来到官方文档跟着快速操作即可"><a href="#这里我们用knif4j，来到官方文档跟着快速操作即可" class="headerlink" title="这里我们用knif4j，来到官方文档跟着快速操作即可"></a>这里我们用knif4j，来到官方文档跟着快速操作即可</h5></li></ul><ul><li><h5 id="第一步：创建Spring-Boot项目并且在pom-xml中引入Knife4j的依赖包，代码如下："><a href="#第一步：创建Spring-Boot项目并且在pom-xml中引入Knife4j的依赖包，代码如下：" class="headerlink" title="第一步：创建Spring Boot项目并且在pom.xml中引入Knife4j的依赖包，代码如下："></a>第一步：<a href="https://spring.io/guides/gs/spring-boot/">创建Spring Boot项目</a>并且在pom.xml中引入<a href="https://search.maven.org/search?q=g:com.github.xiaoymin">Knife4j的依赖包</a>，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--引入Knife4j的官方start包,该指南选择Spring Boot版本&lt;<span class="hljs-number">3.0</span>,开发者需要注意--&gt;<br>      &lt;dependency&gt;<br>          &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;<br>          &lt;artifactId&gt;knife4j-openapi2-spring-boot-starter&lt;/artifactId&gt;<br>          &lt;version&gt;<span class="hljs-number">4.0</span><span class="hljs-number">.0</span>&lt;/version&gt;<br>      &lt;/dependency&gt;<br>  <br></code></pre></td></tr></table></figure><ul><li><h5 id="第二步：创建Swagger配置依赖，代码如下："><a href="#第二步：创建Swagger配置依赖，代码如下：" class="headerlink" title="第二步：创建Swagger配置依赖，代码如下："></a>第二步：创建Swagger配置依赖，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.memory.usercenter.config;<br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.PathSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.spi.DocumentationType;<br><span class="hljs-keyword">import</span> springfox.documentation.spring.web.plugins.Docket;<br><span class="hljs-keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2WebMvc;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/2 23:39</span><br><span class="hljs-comment"> * Function:</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableSwagger2WebMvc</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Knife4jConfiguration</span> &#123;<br>    <span class="hljs-meta">@Bean(value = &quot;dockerBean&quot;)</span><br>    <span class="hljs-keyword">public</span> Docket <span class="hljs-title function_">dockerBean</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//指定使用Swagger2规范</span><br>        <span class="hljs-type">Docket</span> <span class="hljs-variable">docket</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Docket</span>(DocumentationType.SWAGGER_2)<br>                .apiInfo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                        <span class="hljs-comment">//描述字段支持Markdown语法</span><br>                        .title(<span class="hljs-string">&quot;Memory用户中心&quot;</span>)<br>                        .description(<span class="hljs-string">&quot;# Memory用户中心接口文档&quot;</span>)<br>                        .termsOfServiceUrl(<span class="hljs-string">&quot;https://gitee.com/deng-2022/client-center&quot;</span>)<br>                        .contact(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>)<br>                        .version(<span class="hljs-string">&quot;1.0&quot;</span>)<br>                        .build())<br>                <span class="hljs-comment">//分组名称</span><br>                .groupName(<span class="hljs-string">&quot;用户服务&quot;</span>)<br>                .select()<br>                <span class="hljs-comment">//这里指定Controller扫描包路径</span><br>                .apis(RequestHandlerSelectors.basePackage(<span class="hljs-string">&quot;com.memory.usercenter.controller&quot;</span>))<br>                .paths(PathSelectors.any())<br>                .build();<br>        <span class="hljs-keyword">return</span> docket;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="然后启动项目即可"><a href="#然后启动项目即可" class="headerlink" title="然后启动项目即可"></a>然后启动项目即可</h5></li><li><h5 id="访问-http-localhost-8081-api-doc-html-成功自动生成接口文档！"><a href="#访问-http-localhost-8081-api-doc-html-成功自动生成接口文档！" class="headerlink" title="访问   http://localhost:8081/api/doc.html 成功自动生成接口文档！"></a>访问   <a href="http://localhost:8081/api/doc.html">http://localhost:8081/api/doc.html</a> 成功自动生成接口文档！</h5></li><li><h5 id="如果springBoot版本高于2-6，可能会有报错，这是因为-knif4j-不兼容现今高版本的springBoot，这里有两种解决办法："><a href="#如果springBoot版本高于2-6，可能会有报错，这是因为-knif4j-不兼容现今高版本的springBoot，这里有两种解决办法：" class="headerlink" title="如果springBoot版本高于2.6，可能会有报错，这是因为 knif4j 不兼容现今高版本的springBoot，这里有两种解决办法："></a>如果springBoot版本高于2.6，可能会有报错，这是因为 knif4j 不兼容现今高版本的springBoot，这里有两种解决办法：</h5></li></ul><ol><li><h5 id="降低springBoot的版本使其兼容knif4j（很不现实的解决方法，不推荐）"><a href="#降低springBoot的版本使其兼容knif4j（很不现实的解决方法，不推荐）" class="headerlink" title="降低springBoot的版本使其兼容knif4j（很不现实的解决方法，不推荐）"></a>降低springBoot的版本使其兼容knif4j（很不现实的解决方法，不推荐）</h5></li><li><h5 id="application-yaml文件里添加如下配置："><a href="#application-yaml文件里添加如下配置：" class="headerlink" title="application.yaml文件里添加如下配置："></a>application.yaml文件里添加如下配置：</h5></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br> <span class="hljs-attr">mvc:</span><br>      <span class="hljs-attr">pathmatch:</span><br>        <span class="hljs-attr">matching-strategy:</span> <span class="hljs-string">ANT_PATH_MATCHER</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="问题即可解决！"><a href="#问题即可解决！" class="headerlink" title="问题即可解决！"></a>问题即可解决！</h5></li><li><h6 id="这里还要注意Swagger文档不能随意暴露在外！可能会有不法分子利用该文档调用接口、泄露数据"><a href="#这里还要注意Swagger文档不能随意暴露在外！可能会有不法分子利用该文档调用接口、泄露数据" class="headerlink" title="这里还要注意Swagger文档不能随意暴露在外！可能会有不法分子利用该文档调用接口、泄露数据"></a>这里还要注意Swagger文档不能随意暴露在外！可能会有不法分子利用该文档调用接口、泄露数据</h6></li><li><h5 id="我们在application-yaml下定义开发环境："><a href="#我们在application-yaml下定义开发环境：" class="headerlink" title="我们在application.yaml下定义开发环境："></a>我们在application.yaml下定义开发环境：</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="在knif4j配置前还可以配置-Profile，在指定开发环境下才会生成接口文档，否则访问失败"><a href="#在knif4j配置前还可以配置-Profile，在指定开发环境下才会生成接口文档，否则访问失败" class="headerlink" title="在knif4j配置前还可以配置@Profile，在指定开发环境下才会生成接口文档，否则访问失败"></a>在knif4j配置前还可以配置@Profile，在指定开发环境下才会生成接口文档，否则访问失败</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableSwagger2WebMvc</span><br><span class="hljs-meta">@Profile(&#123;&quot;dev&quot;, &quot;test&quot;&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Knife4jConfiguration</span> &#123;<br>...........................<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="抓取网页信息"><a href="#抓取网页信息" class="headerlink" title="抓取网页信息"></a>抓取网页信息</h1><ul><li><h5 id="从Excel表格中导入用户数据-gt-EasyExcel"><a href="#从Excel表格中导入用户数据-gt-EasyExcel" class="headerlink" title="从Excel表格中导入用户数据 -&gt; EasyExcel"></a>从Excel表格中导入用户数据 -&gt; EasyExcel</h5></li></ul><ul><li><h5 id="看着官网，跟着操作即可-（在新增目录-once下）："><a href="#看着官网，跟着操作即可-（在新增目录-once下）：" class="headerlink" title="看着官网，跟着操作即可 （在新增目录/once下）："></a>看着官网，跟着操作即可 （在新增目录/once下）：</h5></li><li><h5 id="编写映射对象"><a href="#编写映射对象" class="headerlink" title="编写映射对象"></a>编写映射对象</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserInfo</span> &#123;<br>    <span class="hljs-meta">@ExcelProperty(&quot;成员编号&quot;)</span><br>    <span class="hljs-keyword">private</span> String planetCode;<br><br><br>    <span class="hljs-meta">@ExcelProperty(&quot;成员昵称&quot;)</span><br>    <span class="hljs-keyword">private</span> String username;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="编写监听器"><a href="#编写监听器" class="headerlink" title="编写监听器"></a>编写监听器</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 有个很重要的点 DemoDataListener 不能被spring管理，</span><br><span class="hljs-comment">// 要每次读取excel都要new,然后里面用到spring可以构造方法传进去</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TableListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ReadListener</span>&lt;UserInfo&gt; &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 这个每一条数据解析都会来调用</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data    one row value. Is is same as &#123;<span class="hljs-doctag">@link</span> AnalysisContext#readRowHolder()&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> context</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">invoke</span><span class="hljs-params">(UserInfo data, AnalysisContext context)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;解析到一条数据:&#123;&#125;&quot;</span>, data);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 所有数据解析完成了 都会来调用</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> context</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doAfterAllAnalysed</span><span class="hljs-params">(AnalysisContext context)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;所有数据解析完成！&quot;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="在-resources下导入一张Excel表格testExcel-xlsx"><a href="#在-resources下导入一张Excel表格testExcel-xlsx" class="headerlink" title="在/resources下导入一张Excel表格testExcel.xlsx"></a>在/resources下导入一张Excel表格testExcel.xlsx</h5></li><li><h5 id="读取表中数据，这里有两种方式"><a href="#读取表中数据，这里有两种方式" class="headerlink" title="读取表中数据，这里有两种方式:"></a>读取表中数据，这里有两种方式:</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ImportExcel</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定列的下标或者列名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        readByListener();<br>        synchronousRead();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="方法一：使用监听器"><a href="#方法一：使用监听器" class="headerlink" title="方法一：使用监听器"></a>方法一：使用监听器</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 监听器</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readByListener</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\Project\\星球项目\\ClientCenter\\user-center\\src\\main\\resources\\testExcel.xlsx&quot;</span>;<br>       <span class="hljs-comment">// 这里默认读取第一个sheet</span><br>       EasyExcel.read(fileName, UserInfo.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TableListener</span>()).sheet().doRead();<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="方法二：同步返回"><a href="#方法二：同步返回" class="headerlink" title="方法二：同步返回"></a>方法二：同步返回</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 同步的返回，不推荐使用，如果数据量大会把数据放到内存里面</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">synchronousRead</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\Project\\星球项目\\ClientCenter\\user-center\\src\\main\\resources\\testExcel.xlsx&quot;</span>;<br>       List&lt;UserInfo&gt; list = EasyExcel.read(fileName).head(UserInfo.class).sheet().doReadSync();<br>       <span class="hljs-keyword">for</span> (UserInfo data : list) &#123;<br>           log.info(<span class="hljs-string">&quot;读取到数据:&#123;&#125;&quot;</span>, data);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="要了解这两者的区别和优缺点，请移步至鱼皮的开发文档"><a href="#要了解这两者的区别和优缺点，请移步至鱼皮的开发文档" class="headerlink" title="要了解这两者的区别和优缺点，请移步至鱼皮的开发文档"></a>要了解这两者的区别和优缺点，请移步至鱼皮的开发文档</h5></li><li><h5 id="执行main方法，成功地读取到了Excel表的数据，如下"><a href="#执行main方法，成功地读取到了Excel表的数据，如下" class="headerlink" title="执行main方法，成功地读取到了Excel表的数据，如下"></a>执行main方法，成功地读取到了Excel表的数据，如下</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-number">22</span>:<span class="hljs-number">42</span>:<span class="hljs-number">23.479</span> [main] INFO com.memory.usercenter.once.ImportExcel - 读取到数据:UserInfo(planetCode=<span class="hljs-number">1</span>, username=邓哈哈)<br><span class="hljs-number">22</span>:<span class="hljs-number">42</span>:<span class="hljs-number">23.491</span> [main] INFO com.memory.usercenter.once.ImportExcel - 读取到数据:UserInfo(planetCode=<span class="hljs-number">2</span>, username=邓呵呵)<br><span class="hljs-number">22</span>:<span class="hljs-number">42</span>:<span class="hljs-number">23.491</span> [main] INFO com.memory.usercenter.once.ImportExcel - 读取到数据:UserInfo(planetCode=<span class="hljs-number">3</span>, username=邓嘻嘻)<br><span class="hljs-number">22</span>:<span class="hljs-number">42</span>:<span class="hljs-number">23.492</span> [main] INFO com.memory.usercenter.once.ImportExcel - 读取到数据:UserInfo(planetCode=<span class="hljs-number">4</span>, username=邓哇哇)<br><span class="hljs-number">22</span>:<span class="hljs-number">42</span>:<span class="hljs-number">23.492</span> [main] INFO com.memory.usercenter.once.ImportExcel - 读取到数据:UserInfo(planetCode=<span class="hljs-number">5</span>, username=邓几把)<br></code></pre></td></tr></table></figure><h2 id="根据标签搜索用户"><a href="#根据标签搜索用户" class="headerlink" title="根据标签搜索用户"></a>根据标签搜索用户</h2><ul><li><h5 id="搜索到的用户总得展示吧，那么我们先做一个用户列表页"><a href="#搜索到的用户总得展示吧，那么我们先做一个用户列表页" class="headerlink" title="搜索到的用户总得展示吧，那么我们先做一个用户列表页"></a>搜索到的用户总得展示吧，那么我们先做一个用户列表页</h5></li><li><h5 id="写一个搜索按钮，用来携带已选中标签信息，获取符合要求用户，并跳转到用户列表页展示-不要纠结样式"><a href="#写一个搜索按钮，用来携带已选中标签信息，获取符合要求用户，并跳转到用户列表页展示-不要纠结样式" class="headerlink" title="写一个搜索按钮，用来携带已选中标签信息，获取符合要求用户，并跳转到用户列表页展示,不要纠结样式"></a>写一个搜索按钮，用来携带已选中标签信息，获取符合要求用户，并跳转到用户列表页展示,不要纠结样式</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索 --&gt;<br>&lt;van-button<br>  type=&quot;primary&quot;<br>  style=&quot;margin: 8px; padding: 20px&quot;<br>  @click=&quot;doSearch()&quot;<br>  &gt;搜索&lt;/van-button<br>&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="先不谈发送请求，这里我们先实现跳转吧，很简单"><a href="#先不谈发送请求，这里我们先实现跳转吧，很简单" class="headerlink" title="先不谈发送请求，这里我们先实现跳转吧，很简单"></a>先不谈发送请求，这里我们先实现跳转吧，很简单</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 根据标签搜索, 向后台发送请求</span><br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/list&quot;</span>,<br>    <span class="hljs-attr">query</span>: &#123;<br>      <span class="hljs-attr">tags</span>: activeIds.<span class="hljs-property">value</span>,<br>    &#125;,<br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="开发用户列表页-（Card-商品卡片）"><a href="#开发用户列表页-（Card-商品卡片）" class="headerlink" title="开发用户列表页   （Card 商品卡片）"></a>开发用户列表页   （Card 商品卡片）</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;van-card<br>  num=<span class="hljs-string">&quot;2&quot;</span><br>  price=<span class="hljs-string">&quot;2.00&quot;</span><br>  desc=<span class="hljs-string">&quot;描述信息&quot;</span><br>  title=<span class="hljs-string">&quot;商品标题&quot;</span><br>  thumb=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;</span><br>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tags</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/van-card&gt;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这里再次console-log-打印一下，是可以拿到SearchPage页携带的选中的标签的"><a href="#这里再次console-log-打印一下，是可以拿到SearchPage页携带的选中的标签的" class="headerlink" title="这里再次console.log()打印一下，是可以拿到SearchPage页携带的选中的标签的"></a>这里再次console.log()打印一下，是可以拿到SearchPage页携带的选中的标签的</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; useRoute &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(route.<span class="hljs-property">query</span>);<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230404211104286.png" alt="image-20230404211104286"></p><ul><li><h5 id="筛选逻辑这里先不考虑，用假数据测试吧"><a href="#筛选逻辑这里先不考虑，用假数据测试吧" class="headerlink" title="筛选逻辑这里先不考虑，用假数据测试吧"></a>筛选逻辑这里先不考虑，用假数据测试吧</h5></li><li><h5 id="写个测试数据，也就是一个用户列表"><a href="#写个测试数据，也就是一个用户列表" class="headerlink" title="写个测试数据，也就是一个用户列表"></a>写个测试数据，也就是一个用户列表</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> users = [<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">userAccount</span>: <span class="hljs-string">&quot;memory&quot;</span>,<br>    <span class="hljs-attr">username</span>: <span class="hljs-string">&quot;邓哈哈&quot;</span>,<br>    <span class="hljs-attr">avatarUrl</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">gender</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>    <span class="hljs-attr">phone</span>: <span class="hljs-string">&quot;18887786754&quot;</span>,<br>    <span class="hljs-attr">email</span>: <span class="hljs-string">&quot;3348407547@qq.com&quot;</span>,<br>    <span class="hljs-attr">planetCode</span>: <span class="hljs-string">&quot;17625&quot;</span>,<br>    <span class="hljs-attr">createTime</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>    <span class="hljs-attr">profile</span>: <span class="hljs-string">&quot;这个用户很懒，什么也没写~&quot;</span>,<br>    <span class="hljs-attr">tags</span>: [<span class="hljs-string">&quot;java&quot;</span>, <span class="hljs-string">&quot;emo&quot;</span>, <span class="hljs-string">&quot;努力中&quot;</span>],<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">userAccount</span>: <span class="hljs-string">&quot;memory&quot;</span>,<br>    <span class="hljs-attr">username</span>: <span class="hljs-string">&quot;邓哈哈&quot;</span>,<br>    <span class="hljs-attr">avatarUrl</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">gender</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>    <span class="hljs-attr">phone</span>: <span class="hljs-string">&quot;18887786754&quot;</span>,<br>    <span class="hljs-attr">email</span>: <span class="hljs-string">&quot;3348407547@qq.com&quot;</span>,<br>    <span class="hljs-attr">planetCode</span>: <span class="hljs-string">&quot;17625&quot;</span>,<br>    <span class="hljs-attr">createTime</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>    <span class="hljs-attr">profile</span>: <span class="hljs-string">&quot;这个用户很懒，什么也没写~&quot;</span>,<br>    <span class="hljs-attr">tags</span>: [<span class="hljs-string">&quot;java&quot;</span>, <span class="hljs-string">&quot;emo&quot;</span>, <span class="hljs-string">&quot;努力中&quot;</span>],<br>  &#125;,<br>];<br></code></pre></td></tr></table></figure><ul><li><h5 id="稍微修改一下，遍历users拿到每一个user，再正确显示user的属性，自己看着设计样式吧"><a href="#稍微修改一下，遍历users拿到每一个user，再正确显示user的属性，自己看着设计样式吧" class="headerlink" title="稍微修改一下，遍历users拿到每一个user，再正确显示user的属性，自己看着设计样式吧"></a>稍微修改一下，遍历users拿到每一个user，再正确显示user的属性，自己看着设计样式吧</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-card<br>   v-for=&quot;user in users&quot;<br>   :tag=&quot;user.gender&quot;<br>   :title=&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;<br>   :desc=&quot;user.profile&quot;<br>   thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br> &gt;<br>   &lt;template #tags&gt;<br>     &lt;van-tag<br>       plain<br>       type=&quot;primary&quot;<br>       v-for=&quot;tag in user.tags&quot;<br>       style=&quot;margin-right: 3px; margin-top: 3px&quot;<br>     &gt;<br>       &#123;&#123; tag &#125;&#125;<br>     &lt;/van-tag&gt;<br>   &lt;/template&gt;<br>   &lt;template #footer&gt;<br>     &lt;van-button size=&quot;mini&quot;&gt;联系我&lt;/van-button&gt;<br>   &lt;/template&gt;<br> &lt;/van-card&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="测试代码，开发完成"><a href="#测试代码，开发完成" class="headerlink" title="测试代码，开发完成"></a>测试代码，开发完成</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230404211229967.png" alt="image-20230404211229967"></p><ul><li><h5 id="接下来就是打通前后端，实现根据标签搜索用户"><a href="#接下来就是打通前后端，实现根据标签搜索用户" class="headerlink" title="接下来就是打通前后端，实现根据标签搜索用户"></a>接下来就是打通前后端，实现根据标签搜索用户</h5></li></ul><h2 id="根据标签查询（补充）"><a href="#根据标签查询（补充）" class="headerlink" title="根据标签查询（补充）"></a>根据标签查询（补充）</h2><ul><li><h5 id="我们先在表user中添加个新字段-profile"><a href="#我们先在表user中添加个新字段-profile" class="headerlink" title="我们先在表user中添加个新字段 profile"></a>我们先在表user中添加个新字段 profile</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- auto-generated definition</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">user</span><br>(<br>    id            <span class="hljs-type">bigint</span>                                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;id&#x27;</span><br>        <span class="hljs-keyword">primary</span> key,<br>    user_account  <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    username      <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;昵称&#x27;</span>,<br>    user_password <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;密码&#x27;</span>,<br>    avatar_url    <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;头像&#x27;</span>,<br>    gender        <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;0&#x27;</span>               <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    phone         <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;电话&#x27;</span>,<br>    email         <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    user_status   <span class="hljs-type">int</span>          <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;状态 0 - 正常&#x27;</span>,<br>    create_time   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    is_delete     tinyint      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除 0 - 正常&#x27;</span>,<br>    user_role     <span class="hljs-type">int</span>(<span class="hljs-number">1</span>)       <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户权限 0 - 管理员 1 - 普通用户&#x27;</span>,<br>    planet_code   <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;星球编号&#x27;</span>,<br>    profile       <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;这个用户很懒，什么也没写~&#x27;</span>   <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户描述&#x27;</span>,<br>    tags          <span class="hljs-type">varchar</span>(<span class="hljs-number">1024</span>)                          <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;标签&#x27;</span><br>)<br>    comment <span class="hljs-string">&#x27;用户&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="记得修改几处地方，这里就不一一演示了：-model-User，userMapper-xml，service下的-getSafetyUser-方法"><a href="#记得修改几处地方，这里就不一一演示了：-model-User，userMapper-xml，service下的-getSafetyUser-方法" class="headerlink" title="记得修改几处地方，这里就不一一演示了：/model/User，userMapper.xml，service下的 getSafetyUser()方法"></a>记得修改几处地方，这里就不一一演示了：/model/User，userMapper.xml，service下的 getSafetyUser()方法</h5></li><li><h5 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 标签列表</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> tagNameList</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@GetMapping(&quot;/search/tags&quot;)</span><br>  <span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;User&gt;&gt; <span class="hljs-title function_">searchByTags</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> List&lt;String&gt; tagNameList)</span> &#123;<br>      <span class="hljs-keyword">if</span> (CollectionUtils.isEmpty(tagNameList))<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br><br>      List&lt;User&gt; userList = userService.searchUserByTags(tagNameList);<br>      <span class="hljs-keyword">return</span> ResultUtils.success(userList);<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="接下来我们要在前端页面发送请求了，跟着官网来，安装axios"><a href="#接下来我们要在前端页面发送请求了，跟着官网来，安装axios" class="headerlink" title="接下来我们要在前端页面发送请求了，跟着官网来，安装axios"></a>接下来我们要在前端页面发送请求了，跟着官网来，安装axios</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apl">yarn add axios<br></code></pre></td></tr></table></figure><ul><li><h5 id="在-plugins-myAxios-ts下配置-myAxios-和请求拦截器、响应拦截器，"><a href="#在-plugins-myAxios-ts下配置-myAxios-和请求拦截器、响应拦截器，" class="headerlink" title="在/plugins/myAxios.ts下配置 myAxios 和请求拦截器、响应拦截器，"></a>在/plugins/myAxios.ts下配置 myAxios 和请求拦截器、响应拦截器，</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><span class="hljs-comment">// Set config defaults when creating the instance</span><br><span class="hljs-keyword">const</span> myAxios = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&quot;http://localhost:8081/api&quot;</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 添加请求拦截器</span><br>axios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`我他妈发请求了<span class="hljs-subst">$&#123;config&#125;</span>`</span>);<br>    <span class="hljs-comment">// 在发送请求之前做些什么</span><br>    <span class="hljs-keyword">return</span> config;<br>  &#125;,<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>    <span class="hljs-comment">// 对请求错误做些什么</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error);<br>  &#125;<br>);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 添加响应拦截器</span><br>axios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`我他妈响应了 <span class="hljs-subst">$&#123;response&#125;</span>`</span>);<br>    <span class="hljs-comment">// 对响应数据做点什么</span><br>    <span class="hljs-keyword">return</span> response;<br>  &#125;,<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>    <span class="hljs-comment">// 对响应错误做点什么</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error);<br>  &#125;<br>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> myAxios;<br></code></pre></td></tr></table></figure><ul><li><h5 id="在userListPage-vue下写个钩子函数，发送请求到后端"><a href="#在userListPage-vue下写个钩子函数，发送请求到后端" class="headerlink" title="在userListPage.vue下写个钩子函数，发送请求到后端"></a>在userListPage.vue下写个钩子函数，发送请求到后端</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRoute &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> qs <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;qs&quot;</span>;<br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br>  <span class="hljs-keyword">const</span> &#123; tags &#125; = route.<span class="hljs-property">query</span>;<br>  <span class="hljs-comment">// 上面的请求也可以这样做</span><br>  myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/search/tags&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">tagNameList</span>: tags,<br>      &#125;,<br>      <span class="hljs-attr">paramsSerializer</span>: &#123;<br>        <span class="hljs-attr">serialize</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> qs.<span class="hljs-title function_">stringify</span>(params, &#123; <span class="hljs-attr">indices</span>: <span class="hljs-literal">false</span> &#125;),<br>      &#125;,<br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response);<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="简单介绍一下运作原理"><a href="#简单介绍一下运作原理" class="headerlink" title="简单介绍一下运作原理"></a>简单介绍一下运作原理</h5></li><li><h5 id="钩子函数不用多废话了"><a href="#钩子函数不用多废话了" class="headerlink" title="钩子函数不用多废话了"></a>钩子函数不用多废话了</h5></li><li><h5 id="引入我们的myAxios，发送请求，语法要熟悉"><a href="#引入我们的myAxios，发送请求，语法要熟悉" class="headerlink" title="引入我们的myAxios，发送请求，语法要熟悉"></a>引入我们的myAxios，发送请求，语法要熟悉</h5></li><li><h5 id="引入-userRoute，拿到searchPage页携带的标签列表，语法要熟悉"><a href="#引入-userRoute，拿到searchPage页携带的标签列表，语法要熟悉" class="headerlink" title="引入 userRoute，拿到searchPage页携带的标签列表，语法要熟悉"></a>引入 userRoute，拿到searchPage页携带的标签列表，语法要熟悉</h5></li><li><h5 id="然后就是引入-qs-可以正确地在axios请求中携带数组参数发送到后端，详情还需去百度了解"><a href="#然后就是引入-qs-可以正确地在axios请求中携带数组参数发送到后端，详情还需去百度了解" class="headerlink" title="然后就是引入 qs , 可以正确地在axios请求中携带数组参数发送到后端，详情还需去百度了解"></a>然后就是引入 qs , 可以正确地在axios请求中携带数组参数发送到后端，详情还需去百度了解</h5></li><li><h5 id="这里我还踩了两个坑，补充说明一下吧："><a href="#这里我还踩了两个坑，补充说明一下吧：" class="headerlink" title="这里我还踩了两个坑，补充说明一下吧："></a>这里我还踩了两个坑，补充说明一下吧：</h5></li></ul><ol><li><h5 id="axios配置baseURL时，我给配成了-“https-localhost-8081-api-quot-，把http写成了https，导致响应状态码一直是500，唉"><a href="#axios配置baseURL时，我给配成了-“https-localhost-8081-api-quot-，把http写成了https，导致响应状态码一直是500，唉" class="headerlink" title="axios配置baseURL时，我给配成了 “https://localhost:8081/api&quot;，把http写成了https，导致响应状态码一直是500，唉"></a>axios配置baseURL时，我给配成了 “<a href="https://localhost:8081/api&quot;%EF%BC%8C%E6%8A%8Ahttp%E5%86%99%E6%88%90%E4%BA%86https%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81%E4%B8%80%E7%9B%B4%E6%98%AF500%EF%BC%8C%E5%94%89">https://localhost:8081/api&quot;，把http写成了https，导致响应状态码一直是500，唉</a></h5></li><li><h5 id="然后就是-qs-了，坑死我了，先介绍一下-qs-引入流程："><a href="#然后就是-qs-了，坑死我了，先介绍一下-qs-引入流程：" class="headerlink" title="然后就是 qs 了，坑死我了，先介绍一下 qs 引入流程："></a>然后就是 qs 了，坑死我了，先介绍一下 qs 引入流程：</h5></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apl">yarn add qs<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> qs <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;qs&quot;</span>;<br><br><span class="hljs-comment">// 旧版</span><br><span class="hljs-attr">paramsSerializer</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> qs.<span class="hljs-title function_">stringify</span>(params, &#123;<span class="hljs-attr">arrayFormat</span>: <span class="hljs-string">&#x27;repeat&#x27;</span>&#125;)<br>&#125;<br><br><span class="hljs-comment">// 新版</span><br><span class="hljs-attr">paramsSerializer</span>: &#123;<br>        <span class="hljs-attr">serialize</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> qs.<span class="hljs-title function_">stringify</span>(params, &#123; <span class="hljs-attr">indices</span>: <span class="hljs-literal">false</span> &#125;),<br>      &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="我他妈就用了旧版，半天都不能正确发送请求，那用户列表页还他么卡死"><a href="#我他妈就用了旧版，半天都不能正确发送请求，那用户列表页还他么卡死" class="headerlink" title="我他妈就用了旧版，半天都不能正确发送请求，那用户列表页还他么卡死"></a>我他妈就用了旧版，半天都不能正确发送请求，那用户列表页还他么卡死</h5></li><li><h5 id="好了，请求成功发送了"><a href="#好了，请求成功发送了" class="headerlink" title="好了，请求成功发送了"></a>好了，请求成功发送了</h5></li></ul><h1 id="打通前后端查询用户"><a href="#打通前后端查询用户" class="headerlink" title="打通前后端查询用户"></a>打通前后端查询用户</h1><ul><li><h5 id="发送请求成功后，后端接口成功返回包含对应标签的用户（具体逻辑实现看-gt-后端接口开发）"><a href="#发送请求成功后，后端接口成功返回包含对应标签的用户（具体逻辑实现看-gt-后端接口开发）" class="headerlink" title="发送请求成功后，后端接口成功返回包含对应标签的用户（具体逻辑实现看 =&gt; 后端接口开发）"></a>发送请求成功后，后端接口成功返回包含对应标签的用户（具体逻辑实现看 =&gt; 后端接口开发）</h5></li><li><h5 id="发送请求逻辑我们已经写好了，接下来就是响应后端发回数据的逻辑了"><a href="#发送请求逻辑我们已经写好了，接下来就是响应后端发回数据的逻辑了" class="headerlink" title="发送请求逻辑我们已经写好了，接下来就是响应后端发回数据的逻辑了"></a>发送请求逻辑我们已经写好了，接下来就是响应后端发回数据的逻辑了</h5></li><li><h5 id="我们在钩子函数前后写上："><a href="#我们在钩子函数前后写上：" class="headerlink" title="我们在钩子函数前后写上："></a>我们在钩子函数前后写上：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123;ref&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br><span class="hljs-keyword">const</span> &#123; tags &#125; = route.<span class="hljs-property">query</span>;<br><span class="hljs-keyword">const</span> userList = <span class="hljs-title function_">ref</span>([]);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 响应数据</span><br>  <span class="hljs-keyword">const</span> userListData = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/search/tags&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">tagNameList</span>: tags,<br>      &#125;,<br>      <span class="hljs-attr">paramsSerializer</span>: &#123;<br>        <span class="hljs-attr">serialize</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> qs.<span class="hljs-title function_">stringify</span>(params, &#123; <span class="hljs-attr">indices</span>: <span class="hljs-literal">false</span> &#125;),<br>      &#125;,<br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response);<br>        <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>?.<span class="hljs-property">data</span>;<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-keyword">if</span> (userListData) &#123;<br>    userListData.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">user: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> == <span class="hljs-number">1</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;男&quot;</span>;<br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> == <span class="hljs-number">0</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;女&quot;</span>;<br><br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">tags</span>) user.<span class="hljs-property">tags</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(user.<span class="hljs-property">tags</span>);<br>    &#125;);<br>  &#125;<br>  userList.<span class="hljs-property">value</span> = userListData;<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="这块儿实现了什么逻辑呢，简单讲讲："><a href="#这块儿实现了什么逻辑呢，简单讲讲：" class="headerlink" title="这块儿实现了什么逻辑呢，简单讲讲："></a>这块儿实现了什么逻辑呢，简单讲讲：</h5></li></ul><ol><li><h5 id="返回了响应数据，返回的用户列表是Json字符串，我们把它序列化为列表-userList"><a href="#返回了响应数据，返回的用户列表是Json字符串，我们把它序列化为列表-userList" class="headerlink" title="返回了响应数据，返回的用户列表是Json字符串，我们把它序列化为列表 userList"></a>返回了响应数据，返回的用户列表是Json字符串，我们把它序列化为列表 userList</h5></li><li><h5 id="将用户信息中的性别显示为-‘男’-‘女’"><a href="#将用户信息中的性别显示为-‘男’-‘女’" class="headerlink" title="将用户信息中的性别显示为 ‘男’  ‘女’"></a>将用户信息中的性别显示为 ‘男’  ‘女’</h5></li></ol><ul><li><h5 id="再修改一下表数据，之前我们用的是假数据"><a href="#再修改一下表数据，之前我们用的是假数据" class="headerlink" title="再修改一下表数据，之前我们用的是假数据"></a>再修改一下表数据，之前我们用的是假数据</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-card<br>   v-for=&quot;user in userList&quot;<br>   :tag=&quot;`$&#123;user.gender&#125;`&quot;<br>   :title=&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;<br>   :desc=&quot;user.profile&quot;<br>   thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br> &gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="好极了，我们根据-‘男’-标签，搜索用户，得到了正确结果"><a href="#好极了，我们根据-‘男’-标签，搜索用户，得到了正确结果" class="headerlink" title="好极了，我们根据 ‘男’ 标签，搜索用户，得到了正确结果"></a>好极了，我们根据 ‘男’ 标签，搜索用户，得到了正确结果</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230405150346771.png" alt="image-20230405150346771"></p><h1 id="Session共享实现"><a href="#Session共享实现" class="headerlink" title="Session共享实现"></a>Session共享实现</h1><ul><li><h5 id="用来实现在多台服务器之间共享登录态"><a href="#用来实现在多台服务器之间共享登录态" class="headerlink" title="用来实现在多台服务器之间共享登录态"></a>用来实现在多台服务器之间共享登录态</h5></li><li><h5 id="安装redis-Redis-5-0-14-下载："><a href="#安装redis-Redis-5-0-14-下载：" class="headerlink" title="安装redis  Redis 5.0.14 下载："></a>安装redis  Redis 5.0.14 下载：</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">链接：https:<span class="hljs-regexp">//</span>pan.baidu.com<span class="hljs-regexp">/s/</span><span class="hljs-number">1</span>XcsAIrdeesQAyQU2lE3cOg<br>提取码：vkoi <br></code></pre></td></tr></table></figure><ul><li><h5 id="安装quick-redis"><a href="#安装quick-redis" class="headerlink" title="安装quick-redis"></a>安装quick-redis</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">quick redis：https:<span class="hljs-regexp">//</span>quick123.net/<br></code></pre></td></tr></table></figure><ul><li><h5 id="引入redis，能够操作-redis："><a href="#引入redis，能够操作-redis：" class="headerlink" title="引入redis，能够操作 redis："></a>引入redis，能够操作 redis：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- https:<span class="hljs-comment">//mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis --&gt;</span><br>&lt;dependency&gt;<br>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.6</span><span class="hljs-number">.4</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="引入-spring-session-和-redis-的整合-使得自动将-session-存储到-redis-中："><a href="#引入-spring-session-和-redis-的整合-使得自动将-session-存储到-redis-中：" class="headerlink" title="引入 spring-session 和 redis 的整合    使得自动将 session 存储到 redis 中："></a>引入 spring-session 和 redis 的整合    使得自动将 session 存储到 redis 中：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- https:<span class="hljs-comment">//mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis --&gt;</span><br>&lt;dependency&gt;<br>    &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;<br>    &lt;artifactId&gt;spring-session-data-redis&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.6</span><span class="hljs-number">.3</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改-spring-session-存储配置-spring-session-store-type"><a href="#修改-spring-session-存储配置-spring-session-store-type" class="headerlink" title="修改 spring-session 存储配置 spring.session.store-type"></a>修改 spring-session 存储配置 <code>spring.session.store-type</code></h5></li><li><h5 id="默认是-none，表示存储在单台服务器"><a href="#默认是-none，表示存储在单台服务器" class="headerlink" title="默认是 none，表示存储在单台服务器"></a>默认是 none，表示存储在单台服务器</h5></li><li><h5 id="store-type-redis，表示从-redis-读写-session"><a href="#store-type-redis，表示从-redis-读写-session" class="headerlink" title="store-type: redis，表示从 redis 读写 session"></a>store-type: redis，表示从 redis 读写 session</h5></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-comment"># session 失效时间(分钟)</span><br><span class="hljs-attr">session:</span><br>  <span class="hljs-attr">timeout:</span> <span class="hljs-number">86640</span><br>  <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br><span class="hljs-comment"># redis 配置</span><br><span class="hljs-attr">redis:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>  <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>  <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="完成"><a href="#完成" class="headerlink" title="完成!"></a>完成!</h5></li><li><h5 id="现在登录态已经可以写入redis了，还是共享的"><a href="#现在登录态已经可以写入redis了，还是共享的" class="headerlink" title="现在登录态已经可以写入redis了，还是共享的"></a>现在登录态已经可以写入redis了，还是共享的</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230405204848156.png" alt="image-20230405204848156"></p><ul><li><h5 id="接下来就要实现用户登录、用户信息展示、修改用户信息，但涉及到了跨域问题"><a href="#接下来就要实现用户登录、用户信息展示、修改用户信息，但涉及到了跨域问题" class="headerlink" title="接下来就要实现用户登录、用户信息展示、修改用户信息，但涉及到了跨域问题"></a>接下来就要实现用户登录、用户信息展示、修改用户信息，但涉及到了跨域问题</h5></li><li><h5 id="这块login后，后端种下了session，但axios发送请求时，老是携带不到cookie，getCurrentUser-获取不到当前用户登录态"><a href="#这块login后，后端种下了session，但axios发送请求时，老是携带不到cookie，getCurrentUser-获取不到当前用户登录态" class="headerlink" title="这块login后，后端种下了session，但axios发送请求时，老是携带不到cookie，getCurrentUser()获取不到当前用户登录态"></a>这块login后，后端种下了session，但axios发送请求时，老是携带不到cookie，getCurrentUser()获取不到当前用户登录态</h5></li><li><h5 id="先做后边的功能吧，这一块儿我再研究研究，这个跨域携带cookie好像挺难搞定"><a href="#先做后边的功能吧，这一块儿我再研究研究，这个跨域携带cookie好像挺难搞定" class="headerlink" title="先做后边的功能吧，这一块儿我再研究研究，这个跨域携带cookie好像挺难搞定"></a>先做后边的功能吧，这一块儿我再研究研究，这个跨域携带cookie好像挺难搞定</h5></li><li><h5 id="axios不能成功携带cookie的话，上面的需求都做不了"><a href="#axios不能成功携带cookie的话，上面的需求都做不了" class="headerlink" title="axios不能成功携带cookie的话，上面的需求都做不了"></a>axios不能成功携带cookie的话，上面的需求都做不了</h5></li><li><h5 id="三天后老子回来了，爷爷解决问题了！那么接下来，就让我捋一捋这个周末都学到了些什么吧！"><a href="#三天后老子回来了，爷爷解决问题了！那么接下来，就让我捋一捋这个周末都学到了些什么吧！" class="headerlink" title="三天后老子回来了，爷爷解决问题了！那么接下来，就让我捋一捋这个周末都学到了些什么吧！"></a>三天后老子回来了，爷爷解决问题了！那么接下来，就让我捋一捋这个周末都学到了些什么吧！</h5></li></ul><h1 id="后端接口开发-1"><a href="#后端接口开发-1" class="headerlink" title="后端接口开发"></a>后端接口开发</h1><h2 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h2><ul><li><h5 id="后端-service层"><a href="#后端-service层" class="headerlink" title="后端    service层"></a>后端    service层</h5></li><li><h5 id="实现思路："><a href="#实现思路：" class="headerlink" title="实现思路："></a>实现思路：</h5></li><li><h5 id="管理员修改用户接口"><a href="#管理员修改用户接口" class="headerlink" title="管理员修改用户接口"></a>管理员修改用户接口</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 管理员修改用户信息</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> user</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">userUpdateByAdmin</span><span class="hljs-params">(User user)</span> &#123;<br>        userMapper.updateById(user);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;修改信息成功&quot;</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="用户普通用户修改用户接口"><a href="#用户普通用户修改用户接口" class="headerlink" title="用户普通用户修改用户接口"></a>用户普通用户修改用户接口</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 修改用户信息</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> user      要修改的用户</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> loginUser 当前登录用户</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 修改接过信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">userUpdate</span><span class="hljs-params">(User user, User loginUser)</span> &#123;<br>       <span class="hljs-comment">// 1.1.校验管理员权限</span><br>       <span class="hljs-keyword">if</span> (isAdmin(loginUser)) &#123;<br>           <span class="hljs-comment">// 1.2.如果是管理员, 就跳转到管理员修改用户接口, 执行修改并返回结果</span><br>           <span class="hljs-keyword">return</span> userUpdateByAdmin(user);<br>       &#125;<br><br>       <span class="hljs-comment">// 1.3.非管理员, 就执行普通用户修改用户方法</span><br>       <span class="hljs-comment">// 根据传回来的id, 判断当前用户是否为要修改的用户</span><br>       <span class="hljs-keyword">if</span> (!loginUser.getId().equals(user.getId()))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(NO_AUTH);<br><br>       userMapper.updateById(user);<br>       <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;修改信息成功&quot;</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里我们在service层封装了两个-isAdmin-方法"><a href="#这里我们在service层封装了两个-isAdmin-方法" class="headerlink" title="这里我们在service层封装了两个 isAdmin() 方法"></a>这里我们在service层封装了两个 isAdmin() 方法</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> loginUser 校验的用户</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 校验成功与否(t / f)</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">isAdmin</span><span class="hljs-params">(User loginUser)</span> &#123;<br>      <span class="hljs-comment">//校验是否为管理员</span><br>      <span class="hljs-keyword">return</span> loginUser != <span class="hljs-literal">null</span> &amp;&amp; loginUser.getUserRole() == ADMIN_ROLE;<br>  &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 校验是否为管理员</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 校验成功与否(t / f)</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">isAdmin</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">//校验是否为管理员</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) request.getSession().getAttribute(USER_LOGIN_STATE);<br>       <span class="hljs-keyword">return</span> user != <span class="hljs-literal">null</span> &amp;&amp; user.getUserRole() == ADMIN_ROLE;<br>   &#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="顺带的，我们整理了所有的-controller层-和-service层的代码，最终呈现出统一格式："><a href="#顺带的，我们整理了所有的-controller层-和-service层的代码，最终呈现出统一格式：" class="headerlink" title="顺带的，我们整理了所有的 controller层 和 service层的代码，最终呈现出统一格式："></a>顺带的，我们整理了所有的 controller层 和 service层的代码，最终呈现出统一格式：</h5></li><li><h5 id="controller-层负责：简单校验参数-—-gt-调用service层的接口代码-—-gt-通用返回结果"><a href="#controller-层负责：简单校验参数-—-gt-调用service层的接口代码-—-gt-通用返回结果" class="headerlink" title="controller 层负责：简单校验参数 —&gt; 调用service层的接口代码 —&gt;通用返回结果"></a>controller 层负责：简单校验参数 —&gt; 调用service层的接口代码 —&gt;通用返回结果</h5></li><li><h5 id="service-层负责：实现全部的业务逻辑代码"><a href="#service-层负责：实现全部的业务逻辑代码" class="headerlink" title="service 层负责：实现全部的业务逻辑代码"></a>service 层负责：实现全部的业务逻辑代码</h5></li><li><h5 id="整个项目结构就变得很清晰了，那我们简单展示一下现在的-项目结构-和-代码规范-吧："><a href="#整个项目结构就变得很清晰了，那我们简单展示一下现在的-项目结构-和-代码规范-吧：" class="headerlink" title="整个项目结构就变得很清晰了，那我们简单展示一下现在的 项目结构 和 代码规范 吧："></a>整个项目结构就变得很清晰了，那我们简单展示一下现在的 项目结构 和 代码规范 吧：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java">项目结构<br>|_ main<br>|_ java<br>|_ com.memory.usercenter<br>|_ common<br>    |_ BaseResponse.java<br>    |_ ErrorCode.java<br>    |_JacksonObjectMapper.java<br>    |_ ResultUtils.java<br>|_ config<br>    |_ Knif4jConfiguration.java<br>    |_ MyIntercepter.java<br>   |_ WebConfig.java<br>|_ constant<br>    |_ UserConstant.java<br>    |_ controller<br>    |_UserCtroller.java<br>|_ exception<br>    |_ BusinessException.java<br>    |_ GlobalExceptionHandler.java<br>|_ mapper<br>    |_ UserMapper.java<br>|_ model<br>    |_ request<br>    |_ UserLoginRequest.java<br>    |_ UserRegisterRequest.java<br>    |_ User<br>|_ once<br>    |_ ImportExcel.java<br>    |_ InsertUser.java<br>    |_ TableListener.java<br>    |_UserInfo.java<br>|_ service<br>    |_ impl<br>    |_ UserServiceImpl.java<br>    |_ UserService.java<br>|_ util<br>|_ UserCenterApplication.java<br>|_ resources<br>|_ mapper <br>    |_ UserMapper.xml<br>|_ application.yaml<br>|_ testExcel.xlsx<br>|_ test<br>|_ java<br>    |_ com.memory.usercenter<br>    ...................<br>|_ target<br>|_ pom.xml<br></code></pre></td></tr></table></figure><ul><li><h5 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h5></li><li><h5 id="修改用户信息，我们提到了要校验在线用户权限对吧，这个在线用户登录态我们在用户中心里做过，但伙伴匹配还未实现，所以在实现接下来，我们先实现登录和记录用户登录态功能"><a href="#修改用户信息，我们提到了要校验在线用户权限对吧，这个在线用户登录态我们在用户中心里做过，但伙伴匹配还未实现，所以在实现接下来，我们先实现登录和记录用户登录态功能" class="headerlink" title="修改用户信息，我们提到了要校验在线用户权限对吧，这个在线用户登录态我们在用户中心里做过，但伙伴匹配还未实现，所以在实现接下来，我们先实现登录和记录用户登录态功能"></a>修改用户信息，我们提到了要校验在线用户权限对吧，这个在线用户登录态我们在用户中心里做过，但伙伴匹配还未实现，所以在实现接下来，我们先实现登录和记录用户登录态功能</h5></li><li><h5 id="添加登录页路由"><a href="#添加登录页路由" class="headerlink" title="添加登录页路由"></a>添加登录页路由</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserLoginPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/UserLoginPage.vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">IndexPage</span> &#125;, <span class="hljs-comment">// 主页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamPage</span> &#125;, <span class="hljs-comment">// 队伍页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserPage</span> &#125;, <span class="hljs-comment">// 个人页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/search&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">SearchPage</span> &#125;, <span class="hljs-comment">// 搜索页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserEditPage</span> &#125;, <span class="hljs-comment">// 用户信息修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/list&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserListPage</span> &#125;, <span class="hljs-comment">// 用户列表页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/login&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserLoginPage</span> &#125;, <span class="hljs-comment">// 用户登录页</span><br>];<br></code></pre></td></tr></table></figure><ul><li><h5 id="借助组件开发用户登录页-Form表单"><a href="#借助组件开发用户登录页-Form表单" class="headerlink" title="借助组件开发用户登录页  Form表单"></a>借助组件开发用户登录页  Form表单</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>    &lt;van-cell-group inset&gt;<br>      &lt;van-field<br>        v-model=&quot;userAccount&quot;<br>        name=&quot;用户名&quot;<br>        label=&quot;用户名&quot;<br>        placeholder=&quot;用户名&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请填写用户名&#x27; &#125;]&quot;<br>      /&gt;<br>      &lt;van-field<br>        v-model=&quot;userPassword&quot;<br>        type=&quot;password&quot;<br>        name=&quot;密码&quot;<br>        label=&quot;密码&quot;<br>        placeholder=&quot;密码&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请填写密码&#x27; &#125;]&quot;<br>      /&gt;<br>    &lt;/van-cell-group&gt;<br>    &lt;div style=&quot;margin: 16px&quot;&gt;<br>      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>        提交<br>      &lt;/van-button&gt;<br>    &lt;/div&gt;<br>  &lt;/van-form&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="发送登录请求"><a href="#发送登录请求" class="headerlink" title="发送登录请求"></a>发送登录请求</h5></li><li><h5 id="还记得之前封装好的MyAxios吧，与表单双向绑定后，携带-userAccount-userPassword-json字符串-发送至后端"><a href="#还记得之前封装好的MyAxios吧，与表单双向绑定后，携带-userAccount-userPassword-json字符串-发送至后端" class="headerlink" title="还记得之前封装好的MyAxios吧，与表单双向绑定后，携带 userAccount userPassword json字符串 发送至后端"></a>还记得之前封装好的MyAxios吧，与表单双向绑定后，携带 userAccount userPassword json字符串 发送至后端</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; requestData &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../models/user&quot;</span>;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><span class="hljs-keyword">const</span> userAccount = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-keyword">const</span> userPassword = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">res</span>: requestData = <span class="hljs-keyword">await</span> myAxios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/user/login&quot;</span>, &#123;<br>    <span class="hljs-attr">userAccount</span>: userAccount.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">userPassword</span>: userPassword.<span class="hljs-property">value</span>,<br>  &#125;);<br><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;登录成功&quot;</span>);<br>    <span class="hljs-comment">// 登录成功后跳转至主页</span><br>    router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;登录失败&quot;</span>);<br>  &#125;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="用户可以登录了，且登录后记录了用户登录态，将来可以获取到登录用户信息"><a href="#用户可以登录了，且登录后记录了用户登录态，将来可以获取到登录用户信息" class="headerlink" title="用户可以登录了，且登录后记录了用户登录态，将来可以获取到登录用户信息"></a>用户可以登录了，且登录后记录了用户登录态，将来可以获取到登录用户信息</h5></li><li><h5 id="我们在主页的钩子函数上实现一个功能，如果获取不到用户登录态，就跳转至登录页进行登录"><a href="#我们在主页的钩子函数上实现一个功能，如果获取不到用户登录态，就跳转至登录页进行登录" class="headerlink" title="我们在主页的钩子函数上实现一个功能，如果获取不到用户登录态，就跳转至登录页进行登录"></a>我们在主页的钩子函数上实现一个功能，如果获取不到用户登录态，就跳转至登录页进行登录</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 校验是否登录, 未登录则跳转至登录页;</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentUser</span>();<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>  <span class="hljs-keyword">if</span> (!res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;未登录!&quot;</span>);<br>    router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/user/login&quot;</span>);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="类似的，我们可以在之后的展示当前用户信息、修改用户信息之前，获取当前用户登录态，以便对该用户进行权限校验"><a href="#类似的，我们可以在之后的展示当前用户信息、修改用户信息之前，获取当前用户登录态，以便对该用户进行权限校验" class="headerlink" title="类似的，我们可以在之后的展示当前用户信息、修改用户信息之前，获取当前用户登录态，以便对该用户进行权限校验"></a>类似的，我们可以在之后的展示当前用户信息、修改用户信息之前，获取当前用户登录态，以便对该用户进行权限校验</h5></li></ul><h2 id="展示当前用户信息"><a href="#展示当前用户信息" class="headerlink" title="展示当前用户信息"></a>展示当前用户信息</h2><ul><li><h5 id="我们要在多个页面上-获取当前用户登录态-来校验权限，所以我们先把这个方法封装起来"><a href="#我们要在多个页面上-获取当前用户登录态-来校验权限，所以我们先把这个方法封装起来" class="headerlink" title="我们要在多个页面上 获取当前用户登录态 来校验权限，所以我们先把这个方法封装起来"></a>我们要在多个页面上 获取当前用户登录态 来校验权限，所以我们先把这个方法封装起来</h5></li><li><h5 id="在-service-user-ts-下实现"><a href="#在-service-user-ts-下实现" class="headerlink" title="在 service/user.ts 下实现"></a>在 service/user.ts 下实现</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><br><span class="hljs-comment">// 获取当前登录用户</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getCurrentUser</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> myAxios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/currentUser&quot;</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="那么这个方法就是封装好的-getCurrentUser-方法了"><a href="#那么这个方法就是封装好的-getCurrentUser-方法了" class="headerlink" title="那么这个方法就是封装好的 getCurrentUser() 方法了"></a>那么这个方法就是封装好的 getCurrentUser() 方法了</h5></li><li><h5 id="接下来，在UserPage下写一个钩子函数，获取当前用户并成功展示"><a href="#接下来，在UserPage下写一个钩子函数，获取当前用户并成功展示" class="headerlink" title="接下来，在UserPage下写一个钩子函数，获取当前用户并成功展示"></a>接下来，在UserPage下写一个钩子函数，获取当前用户并成功展示</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; getCurrentUser &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../service/user&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> user = <span class="hljs-title function_">ref</span>();<br><span class="hljs-comment">// 钩子函数</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 发送获取当前登录用户请求</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentUser</span>();<br><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;获取用户信息成功&quot;</span>);<br>    user.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;获取用户信息失败&quot;</span>);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="顺便优化了表单显示效果：当获取到-user-数据就显示表单信息，否则显示空白页面-Empty"><a href="#顺便优化了表单显示效果：当获取到-user-数据就显示表单信息，否则显示空白页面-Empty" class="headerlink" title="顺便优化了表单显示效果：当获取到 user 数据就显示表单信息，否则显示空白页面 Empty"></a>顺便优化了表单显示效果：当获取到 user 数据就显示表单信息，否则显示空白页面 Empty</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div v-if=&quot;user&quot;&gt;<br>    &lt;van-cell<br>      title=&quot;账号&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.userAccount&quot;<br>      @click=&quot;toEdit(&#x27;userAccount&#x27;, &#x27;账号&#x27;, user.userAccount)&quot;<br>    /&gt;vu<br>    &lt;van-cell<br>      title=&quot;昵称&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.username&quot;<br>      @click=&quot;toEdit(&#x27;username&#x27;, &#x27;昵称&#x27;, user.username)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;头像&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.avatarUrl&quot;<br>      @click=&quot;toEdit(&#x27;avatarUrl&#x27;, &#x27;头像&#x27;, user.avatarUrl)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;性别&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.gender&quot;<br>      @click=&quot;toEdit(&#x27;gender&#x27;, &#x27;性别&#x27;, user.gender)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;电话&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.phone&quot;<br>      @click=&quot;toEdit(&#x27;phone&#x27;, &#x27;电话&#x27;, user.phone)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;邮箱&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.email&quot;<br>      @click=&quot;toEdit(&#x27;email&#x27;, &#x27;邮箱&#x27;, user.email)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;星球编号&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.planetCode&quot;<br>      @click=&quot;toEdit(&#x27;planetCode&#x27;, &#x27;星球编号&#x27;, user.planetCode)&quot;<br>    /&gt;<br>    &lt;van-cell<br>      title=&quot;注册时间&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.createTime&quot;<br>      @click=&quot;toEdit(&#x27;createTime&#x27;, &#x27;注册时间&#x27;, user.createTime)&quot;<br>    /&gt;<br>     &lt;van-empty v-else description=&quot;获取用户信息失败&quot; /&gt;<br>  &lt;/div&gt;<br></code></pre></td></tr></table></figure><h2 id="发送修改信息请求"><a href="#发送修改信息请求" class="headerlink" title="发送修改信息请求"></a>发送修改信息请求</h2><ul><li><h5 id="之前我们实现过-UserPage页-的数据传输到-UserEditPage页"><a href="#之前我们实现过-UserPage页-的数据传输到-UserEditPage页" class="headerlink" title="之前我们实现过 UserPage页 的数据传输到 UserEditPage页"></a>之前我们实现过 UserPage页 的数据传输到 UserEditPage页</h5></li><li><h5 id="这次实现成功修改用户信息"><a href="#这次实现成功修改用户信息" class="headerlink" title="这次实现成功修改用户信息"></a>这次实现成功修改用户信息</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">values: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> currentUser = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentUser</span>();<br>  <span class="hljs-comment">//提交之前做校验</span><br>  <span class="hljs-keyword">if</span> (currentUser.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-comment">// 发送用户修改请求</span><br>    <span class="hljs-keyword">const</span> res = myAxios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/user/update&quot;</span>, &#123;<br>      <span class="hljs-attr">id</span>: currentUser.<span class="hljs-property">data</span>.<span class="hljs-property">id</span>,<br>      [editUser.<span class="hljs-property">value</span>.<span class="hljs-property">editKey</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>]: editUser.<span class="hljs-property">value</span>.<span class="hljs-property">currentValue</span>,<br>    &#125;);<br>    <br>   <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>) &#123;<br>     <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;修改成功&quot;</span>);<br>     router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/user&quot;</span>);<br>    &#125;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="同样的，执行修改之前我们又获取了一把用户登录态，并将该用户-id-连同-修改字段-一并发送至后端，这样后端就可以鉴权了"><a href="#同样的，执行修改之前我们又获取了一把用户登录态，并将该用户-id-连同-修改字段-一并发送至后端，这样后端就可以鉴权了" class="headerlink" title="同样的，执行修改之前我们又获取了一把用户登录态，并将该用户 id 连同 修改字段 一并发送至后端，这样后端就可以鉴权了"></a>同样的，执行修改之前我们又获取了一把用户登录态，并将该用户 id 连同 修改字段 一并发送至后端，这样后端就可以鉴权了</h5></li></ul><h1 id="打通前后端？"><a href="#打通前后端？" class="headerlink" title="打通前后端？"></a>打通前后端？</h1><ul><li><h5 id="ok，到目前为止，前后端基本打通了——是吗？"><a href="#ok，到目前为止，前后端基本打通了——是吗？" class="headerlink" title="ok，到目前为止，前后端基本打通了——是吗？"></a><em>ok，到目前为止，前后端基本打通了——是吗？</em></h5></li></ul><ul><li><h5 id="axios-发送请求时，默认不会携带cookie，这就导致了：你登录成功了，你的登录态也在后端写进cookie了，但是之后axios发送请求获取当前登录用户信息，由于没有cookie，是拿不到的"><a href="#axios-发送请求时，默认不会携带cookie，这就导致了：你登录成功了，你的登录态也在后端写进cookie了，但是之后axios发送请求获取当前登录用户信息，由于没有cookie，是拿不到的" class="headerlink" title="axios 发送请求时，默认不会携带cookie，这就导致了：你登录成功了，你的登录态也在后端写进cookie了，但是之后axios发送请求获取当前登录用户信息，由于没有cookie，是拿不到的"></a>axios 发送请求时，默认不会携带cookie，这就导致了：你登录成功了，你的登录态也在后端写进cookie了，但是之后axios发送请求获取当前登录用户信息，由于没有cookie，是拿不到的</h5></li><li><h5 id="拿不到当前登录用户信息，剩下的用户信息展示、信息修改就都是扯淡了"><a href="#拿不到当前登录用户信息，剩下的用户信息展示、信息修改就都是扯淡了" class="headerlink" title="拿不到当前登录用户信息，剩下的用户信息展示、信息修改就都是扯淡了"></a>拿不到当前登录用户信息，剩下的用户信息展示、信息修改就都是扯淡了</h5></li><li><h5 id="这是为什么呢？因为我们前后端分离，虽然前后端服务器都在本地，但前端端口号：7070-后端端口号：8081"><a href="#这是为什么呢？因为我们前后端分离，虽然前后端服务器都在本地，但前端端口号：7070-后端端口号：8081" class="headerlink" title="这是为什么呢？因为我们前后端分离，虽然前后端服务器都在本地，但前端端口号：7070  后端端口号：8081"></a>这是为什么呢？因为我们前后端分离，虽然前后端服务器都在本地，但前端端口号：7070  后端端口号：8081</h5></li><li><h5 id="两个相同域名-但不同端口的服务器-在请求响应，这就是浏览器上的跨域问题：解决跨域问题引起的axios无法正确携带cookie"><a href="#两个相同域名-但不同端口的服务器-在请求响应，这就是浏览器上的跨域问题：解决跨域问题引起的axios无法正确携带cookie" class="headerlink" title="两个相同域名 但不同端口的服务器 在请求响应，这就是浏览器上的跨域问题：解决跨域问题引起的axios无法正确携带cookie"></a>两个相同域名 但不同端口的服务器 在请求响应，这就是浏览器上的跨域问题：解决跨域问题引起的axios无法正确携带cookie</h5></li><li><h5 id="如何解决？这里有最简单的解决方法"><a href="#如何解决？这里有最简单的解决方法" class="headerlink" title="如何解决？这里有最简单的解决方法"></a>如何解决？这里有最简单的解决方法</h5></li><li><h5 id="前端-MyAxios-ts-加一行代码-——-withCredentials-true"><a href="#前端-MyAxios-ts-加一行代码-——-withCredentials-true" class="headerlink" title="前端   MyAxios.ts 加一行代码 —— withCredentials: true"></a>前端   MyAxios.ts 加一行代码 —— withCredentials: true</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> myAxios = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&quot;http://localhost:8081/api&quot;</span>,<br>  <span class="hljs-attr">withCredentials</span>: <span class="hljs-literal">true</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="后端-controller-加一行代码-——-CrossOrigin"><a href="#后端-controller-加一行代码-——-CrossOrigin" class="headerlink" title="后端 controller 加一行代码 —— @CrossOrigin"></a>后端 controller 加一行代码 —— @CrossOrigin</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@CrossOrigin</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>......................<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="到这里正常来讲问题就应该解决了，但如果这时你发现你前端所有的请求都报错的话，那说明：前端axios是允许携带cookie了，但后端服务器不接受"><a href="#到这里正常来讲问题就应该解决了，但如果这时你发现你前端所有的请求都报错的话，那说明：前端axios是允许携带cookie了，但后端服务器不接受" class="headerlink" title="到这里正常来讲问题就应该解决了，但如果这时你发现你前端所有的请求都报错的话，那说明：前端axios是允许携带cookie了，但后端服务器不接受"></a>到这里正常来讲问题就应该解决了，但如果这时你发现你前端所有的请求都报错的话，那说明：前端axios是允许携带cookie了，但后端服务器不接受</h5></li><li><h5 id="CrossOrigin没有起作用"><a href="#CrossOrigin没有起作用" class="headerlink" title="@CrossOrigin没有起作用"></a>@CrossOrigin没有起作用</h5></li><li><h5 id="那就试试第二种解决方案吧："><a href="#那就试试第二种解决方案吧：" class="headerlink" title="那就试试第二种解决方案吧："></a>那就试试第二种解决方案吧：</h5></li><li><h5 id="config-WebConfig-下编写拦截器"><a href="#config-WebConfig-下编写拦截器" class="headerlink" title="config/WebConfig 下编写拦截器"></a>config/WebConfig 下编写拦截器</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.memory.usercenter.config;<br><br><span class="hljs-keyword">import</span> com.memory.usercenter.common.JacksonObjectMapper;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.http.converter.HttpMessageConverter;<br><span class="hljs-keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Web配置类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加Web项目的拦截器</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        <span class="hljs-comment">// 对所有访问路径，都通过MyInterceptor类型的拦截器进行拦截</span><br>        registry.addInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MyInterceptor</span>()).addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>);<br>        <span class="hljs-comment">//放行登录页，登陆操作，静态资源</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 允许跨域请求</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> registry registry</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .allowedOrigins(<span class="hljs-string">&quot;http://localhost:7070&quot;</span>, <span class="hljs-string">&quot;http://localhost:8000&quot;</span>)<br>                .allowCredentials(<span class="hljs-literal">true</span>)<br>                .allowedMethods(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;DELETE&quot;</span>, <span class="hljs-string">&quot;PUT&quot;</span>)<br>                .maxAge(<span class="hljs-number">3600</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这个拦截器的重点是："><a href="#这个拦截器的重点是：" class="headerlink" title="这个拦截器的重点是："></a>这个拦截器的重点是：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 允许访问的请求地址 - 这里是 伙伴匹配 和 用户中心</span><br>.allowedOrigins(<span class="hljs-string">&quot;http://localhost:7070&quot;</span>, <span class="hljs-string">&quot;http://localhost:8000&quot;</span>)<br><span class="hljs-comment">// 允许携带cookie的请求</span><br>.allowCredentials(<span class="hljs-literal">true</span>)                   <br></code></pre></td></tr></table></figure><ul><li><h5 id="好！这样问题就完美解决了！"><a href="#好！这样问题就完美解决了！" class="headerlink" title="好！这样问题就完美解决了！"></a>好！这样问题就完美解决了！</h5></li><li><h5 id="但是我这边还有问题，前端请求仍然报错，最终我怀疑是我的前端域名有问题"><a href="#但是我这边还有问题，前端请求仍然报错，最终我怀疑是我的前端域名有问题" class="headerlink" title="但是我这边还有问题，前端请求仍然报错，最终我怀疑是我的前端域名有问题"></a>但是我这边还有问题，前端请求仍然报错，最终我怀疑是我的前端域名有问题</h5></li><li><h5 id="我的域名一直是http-127-0-0-1-7070，于是我这样干了："><a href="#我的域名一直是http-127-0-0-1-7070，于是我这样干了：" class="headerlink" title="我的域名一直是http://127.0.0.1:7070，于是我这样干了："></a>我的域名一直是<a href="http://127.0.0.1:7070，于是我这样干了：">http://127.0.0.1:7070，于是我这样干了：</a></h5></li><li><h5 id="vite-config-ts下："><a href="#vite-config-ts下：" class="headerlink" title="vite.config.ts下："></a>vite.config.ts下：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> dns <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;dns&quot;</span>;<br>dns.<span class="hljs-title function_">setDefaultResultOrder</span>(<span class="hljs-string">&quot;verbatim&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="成功把域名修改为http-localhost-7070了，于是一切都成功了"><a href="#成功把域名修改为http-localhost-7070了，于是一切都成功了" class="headerlink" title="成功把域名修改为http://localhost:7070了，于是一切都成功了"></a>成功把域名修改为<a href="http://localhost:7070了，于是一切都成功了">http://localhost:7070了，于是一切都成功了</a></h5></li><li><h5 id="当然我也试过这么改，没什么用"><a href="#当然我也试过这么改，没什么用" class="headerlink" title="当然我也试过这么改，没什么用"></a>当然我也试过这么改，没什么用</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-attr">server</span>: &#123;<br><span class="hljs-attr">host</span>: <span class="hljs-string">&quot;localhost&quot;</span>,<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">7070</span>,<br>  &#125;,<br></code></pre></td></tr></table></figure><ul><li><h5 id="好了，以上就是跨域axios携带cookie的解决办法"><a href="#好了，以上就是跨域axios携带cookie的解决办法" class="headerlink" title="好了，以上就是跨域axios携带cookie的解决办法"></a>好了，以上就是跨域axios携带cookie的解决办法</h5></li><li><h5 id="最后还有个小BUG，就是后端接收到前端发送的id时，由于id是long型，在传输过程中可能会有精度丢失，导致前后端的id不一致，这里的解决办法在之前的raggie-take-out里也用过，那便是："><a href="#最后还有个小BUG，就是后端接收到前端发送的id时，由于id是long型，在传输过程中可能会有精度丢失，导致前后端的id不一致，这里的解决办法在之前的raggie-take-out里也用过，那便是：" class="headerlink" title="最后还有个小BUG，就是后端接收到前端发送的id时，由于id是long型，在传输过程中可能会有精度丢失，导致前后端的id不一致，这里的解决办法在之前的raggie_take_out里也用过，那便是："></a>最后还有个小BUG，就是后端接收到前端发送的id时，由于id是long型，在传输过程中可能会有精度丢失，导致前后端的id不一致，这里的解决办法在之前的raggie_take_out里也用过，那便是：</h5></li><li><h5 id="提供对象转换器JacksonObjectMapper-common-基于Jackson进行Java到json数据的转换"><a href="#提供对象转换器JacksonObjectMapper-common-基于Jackson进行Java到json数据的转换" class="headerlink" title="提供对象转换器JacksonObjectMapper   common   基于Jackson进行Java到json数据的转换"></a>提供对象转换器JacksonObjectMapper   common   基于Jackson进行Java到json数据的转换</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.memory.usercenter.common;<br><br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.DeserializationFeature;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.<span class="hljs-keyword">module</span>.SimpleModule;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;<br><br><span class="hljs-keyword">import</span> java.math.BigInteger;<br><span class="hljs-keyword">import</span> java.time.LocalDate;<br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><span class="hljs-keyword">import</span> java.time.LocalTime;<br><span class="hljs-keyword">import</span> java.time.format.DateTimeFormatter;<br><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 对象映射器:基于jackson将Java对象转为json，或者将json转为Java对象</span><br><span class="hljs-comment"> * 将JSON解析为Java对象的过程称为 [从JSON反序列化Java对象]</span><br><span class="hljs-comment"> * 从Java对象生成JSON的过程称为 [序列化Java对象到JSON]</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JacksonObjectMapper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ObjectMapper</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_DATE_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_DATE_TIME_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_TIME_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;HH:mm:ss&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">JacksonObjectMapper</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>        <span class="hljs-comment">//收到未知属性时不报异常</span><br>        <span class="hljs-built_in">this</span>.configure(FAIL_ON_UNKNOWN_PROPERTIES, <span class="hljs-literal">false</span>);<br><br>        <span class="hljs-comment">//反序列化时，属性不存在的兼容处理</span><br>        <span class="hljs-built_in">this</span>.getDeserializationConfig().withoutFeatures(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);<br><br><br>        <span class="hljs-type">SimpleModule</span> <span class="hljs-variable">simpleModule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleModule</span>()<br>                .addDeserializer(LocalDateTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))<br>                .addDeserializer(LocalDate.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))<br>                .addDeserializer(LocalTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)))<br><br>                .addSerializer(BigInteger.class, ToStringSerializer.instance)<br>                .addSerializer(Long.class, ToStringSerializer.instance)<br>                .addSerializer(LocalDateTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))<br>                .addSerializer(LocalDate.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))<br>                .addSerializer(LocalTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));<br><br>        <span class="hljs-comment">//注册功能模块 例如，可以添加自定义序列化器和反序列化器</span><br>        <span class="hljs-built_in">this</span>.registerModule(simpleModule);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="在WebMvcConfig配置类中扩展Spring-mvc的消息处理器"><a href="#在WebMvcConfig配置类中扩展Spring-mvc的消息处理器" class="headerlink" title="在WebMvcConfig配置类中扩展Spring mvc的消息处理器"></a>在WebMvcConfig配置类中扩展Spring mvc的消息处理器</h5></li><li><h5 id="在此消息转换器中使用提供的对象转换器进行Java对象到json数据的转换"><a href="#在此消息转换器中使用提供的对象转换器进行Java对象到json数据的转换" class="headerlink" title="在此消息转换器中使用提供的对象转换器进行Java对象到json数据的转换"></a>在此消息转换器中使用提供的对象转换器进行Java对象到json数据的转换</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 扩展消息转换器</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> converters converters</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">extendMessageConverters</span><span class="hljs-params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;扩展消息转换器...&quot;</span>);<br>        <span class="hljs-comment">//创建消息转换器</span><br>        <span class="hljs-type">MappingJackson2HttpMessageConverter</span> <span class="hljs-variable">messageConverter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MappingJackson2HttpMessageConverter</span>();<br>        <span class="hljs-comment">//设置具体的对象映射器</span><br>        messageConverter.setObjectMapper(<span class="hljs-keyword">new</span> <span class="hljs-title class_">JacksonObjectMapper</span>());<br>        <span class="hljs-comment">//通过索引设置,让自己的转换器放在最前面,否则默认的jackson转换器会在最前面,用不上我们设置的转换器</span><br>        converters.add(<span class="hljs-number">0</span>, messageConverter);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这样就解决了long型数据精度丢失的问题了"><a href="#这样就解决了long型数据精度丢失的问题了" class="headerlink" title="这样就解决了long型数据精度丢失的问题了"></a>这样就解决了long型数据精度丢失的问题了</h5></li></ul><h1 id="导入用户数据"><a href="#导入用户数据" class="headerlink" title="导入用户数据"></a>导入用户数据</h1><ul><li><h5 id="第一种：Export-data-to-file导出数据（CSV格式），再Export-data-from-file导入数据-适用于快速导入少量的数据"><a href="#第一种：Export-data-to-file导出数据（CSV格式），再Export-data-from-file导入数据-适用于快速导入少量的数据" class="headerlink" title="第一种：Export data to file导出数据（CSV格式），再Export data from file导入数据    适用于快速导入少量的数据"></a>第一种：Export data to file导出数据（CSV格式），再Export data from file导入数据    适用于快速导入少量的数据</h5></li><li><h5 id="第二种就是用编程的方式批量插入数据了"><a href="#第二种就是用编程的方式批量插入数据了" class="headerlink" title="第二种就是用编程的方式批量插入数据了"></a>第二种就是用编程的方式批量插入数据了</h5></li><li><h5 id="先简单地写下代码实现方法吧："><a href="#先简单地写下代码实现方法吧：" class="headerlink" title="先简单地写下代码实现方法吧："></a>先简单地写下代码实现方法吧：</h5></li><li><h5 id="在once-InsertUser下编写："><a href="#在once-InsertUser下编写：" class="headerlink" title="在once/InsertUser下编写："></a>在once/InsertUser下编写：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InsertUser</span> &#123;<br>   ....................<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-comment">// 项目启动后, 每隔5秒就执行一次该方法</span><br>    <span class="hljs-meta">@Scheduled(fixedDelay = 5000)</span><br><span class="hljs-comment">//  @Scheduled(initialDelay = 5000, fixedDelay = Long.MAX_VALUE)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doInsertUsers</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">StopWatch</span> <span class="hljs-variable">stopWatch</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StopWatch</span>();<br>        System.out.println(<span class="hljs-string">&quot;go go go go&quot;</span>);<br>        <span class="hljs-comment">// 计时开始</span><br>        stopWatch.start();<br>        <span class="hljs-comment">// 插入数据条数</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">INSERT_NUM</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; INSERT_NUM; i++) &#123;<br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>            user.setUserAccount(<span class="hljs-string">&quot;memory&quot;</span>);<br>            user.setUsername(<span class="hljs-string">&quot;邓哈哈&quot;</span>);<br>            user.setUserPassword(<span class="hljs-string">&quot;12345678&quot;</span>);<br>            user.setAvatarUrl(<span class="hljs-string">&quot;&quot;</span>);<br>            user.setGender(<span class="hljs-string">&quot;&quot;</span>);<br>            user.setPhone(<span class="hljs-string">&quot;18889889898&quot;</span>);<br>            user.setEmail(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>);<br>            user.setUserStatus(<span class="hljs-number">0</span>);<br>            user.setUserRole(<span class="hljs-number">1</span>);<br>            user.setPlanetCode(<span class="hljs-string">&quot;17625&quot;</span>);<br>            user.setTags(<span class="hljs-string">&quot;&quot;</span>);<br>            <span class="hljs-comment">// 插入数据</span><br>            userService.save(user);<br>        &#125;<br>        <span class="hljs-comment">// 计时结束</span><br>        stopWatch.stop();<br>        <span class="hljs-comment">// 计算整个插入过程耗费的时间</span><br>        System.out.println(stopWatch.getTotalTimeMillis());<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="最后在项目启动类上写下："><a href="#最后在项目启动类上写下：" class="headerlink" title="最后在项目启动类上写下："></a>最后在项目启动类上写下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableScheduling</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="启动项目！每隔5秒就会插入1000条用户数据"><a href="#启动项目！每隔5秒就会插入1000条用户数据" class="headerlink" title="启动项目！每隔5秒就会插入1000条用户数据~"></a>启动项目！每隔5秒就会插入1000条用户数据~</h5></li><li><h5 id="然后我们写个测试类，在测试类中测试批量插入数据"><a href="#然后我们写个测试类，在测试类中测试批量插入数据" class="headerlink" title="然后我们写个测试类，在测试类中测试批量插入数据"></a>然后我们写个测试类，在测试类中测试批量插入数据</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InsertUserTest</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doInsertUsers1</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">StopWatch</span> <span class="hljs-variable">stopWatch</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StopWatch</span>();<br>        System.out.println(<span class="hljs-string">&quot;go go go go&quot;</span>);<br>        stopWatch.start();<br><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">INSERT_NUM</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; INSERT_NUM; i++) &#123;<br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>            user.setUserAccount(<span class="hljs-string">&quot;memory&quot;</span>);<br>            user.setUsername(<span class="hljs-string">&quot;邓哈哈&quot;</span>);<br>            user.setUserPassword(<span class="hljs-string">&quot;12345678&quot;</span>);<br>            user.setAvatarUrl(<span class="hljs-string">&quot;&quot;</span>);<br>            user.setGender(<span class="hljs-string">&quot;&quot;</span>);<br>            user.setPhone(<span class="hljs-string">&quot;18889889898&quot;</span>);<br>            user.setEmail(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>);<br>            user.setUserStatus(<span class="hljs-number">0</span>);<br>            user.setUserRole(<span class="hljs-number">1</span>);<br>            user.setPlanetCode(<span class="hljs-string">&quot;17625&quot;</span>);<br>            user.setTags(<span class="hljs-string">&quot;&quot;</span>);<br><br>            userService.save(user);<br>        &#125;<br><br>        stopWatch.stop();<br>        System.out.println(stopWatch.getTotalTimeMillis());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="我们采取批量插入的方式，一次性插入多条记录，减少建立和释放数据库连接的次数，提高插入效率"><a href="#我们采取批量插入的方式，一次性插入多条记录，减少建立和释放数据库连接的次数，提高插入效率" class="headerlink" title="我们采取批量插入的方式，一次性插入多条记录，减少建立和释放数据库连接的次数，提高插入效率"></a>我们采取批量插入的方式，一次性插入多条记录，减少建立和释放数据库连接的次数，提高插入效率</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 批量插入数据</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Test</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doInsertUsers2</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-type">StopWatch</span> <span class="hljs-variable">stopWatch</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StopWatch</span>();<br>       System.out.println(<span class="hljs-string">&quot;go go go go&quot;</span>);<br>       stopWatch.start();<br><br>       ArrayList&lt;User&gt; userList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>       <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">INSERT_NUM</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br>       <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; INSERT_NUM; i++) &#123;<br>           <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>           user.setUserAccount(<span class="hljs-string">&quot;memory&quot;</span>);<br>           user.setUsername(<span class="hljs-string">&quot;邓哈哈&quot;</span>);<br>           user.setUserPassword(<span class="hljs-string">&quot;12345678&quot;</span>);<br>           user.setAvatarUrl(<span class="hljs-string">&quot;&quot;</span>);<br>           user.setGender(<span class="hljs-string">&quot;&quot;</span>);<br>           user.setPhone(<span class="hljs-string">&quot;18889889898&quot;</span>);<br>           user.setEmail(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>);<br>           user.setUserStatus(<span class="hljs-number">0</span>);<br>           user.setUserRole(<span class="hljs-number">1</span>);<br>           user.setPlanetCode(<span class="hljs-string">&quot;17625&quot;</span>);<br>           user.setTags(<span class="hljs-string">&quot;&quot;</span>);<br>           userList.add(user);<br>       &#125;<br>       userService.saveBatch(userList, <span class="hljs-number">100</span>);<br><br>       stopWatch.stop();<br>       System.out.println(stopWatch.getTotalTimeMillis());<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="我们也可以采用并发的方式批量插入数据，效率更高"><a href="#我们也可以采用并发的方式批量插入数据，效率更高" class="headerlink" title="我们也可以采用并发的方式批量插入数据，效率更高"></a>我们也可以采用并发的方式批量插入数据，效率更高</h5></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 并发批量插入数据</span><br><span class="hljs-comment">  */</span><br> @<span class="hljs-title class_">Test</span><br> public <span class="hljs-keyword">void</span> <span class="hljs-title function_">doConcurrencyInsertUsers</span>(<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-comment">// new一个StopWatch对象</span><br>     <span class="hljs-title class_">StopWatch</span> stopWatch = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StopWatch</span>();<br>     <span class="hljs-comment">// 计时开始</span><br>     stopWatch.<span class="hljs-title function_">start</span>();<br>     <span class="hljs-comment">// 每条线程插入1000条</span><br>     int batchSize = <span class="hljs-number">1000</span>;<br>     int j = <span class="hljs-number">0</span>;<br>     <span class="hljs-comment">// 创建一个异步任务集合</span><br>     <span class="hljs-title class_">ArrayList</span>&lt;<span class="hljs-title class_">CompletableFuture</span>&lt;<span class="hljs-title class_">Void</span>&gt;&gt; futureList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>     <span class="hljs-comment">// 开10条线程</span><br>     <span class="hljs-keyword">for</span> (int i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>         <span class="hljs-comment">// 每条线程下new一个userList</span><br>         <span class="hljs-title class_">ArrayList</span>&lt;<span class="hljs-title class_">User</span>&gt; userList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>         <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>             j++;<br>             <span class="hljs-title class_">User</span> user = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>             user.<span class="hljs-title function_">setUserAccount</span>(<span class="hljs-string">&quot;memory&quot;</span>);<br>             user.<span class="hljs-title function_">setUsername</span>(<span class="hljs-string">&quot;邓哈哈&quot;</span>);<br>             user.<span class="hljs-title function_">setUserPassword</span>(<span class="hljs-string">&quot;12345678&quot;</span>);<br>             user.<span class="hljs-title function_">setAvatarUrl</span>(<span class="hljs-string">&quot;&quot;</span>);<br>             user.<span class="hljs-title function_">setGender</span>(<span class="hljs-string">&quot;&quot;</span>);<br>             user.<span class="hljs-title function_">setPhone</span>(<span class="hljs-string">&quot;18889889898&quot;</span>);<br>             user.<span class="hljs-title function_">setEmail</span>(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>);<br>             user.<span class="hljs-title function_">setUserStatus</span>(<span class="hljs-number">0</span>);<br>             user.<span class="hljs-title function_">setUserRole</span>(<span class="hljs-number">1</span>);<br>             user.<span class="hljs-title function_">setPlanetCode</span>(<span class="hljs-string">&quot;17625&quot;</span>);<br>             user.<span class="hljs-title function_">setTags</span>(<span class="hljs-string">&quot;&quot;</span>);<br><br>             userList.<span class="hljs-title function_">add</span>(user);<br>             <span class="hljs-comment">// 当该线程插满1000条数据，便退出该线程循环</span><br>             <span class="hljs-keyword">if</span> (j % batchSize == <span class="hljs-number">0</span>) &#123;<br>                 <span class="hljs-keyword">break</span>;<br>             &#125;<br>         &#125;<br>         <span class="hljs-comment">// 异步条件下, 执行批量插入</span><br>         <span class="hljs-title class_">CompletableFuture</span>&lt;<span class="hljs-title class_">Void</span>&gt; future = <span class="hljs-title class_">CompletableFuture</span>.<span class="hljs-title function_">runAsync</span>(() -&gt; &#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;threadName: &quot;</span> + <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">currentThread</span>().<span class="hljs-title function_">getName</span>());<br>             userService.<span class="hljs-title function_">saveBatch</span>(userList, batchSize);<br>         &#125;);<br>         <span class="hljs-comment">// 将该任务存储到异步任务集合当中</span><br>         futureList.<span class="hljs-title function_">add</span>(future);<br>     &#125;<br>     <span class="hljs-comment">// 结束所有异步任务</span><br>     <span class="hljs-title class_">CompletableFuture</span>.<span class="hljs-title function_">allOf</span>(futureList.<span class="hljs-title function_">toArray</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CompletableFuture</span>[]&#123;&#125;)).<span class="hljs-title function_">join</span>();<br>     <span class="hljs-comment">// 计时结束</span><br>     stopWatch.<span class="hljs-title function_">stop</span>();<br>     <span class="hljs-comment">// 计算插入所用总时间</span><br>     <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(stopWatch.<span class="hljs-title function_">getTotalTimeMillis</span>());<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="到此为止，批量导入用户数据我们就实现了"><a href="#到此为止，批量导入用户数据我们就实现了" class="headerlink" title="到此为止，批量导入用户数据我们就实现了"></a>到此为止，批量导入用户数据我们就实现了</h5></li><li><h5 id="接下来我们优化了批量插入的数据：1-账户非空且唯一-2-密码-加密-3-标签字符串-4-星球编号非空且唯一"><a href="#接下来我们优化了批量插入的数据：1-账户非空且唯一-2-密码-加密-3-标签字符串-4-星球编号非空且唯一" class="headerlink" title="接下来我们优化了批量插入的数据：1.账户非空且唯一  2.密码 加密  3.标签字符串  4.星球编号非空且唯一"></a>接下来我们优化了批量插入的数据：1.账户非空且唯一  2.密码 加密  3.标签字符串  4.星球编号非空且唯一</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>    user.setUserAccount(<span class="hljs-string">&quot;memory&quot;</span> + <span class="hljs-string">&quot;_&quot;</span> + (UUID.randomUUID() + <span class="hljs-string">&quot;&quot;</span>).substring(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>));<br>    user.setUsername(<span class="hljs-string">&quot;邓哈哈&quot;</span>);<br><span class="hljs-comment">//  user.setUsername(&quot;邓哇哇&quot;);</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex((SALT + <span class="hljs-number">12345678</span>).getBytes());<br>    user.setUserPassword(password);<br>    user.setAvatarUrl(<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;</span>);<br>    user.setGender(<span class="hljs-string">&quot;1&quot;</span>);<br><span class="hljs-comment">//  user.setGender(&quot;0&quot;);</span><br>    user.setPhone(<span class="hljs-string">&quot;18535854763&quot;</span>);<br>    user.setEmail(<span class="hljs-string">&quot;3348407547@qq.com&quot;</span>);<br>    user.setUserStatus(<span class="hljs-number">0</span>);<br>    user.setUserRole(<span class="hljs-number">0</span>);<br>    user.setPlanetCode(<span class="hljs-string">&quot;17625&quot;</span>);<br>    user.setTags(<span class="hljs-string">&quot;[\&quot;男\&quot;,\&quot;Java\&quot;,\&quot;Python\&quot;,\&quot;在校本科\&quot;,\&quot;开朗\&quot;,\&quot;努力中\&quot;]&quot;</span>);<br><span class="hljs-comment">//  user.setTags(&quot;[\&quot;女\&quot;,\&quot;Vue\&quot;,\&quot;Python\&quot;,\&quot;在校本科\&quot;,\&quot;发呆\&quot;,\&quot;emo中\&quot;]&quot;);</span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="接下来我们要开发主页了"><a href="#接下来我们要开发主页了" class="headerlink" title="接下来我们要开发主页了"></a>接下来我们要开发主页了</h5></li><li><h5 id="现阶段思路很简单，主页能够展示所有用户信息就行"><a href="#现阶段思路很简单，主页能够展示所有用户信息就行" class="headerlink" title="现阶段思路很简单，主页能够展示所有用户信息就行"></a>现阶段思路很简单，主页能够展示所有用户信息就行</h5></li></ul><h1 id="后端接口开发-2"><a href="#后端接口开发-2" class="headerlink" title="后端接口开发"></a>后端接口开发</h1><h2 id="查询全部用户"><a href="#查询全部用户" class="headerlink" title="查询全部用户"></a>查询全部用户</h2><ul><li><h5 id="service-层"><a href="#service-层" class="headerlink" title="service 层"></a>service 层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 展示所有用户信息</span><br><span class="hljs-comment">    * 分页查询</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> currentPage 当前页</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> pageSize    每页显示数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 用户列表</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> Page&lt;User&gt; <span class="hljs-title function_">selectPage</span><span class="hljs-params">(<span class="hljs-type">long</span> currentPage, <span class="hljs-type">long</span> pageSize)</span> &#123;<br>       LambdaQueryWrapper&lt;User&gt; lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LambdaQueryWrapper</span>&lt;&gt;();<br>       Page&lt;User&gt; userPage = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(currentPage, pageSize);<br><br>       <span class="hljs-keyword">return</span> userMapper.selectPage(userPage, lqw);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller-层"><a href="#controller-层" class="headerlink" title="controller 层"></a>controller 层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据标签查询用户</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 用户列表</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/recommend&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;User&gt;&gt; <span class="hljs-title function_">recommend</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> <span class="hljs-type">long</span> currentPage, <span class="hljs-type">long</span> pageSize)</span> &#123;<br>        Page&lt;User&gt; userList = userService.selectPage(currentPage, pageSize);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(userList);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="config-WebConfig-MP分页插件"><a href="#config-WebConfig-MP分页插件" class="headerlink" title="config    WebConfig    MP分页插件"></a>config    WebConfig    MP分页插件</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 分页插件（官网最新）</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@Bean</span><br>  <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br>      interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));<br>      <span class="hljs-keyword">return</span> interceptor;<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="接下来就是开发主页了"><a href="#接下来就是开发主页了" class="headerlink" title="接下来就是开发主页了"></a>接下来就是开发主页了</h5></li></ul><h1 id="前端页面开发-1"><a href="#前端页面开发-1" class="headerlink" title="前端页面开发"></a>前端页面开发</h1><h2 id="主页页面开发"><a href="#主页页面开发" class="headerlink" title="主页页面开发"></a>主页页面开发</h2><ul><li><h5 id="使用组件快速开发页面-（跟UserListPage页大同小异）"><a href="#使用组件快速开发页面-（跟UserListPage页大同小异）" class="headerlink" title="使用组件快速开发页面 （跟UserListPage页大同小异）"></a>使用组件快速开发页面 （跟UserListPage页大同小异）</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;content&quot; style=&quot;padding-bottom: 30px&quot;&gt;<br>    &lt;!-- 用户信息展示 --&gt;<br>    &lt;van-card<br>      v-for=&quot;user in userList&quot;<br>      :tag=&quot;`$&#123;user.gender&#125;`&quot;<br>      :title=&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;<br>      :desc=&quot;user.profile&quot;<br>      :thumb=&quot;`$&#123;user.avatarUrl&#125;`&quot;<br>    &gt;<br>    &lt;!-- 标签展示 --&gt;<br>      &lt;template #tags&gt;<br>        &lt;van-tag<br>          plain<br>          type=&quot;primary&quot;<br>          v-for=&quot;tag in user.tags&quot;<br>          style=&quot;margin-right: 3px; margin-top: 3px&quot;<br>        &gt;<br>          &#123;&#123; tag &#125;&#125;<br>        &lt;/van-tag&gt;<br>      &lt;/template&gt;<br>      <br>      &lt;template #footer&gt;<br>        &lt;van-button size=&quot;mini&quot;&gt;联系俺&lt;/van-button&gt;<br>      &lt;/template&gt;<br>    &lt;/van-card&gt;<br>    &lt;!-- 无用户信息展示 --&gt;<br>    &lt;van-empty v-if=&quot;!userList&quot; description=&quot;获取用户信息失败&quot; /&gt;<br>    &lt;!-- 分页插件 --&gt;<br>    &lt;van-pagination<br>      v-model=&quot;currentPage&quot; <br>      :total-items=&quot;total&quot;<br>      :items-per-page=&quot;pageSize&quot;<br>      force-ellipses<br>      @change=&quot;change&quot;<br>    /&gt;<br>  &lt;/div&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="页面发送请求到后端接口"><a href="#页面发送请求到后端接口" class="headerlink" title="页面发送请求到后端接口"></a>页面发送请求到后端接口</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; userType &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../models/user&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><br><span class="hljs-keyword">const</span> userList = <span class="hljs-title function_">ref</span>([]);<br><br><span class="hljs-comment">// 当前页码</span><br><span class="hljs-keyword">const</span> currentPage = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);<br><span class="hljs-comment">// 每页显示数</span><br><span class="hljs-keyword">let</span> pageSize = <span class="hljs-number">10</span>;<br><span class="hljs-comment">// 总记录数</span><br><span class="hljs-keyword">let</span> <span class="hljs-attr">total</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getPage</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">currentPage: <span class="hljs-built_in">number</span></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 发送请求, 获取用户数据列表</span><br>  <span class="hljs-keyword">const</span> userListData = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/recommend&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">currentPage</span>: currentPage,<br>        <span class="hljs-attr">pageSize</span>: pageSize,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>      total = response.<span class="hljs-property">data</span>?.<span class="hljs-property">total</span>;<br>      pageSize = response.<span class="hljs-property">data</span>?.<span class="hljs-property">size</span>;<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>?.<span class="hljs-property">records</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br>  <span class="hljs-comment">// 成功拿到用户数据列表(不为空)</span><br>  <span class="hljs-keyword">if</span> (userListData) &#123;<br>    <span class="hljs-comment">// 遍历用户数据列表</span><br>    userListData.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">user: userType</span>) =&gt;</span> &#123;<br>      <span class="hljs-comment">// 将gender的 &quot;1&quot;/&quot;0&quot; 渲染成 &quot;男&quot;/&quot;女&quot;</span><br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;1&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;男&quot;</span>;<br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;0&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;女&quot;</span>;<br>      <span class="hljs-comment">// JSON字符串序列化为列表</span><br>      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">tags</span>) user.<span class="hljs-property">tags</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(user.<span class="hljs-property">tags</span>);<br>    &#125;);<br>    <span class="hljs-comment">// 处理过后的用户列表</span><br>    userList.<span class="hljs-property">value</span> = userListData;<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// 用户列表, 钩子函数</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">getPage</span>(currentPage.<span class="hljs-property">value</span>);<br>&#125;);<br><br><span class="hljs-comment">// 改变页码</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">change</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-title function_">getPage</span>(currentPage.<span class="hljs-property">value</span>);<br>&#125;;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这块儿逻辑注释已经写得很清楚了，不过还是简单介绍一下吧："><a href="#这块儿逻辑注释已经写得很清楚了，不过还是简单介绍一下吧：" class="headerlink" title="这块儿逻辑注释已经写得很清楚了，不过还是简单介绍一下吧："></a>这块儿逻辑注释已经写得很清楚了，不过还是简单介绍一下吧：</h5></li><li><h5 id="axios请求，携带currentPage和pageSize发送至后端，响应到对应用户列表"><a href="#axios请求，携带currentPage和pageSize发送至后端，响应到对应用户列表" class="headerlink" title="axios请求，携带currentPage和pageSize发送至后端，响应到对应用户列表"></a>axios请求，携带currentPage和pageSize发送至后端，响应到对应用户列表</h5></li><li><h5 id="之前MyAxios封装过返回值：response-data"><a href="#之前MyAxios封装过返回值：response-data" class="headerlink" title="之前MyAxios封装过返回值：response.data"></a>之前MyAxios封装过返回值：response.data</h5></li><li><h5 id="需注意到，我们使用了vant的分页组件"><a href="#需注意到，我们使用了vant的分页组件" class="headerlink" title="需注意到，我们使用了vant的分页组件"></a>需注意到，我们使用了vant的分页组件</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 分页插件 --&gt;<br>   &lt;van-pagination<br>     v-model=&quot;currentPage&quot; -- 当前页码<br>     :total-items=&quot;total&quot; -- 记录总数<br>     :items-per-page=&quot;pageSize&quot; -- 每页记录数<br>     force-ellipses<br>     @change=&quot;change&quot; -- 改变页码<br>   /&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="有了这个组件，通过change方法，可以很方便地改变当前页码currentPage，同时执行查询，可以查到每页数据"><a href="#有了这个组件，通过change方法，可以很方便地改变当前页码currentPage，同时执行查询，可以查到每页数据" class="headerlink" title="有了这个组件，通过change方法，可以很方便地改变当前页码currentPage，同时执行查询，可以查到每页数据"></a>有了这个组件，通过change方法，可以很方便地改变当前页码currentPage，同时执行查询，可以查到每页数据</h5></li><li><h5 id="组件其他属性也都标明了，可以控制总记录数、每页记录数"><a href="#组件其他属性也都标明了，可以控制总记录数、每页记录数" class="headerlink" title="组件其他属性也都标明了，可以控制总记录数、每页记录数"></a>组件其他属性也都标明了，可以控制总记录数、每页记录数</h5></li><li><h5 id="这里我们使用response-data-records、response-data-size、response-data-total可分别获取：每页数据记录、每页数据容量、总记录数"><a href="#这里我们使用response-data-records、response-data-size、response-data-total可分别获取：每页数据记录、每页数据容量、总记录数" class="headerlink" title="这里我们使用response.data?.records、response.data?.size、response.data?.total可分别获取：每页数据记录、每页数据容量、总记录数"></a>这里我们使用response.data?.records、response.data?.size、response.data?.total可分别获取：每页数据记录、每页数据容量、总记录数</h5></li><li><h5 id="当然，组件上的总记录数total就可以拿到了，pageSize这边是固定死的，每页10条，暂不支持灵活改变每页显示数"><a href="#当然，组件上的总记录数total就可以拿到了，pageSize这边是固定死的，每页10条，暂不支持灵活改变每页显示数" class="headerlink" title="当然，组件上的总记录数total就可以拿到了，pageSize这边是固定死的，每页10条，暂不支持灵活改变每页显示数"></a>当然，组件上的总记录数total就可以拿到了，pageSize这边是固定死的，每页10条，暂不支持灵活改变每页显示数</h5></li><li><h5 id="以上是对这段逻辑实现的粗略介绍，如有疑问还请研读代码，实现过程是十分清晰的"><a href="#以上是对这段逻辑实现的粗略介绍，如有疑问还请研读代码，实现过程是十分清晰的" class="headerlink" title="以上是对这段逻辑实现的粗略介绍，如有疑问还请研读代码，实现过程是十分清晰的"></a>以上是对这段逻辑实现的粗略介绍，如有疑问还请研读代码，实现过程是十分清晰的</h5></li></ul><h1 id="Redis缓存"><a href="#Redis缓存" class="headerlink" title="Redis缓存"></a>Redis缓存</h1><ul><li><h5 id="之前我们给数据库批量插入了大量数据，并且在主页根据展示出所有用户信息"><a href="#之前我们给数据库批量插入了大量数据，并且在主页根据展示出所有用户信息" class="headerlink" title="之前我们给数据库批量插入了大量数据，并且在主页根据展示出所有用户信息"></a>之前我们给数据库批量插入了大量数据，并且在主页根据展示出所有用户信息</h5></li><li><h5 id="为了提高查询效率，我们还采用了分页查询的方式"><a href="#为了提高查询效率，我们还采用了分页查询的方式" class="headerlink" title="为了提高查询效率，我们还采用了分页查询的方式"></a>为了提高查询效率，我们还采用了分页查询的方式</h5></li><li><h5 id="但这种解决办法并不彻底，频繁查询数据库还是很低效，所以我们使用Redis技术来解决查询效率低下的问题"><a href="#但这种解决办法并不彻底，频繁查询数据库还是很低效，所以我们使用Redis技术来解决查询效率低下的问题" class="headerlink" title="但这种解决办法并不彻底，频繁查询数据库还是很低效，所以我们使用Redis技术来解决查询效率低下的问题"></a>但这种解决办法并不彻底，频繁查询数据库还是很低效，所以我们使用Redis技术来解决查询效率低下的问题</h5></li></ul><h2 id="Redis的引入和测试"><a href="#Redis的引入和测试" class="headerlink" title="Redis的引入和测试"></a>Redis的引入和测试</h2><ul><li><h5 id="之前在解决Session共享的时候已经做过了："><a href="#之前在解决Session共享的时候已经做过了：" class="headerlink" title="之前在解决Session共享的时候已经做过了："></a>之前在解决Session共享的时候已经做过了：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- https:<span class="hljs-comment">//mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis --&gt;</span><br>     &lt;dependency&gt;<br>         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>         &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;<br>         &lt;version&gt;<span class="hljs-number">2.6</span><span class="hljs-number">.4</span>&lt;/version&gt;<br>     &lt;/dependency&gt;<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment"># session 失效时间(分钟)</span><br>  <span class="hljs-attr">session:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">86640</span><br>    <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br>  <span class="hljs-comment"># redis 配置</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="引入了Redis，二话不说先测增删改查，接下来小小地测试一把（test-redis-RedisTest）："><a href="#引入了Redis，二话不说先测增删改查，接下来小小地测试一把（test-redis-RedisTest）：" class="headerlink" title="引入了Redis，二话不说先测增删改查，接下来小小地测试一把（test/redis/RedisTest）："></a>引入了Redis，二话不说先测增删改查，接下来小小地测试一把（test/redis/RedisTest）：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisTest</span> &#123;<br>   <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> RedisTemplate redisTemplate;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">StringRedisTemplate</span> <span class="hljs-variable">stringRedisTemplate</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRedisTemplate</span>();<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">()</span> &#123;<br>        stringRedisTemplate.opsForValue().set(<span class="hljs-string">&quot;memory&quot;</span>, <span class="hljs-string">&quot;邓哈哈&quot;</span>);<br><span class="hljs-comment">//        stringRedisTemplate.opsForValue().set(&quot;memory&quot;, 18);</span><br>        redisTemplate.opsForValue().set(<span class="hljs-string">&quot;memory2&quot;</span>, <span class="hljs-number">9</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">memory</span> <span class="hljs-operator">=</span> stringRedisTemplate.opsForValue().get(<span class="hljs-string">&quot;memory&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test2</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 增</span><br>        redisTemplate.opsForValue().set(<span class="hljs-string">&quot;memoryString&quot;</span>, <span class="hljs-string">&quot;dog&quot;</span>);<br>        redisTemplate.opsForValue().set(<span class="hljs-string">&quot;memoryInt&quot;</span>, <span class="hljs-number">1</span>);<br>        redisTemplate.opsForValue().set(<span class="hljs-string">&quot;memoryDouble&quot;</span>, <span class="hljs-number">3.0</span>);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        user.setId(<span class="hljs-number">9999L</span>);<br>        user.setUserAccount(<span class="hljs-string">&quot;memoryc7b93cb1b3&quot;</span>);<br>        redisTemplate.opsForValue().set(<span class="hljs-string">&quot;memoryUser&quot;</span>, user);<br>        <span class="hljs-comment">// 查</span><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">dog</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;memoryString&quot;</span>);<br>        Assertions.assertTrue(<span class="hljs-string">&quot;dog&quot;</span>.equals(dog));<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">anInt</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;memoryInt&quot;</span>);<br>        Assertions.assertTrue(<span class="hljs-number">1</span> == (Integer) anInt);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">anDouble</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;memoryDouble&quot;</span>);<br>        Assertions.assertTrue(<span class="hljs-number">3.0</span> == (Double) anDouble);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">memoryUser</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;memoryUser&quot;</span>);<br>        log.info(memoryUser + <span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-comment">// 删</span><br>        redisTemplate.delete(<span class="hljs-string">&quot;memoryInt&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="增删改查没有问题"><a href="#增删改查没有问题" class="headerlink" title="增删改查没有问题"></a>增删改查没有问题</h5></li><li><h5 id="这里存在这样的问题：RedisTemplate-底层的序列化方式，会导致存入的序列化后的value值成为乱码"><a href="#这里存在这样的问题：RedisTemplate-底层的序列化方式，会导致存入的序列化后的value值成为乱码" class="headerlink" title="这里存在这样的问题：RedisTemplate 底层的序列化方式，会导致存入的序列化后的value值成为乱码"></a>这里存在这样的问题：RedisTemplate 底层的序列化方式，会导致存入的序列化后的value值成为乱码</h5></li><li><h5 id="StringRedisTemplate-继承了-RedisTemplate-有效解决了这个问题，但只能存放-lt-String，String-gt"><a href="#StringRedisTemplate-继承了-RedisTemplate-有效解决了这个问题，但只能存放-lt-String，String-gt" class="headerlink" title="StringRedisTemplate 继承了 RedisTemplate 有效解决了这个问题，但只能存放&lt;String，String&gt;"></a>StringRedisTemplate 继承了 RedisTemplate 有效解决了这个问题，但只能存放&lt;String，String&gt;</h5></li><li><h5 id="综上，我们在使用Redis缓存技术时，可以自己自定义（封装一个）RedisTemplate"><a href="#综上，我们在使用Redis缓存技术时，可以自己自定义（封装一个）RedisTemplate" class="headerlink" title="综上，我们在使用Redis缓存技术时，可以自己自定义（封装一个）RedisTemplate"></a>综上，我们在使用Redis缓存技术时，可以自己自定义（封装一个）RedisTemplate</h5></li><li><h5 id="自定义-RedisTemplate-lt-String-Object-gt-config-RedisTemplateConfig"><a href="#自定义-RedisTemplate-lt-String-Object-gt-config-RedisTemplateConfig" class="headerlink" title="自定义 RedisTemplate&lt;String, Object&gt;    (config/RedisTemplateConfig)"></a>自定义 RedisTemplate&lt;String, Object&gt;    (config/RedisTemplateConfig)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisTemplateConfig</span> &#123;<br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="hljs-title function_">redisTemplate</span><span class="hljs-params">(RedisConnectionFactory connectionFactory)</span> &#123;<br>        <span class="hljs-comment">// 1.创建RedisTemplate对象</span><br>        RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisTemplate</span>&lt;&gt;();<br>        <span class="hljs-comment">// 2.设置连接工厂</span><br>        redisTemplate.setConnectionFactory(connectionFactory);<br>        <span class="hljs-comment">// 3.设置Key的序列化</span><br>        redisTemplate.setKeySerializer(RedisSerializer.string());<br>        <span class="hljs-comment">// 4.创建JSON序列化工具</span><br>        <span class="hljs-type">GenericJackson2JsonRedisSerializer</span> <span class="hljs-variable">jsonRedisSerializer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericJackson2JsonRedisSerializer</span>();<br>        <span class="hljs-comment">// 5.设置value的序列化</span><br>        redisTemplate.setValueSerializer(jsonRedisSerializer);<br>        <span class="hljs-keyword">return</span> redisTemplate;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="接下来，就要修改原分页查询用户信息的逻辑代码了"><a href="#接下来，就要修改原分页查询用户信息的逻辑代码了" class="headerlink" title="接下来，就要修改原分页查询用户信息的逻辑代码了"></a>接下来，就要修改原分页查询用户信息的逻辑代码了</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 展示所有用户信息</span><br><span class="hljs-comment">    * Redis缓存</span><br><span class="hljs-comment">    * 分页查询</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> currentPage 当前页</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> pageSize    每页显示数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 用户列表</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> Page&lt;User&gt; <span class="hljs-title function_">selectPage</span><span class="hljs-params">(<span class="hljs-type">long</span> currentPage, <span class="hljs-type">long</span> pageSize, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 获取当前登录用户</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-comment">// 拿到当前登录用户的key(每个用户都有各自对应的key)</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">redisKey</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;memory:user:recommend:%s&quot;</span>, loginUser.getId());<br>       <span class="hljs-comment">// 查缓存</span><br>       Page&lt;User&gt; userPage = (Page&lt;User&gt;) redisTemplate.opsForValue().get(redisKey);<br>       <span class="hljs-comment">// 缓存未中, 则返回用户信息</span><br>       <span class="hljs-keyword">if</span> (userPage != <span class="hljs-literal">null</span>) &#123;<br>           <span class="hljs-keyword">return</span> userPage;<br>       &#125;<br>       <span class="hljs-comment">// 缓存未命中, 查询数据库</span><br>       LambdaQueryWrapper&lt;User&gt; lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LambdaQueryWrapper</span>&lt;&gt;();<br>       userPage = userMapper.selectPage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(currentPage, pageSize), lqw);<br>       <span class="hljs-comment">// 将查询到的用户信息写到缓存中</span><br>       <span class="hljs-keyword">try</span> &#123;<br>           redisTemplate.opsForValue().set(redisKey, userPage, <span class="hljs-number">30000</span>, TimeUnit.MILLISECONDS);<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           log.error(<span class="hljs-string">&quot;redis set key error&quot;</span>, e);<br>       &#125;<br>       <span class="hljs-comment">// 返回用户数据</span><br>       <span class="hljs-keyword">return</span> userPage;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="那首次查询是不是不走缓存，只能走数据库了？那我们就要实现缓存预热，定时缓存"><a href="#那首次查询是不是不走缓存，只能走数据库了？那我们就要实现缓存预热，定时缓存" class="headerlink" title="那首次查询是不是不走缓存，只能走数据库了？那我们就要实现缓存预热，定时缓存"></a>那首次查询是不是不走缓存，只能走数据库了？那我们就要实现缓存预热，定时缓存</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/15 15:22</span><br><span class="hljs-comment"> * Function: 缓存预热</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PreCacheJob</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;<br>    <span class="hljs-comment">// 重点用户id(提供推送的用户id)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> List&lt;Long&gt; mainUserList = List.of(<span class="hljs-number">1L</span>);<br>    <span class="hljs-comment">// 每天执行，预热推荐用户</span><br>    <span class="hljs-meta">@Scheduled(cron = &quot;0 * * * *  *&quot;)</span>   <span class="hljs-comment">//自己设置时间测试</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doCacheRecommendUser2</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-comment">// 遍历每个重点用户</span><br>      <span class="hljs-keyword">for</span> (Long userId : mainUserList) &#123;<br>           QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>           <span class="hljs-comment">// 分页查询用户信息</span><br>           Page&lt;User&gt; userPage = userService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>), qw);<br>           <span class="hljs-comment">// 为每个重点用户设置预查询锁</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">redisKey</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;memory:user:recommend:%s&quot;</span>, userId);<br>           <span class="hljs-comment">//写缓存,30s过期</span><br>           <span class="hljs-keyword">try</span> &#123;<br>               redisTemplate.opsForValue().set(redisKey, userPage, <span class="hljs-number">30000</span>, TimeUnit.MILLISECONDS);<br>           &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>               log.error(<span class="hljs-string">&quot;redis set key error&quot;</span>, e);<br>           &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h1 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h1><ul><li><h5 id="问题来了，在实际工作中，我们面对的往往是集群服务器，难道在某一刻每台服务器都要执行预热缓存用户吗？"><a href="#问题来了，在实际工作中，我们面对的往往是集群服务器，难道在某一刻每台服务器都要执行预热缓存用户吗？" class="headerlink" title="问题来了，在实际工作中，我们面对的往往是集群服务器，难道在某一刻每台服务器都要执行预热缓存用户吗？"></a>问题来了，在实际工作中，我们面对的往往是集群服务器，难道在某一刻每台服务器都要执行预热缓存用户吗？</h5></li><li><h5 id="显然不需要。我们只需要一台服务器成功缓存到用户就行了。"><a href="#显然不需要。我们只需要一台服务器成功缓存到用户就行了。" class="headerlink" title="显然不需要。我们只需要一台服务器成功缓存到用户就行了。"></a>显然不需要。我们只需要一台服务器成功缓存到用户就行了。</h5></li><li><h5 id="要控制定时任务在同一时间只有-1-个服务器能执行。（怎么做？）"><a href="#要控制定时任务在同一时间只有-1-个服务器能执行。（怎么做？）" class="headerlink" title="要控制定时任务在同一时间只有 1 个服务器能执行。（怎么做？）"></a>要控制定时任务在同一时间只有 1 个服务器能执行。（怎么做？）</h5></li><li><p>分离定时任务程序和主程序，只在 1 个服务器运行定时任务。成本太大</p></li><li><p>写死配置，每个服务器都执行定时任务，但是只有 ip 符合配置的服务器才真实执行业务逻辑，其他的直接返回。成本最低；但是我们的 IP 可能是不固定的，把 IP 写的太死了</p></li><li><p>动态配置，配置是可以轻松的、很方便地更新的（<strong>代码无需重启</strong>），但是只有 ip 符合配置的服务器才真实执行业务逻辑。问题：服务器多了、IP 不可控还是很麻烦，还是要人工修改</p></li><li><ul><li>数据库</li><li>Redis</li><li>配置中心（Nacos、Apollo、Spring Cloud Config）</li></ul></li><li><p>分布式锁，只有抢到锁的服务器才能执行业务逻辑。坏处：增加成本；好处：不用手动配置，多少个服务器都一样。</p></li><li><h5 id="单机就会存在单点故障。"><a href="#单机就会存在单点故障。" class="headerlink" title="单机就会存在单点故障。"></a>单机就会存在单点故障。</h5></li><li><h5 id="多的概念在这里不再赘述，可以去看鱼皮的项目笔记，分布式锁实现原理以及注意事项讲的很清楚"><a href="#多的概念在这里不再赘述，可以去看鱼皮的项目笔记，分布式锁实现原理以及注意事项讲的很清楚" class="headerlink" title="多的概念在这里不再赘述，可以去看鱼皮的项目笔记，分布式锁实现原理以及注意事项讲的很清楚"></a>多的概念在这里不再赘述，可以去看鱼皮的项目笔记，分布式锁实现原理以及注意事项讲的很清楚</h5></li></ul><h2 id="Redisson-实现分布式锁"><a href="#Redisson-实现分布式锁" class="headerlink" title="Redisson 实现分布式锁"></a>Redisson 实现分布式锁</h2><ul><li><h5 id="Java-客户端，数据网格，实现了很多-Java-里支持的接口和数据结构"><a href="#Java-客户端，数据网格，实现了很多-Java-里支持的接口和数据结构" class="headerlink" title="Java 客户端，数据网格，实现了很多 Java 里支持的接口和数据结构"></a>Java 客户端，数据网格，实现了很多 Java 里支持的接口和数据结构</h5></li></ul><ul><li><h5 id="Redisson-是一个-java-操作-Redis-的客户端"><a href="#Redisson-是一个-java-操作-Redis-的客户端" class="headerlink" title="Redisson 是一个 java 操作 Redis 的客户端"></a>Redisson 是一个 java 操作 Redis 的客户端</h5></li><li><h5 id="提供了大量的分布式数据集来简化对-Redis-的操作和使用，可以让开发者像使用本地集合一样使用-Redis，完全感知不到-Redis-的存在。"><a href="#提供了大量的分布式数据集来简化对-Redis-的操作和使用，可以让开发者像使用本地集合一样使用-Redis，完全感知不到-Redis-的存在。" class="headerlink" title="提供了大量的分布式数据集来简化对 Redis 的操作和使用，可以让开发者像使用本地集合一样使用 Redis，完全感知不到 Redis 的存在。"></a>提供了大量的分布式数据集来简化对 Redis 的操作和使用，可以让开发者像使用本地集合一样使用 Redis，完全感知不到 Redis 的存在。</h5></li><li><h5 id="那我们就使用redission来快速实现分布式锁控制吧"><a href="#那我们就使用redission来快速实现分布式锁控制吧" class="headerlink" title="那我们就使用redission来快速实现分布式锁控制吧"></a>那我们就使用redission来快速实现分布式锁控制吧</h5></li><li><h5 id="导入相关依赖"><a href="#导入相关依赖" class="headerlink" title="导入相关依赖"></a>导入相关依赖</h5></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--redission--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.redisson<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>redisson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.19.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="完成相关配置-config-RedissionConfig-java"><a href="#完成相关配置-config-RedissionConfig-java" class="headerlink" title="完成相关配置    config/RedissionConfig.java"></a>完成相关配置    config/RedissionConfig.java</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.redis&quot;)</span><br><span class="hljs-meta">@Data</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedissionConfig</span> &#123;<br>    <span class="hljs-keyword">private</span> String host;<br><br>    <span class="hljs-keyword">private</span> String port;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedissonClient <span class="hljs-title function_">redissonClient</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 1. 创建配置</span><br>        <span class="hljs-type">Config</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Config</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">redisAddress</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;redis://%s:%s&quot;</span>, host, port);<br>        <span class="hljs-comment">//  使用单个Redis，没有开集群 useClusterServers()  设置地址和使用库</span><br>        config.useSingleServer().setAddress(redisAddress).setDatabase(<span class="hljs-number">3</span>);<br>        <span class="hljs-comment">// 2. 创建实例</span><br>        <span class="hljs-type">RedissonClient</span> <span class="hljs-variable">redisson</span> <span class="hljs-operator">=</span> Redisson.create(config);<br>        <span class="hljs-keyword">return</span> redisson;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="快速测试-test-RedisTest"><a href="#快速测试-test-RedisTest" class="headerlink" title="快速测试    test/RedisTest"></a>快速测试    test/RedisTest</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedissonTest</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> RedissonClient redissonClient;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// list，数据存在本地 JVM 内存中</span><br>        List&lt;String&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        list.add(<span class="hljs-string">&quot;yupi&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;list:&quot;</span> + list.get(<span class="hljs-number">0</span>));<br><br>        list.remove(<span class="hljs-number">0</span>);<br><br>        <span class="hljs-comment">// 数据存在 redis 的内存中</span><br>        RList&lt;String&gt; rList = redissonClient.getList(<span class="hljs-string">&quot;test-list&quot;</span>);<br>        rList.add(<span class="hljs-string">&quot;yupi&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;rlist:&quot;</span> + rList.get(<span class="hljs-number">0</span>));<br><span class="hljs-comment">// rList.remove(0);</span><br><br>        <span class="hljs-comment">// map</span><br>        Map&lt;String, Integer&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;yupi&quot;</span>, <span class="hljs-number">10</span>);<br>        map.get(<span class="hljs-string">&quot;yupi&quot;</span>);<br><br>        RMap&lt;Object, Object&gt; map1 = redissonClient.getMap(<span class="hljs-string">&quot;test-map&quot;</span>);<br>        map1.put(<span class="hljs-string">&quot;memory&quot;</span>, <span class="hljs-number">12</span>);<br>        map1.put(<span class="hljs-string">&quot;memory2&quot;</span>, <span class="hljs-number">12</span>);<br>        map1.put(<span class="hljs-string">&quot;memory3&quot;</span>, <span class="hljs-number">12</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="改造定时执行任务，用分布式锁实现，以下是实现逻辑："><a href="#改造定时执行任务，用分布式锁实现，以下是实现逻辑：" class="headerlink" title="改造定时执行任务，用分布式锁实现，以下是实现逻辑："></a>改造定时执行任务，用分布式锁实现，以下是实现逻辑：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/15 15:22</span><br><span class="hljs-comment"> * Function: 缓存预热</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PreCacheJob</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> RedissonClient redissonClient;<br>    <span class="hljs-comment">// 重点用户id(提供推送的用户id)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> List&lt;Long&gt; mainUserList = List.of(<span class="hljs-number">1L</span>);<br>    <span class="hljs-comment">// 每天执行，预热推荐用户</span><br>    <span class="hljs-meta">@Scheduled(cron = &quot;0 * * * *  *&quot;)</span>   <span class="hljs-comment">//自己设置时间测试</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doCacheRecommendUser</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 设置分布式锁</span><br>        <span class="hljs-type">RLock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> redissonClient.getLock(<span class="hljs-string">&quot;memory:preCacheJob:doCache:lock&quot;</span>);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 如果抢锁成功</span><br>            <span class="hljs-keyword">if</span> (lock.tryLock(<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>, TimeUnit.MILLISECONDS)) &#123;<br>                <span class="hljs-comment">// 遍历每个重点用户</span><br>                <span class="hljs-keyword">for</span> (Long userId : mainUserList) &#123;<br>                    QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>                    <span class="hljs-comment">// 分页查询用户信息</span><br>                    Page&lt;User&gt; userPage = userService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>), qw);<br>                    <span class="hljs-comment">// 为每个重点用户设置预查询锁</span><br>                    <span class="hljs-type">String</span> <span class="hljs-variable">redisKey</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;memory:user:recommend:%s&quot;</span>, userId);<br>                    <span class="hljs-comment">//写缓存,30s过期</span><br>                    <span class="hljs-keyword">try</span> &#123;<br>                        redisTemplate.opsForValue().set(redisKey, userPage, <span class="hljs-number">30000</span>, TimeUnit.MILLISECONDS);<br>                    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                        log.error(<span class="hljs-string">&quot;redis set key error&quot;</span>, e);<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>            log.info(<span class="hljs-string">&quot;error = &quot;</span> + e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-comment">// 如果该分布式锁是自己持有的</span><br>            <span class="hljs-keyword">if</span> (lock.isHeldByCurrentThread()) &#123;<br>                log.info(String.format(<span class="hljs-string">&quot;unlock: %s&quot;</span>, Thread.currentThread().getId()));<br>                <span class="hljs-comment">// 释放锁</span><br>                lock.unlock();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="这个逻辑就很清晰了，我们多开几个服务器测试一把"><a href="#这个逻辑就很清晰了，我们多开几个服务器测试一把" class="headerlink" title="这个逻辑就很清晰了，我们多开几个服务器测试一把"></a>这个逻辑就很清晰了，我们多开几个服务器测试一把</h5></li><li><h5 id="下次再更新这块儿吧，还有很多坑呢"><a href="#下次再更新这块儿吧，还有很多坑呢" class="headerlink" title="下次再更新这块儿吧，还有很多坑呢"></a>下次再更新这块儿吧，还有很多坑呢</h5></li></ul><h1 id="组队功能"><a href="#组队功能" class="headerlink" title="组队功能"></a>组队功能</h1><h2 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h2><ul><li><h5 id="队伍表"><a href="#队伍表" class="headerlink" title="队伍表"></a>队伍表</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java">create table <span class="hljs-title function_">team</span><br><span class="hljs-params">(</span><br><span class="hljs-params">    id          bigint auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> primary key,</span><br><span class="hljs-params">    user_id     bigint                             <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;队长id&#x27;</span>,</span><br><span class="hljs-params">    name        varchar(<span class="hljs-number">256</span>)</span>                       not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;队伍名称&#x27;</span>,<br>    description <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">1024</span>)</span>                      <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;描述&#x27;</span>,<br>    max_num     <span class="hljs-type">int</span>      <span class="hljs-keyword">default</span> <span class="hljs-number">1</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;最大人数&#x27;</span>,<br>    join_num    <span class="hljs-type">int</span>      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;已加人数&#x27;</span>,<br>    status      <span class="hljs-type">int</span>      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;0 - 公开，1 - 私有，2 - 加密&#x27;</span>,<br>    password    <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">512</span>)</span>                       <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;密码&#x27;</span>,<br>    expire_time datetime                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;过期时间&#x27;</span>,<br>    create_time datetime <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time datetime <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP <span class="hljs-literal">null</span> on update CURRENT_TIMESTAMP,<br>    is_delete   tinyint  <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;是否删除&#x27;</span><br>)<br>    comment <span class="hljs-string">&#x27;队伍表&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="队伍-用户表"><a href="#队伍-用户表" class="headerlink" title="队伍-用户表"></a>队伍-用户表</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">create table <span class="hljs-title function_">user_team</span><br><span class="hljs-params">(</span><br><span class="hljs-params">    id          bigint auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> primary key,</span><br><span class="hljs-params">    user_id     bigint                             <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;用户id&#x27;</span>,</span><br><span class="hljs-params">    team_id     bigint                             <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;队伍id&#x27;</span>,</span><br><span class="hljs-params">    join_time   datetime                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;加入时间&#x27;</span>,</span><br><span class="hljs-params">    create_time datetime <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,</span><br><span class="hljs-params">    update_time datetime <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;修改时间&#x27;</span>,</span><br><span class="hljs-params">    is_delete   tinyint  <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;是否删除&#x27;</span></span><br><span class="hljs-params">)</span><br>    comment <span class="hljs-string">&#x27;用户队伍关系&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="首先快速开发相关接口，之后再根据业务逻辑优化"><a href="#首先快速开发相关接口，之后再根据业务逻辑优化" class="headerlink" title="首先快速开发相关接口，之后再根据业务逻辑优化"></a>首先快速开发相关接口，之后再根据业务逻辑优化</h5><ul><li><h5 id="添加队伍"><a href="#添加队伍" class="headerlink" title="添加队伍"></a>添加队伍</h5></li><li><h5 id="删除队伍"><a href="#删除队伍" class="headerlink" title="删除队伍"></a>删除队伍</h5></li><li><h5 id="修改队伍"><a href="#修改队伍" class="headerlink" title="修改队伍"></a>修改队伍</h5></li><li><h5 id="按队伍id查找队伍"><a href="#按队伍id查找队伍" class="headerlink" title="按队伍id查找队伍"></a>按队伍id查找队伍</h5></li><li><h5 id="查找全部队伍"><a href="#查找全部队伍" class="headerlink" title="查找全部队伍"></a>查找全部队伍</h5></li></ul></li><li><h5 id="咱这建表速度还是很快滴"><a href="#咱这建表速度还是很快滴" class="headerlink" title="咱这建表速度还是很快滴~"></a>咱这建表速度还是很快滴~</h5></li><li><h5 id="再然后借助MybatisX-Generator快速生成domain、mapper、service和相关注意事项等就不说了"><a href="#再然后借助MybatisX-Generator快速生成domain、mapper、service和相关注意事项等就不说了" class="headerlink" title="再然后借助MybatisX-Generator快速生成domain、mapper、service和相关注意事项等就不说了"></a>再然后借助MybatisX-Generator快速生成domain、mapper、service和相关注意事项等就不说了</h5></li></ul><h3 id="新增队伍"><a href="#新增队伍" class="headerlink" title="新增队伍"></a>新增队伍</h3><ul><li><h5 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 新增队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team 队伍</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 队伍id</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-meta">@Transactional</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">teamAdd</span><span class="hljs-params">(TeamAdd team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 1.是否登录，未登录不允许创建</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>       <span class="hljs-comment">// 2.队伍人数 &gt; 1 且 &lt;= 20</span><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br>       <span class="hljs-keyword">if</span> (maxNum &lt; <span class="hljs-number">1</span> || maxNum &gt; <span class="hljs-number">20</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍人数不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 3.队伍标题 &lt;= 20</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> team.getName();<br>       <span class="hljs-keyword">if</span> (StringUtils.isBlank(name) || name.length() &gt; <span class="hljs-number">20</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍标题不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 4.描述 &lt;= 512</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">description</span> <span class="hljs-operator">=</span> team.getDescription();<br>       <span class="hljs-keyword">if</span> (StringUtils.isBlank(description) || description.length() &gt; <span class="hljs-number">512</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍描述不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 5.status 是否公开（int）不传默认为 0（公开）</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> Optional.ofNullable(team.getStatus()).orElse(<span class="hljs-number">0</span>);<br>       <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>       <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 6.校验队伍密码</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br>       <span class="hljs-comment">// 6.1.如果队伍非加密, 则不允许设置密码</span><br>       <span class="hljs-keyword">if</span> (statusEnum.getValue() != <span class="hljs-number">2</span>) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(password))<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍密码不符合要求&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 6.2.如果队伍加密, 一定要有密码, 且密码 &lt;= 32</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍密码不符合要求&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 7.当前时间 &gt; 超时时间</span><br>       <span class="hljs-type">Date</span> <span class="hljs-variable">expireTime</span> <span class="hljs-operator">=</span> team.getExpireTime();<br>       <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().after(expireTime))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;超时时间不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 8.校验用户已创建队伍数量(最多创建 5 个队伍)</span><br>       <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> loginUser.getId();<br>       QueryWrapper&lt;Team&gt; lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       lqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>       <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.count(lqw);<br>       <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;该用户创建队伍数量超出限制&quot;</span>);<br><br>       <span class="hljs-type">Team</span> <span class="hljs-variable">addTeam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Team</span>();<br>       BeanUtils.copyProperties(team, addTeam);<br><br>       <span class="hljs-comment">// 9.插入队伍信息到team表</span><br>       addTeam.setId(<span class="hljs-literal">null</span>);<br>       addTeam.setUserId(userId);<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">teamSave</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.save(addTeam);<br>       <span class="hljs-keyword">if</span> (!teamSave) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>       <span class="hljs-comment">// 10.插入用户-队伍关系到user_team表</span><br>       <span class="hljs-type">UserTeam</span> <span class="hljs-variable">userTeam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserTeam</span>();<br>       userTeam.setUserId(userId);<br>       userTeam.setTeamId(addTeam.getId());<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">userTeamSave</span> <span class="hljs-operator">=</span> userTeamService.save(userTeam);<br>       <span class="hljs-keyword">if</span> (!userTeamSave) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>       <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;新增队伍成功&quot;</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里status校验要留意，封装一个-constant-TeamStatuaEnum"><a href="#这里status校验要留意，封装一个-constant-TeamStatuaEnum" class="headerlink" title="这里status校验要留意，封装一个 constant/TeamStatuaEnum"></a>这里status校验要留意，封装一个 constant/TeamStatuaEnum</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/20 10:36</span><br><span class="hljs-comment"> * Function: 队伍状态枚举</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">TeamStatusEnum</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开, 在队伍大厅中可以直接加入</span><br><span class="hljs-comment">     */</span><br>    PUBLIC(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;公开&quot;</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 1 - 私有, 在队伍大厅中不可以直接加入</span><br><span class="hljs-comment">     */</span><br>    PRIVATE(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;私有&quot;</span>),<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 2 - 公开且加密, 加入队伍需要密码</span><br><span class="hljs-comment">     */</span><br>    SECRET(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;加密&quot;</span>);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> value;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String text;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断用户状态</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> value 用户状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 存在与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> TeamStatusEnum <span class="hljs-title function_">getEnumByValue</span><span class="hljs-params">(Integer value)</span> &#123;<br>        <span class="hljs-keyword">if</span> (value == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        TeamStatusEnum[] values = TeamStatusEnum.values();<br>        <span class="hljs-keyword">for</span> (TeamStatusEnum teamStatusEnum : values) &#123;<br>            <span class="hljs-keyword">if</span> (teamStatusEnum.getValue() == value) &#123;<br>                <span class="hljs-keyword">return</span> teamStatusEnum;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    TeamStatusEnum(<span class="hljs-type">int</span> value, String text) &#123;<br>        <span class="hljs-built_in">this</span>.value = value;<br>        <span class="hljs-built_in">this</span>.text = text;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setValue</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-built_in">this</span>.value = value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getText</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> text;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setText</span><span class="hljs-params">(String text)</span> &#123;<br>        <span class="hljs-built_in">this</span>.text = text;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="提醒一下，Enum枚举类不支持-Data注解哦"><a href="#提醒一下，Enum枚举类不支持-Data注解哦" class="headerlink" title="提醒一下，Enum枚举类不支持@Data注解哦"></a>提醒一下，Enum枚举类不支持@Data注解哦</h5></li><li><h5 id="再封装一个-model-request-TeamAdd，前端人员无需自行筛选填写哪些字段，这里还涉及到了-BeanUtils-的用法"><a href="#再封装一个-model-request-TeamAdd，前端人员无需自行筛选填写哪些字段，这里还涉及到了-BeanUtils-的用法" class="headerlink" title="再封装一个 /model/request/TeamAdd，前端人员无需自行筛选填写哪些字段，这里还涉及到了 BeanUtils 的用法"></a>再封装一个 /model/request/TeamAdd，前端人员无需自行筛选填写哪些字段，这里还涉及到了 BeanUtils 的用法</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/20 14:22</span><br><span class="hljs-comment"> * Function: 新增队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamAdd</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最大人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer maxNum;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 过期时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date expireTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开，1 - 私有，2 - 加密</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 密码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String password;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层-1"><a href="#controller层-1" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 新增队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team    新增队伍参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 新增成功与否</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">teamAdd</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamAdd team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// controller对参数的校验</span><br>       <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">teamAdd</span> <span class="hljs-operator">=</span> teamService.teamAdd(team, request);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(teamAdd);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="完成了，新增队伍功能暂时告一段落"><a href="#完成了，新增队伍功能暂时告一段落" class="headerlink" title="完成了，新增队伍功能暂时告一段落"></a>完成了，新增队伍功能暂时告一段落</h5></li></ul><h2 id="阶段性问题"><a href="#阶段性问题" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ol><li><h5 id="使用-Swagger-接口文档快速测试，这里访问文档还报错了，在启动类上加了-EnableSwagger2WebMvc-就解决了"><a href="#使用-Swagger-接口文档快速测试，这里访问文档还报错了，在启动类上加了-EnableSwagger2WebMvc-就解决了" class="headerlink" title="使用 Swagger 接口文档快速测试，这里访问文档还报错了，在启动类上加了 @EnableSwagger2WebMvc 就解决了"></a>使用 Swagger 接口文档快速测试，这里访问文档还报错了，在启动类上加了 @EnableSwagger2WebMvc 就解决了</h5></li><li><h5 id="奶奶的想启动个前端登陆一下还他妈报错启动失败，看了一下是我的node没了（鬼删的？）导致npm环境变量没配好"><a href="#奶奶的想启动个前端登陆一下还他妈报错启动失败，看了一下是我的node没了（鬼删的？）导致npm环境变量没配好" class="headerlink" title="奶奶的想启动个前端登陆一下还他妈报错启动失败，看了一下是我的node没了（鬼删的？）导致npm环境变量没配好"></a>奶奶的想启动个前端登陆一下还他妈报错启动失败，看了一下是我的node没了（鬼删的？）导致npm环境变量没配好</h5></li><li><h5 id="看了眼环境变量，真几把乱，我就纳闷了我记得很整洁来着，很快就搞好了"><a href="#看了眼环境变量，真几把乱，我就纳闷了我记得很整洁来着，很快就搞好了" class="headerlink" title="看了眼环境变量，真几把乱，我就纳闷了我记得很整洁来着，很快就搞好了"></a>看了眼环境变量，真几把乱，我就纳闷了我记得很整洁来着，很快就搞好了</h5></li><li><h5 id="重新捋了一遍通用返回对象，新增了新的异常对象（ErrorCode-errorCode，String-description）"><a href="#重新捋了一遍通用返回对象，新增了新的异常对象（ErrorCode-errorCode，String-description）" class="headerlink" title="重新捋了一遍通用返回对象，新增了新的异常对象（ErrorCode errorCode，String description）"></a>重新捋了一遍通用返回对象，新增了新的异常对象（ErrorCode errorCode，String description）</h5><h5 id="实现思路可以看下通用返回对象-Xmind，具体代码还请跳转至用户中心-开发文档，内容已同步更新"><a href="#实现思路可以看下通用返回对象-Xmind，具体代码还请跳转至用户中心-开发文档，内容已同步更新" class="headerlink" title="实现思路可以看下通用返回对象.Xmind，具体代码还请跳转至用户中心-开发文档，内容已同步更新"></a>实现思路可以看下通用返回对象.Xmind，具体代码还请跳转至用户中心-开发文档，内容已同步更新</h5></li><li><h5 id="改了下npm环境变量还手贱删除了nodejs，俺的个人博客都被搞垮啦，之后会总结个人博客部署流程的"><a href="#改了下npm环境变量还手贱删除了nodejs，俺的个人博客都被搞垮啦，之后会总结个人博客部署流程的" class="headerlink" title="改了下npm环境变量还手贱删除了nodejs，俺的个人博客都被搞垮啦，之后会总结个人博客部署流程的"></a>改了下npm环境变量还手贱删除了nodejs，俺的个人博客都被搞垮啦，之后会总结个人博客部署流程的</h5></li><li><h5 id="team表添加了join-num字段，存储当前队伍已加人数，记得同步修改更新xml、mapper、domain"><a href="#team表添加了join-num字段，存储当前队伍已加人数，记得同步修改更新xml、mapper、domain" class="headerlink" title="team表添加了join_num字段，存储当前队伍已加人数，记得同步修改更新xml、mapper、domain"></a>team表添加了join_num字段，存储当前队伍已加人数，记得同步修改更新xml、mapper、domain</h5></li></ol><h3 id="查询队伍"><a href="#查询队伍" class="headerlink" title="查询队伍"></a>查询队伍</h3><ul><li><h5 id="service层-1"><a href="#service层-1" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 查询队伍(分页查询)</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> team 查询参数</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 符合条件的队伍</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> Page&lt;Team&gt; <span class="hljs-title function_">teamList</span><span class="hljs-params">(TeamQuery team, HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">// 登录校验</span><br>      <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>      <span class="hljs-keyword">if</span> (loginUser != <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>      QueryWrapper&lt;Team&gt; tqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br><br>      <span class="hljs-comment">// 1.根据队伍名查询</span><br>      <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> team.getName();<br>      <span class="hljs-keyword">if</span> (StringUtils.isBlank(name) || name.length() &gt; <span class="hljs-number">20</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍名不符合要求&quot;</span>);<br>      tqw.like(<span class="hljs-string">&quot;name&quot;</span>, name);<br><br>      <span class="hljs-comment">// 2.根据队伍描述查询</span><br>      <span class="hljs-type">String</span> <span class="hljs-variable">description</span> <span class="hljs-operator">=</span> team.getDescription();<br>      <span class="hljs-keyword">if</span> (StringUtils.isBlank(description) || description.length() &gt; <span class="hljs-number">512</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍描述不符合要求&quot;</span>);<br>      tqw.like(<span class="hljs-string">&quot;description&quot;</span>, description);<br><br>      <span class="hljs-comment">// 3.根据队长id查询</span><br>      <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> team.getUserId();<br>      <span class="hljs-keyword">if</span> (userId == <span class="hljs-literal">null</span> || userId &lt; <span class="hljs-number">0</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队长id不符合要求&quot;</span>);<br>      tqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br><br>      <span class="hljs-comment">// 4.根据最大人数查询</span><br>      <span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br>      <span class="hljs-keyword">if</span> (maxNum == <span class="hljs-literal">null</span> || maxNum &lt; <span class="hljs-number">0</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍最大人数不符合要求&quot;</span>);<br>      tqw.eq(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum);<br><br>      <span class="hljs-comment">// 5.根据队伍状态查询</span><br>      <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>      <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>      <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br>      tqw.like(<span class="hljs-string">&quot;status&quot;</span>, status);<br><br>      <span class="hljs-comment">// 6.分页查询</span><br>      Page&lt;Team&gt; teamPage = <span class="hljs-built_in">this</span>.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>), tqw);<br>      <span class="hljs-keyword">if</span> (teamPage == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>      <span class="hljs-keyword">return</span> teamPage;<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="逻辑还是很简单的，前端传param参数，后端接口封装一个队伍查询信息类，再依次对每个字段校验，最后分页查询实现"><a href="#逻辑还是很简单的，前端传param参数，后端接口封装一个队伍查询信息类，再依次对每个字段校验，最后分页查询实现" class="headerlink" title="逻辑还是很简单的，前端传param参数，后端接口封装一个队伍查询信息类，再依次对每个字段校验，最后分页查询实现"></a>逻辑还是很简单的，前端传param参数，后端接口封装一个队伍查询信息类，再依次对每个字段校验，最后分页查询实现</h5></li><li><h5 id="这里还遇到一个问题，我写成这样：QueryWrapper-tqw-new-QueryWrapper-lt-gt-team-它的SQL查询语句就默认自带了-where-name-导致-twq-like-“name”-name-失效了，搞了半天才发现"><a href="#这里还遇到一个问题，我写成这样：QueryWrapper-tqw-new-QueryWrapper-lt-gt-team-它的SQL查询语句就默认自带了-where-name-导致-twq-like-“name”-name-失效了，搞了半天才发现" class="headerlink" title="这里还遇到一个问题，我写成这样：QueryWrapper tqw = new QueryWrapper&lt;&gt;(team)   它的SQL查询语句就默认自带了 where name = ? 导致 twq.like(“name”, name) 失效了，搞了半天才发现"></a>这里还遇到一个问题，我写成这样：QueryWrapper<Team> tqw = new QueryWrapper&lt;&gt;(team)   它的SQL查询语句就默认自带了 where name = ? 导致 twq.like(“name”, name) 失效了，搞了半天才发现</h5></li><li><h5 id="controller层-2"><a href="#controller层-2" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 查询队伍</span><br><span class="hljs-comment">   * 分页查询</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> team 查询队伍参数</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 队伍列表</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@GetMapping(&quot;/list/page&quot;)</span><br>  <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;Team&gt;&gt; <span class="hljs-title function_">teamList</span><span class="hljs-params">(TeamQuery team, HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">// controller对参数的校验</span><br>      <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>      Page&lt;Team&gt; teamPage = teamService.teamList(team, request);<br>      <span class="hljs-keyword">return</span> ResultUtils.success(teamPage);<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="修改队伍-1"><a href="#修改队伍-1" class="headerlink" title="修改队伍"></a>修改队伍</h3><ul><li><h5 id="service层-2"><a href="#service层-2" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 修改队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team 队伍修改信息</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 修改成功与否</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">teamUpdate</span><span class="hljs-params">(TeamUpdate team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 校验是否登录</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>       <span class="hljs-comment">// 1.校验修改权限(只有管理员或队长可以修改)</span><br>       <span class="hljs-keyword">if</span> (!loginUser.getId().equals(team.getUserId()) &amp;&amp; !isAdmin(loginUser))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH, <span class="hljs-string">&quot;非队长且非管理员&quot;</span>);<br><br>       <span class="hljs-comment">// 2.判断队伍是否存在</span><br>       <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> team.getId();<br>       <span class="hljs-keyword">if</span> (id == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>       <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(id);<br>       <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>       <span class="hljs-comment">// 3.校验队伍名</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> team.getName();<br>       <span class="hljs-keyword">if</span> (StringUtils.isBlank(name) || name.length() &gt; <span class="hljs-number">20</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍名不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 4.校验队伍描述</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">description</span> <span class="hljs-operator">=</span> team.getDescription();<br>       <span class="hljs-keyword">if</span> (StringUtils.isBlank(description) || description.length() &gt; <span class="hljs-number">512</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍描述不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 5.校验队伍状态</span><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>       <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>       <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 6.校验队伍密码</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br>       <span class="hljs-comment">// 6.1.如果队伍非加密, 则不允许设置密码</span><br>       <span class="hljs-keyword">if</span> (!TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(password))<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍密码不符合要求&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 6.2.如果队伍加密, 一定要有密码, 且密码 &lt;= 32</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍密码不符合要求&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 7.更新队伍信息</span><br>       <span class="hljs-type">Team</span> <span class="hljs-variable">updateTeam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Team</span>();<br>       BeanUtils.copyProperties(team, updateTeam);<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">update</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.updateById(updateTeam);<br>       <span class="hljs-keyword">if</span> (!update)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;修改队伍失败&quot;</span>);<br><br>       <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;修改信息成功&quot;</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层-3"><a href="#controller层-3" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改队伍</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team    修改队伍参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 修改成功游戏</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">teamUpdate</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamUpdate team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">teamUpdate</span> <span class="hljs-operator">=</span> teamService.teamUpdate(team, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(teamUpdate);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装-查询队伍参数-teamQuery"><a href="#封装-查询队伍参数-teamQuery" class="headerlink" title="封装 查询队伍参数 teamQuery"></a>封装 查询队伍参数 teamQuery</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/20 10:10</span><br><span class="hljs-comment"> * Function: 查询队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamQuery</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最大人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer maxNum;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队长id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开，1 - 私有，2 - 加密</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装-修改队伍参数-teamUpdate"><a href="#封装-修改队伍参数-teamUpdate" class="headerlink" title="封装 修改队伍参数 teamUpdate"></a>封装 修改队伍参数 teamUpdate</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/26 14:00</span><br><span class="hljs-comment"> * Function: 修改队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamUpdate</span> &#123;<br>    <span class="hljs-comment">/***</span><br><span class="hljs-comment">     * 队伍id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/***</span><br><span class="hljs-comment">     * 队长id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开，1 - 私有，2 - 加密</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 密码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String password;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="阶段性问题-1"><a href="#阶段性问题-1" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="注意到我们查询队伍接收param参数，新增队伍和修改队伍接收JSON参数，记得封装的参数类要实现每个成员属性的get、set方法"><a href="#注意到我们查询队伍接收param参数，新增队伍和修改队伍接收JSON参数，记得封装的参数类要实现每个成员属性的get、set方法" class="headerlink" title="注意到我们查询队伍接收param参数，新增队伍和修改队伍接收JSON参数，记得封装的参数类要实现每个成员属性的get、set方法"></a>注意到我们查询队伍接收param参数，新增队伍和修改队伍接收JSON参数，记得封装的参数类要实现每个成员属性的get、set方法</h5></li><li><h5 id="体会到封装参数接受类request的好处，还是那句话，前后端联调更加方便-–-gt-BeanUtils的用法"><a href="#体会到封装参数接受类request的好处，还是那句话，前后端联调更加方便-–-gt-BeanUtils的用法" class="headerlink" title="体会到封装参数接受类request的好处，还是那句话，前后端联调更加方便 –&gt; BeanUtils的用法"></a>体会到封装参数接受类request的好处，还是那句话，前后端联调更加方便 –&gt; BeanUtils的用法</h5></li><li><h5 id="优化了相关业务的代码，更加简洁易懂了"><a href="#优化了相关业务的代码，更加简洁易懂了" class="headerlink" title="优化了相关业务的代码，更加简洁易懂了"></a>优化了相关业务的代码，更加简洁易懂了</h5></li><li><h5 id="这里应该捋一捋我对相关业务流程的理解的，放到明天啦"><a href="#这里应该捋一捋我对相关业务流程的理解的，放到明天啦" class="headerlink" title="这里应该捋一捋我对相关业务流程的理解的，放到明天啦~"></a>这里应该捋一捋我对相关业务流程的理解的，放到明天啦~</h5></li></ul><h2 id="业务流程梳理"><a href="#业务流程梳理" class="headerlink" title="业务流程梳理"></a>业务流程梳理</h2><ul><li><h5 id="新增队伍-1"><a href="#新增队伍-1" class="headerlink" title="新增队伍"></a>新增队伍</h5></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs applescript">用户传参：队伍名、描述、最大人数、状态、密码、过期时间<br>（队长<span class="hljs-built_in">id</span>指定、队伍<span class="hljs-built_in">id</span>随机生成、初始化成员数量为<span class="hljs-number">0</span>、创建时间、修改时间、逻辑删除）<br><span class="hljs-number">1.</span>校验是否登录，未登录不允许新增<br><span class="hljs-number">2.</span>队伍名 &lt;= <span class="hljs-number">20</span><br><span class="hljs-number">3.</span>描述 &lt;= <span class="hljs-number">512</span><br><span class="hljs-number">4.</span>队伍人数 &gt; <span class="hljs-number">1</span> 且 &lt;= <span class="hljs-number">20</span><br><span class="hljs-number">5.</span>队伍状态，公开？私有？加密？<br><span class="hljs-number">6.</span>校验队伍密码<br><span class="hljs-number">6.1</span>.如果队伍非加密, 则不允许设置密码<br><span class="hljs-number">6.2</span>.如果队伍加密, 一定要有密码, 且密码 &lt;= <span class="hljs-number">32</span><br><span class="hljs-number">7.</span>校验过期时间：当前时间 &gt; 过期时间<br><span class="hljs-number">8.</span>校验用户已创建队伍数量(最多创建 <span class="hljs-number">5</span> 个队伍)<br><span class="hljs-number">9.</span>更新team表<br><span class="hljs-number">10.</span>更新user_team表<br></code></pre></td></tr></table></figure><ul><li><h5 id="查询队伍-1"><a href="#查询队伍-1" class="headerlink" title="查询队伍"></a>查询队伍</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">用户传参：队伍名<span class="hljs-regexp">/描述/</span>最大人数<span class="hljs-regexp">/状态/</span>队长id<br>用户可以根据这些参数来筛选队伍：队伍名、描述、最大人数、状态、队长id<br><span class="hljs-number">1</span>.校验是否登录，未登录不允许查询<br><span class="hljs-number">2</span>.根据队伍名查询(&lt;= <span class="hljs-number">20</span>)<br><span class="hljs-number">3</span>.根据描述查询(&lt;= <span class="hljs-number">512</span>)<br><span class="hljs-number">4</span>.根据最大人数查询(&lt;= <span class="hljs-number">20</span>)<br><span class="hljs-number">5</span>.根据状态查询，公开？私有？加密？<br><span class="hljs-number">6</span>.根据队长id查询<br>注：<br><span class="hljs-number">0</span> - 公开, 在队伍大厅中可以直接加入<br><span class="hljs-number">1</span> - 私有, 在队伍大厅中不可以直接加入<br><span class="hljs-number">2</span> - 公开且加密, 加入队伍需要密码<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改队伍-2"><a href="#修改队伍-2" class="headerlink" title="修改队伍"></a>修改队伍</h5></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs applescript">用户传参：队伍<span class="hljs-built_in">id</span>、队长<span class="hljs-built_in">id</span>、队伍名/描述/状态/密码<br>用户可以修改这些队伍信息：队伍名、描述、状态、密码<br>修改队伍参数中还会封装队伍<span class="hljs-built_in">id</span>和队长<span class="hljs-built_in">id</span><br><span class="hljs-number">1.</span>校验是否登录，未登录不允许修改<br><span class="hljs-number">2.</span>校验队伍是否存在<br><span class="hljs-number">3.</span>校验用户是否为队长或管理员，否则不允许修改<br><span class="hljs-number">4.</span>修改队伍名(&lt;= <span class="hljs-number">20</span>)<br><span class="hljs-number">5.</span>修改描述(&lt;= <span class="hljs-number">512</span>)<br><span class="hljs-number">6.</span>修改状态<br><span class="hljs-number">7.1</span>.如果修改公开或私有，则不允许设置密码<br><span class="hljs-number">7.2</span>.如果修改为加密，则密码不允许为空(&lt;= <span class="hljs-number">32</span>)<br><span class="hljs-number">8.</span>执行更新<br></code></pre></td></tr></table></figure><h3 id="用户加入队伍"><a href="#用户加入队伍" class="headerlink" title="用户加入队伍"></a>用户加入队伍</h3><ul><li><h5 id="service层-3"><a href="#service层-3" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 加入队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team    加入队伍参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 加入队伍成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Transactional</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">joinTeam</span><span class="hljs-params">(TeamJoin team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 登录校验</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>       <span class="hljs-comment">// 1.校验队伍是否存在</span><br>       <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> team.getId();<br>       <span class="hljs-keyword">if</span> (id == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>       <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(id);<br>       <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>       <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>       <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br><br>       <span class="hljs-comment">// 2.用户不能加入私有队伍</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.PRIVATE.equals(statusEnum))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;不能主动加入私有队伍&quot;</span>);<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br><br>       <span class="hljs-comment">// 校验密码</span><br>       <span class="hljs-comment">// 3.1.用户加入加密队伍必须输入密码</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入加密队伍要提供正确的密码&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 3.2.用户加入公开队伍不需要密码</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(password))<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入公开队伍无需密码&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 4.同一用户最多加入5个队伍</span><br>       QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> loginUser.getId();<br>       utqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>       <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> userTeamService.count(utqw);<br>       <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;该用户加入队伍已达上限&quot;</span>);<br><br>       <span class="hljs-comment">// 5.不能重复加入已加入的队伍</span><br>       utqw.eq(<span class="hljs-string">&quot;team_id&quot;</span>, team.getId());<br>       count = userTeamService.count(utqw);<br>       <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">0</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;您已在该队伍中&quot;</span>);<br><br>       <span class="hljs-comment">// 6.不能加入满员的队伍</span><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">joinNum</span> <span class="hljs-operator">=</span> team.getJoinNum();<br>       <span class="hljs-keyword">if</span> (joinNum &gt;= team.getMaxNum())<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;该队伍已满员&quot;</span>);<br><br>       <span class="hljs-comment">// 7.更新team表队伍成员数量</span><br>       UpdateWrapper&lt;Team&gt; tuw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UpdateWrapper</span>&lt;&gt;();<br>       <span class="hljs-type">Long</span> <span class="hljs-variable">teamId</span> <span class="hljs-operator">=</span> team.getId();<br>       tuw.eq(<span class="hljs-string">&quot;id&quot;</span>, teamId).set(<span class="hljs-string">&quot;join_user&quot;</span>, ++joinNum);<br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">updateTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.update(tuw);<br><br>       <span class="hljs-comment">// 8.插入用户-队伍关系到user_team表</span><br>       <span class="hljs-type">UserTeam</span> <span class="hljs-variable">userTeam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserTeam</span>();<br>       userTeam.setUserId(userId);<br>       userTeam.setTeamId(teamId);<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">saveUserTeam</span> <span class="hljs-operator">=</span> userTeamService.save(userTeam);<br><br>       <span class="hljs-keyword">if</span> (!updateTeam || !saveUserTeam)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;用户加入队伍失败&quot;</span>);<br><br>       <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;加入队伍成功&quot;</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层-4"><a href="#controller层-4" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 加入队伍</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> team    加入队伍参数</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 加入队伍成功</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@PostMapping(&quot;/join&quot;)</span><br>  <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">joinTeam</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamJoin team, HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">// controller对参数的校验</span><br>      <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>      <span class="hljs-type">String</span> <span class="hljs-variable">joinTeam</span> <span class="hljs-operator">=</span> teamService.joinTeam(team, request);<br>      <span class="hljs-keyword">return</span> ResultUtils.success(joinTeam);<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装-加入队伍参数-teamJoin"><a href="#封装-加入队伍参数-teamJoin" class="headerlink" title="封装 加入队伍参数 teamJoin"></a>封装 加入队伍参数 teamJoin</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/27 21:04</span><br><span class="hljs-comment"> * Function: 加入队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamJoin</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队长id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最大人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer maxNum;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开，1 - 私有，2 - 加密</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 密码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String password;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 成员数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer joinNum;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="还没测试接口呢，写累了，有啥问题明天再看吧"><a href="#还没测试接口呢，写累了，有啥问题明天再看吧" class="headerlink" title="还没测试接口呢，写累了，有啥问题明天再看吧~"></a>还没测试接口呢，写累了，有啥问题明天再看吧~</h5></li><li><h5 id="测试结果完美！写下业务流程吧："><a href="#测试结果完美！写下业务流程吧：" class="headerlink" title="测试结果完美！写下业务流程吧："></a>测试结果完美！写下业务流程吧：</h5></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs applescript">用户传参：队伍<span class="hljs-built_in">id</span>、队伍状态、密码、最大人数、已加入人数<br><span class="hljs-number">1.</span>登录校验<br><span class="hljs-number">2.</span>校验队伍是否存在<br><span class="hljs-number">3.</span>校验状态<br><span class="hljs-number">4.1</span>.加入加密队伍必须输入密码<br><span class="hljs-number">4.2</span>.加入公开队伍不需要密码<br><span class="hljs-number">4.3</span>不能加入私有队伍<br><span class="hljs-number">5.</span>最多加入<span class="hljs-number">5</span>个队伍<br><span class="hljs-number">6.</span>不能重复加入已加入的队伍<br><span class="hljs-number">7.</span>不能加入满员的队伍<br><span class="hljs-number">8.</span>更新team表队伍成员数量<br><span class="hljs-number">9.</span>插入用户-队伍关系到user_team表<br></code></pre></td></tr></table></figure><h3 id="用户退出队伍"><a href="#用户退出队伍" class="headerlink" title="用户退出队伍"></a>用户退出队伍</h3><ul><li><h5 id="service层-4"><a href="#service层-4" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 退出队伍</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team    退出队伍参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 退出队伍成功</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Transactional</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">quitTeam</span><span class="hljs-params">(TeamQuit team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验登录</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>        <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>        <span class="hljs-comment">// 2.校验队伍是否存在</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">teamId</span> <span class="hljs-operator">=</span> team.getId();<br>        <span class="hljs-keyword">if</span> (teamId == <span class="hljs-literal">null</span> || teamId &lt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>        <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>        <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>        <span class="hljs-comment">// 3.校验用户状态</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">userStatus</span> <span class="hljs-operator">=</span> loginUser.getUserStatus();<br>        <span class="hljs-keyword">if</span> (userStatus == <span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH, <span class="hljs-string">&quot;该账号已被封&quot;</span>);<br><br>        <span class="hljs-comment">// 4.校验队伍剩余人数</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">joinNum</span> <span class="hljs-operator">=</span> team.getJoinNum();<br>        <span class="hljs-comment">// 4.1.系统错误</span><br>        <span class="hljs-keyword">if</span> (joinNum - <span class="hljs-number">1</span> &lt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="hljs-string">&quot;队伍人数为空&quot;</span>);<br><br>        <span class="hljs-comment">// 4.2.队伍人数为空</span><br>        <span class="hljs-keyword">if</span> (joinNum - <span class="hljs-number">1</span> == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">remove</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.removeById(teamId);<br>            <span class="hljs-keyword">if</span> (!remove)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br>        &#125;<br><br>        <span class="hljs-comment">// 4.3.队伍人数未空</span><br>        <span class="hljs-keyword">if</span> (joinNum - <span class="hljs-number">1</span> &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// 5.队伍人数-1</span><br>            UpdateWrapper&lt;Team&gt; tuw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UpdateWrapper</span>&lt;&gt;();<br>            tuw.eq(<span class="hljs-string">&quot;id&quot;</span>, teamId).set(<span class="hljs-string">&quot;join_num&quot;</span>, --joinNum);<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">updateNum</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.update(tuw);<br>            <span class="hljs-keyword">if</span> (!updateNum)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>            <span class="hljs-comment">// 6.校验用户为队长(传位)</span><br>            <span class="hljs-keyword">if</span> (team.getUserId().equals(loginUser.getId())) &#123;<br>                <span class="hljs-comment">// 6.1.userTeam表查询: 按加入队伍时间升序排序</span><br>                QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>                utqw.eq(<span class="hljs-string">&quot;team_id&quot;</span>, teamId).orderByAsc(<span class="hljs-string">&quot;create_time&quot;</span>);<br>                List&lt;UserTeam&gt; userTeamList = userTeamService.list(utqw);<br><br>                <span class="hljs-comment">// 6.2.将加入时间第二早的队员指定为队长</span><br>                <span class="hljs-type">UserTeam</span> <span class="hljs-variable">userTeam</span> <span class="hljs-operator">=</span> userTeamList.get(<span class="hljs-number">1</span>);<br>                <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> userTeam.getUserId();<br>                UpdateWrapper&lt;Team&gt; utuw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UpdateWrapper</span>&lt;&gt;();<br>                utuw.eq(<span class="hljs-string">&quot;id&quot;</span>, teamId).set(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">updateUser</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.update(utuw);<br>                <span class="hljs-keyword">if</span> (!updateUser)<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>                <span class="hljs-comment">// 6.3.删除原队长</span><br>                utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>                utqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, team.getUserId());<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">remove</span> <span class="hljs-operator">=</span> userTeamService.remove(utqw);<br>                <span class="hljs-keyword">if</span> (!remove)<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 6.删除队伍</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;退出队伍成功&quot;</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层-5"><a href="#controller层-5" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 退出队伍</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team    退出队伍参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 退出队伍成功</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/quit&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">quitTeam</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamQuit team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">joinTeam</span> <span class="hljs-operator">=</span> teamService.quitTeam(team, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(joinTeam);<br>    &#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="封装teamQuit对象"><a href="#封装teamQuit对象" class="headerlink" title="封装teamQuit对象"></a>封装teamQuit对象</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/29 21:36</span><br><span class="hljs-comment"> * Function: 退出队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamQuit</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队长id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 剩余人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer joinNum;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="测试了一个小时，总算没问题了，这块儿逻辑还挺缜密的，之后再来梳理业务逻辑吧"><a href="#测试了一个小时，总算没问题了，这块儿逻辑还挺缜密的，之后再来梳理业务逻辑吧" class="headerlink" title="测试了一个小时，总算没问题了，这块儿逻辑还挺缜密的，之后再来梳理业务逻辑吧"></a>测试了一个小时，总算没问题了，这块儿逻辑还挺缜密的，之后再来梳理业务逻辑吧</h5></li><li><h5 id="业务流程："><a href="#业务流程：" class="headerlink" title="业务流程："></a>业务流程：</h5></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ul><li><h5 id="测试接口永远是最费时间的，我可算理解这句话了"><a href="#测试接口永远是最费时间的，我可算理解这句话了" class="headerlink" title="测试接口永远是最费时间的，我可算理解这句话了"></a>测试接口永远是最费时间的，我可算理解这句话了</h5></li></ul><h3 id="队长解散队伍"><a href="#队长解散队伍" class="headerlink" title="队长解散队伍"></a>队长解散队伍</h3><ul><li><h5 id="service层-5"><a href="#service层-5" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 解散队伍</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team    解散队伍参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 解散成功与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Transactional</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">deleteTeam</span><span class="hljs-params">(TeamDelete team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验登录</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>        <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>        <span class="hljs-comment">// 2.检验队伍是否存在</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">teamId</span> <span class="hljs-operator">=</span> team.getId();<br>        <span class="hljs-keyword">if</span> (teamId == <span class="hljs-literal">null</span> || teamId &lt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>        <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>        <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>        <span class="hljs-comment">// 3.校验用户状态</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">userStatus</span> <span class="hljs-operator">=</span> loginUser.getUserStatus();<br>        <span class="hljs-keyword">if</span> (userStatus == <span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH, <span class="hljs-string">&quot;该账号已被封&quot;</span>);<br><br>        <span class="hljs-comment">// 4.校验权限(是否为队长或管理员)</span><br>        <span class="hljs-keyword">if</span> (!team.getUserId().equals(loginUser.getId()) &amp;&amp; !isAdmin(loginUser))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH, <span class="hljs-string">&quot;非队长且非管理员&quot;</span>);<br><br>        <span class="hljs-comment">// 5.校验队伍状态</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>        <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>        <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br><br>        <span class="hljs-comment">// 6.校验密码</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br>        <span class="hljs-comment">// TODO</span><br>        <span class="hljs-comment">// 4.1.解散加密队伍必须输入密码</span><br>        <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>            <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入加密队伍要提供正确的密码&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">// 4.2.解散公开或私有队伍不需要密码</span><br>        <span class="hljs-keyword">if</span> (TeamStatusEnum.PUBLIC.equals(statusEnum)) &#123;<br>            <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(password))<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入公开队伍无需密码&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;解散队伍成功&quot;</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="controller层-6"><a href="#controller层-6" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 解散队伍</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team    解散队伍参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 解散成功与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/delete&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">deleteTeam</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamDelete team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">deleteTeam</span> <span class="hljs-operator">=</span> teamService.deleteTeam(team, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(deleteTeam);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装teamDelete对象"><a href="#封装teamDelete对象" class="headerlink" title="封装teamDelete对象"></a>封装teamDelete对象</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/4/30 21:54</span><br><span class="hljs-comment"> * Function: 解散队伍参数</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeamDelete</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队伍id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队长id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 0 - 公开，1 - 私有，2 - 加密</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 密码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String password;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="启动项目的时候还出现了一条报错"><a href="#启动项目的时候还出现了一条报错" class="headerlink" title="启动项目的时候还出现了一条报错:"></a>启动项目的时候还出现了一条报错:</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="hljs-string">&#x27;requestMappingHandlerMapping&#x27;</span> defined in <span class="hljs-keyword">class</span> <span class="hljs-title class_">path</span> resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map <span class="hljs-string">&#x27;teamController&#x27;</span> method <br>com.memory.usercenter.controller.TeamController#joinTeam(TeamJoin, HttpServletRequest)<br>to &#123;POST [/team/join]&#125;: There is already <span class="hljs-string">&#x27;teamController&#x27;</span> bean method<br>com.memory.usercenter.controller.TeamController#quitTeam(TeamQuit, HttpServletRequest) mapped.<br></code></pre></td></tr></table></figure><ul><li><h5 id="什么问题呢，其实就是SpringMVC访问路径冲突，写了俩POST-“-join”"><a href="#什么问题呢，其实就是SpringMVC访问路径冲突，写了俩POST-“-join”" class="headerlink" title="什么问题呢，其实就是SpringMVC访问路径冲突，写了俩POST(“/join”)"></a>什么问题呢，其实就是SpringMVC访问路径冲突，写了俩POST(“/join”)</h5></li></ul><h3 id="获取当前队伍信息"><a href="#获取当前队伍信息" class="headerlink" title="获取当前队伍信息"></a>获取当前队伍信息</h3><p>service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前队伍信息</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> teamId 队伍id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 队伍信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Team <span class="hljs-title function_">getTeam</span><span class="hljs-params">(Long teamId, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验登录</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>        <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>        <span class="hljs-comment">// 2.检验队伍是否存在</span><br>        <span class="hljs-keyword">if</span> (teamId == <span class="hljs-literal">null</span> || teamId &lt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>        <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>        <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>        <span class="hljs-comment">// 3.校验用户状态</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">userStatus</span> <span class="hljs-operator">=</span> loginUser.getUserStatus();<br>        <span class="hljs-keyword">if</span> (userStatus == <span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH, <span class="hljs-string">&quot;该账号已被封&quot;</span>);<br><br>        <span class="hljs-comment">// 4.查询队伍信息</span><br>        <span class="hljs-type">Team</span> <span class="hljs-variable">team</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>        <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>        <span class="hljs-keyword">return</span> getSafetyTeam(team);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;Team&gt; <span class="hljs-title function_">getJoinedTeam</span><span class="hljs-params">(Long userId, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验登录</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>        <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>        <span class="hljs-comment">// 2.获取已加入的队伍</span><br>        QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        utqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>        List&lt;UserTeam&gt; userTeamList = userTeamService.list(utqw);<br><br>        List&lt;Team&gt; teamList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>        <span class="hljs-keyword">for</span> (UserTeam userTeam : userTeamList) &#123;<br>            <span class="hljs-type">Long</span> <span class="hljs-variable">teamId</span> <span class="hljs-operator">=</span> userTeam.getTeamId();<br>            <span class="hljs-type">Team</span> <span class="hljs-variable">team</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>            <span class="hljs-type">Team</span> <span class="hljs-variable">safetyTeam</span> <span class="hljs-operator">=</span> getSafetyTeam(team);<br>            teamList.add(safetyTeam);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> teamList;<br>    &#125;<br><br><br></code></pre></td></tr></table></figure><p>controller层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前队伍信息</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> teamId 队伍id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 队伍信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/one&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Team&gt; <span class="hljs-title function_">getTeam</span><span class="hljs-params">(Long teamId, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (teamId == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">Team</span> <span class="hljs-variable">team</span> <span class="hljs-operator">=</span> teamService.getTeam(teamId, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(team);<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><h3 id="展示用户已创建队伍"><a href="#展示用户已创建队伍" class="headerlink" title="展示用户已创建队伍"></a>展示用户已创建队伍</h3><h3 id="展示用户已加入队伍"><a href="#展示用户已加入队伍" class="headerlink" title="展示用户已加入队伍"></a>展示用户已加入队伍</h3><ul><li><h5 id="pages-teamPage-vue"><a href="#pages-teamPage-vue" class="headerlink" title="pages/teamPage.vue"></a>pages/teamPage.vue</h5></li><li><h5 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;content&quot; style=&quot;padding-bottom: 30px&quot;&gt;<br>    &lt;!-- &lt;slot&gt; 队伍 &lt;/slot&gt; --&gt;<br>    &lt;van-divider content-position=&quot;left&quot;&gt;我创建的队伍&lt;/van-divider&gt;<br>    &lt;van-card<br>      v-for=&quot;team in teamJoined&quot;<br>      :tag=&quot;team.status&quot;<br>      :title=&quot;team.name&quot;<br>      :desc=&quot;team.description&quot;<br>      thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>    &gt;<br>      &lt;template #bottom&gt;<br>        &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>      &lt;/template&gt;<br><br>      &lt;template #footer&gt;<br>        &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot;&gt;修改&lt;/van-button&gt;<br>        &lt;van-button size=&quot;mini&quot; type=&quot;danger&quot;&gt;解散&lt;/van-button&gt;<br>      &lt;/template&gt;<br>    &lt;/van-card&gt;<br><br>    &lt;van-divider content-position=&quot;right&quot;&gt;我加入的队伍&lt;/van-divider&gt;<br>    &lt;van-card<br>      v-for=&quot;team in teamCreated&quot;<br>      :tag=&quot;team.status&quot;<br>      :title=&quot;team.name&quot;<br>      :desc=&quot;team.description&quot;<br>      thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>    &gt;<br>      &lt;template #bottom&gt;<br>        &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>      &lt;/template&gt;<br><br>      &lt;template #footer&gt;<br>        &lt;van-button size=&quot;mini&quot; type=&quot;success&quot;&gt;进群聊天&lt;/van-button&gt;<br>      &lt;/template&gt;<br>    &lt;/van-card&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; requestData, teamType, userType &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../models/user&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; getCurrentUser &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../service/user&quot;</span>;<br><br><span class="hljs-keyword">const</span> loginUser = <span class="hljs-title function_">ref</span>();<br><span class="hljs-keyword">const</span> teamJoined = <span class="hljs-title function_">ref</span>([]);<br><span class="hljs-keyword">const</span> teamCreated = <span class="hljs-title function_">ref</span>([]);<br><br><span class="hljs-comment">// 钩子函数 =&gt; 查询用户已加入的队伍 用户创建的队伍</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 校验用户登录</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">user</span>: requestData = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentUser</span>();<br>  <span class="hljs-keyword">if</span> (user.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取用户信息成功&quot;</span>);<br>    loginUser.<span class="hljs-property">value</span> = user.<span class="hljs-property">data</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取用户信息失败&quot;</span>);<br>  &#125;<br>  <span class="hljs-comment">// 发送请求 - 用户已创建的队伍</span><br>  <span class="hljs-keyword">const</span> teamList1 = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/created&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">userId</span>: loginUser.<span class="hljs-property">value</span>.<span class="hljs-property">id</span>,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-comment">// 发送请求 - 用户已加入的队伍</span><br>  <span class="hljs-keyword">const</span> teamList2 = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/joined&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">userId</span>: loginUser.<span class="hljs-property">value</span>.<span class="hljs-property">id</span>,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-comment">// 处理队伍状态</span><br>  <span class="hljs-keyword">if</span> (teamList1 &amp;&amp; teamList2) &#123;<br>    teamList1.<span class="hljs-title function_">forEach</span>(<br>      <span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>        <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>      &#125;,<br>      teamList2.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>        <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>      &#125;)<br>    );<br>  &#125;<br>  <span class="hljs-comment">// 拿到数据</span><br>  teamJoined.<span class="hljs-property">value</span> = teamList1;<br>  teamCreated.<span class="hljs-property">value</span> = teamList2;<br>&#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="models-team-ts"><a href="#models-team-ts" class="headerlink" title="models/team.ts"></a>models/team.ts</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 队伍信息</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> teamType = &#123;<br>  id?: <span class="hljs-built_in">number</span>;<br>  userId?: <span class="hljs-built_in">number</span>;<br>  name?: <span class="hljs-built_in">string</span>;<br>  description?: <span class="hljs-built_in">string</span>;<br>  maxNum?: <span class="hljs-built_in">number</span>;<br>  joinNum?: <span class="hljs-built_in">number</span>;<br>  status?: <span class="hljs-built_in">string</span>;<br>  expireTime?: <span class="hljs-title class_">Date</span>;<br>  createTime?: <span class="hljs-title class_">Date</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="当然别忘记在config-route-ts下添加路由，这一点在之后的开发中也要注意"><a href="#当然别忘记在config-route-ts下添加路由，这一点在之后的开发中也要注意" class="headerlink" title="当然别忘记在config/route.ts下添加路由，这一点在之后的开发中也要注意"></a>当然别忘记在config/route.ts下添加路由，这一点在之后的开发中也要注意</h5></li></ul><h2 id="阶段性问题-2"><a href="#阶段性问题-2" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="首先这一段逻辑很简单：登录用户的id做参数，拿到其已加入的队伍"><a href="#首先这一段逻辑很简单：登录用户的id做参数，拿到其已加入的队伍" class="headerlink" title="首先这一段逻辑很简单：登录用户的id做参数，拿到其已加入的队伍"></a>首先这一段逻辑很简单：登录用户的id做参数，拿到其已加入的队伍</h5></li><li><h5 id="一如既往地使用-Card-商品组件"><a href="#一如既往地使用-Card-商品组件" class="headerlink" title="一如既往地使用 Card 商品组件"></a>一如既往地使用 Card 商品组件</h5></li><li><h5 id="我写这一段还是挺轻松的，虽然不熟练，写的慢，但是很轻松快乐哈"><a href="#我写这一段还是挺轻松的，虽然不熟练，写的慢，但是很轻松快乐哈" class="headerlink" title="我写这一段还是挺轻松的，虽然不熟练，写的慢，但是很轻松快乐哈"></a>我写这一段还是挺轻松的，虽然不熟练，写的慢，但是很轻松快乐哈</h5></li><li><h5 id="需要注意的点有这些："><a href="#需要注意的点有这些：" class="headerlink" title="需要注意的点有这些："></a>需要注意的点有这些：</h5></li><li><h5 id="van-card-的属性使用方法：-lt-template-buttom-gt-等"><a href="#van-card-的属性使用方法：-lt-template-buttom-gt-等" class="headerlink" title="van-card 的属性使用方法：&lt;template #buttom&gt; 等"></a>van-card 的属性使用方法：&lt;template #buttom&gt; 等</h5></li><li><h5 id="对了，像咱们这种表单页，还得微调内边距啥的，自己看着用最简单的HTML-CSS做就可以凑合实现"><a href="#对了，像咱们这种表单页，还得微调内边距啥的，自己看着用最简单的HTML-CSS做就可以凑合实现" class="headerlink" title="对了，像咱们这种表单页，还得微调内边距啥的，自己看着用最简单的HTML+CSS做就可以凑合实现"></a>对了，像咱们这种表单页，还得微调内边距啥的，自己看着用最简单的HTML+CSS做就可以凑合实现</h5></li><li><h5 id="奶奶的，打算趁热打铁开发修改队伍页面的，发现这个表单写起来还挺生疏，就先开发新增队伍页面吧"><a href="#奶奶的，打算趁热打铁开发修改队伍页面的，发现这个表单写起来还挺生疏，就先开发新增队伍页面吧" class="headerlink" title="奶奶的，打算趁热打铁开发修改队伍页面的，发现这个表单写起来还挺生疏，就先开发新增队伍页面吧"></a>奶奶的，打算趁热打铁开发修改队伍页面的，发现这个表单写起来还挺生疏，就先开发新增队伍页面吧</h5></li></ul><h3 id="新增队伍-2"><a href="#新增队伍-2" class="headerlink" title="新增队伍"></a>新增队伍</h3><ul><li><h5 id="pages-teamAddPage-vue"><a href="#pages-teamAddPage-vue" class="headerlink" title="pages/teamAddPage.vue"></a>pages/teamAddPage.vue</h5></li><li><h5 id="代码如下：-1"><a href="#代码如下：-1" class="headerlink" title="代码如下："></a>代码如下：</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- &lt;slot&gt;新增队伍&lt;/slot&gt; --&gt;<br>  &lt;div id=&quot;content&quot;&gt;<br>    &lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>      &lt;van-cell-group inset&gt;<br>        &lt;van-field<br>          v-model=&quot;teamAdd.name&quot;<br>          name=&quot;name&quot;<br>          label=&quot;队伍名&quot;<br>          placeholder=&quot;请输入队伍名&quot;<br>          :rules=&quot;[&#123; message: &#x27;请输入队伍名&#x27; &#125;]&quot;<br>        /&gt;<br><br>        &lt;van-field<br>          v-model=&quot;teamAdd.description&quot;<br>          rows=&quot;4&quot;<br>          name=&quot;description&quot;<br>          label=&quot;队伍描述&quot;<br>          type=&quot;textarea&quot;<br>          placeholder=&quot;请输入队伍描述&quot;<br>        /&gt;<br><br>        &lt;van-field name=&quot;maxNum&quot; label=&quot;最大人数&quot;&gt;<br>          &lt;template #input&gt;<br>            &lt;van-stepper v-model=&quot;teamAdd.maxNum&quot; max=&quot;20&quot; min=&quot;2&quot; /&gt;<br>          &lt;/template&gt;<br>        &lt;/van-field&gt;<br><br>        &lt;van-field<br>          v-model=&quot;teamAdd.expireTime&quot;<br>          is-link<br>          readonly<br>          name=&quot;expireTime&quot;<br>          label=&quot;过期时间&quot;<br>          placeholder=&quot;点击选择时间&quot;<br>          @click=&quot;showPicker = true&quot;<br>        /&gt;<br><br>        &lt;van-popup v-model:show=&quot;showPicker&quot; position=&quot;bottom&quot;&gt;<br>          &lt;van-date-picker @confirm=&quot;onConfirm&quot; @cancel=&quot;showPicker = false&quot; /&gt;<br>        &lt;/van-popup&gt;<br><br>        &lt;van-field name=&quot;radio&quot; label=&quot;队伍状态&quot;&gt;<br>          &lt;template #input&gt;<br>            &lt;van-radio-group v-model=&quot;teamAdd.status&quot; direction=&quot;horizontal&quot;&gt;<br>              &lt;van-radio name=&quot;0&quot;&gt;公开&lt;/van-radio&gt;<br>              &lt;van-radio name=&quot;1&quot;&gt;私有&lt;/van-radio&gt;<br>              &lt;van-radio name=&quot;2&quot;&gt;加密&lt;/van-radio&gt;<br>            &lt;/van-radio-group&gt;<br>          &lt;/template&gt;<br>        &lt;/van-field&gt;<br><br>        &lt;van-field<br>          v-if=&quot;Number(teamAdd.status) === 2&quot;<br>          v-model=&quot;teamAdd.password&quot;<br>          type=&quot;password&quot;<br>          name=&quot;password&quot;<br>          label=&quot;密码&quot;<br>          placeholder=&quot;请输入队伍密码&quot;<br>          :rules=&quot;[&#123; required: true, message: &#x27;请填写密码&#x27; &#125;]&quot;<br>        /&gt;<br>      &lt;/van-cell-group&gt;<br><br>      &lt;div style=&quot;margin: 16px&quot;&gt;<br>        &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>          提交<br>        &lt;/van-button&gt;<br>      &lt;/div&gt;<br>    &lt;/van-form&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><br><span class="hljs-comment">// 日期展示</span><br><span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">&#123; selectedValues &#125;</span>) =&gt; &#123;<br>  teamAdd.<span class="hljs-property">value</span>.<span class="hljs-property">expireTime</span> = selectedValues.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>  showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;<br>&#125;;<br><br><span class="hljs-keyword">const</span> initTeam = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">description</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">maxNum</span>: <span class="hljs-number">2</span>,<br>  <span class="hljs-attr">expireTime</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">status</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">password</span>: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> teamAdd = <span class="hljs-title function_">ref</span>(&#123; ...initTeam &#125;);<br><br><span class="hljs-comment">// 提交表单</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 发送请求 - 新增队伍</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/add&quot;</span>, teamAdd.<span class="hljs-property">value</span>)<br>    <span class="hljs-comment">// 响应s</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;response.data = &quot;</span> + response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-keyword">if</span> (res) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;新增队伍失败&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br>  router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/team&quot;</span>);<br><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res = &quot;</span> + res);<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="他奶奶的，这个页面还真不好搞定呢，踩了无数坑，前后拖了3天可算完成了，我简单总结一番："><a href="#他奶奶的，这个页面还真不好搞定呢，踩了无数坑，前后拖了3天可算完成了，我简单总结一番：" class="headerlink" title="他奶奶的，这个页面还真不好搞定呢，踩了无数坑，前后拖了3天可算完成了，我简单总结一番："></a>他奶奶的，这个页面还真不好搞定呢，踩了无数坑，前后拖了3天可算完成了，我简单总结一番：</h5></li><li><h5 id="首先就是把那form表单合适的、好用的拿过来，先别管那些数据交互"><a href="#首先就是把那form表单合适的、好用的拿过来，先别管那些数据交互" class="headerlink" title="首先就是把那form表单合适的、好用的拿过来，先别管那些数据交互"></a>首先就是把那form表单合适的、好用的拿过来，先别管那些数据交互</h5></li><li><h5 id="然后创建一个对象，成员属性跟表单作数据绑定"><a href="#然后创建一个对象，成员属性跟表单作数据绑定" class="headerlink" title="然后创建一个对象，成员属性跟表单作数据绑定"></a>然后创建一个对象，成员属性跟表单作数据绑定</h5></li><li><h5 id="对这些表单的属性都必须有所了解，每个属性是干嘛的都得心知肚明"><a href="#对这些表单的属性都必须有所了解，每个属性是干嘛的都得心知肚明" class="headerlink" title="对这些表单的属性都必须有所了解，每个属性是干嘛的都得心知肚明"></a>对这些表单的属性都必须有所了解，每个属性是干嘛的都得心知肚明</h5></li><li><h5 id="简单的比如label、placeholder、type，计步器的max、min，日期的展示逻辑：showPicker-true"><a href="#简单的比如label、placeholder、type，计步器的max、min，日期的展示逻辑：showPicker-true" class="headerlink" title="简单的比如label、placeholder、type，计步器的max、min，日期的展示逻辑：showPicker = true"></a>简单的比如label、placeholder、type，计步器的max、min，日期的展示逻辑：showPicker = true</h5></li><li><h5 id="日历的-confirm、-cancel实现逻辑，这些自个儿多写多练就能记住了"><a href="#日历的-confirm、-cancel实现逻辑，这些自个儿多写多练就能记住了" class="headerlink" title="日历的@confirm、@cancel实现逻辑，这些自个儿多写多练就能记住了"></a>日历的@confirm、@cancel实现逻辑，这些自个儿多写多练就能记住了</h5></li><li><h5 id="别的不多说了，再说几个注意点"><a href="#别的不多说了，再说几个注意点" class="headerlink" title="别的不多说了，再说几个注意点"></a>别的不多说了，再说几个注意点</h5></li></ul><h2 id="阶段性问题-3"><a href="#阶段性问题-3" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里的对象要声明为响应式的，即：const-teamAdd-ref-…initTeam-，不然作数据绑定的时候会有问题"><a href="#这里的对象要声明为响应式的，即：const-teamAdd-ref-…initTeam-，不然作数据绑定的时候会有问题" class="headerlink" title="这里的对象要声明为响应式的，即：const teamAdd = ref({ …initTeam });，不然作数据绑定的时候会有问题"></a>这里的对象要声明为响应式的，即：const teamAdd = ref({ …initTeam });，不然作数据绑定的时候会有问题</h5></li><li><h5 id="提交按钮不用写-click-”onSubmit”了，表单上写过了，否则会连续执行两次提交"><a href="#提交按钮不用写-click-”onSubmit”了，表单上写过了，否则会连续执行两次提交" class="headerlink" title="提交按钮不用写@click=”onSubmit”了，表单上写过了，否则会连续执行两次提交"></a>提交按钮不用写@click=”onSubmit”了，表单上写过了，否则会连续执行两次提交</h5></li><li><h5 id="POST请求这里参数我写错了，teamAdd-value写成teadAdd了，请求里的json数据一直请求不到接口"><a href="#POST请求这里参数我写错了，teamAdd-value写成teadAdd了，请求里的json数据一直请求不到接口" class="headerlink" title="POST请求这里参数我写错了，teamAdd.value写成teadAdd了，请求里的json数据一直请求不到接口"></a>POST请求这里参数我写错了，teamAdd.value写成teadAdd了，请求里的json数据一直请求不到接口</h5></li><li><h5 id="前端传回的empireTime是yyyy-MM-dd格式的，传到后端还接收不了了，奶奶的测试的时候好端端的"><a href="#前端传回的empireTime是yyyy-MM-dd格式的，传到后端还接收不了了，奶奶的测试的时候好端端的" class="headerlink" title="前端传回的empireTime是yyyy/MM/dd格式的，传到后端还接收不了了，奶奶的测试的时候好端端的"></a>前端传回的empireTime是yyyy/MM/dd格式的，传到后端还接收不了了，奶奶的测试的时候好端端的</h5></li><li><h5 id="解决方法：修改后端empireTime字段的Date格式就可以：（暂时先这样解决）"><a href="#解决方法：修改后端empireTime字段的Date格式就可以：（暂时先这样解决）" class="headerlink" title="解决方法：修改后端empireTime字段的Date格式就可以：（暂时先这样解决）"></a>解决方法：修改后端empireTime字段的Date格式就可以：（暂时先这样解决）</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 过期时间</span><br><span class="hljs-comment"> */</span><br> <span class="hljs-meta">@JsonFormat(pattern = &quot;yyyy/MM/dd&quot;)</span><br> <span class="hljs-keyword">private</span> Date expireTime;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这用户加入和创建队伍还显示不正常了，浏览器好多毛病"><a href="#这用户加入和创建队伍还显示不正常了，浏览器好多毛病" class="headerlink" title="这用户加入和创建队伍还显示不正常了，浏览器好多毛病"></a>这用户加入和创建队伍还显示不正常了，浏览器好多毛病</h5></li></ul><h3 id="修改队伍-3"><a href="#修改队伍-3" class="headerlink" title="修改队伍"></a>修改队伍</h3><ul><li><h5 id="快速开发"><a href="#快速开发" class="headerlink" title="快速开发"></a>快速开发</h5></li><li><h5 id="新增teamEditPage-新增页面路由”team-edit”"><a href="#新增teamEditPage-新增页面路由”team-edit”" class="headerlink" title="新增teamEditPage, 新增页面路由”team/edit”"></a>新增teamEditPage, 新增页面路由”team/edit”</h5></li><li><h5 id="teamPage下跳转修改页面"><a href="#teamPage下跳转修改页面" class="headerlink" title="teamPage下跳转修改页面:"></a>teamPage下跳转修改页面:</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 跳转到修改队伍页</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toEditTeam</span> = (<span class="hljs-params">id: <span class="hljs-built_in">number</span></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/edit&quot;</span>,<br>    <span class="hljs-attr">query</span>: &#123;<br>      id,<br>    &#125;,<br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="绑定到修改按钮"><a href="#绑定到修改按钮" class="headerlink" title="绑定到修改按钮"></a>绑定到修改按钮</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-button <br>size=&quot;mini&quot; <br>type=&quot;primary&quot; <br>@click=&quot;toEditTeam(team.id)&quot;&gt;<br>     修改<br>&lt;/van-button&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里思路很好，前端跳转页面时传递所需参数（队伍id）"><a href="#这里思路很好，前端跳转页面时传递所需参数（队伍id）" class="headerlink" title="这里思路很好，前端跳转页面时传递所需参数（队伍id）"></a>这里思路很好，前端跳转页面时传递所需参数（队伍id）</h5></li><li><h5 id="修改队伍页面"><a href="#修改队伍页面" class="headerlink" title="修改队伍页面"></a>修改队伍页面</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- &lt;slot&gt;新增队伍&lt;/slot&gt; --&gt;<br>  &lt;div id=&quot;content&quot;&gt;<br>    &lt;!-- &lt;slot&gt;修改队伍&lt;/slot&gt; --&gt;<br>    &lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>      &lt;van-cell-group inset&gt;<br>        &lt;van-field<br>          v-model=&quot;teamUpdate.name&quot;<br>          name=&quot;name&quot;<br>          label=&quot;队伍名&quot;<br>          placeholder=&quot;请输入队伍名&quot;<br>          :rules=&quot;[&#123; message: &#x27;请输入队伍名&#x27; &#125;]&quot;<br>        /&gt;<br><br>        &lt;van-field<br>          v-model=&quot;teamUpdate.description&quot;<br>          rows=&quot;4&quot;<br>          name=&quot;description&quot;<br>          label=&quot;队伍描述&quot;<br>          type=&quot;textarea&quot;<br>          placeholder=&quot;请输入队伍描述&quot;<br>        /&gt;<br><br>        &lt;van-field name=&quot;radio&quot; label=&quot;队伍状态&quot;&gt;<br>          &lt;template #input&gt;<br>            &lt;van-radio-group v-model=&quot;checked&quot; direction=&quot;horizontal&quot;&gt;<br>              &lt;van-radio name=&quot;0&quot;&gt;公开&lt;/van-radio&gt;<br>              &lt;van-radio name=&quot;1&quot;&gt;私有&lt;/van-radio&gt;<br>              &lt;van-radio name=&quot;2&quot;&gt;加密&lt;/van-radio&gt;<br>            &lt;/van-radio-group&gt;<br>          &lt;/template&gt;<br>        &lt;/van-field&gt;<br><br>        &lt;van-field<br>          v-if=&quot;Number(checked) === 2&quot;<br>          v-model=&quot;teamUpdate.password&quot;<br>          type=&quot;password&quot;<br>          name=&quot;password&quot;<br>          label=&quot;密码&quot;<br>          placeholder=&quot;请输入队伍密码&quot;<br>          :rules=&quot;[&#123; required: true, message: &#x27;请填写密码&#x27; &#125;]&quot;<br>        /&gt;<br>      &lt;/van-cell-group&gt;<br><br>      &lt;div style=&quot;margin: 16px&quot;&gt;<br>        &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>          提交<br>        &lt;/van-button&gt;<br>      &lt;/div&gt;<br>    &lt;/van-form&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; onMounted, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRoute &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><br><span class="hljs-comment">// 队伍状态</span><br><span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 修改队伍信息</span><br><span class="hljs-keyword">const</span> teamUpdate = <span class="hljs-title function_">ref</span>(&#123;&#125;);<br><br><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br><span class="hljs-keyword">const</span> teamId = route.<span class="hljs-property">query</span>.<span class="hljs-property">id</span>;<br><br><span class="hljs-comment">// 钩子函数, 根据队伍id查询队伍信息</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// console.log(&quot;teamId = &quot; + teamId);</span><br>  <span class="hljs-keyword">const</span> teamData = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/one&quot;</span>, &#123; <span class="hljs-attr">params</span>: &#123; teamId &#125; &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;response.data = &quot;</span> + response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-keyword">if</span> (teamData) &#123;<br>    teamUpdate.<span class="hljs-property">value</span> = teamData;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;stasus = &quot;</span> + <span class="hljs-keyword">typeof</span> teamData.<span class="hljs-property">status</span>);<br>    checked.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;teamData.status&#125;</span>`</span>;<br><br>    <span class="hljs-keyword">if</span> (teamData.<span class="hljs-property">status</span> == <span class="hljs-number">2</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;psd = &quot;</span> + teamData.<span class="hljs-property">password</span>);<br>    &#125;<br>  &#125;<br>&#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改页面钩子函数根据teamId查询发送请求get-“-team-one”-查询到队伍信息，将队伍信息绑定表单"><a href="#修改页面钩子函数根据teamId查询发送请求get-“-team-one”-查询到队伍信息，将队伍信息绑定表单" class="headerlink" title="修改页面钩子函数根据teamId查询发送请求get(“/team/one”)查询到队伍信息，将队伍信息绑定表单"></a>修改页面钩子函数根据teamId查询发送请求get(“/team/one”)查询到队伍信息，将队伍信息绑定表单</h5></li><li><h5 id="提交表单，发送修改请求"><a href="#提交表单，发送修改请求" class="headerlink" title="提交表单，发送修改请求"></a>提交表单，发送修改请求</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 提交表单</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 发送请求 - 新增队伍</span><br>  <span class="hljs-keyword">const</span> update = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/update&quot;</span>, teamUpdate.<span class="hljs-property">value</span>)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;response.data = &quot;</span> + response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-keyword">if</span> (update.<span class="hljs-property">code</span> == <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(update.<span class="hljs-property">data</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;修改队伍失败&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br>  router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/team&quot;</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="功能大概实现了，比如队伍状态的实现比较有趣-可以稍微留意一下"><a href="#功能大概实现了，比如队伍状态的实现比较有趣-可以稍微留意一下" class="headerlink" title="功能大概实现了，比如队伍状态的实现比较有趣,可以稍微留意一下"></a>功能大概实现了，比如队伍状态的实现比较有趣,可以稍微留意一下</h5></li></ul><h2 id="阶段性问题-4"><a href="#阶段性问题-4" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里解决了之前提到的问题：用户加入和创建队伍还显示不正常，这不是浏览器问题"><a href="#这里解决了之前提到的问题：用户加入和创建队伍还显示不正常，这不是浏览器问题" class="headerlink" title="这里解决了之前提到的问题：用户加入和创建队伍还显示不正常，这不是浏览器问题"></a>这里解决了之前提到的问题：用户加入和创建队伍还显示不正常，这不是浏览器问题</h5></li><li><h5 id="这是因为我删除了队伍team，却没有删除user-team对应记录，查询teamList时查到的队伍出现null值，前端渲染就出现了错误"><a href="#这是因为我删除了队伍team，却没有删除user-team对应记录，查询teamList时查到的队伍出现null值，前端渲染就出现了错误" class="headerlink" title="这是因为我删除了队伍team，却没有删除user_team对应记录，查询teamList时查到的队伍出现null值，前端渲染就出现了错误"></a>这是因为我删除了队伍team，却没有删除user_team对应记录，查询teamList时查到的队伍出现null值，前端渲染就出现了错误</h5></li><li><h5 id="还有teamUpdatePage-vue显示不正常，修改了下文件名为teamEditPage-vue就可以显示了，这浏览器真几把无语"><a href="#还有teamUpdatePage-vue显示不正常，修改了下文件名为teamEditPage-vue就可以显示了，这浏览器真几把无语" class="headerlink" title="还有teamUpdatePage.vue显示不正常，修改了下文件名为teamEditPage.vue就可以显示了，这浏览器真几把无语"></a>还有teamUpdatePage.vue显示不正常，修改了下文件名为teamEditPage.vue就可以显示了，这浏览器真几把无语</h5></li><li><h5 id="整理了下数据库，删除了一些脏数据；整理了下队伍页面，都放进pages-team下了，修改包注意同步修改路由和对其他页面引用"><a href="#整理了下数据库，删除了一些脏数据；整理了下队伍页面，都放进pages-team下了，修改包注意同步修改路由和对其他页面引用" class="headerlink" title="整理了下数据库，删除了一些脏数据；整理了下队伍页面，都放进pages/team下了，修改包注意同步修改路由和对其他页面引用"></a>整理了下数据库，删除了一些脏数据；整理了下队伍页面，都放进pages/team下了，修改包注意同步修改路由和对其他页面引用</h5></li></ul><h2 id="思考-1"><a href="#思考-1" class="headerlink" title="思考"></a>思考</h2><ul><li><h5 id="这里又明确了下前端axios请求接收到的的响应值response：首先axios封装了response，我们从后台传回的数据都封装在response-data下，这一点毋庸置疑。全局响应拦截器帮我们做了这一点，所以我们使用myAxios发送请求，响应值就是被封装好的response-data了，即后端封装的BaseResponse对象（code、data、message、description）-理清这一点后，之后处理响应值的思路就很清晰了"><a href="#这里又明确了下前端axios请求接收到的的响应值response：首先axios封装了response，我们从后台传回的数据都封装在response-data下，这一点毋庸置疑。全局响应拦截器帮我们做了这一点，所以我们使用myAxios发送请求，响应值就是被封装好的response-data了，即后端封装的BaseResponse对象（code、data、message、description）-理清这一点后，之后处理响应值的思路就很清晰了" class="headerlink" title="这里又明确了下前端axios请求接收到的的响应值response：首先axios封装了response，我们从后台传回的数据都封装在response.data下，这一点毋庸置疑。全局响应拦截器帮我们做了这一点，所以我们使用myAxios发送请求，响应值就是被封装好的response.data了，即后端封装的BaseResponse对象（code、data、message、description）,理清这一点后，之后处理响应值的思路就很清晰了"></a>这里又明确了下前端axios请求接收到的的响应值response：首先axios封装了response，我们从后台传回的数据都封装在response.data下，这一点毋庸置疑。全局响应拦截器帮我们做了这一点，所以我们使用myAxios发送请求，响应值就是被封装好的response.data了，即后端封装的BaseResponse对象（code、data、message、description）,理清这一点后，之后处理响应值的思路就很清晰了</h5></li></ul><h3 id="退出队伍"><a href="#退出队伍" class="headerlink" title="退出队伍"></a>退出队伍</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-button size=&quot;mini&quot; type=&quot;danger&quot; @click=&quot;quitTeam(team)&quot;&gt;退出&lt;/van-button<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 退出队伍</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">quitTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">team: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-title function_">showConfirmDialog</span>(&#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>    <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;你确定要退出队伍吗?&quot;</span>,<br>  &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>      <span class="hljs-comment">// on confirm</span><br>      <span class="hljs-keyword">const</span> quit = <span class="hljs-keyword">await</span> myAxios<br>        .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/quit&quot;</span>, &#123;<br>          <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>          <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>          <span class="hljs-attr">joinNum</span>: team.<span class="hljs-property">joinNum</span>,<br>        &#125;)<br>        <span class="hljs-comment">// 响应</span><br>        .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>          <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>          <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>        &#125;)<br>        <span class="hljs-comment">// 抛异常</span><br>        .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>        &#125;);<br><br>      <span class="hljs-keyword">if</span> (quit.<span class="hljs-property">data</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;quit.data&#125;</span>`</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;退出队伍失败&quot;</span>);<br>      &#125;<br>      <span class="hljs-comment">// 刷新页面</span><br>      location.<span class="hljs-property">reload</span>;<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-comment">// on cancel</span><br>    &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="注意到这里还使用了Dialog弹出框组件，使用逻辑简单了解一下就行"><a href="#注意到这里还使用了Dialog弹出框组件，使用逻辑简单了解一下就行" class="headerlink" title="注意到这里还使用了Dialog弹出框组件，使用逻辑简单了解一下就行"></a>注意到这里还使用了Dialog弹出框组件，使用逻辑简单了解一下就行</h5></li></ul><h2 id="阶段性问题-5"><a href="#阶段性问题-5" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="解散队伍逻辑还有问题"><a href="#解散队伍逻辑还有问题" class="headerlink" title="解散队伍逻辑还有问题"></a>解散队伍逻辑还有问题</h5></li><li><h5 id="引发新问题：当已创建队伍-已加入队伍为空时，后端不应该抛出业务异常，需优化前后端逻辑"><a href="#引发新问题：当已创建队伍-已加入队伍为空时，后端不应该抛出业务异常，需优化前后端逻辑" class="headerlink" title="引发新问题：当已创建队伍/已加入队伍为空时，后端不应该抛出业务异常，需优化前后端逻辑"></a>引发新问题：当已创建队伍/已加入队伍为空时，后端不应该抛出业务异常，需优化前后端逻辑</h5></li></ul><h3 id="优化后端逻辑"><a href="#优化后端逻辑" class="headerlink" title="优化后端逻辑"></a>优化后端逻辑</h3><ul><li><h5 id="getCreatedTeam返回为空，将返回的team置为null"><a href="#getCreatedTeam返回为空，将返回的team置为null" class="headerlink" title="getCreatedTeam返回为空，将返回的team置为null"></a>getCreatedTeam返回为空，将返回的team置为null</h5></li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// TODO 创建队伍数为空</span><br><span class="hljs-keyword">if</span> (<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">CollectionUtils</span>.</span></span>is<span class="hljs-constructor">Empty(<span class="hljs-params">teamList</span>)</span>) &#123;<br>teamList = null;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="getJoinedTeam返回为空，将返回的team置为null"><a href="#getJoinedTeam返回为空，将返回的team置为null" class="headerlink" title="getJoinedTeam返回为空，将返回的team置为null"></a>getJoinedTeam返回为空，将返回的team置为null</h5></li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">// TODO 加入队伍数为空</span><br><span class="hljs-keyword">if</span> (CollectionUtils.<span class="hljs-built_in">isEmpty</span>(userTeamList)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优化前端逻辑"><a href="#优化前端逻辑" class="headerlink" title="优化前端逻辑"></a>优化前端逻辑</h3><ul><li><h5 id="前端处理队伍状态逻辑不应该将createdTeam和joinedTeam耦合，分开校验（这里也为解散队伍功能埋下了祸根，之后我们会解决这个问题）"><a href="#前端处理队伍状态逻辑不应该将createdTeam和joinedTeam耦合，分开校验（这里也为解散队伍功能埋下了祸根，之后我们会解决这个问题）" class="headerlink" title="前端处理队伍状态逻辑不应该将createdTeam和joinedTeam耦合，分开校验（这里也为解散队伍功能埋下了祸根，之后我们会解决这个问题）"></a>前端处理队伍状态逻辑不应该将createdTeam和joinedTeam耦合，分开校验（这里也为解散队伍功能埋下了祸根，之后我们会解决这个问题）</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 处理已创建队伍状态</span><br><span class="hljs-keyword">if</span> (teamList1) &#123;<br>  teamList1.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>    <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 处理已加入队伍状态</span><br> <span class="hljs-keyword">if</span> (teamList2) &#123;<br>   teamList2.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>     <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>     <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>     <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>   &#125;);<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="优化队伍展示逻辑，如果createdTeam-joinedTeam为空则展示为空组件（这一点我们在之前也做过）"><a href="#优化队伍展示逻辑，如果createdTeam-joinedTeam为空则展示为空组件（这一点我们在之前也做过）" class="headerlink" title="优化队伍展示逻辑，如果createdTeam/joinedTeam为空则展示为空组件（这一点我们在之前也做过）"></a>优化队伍展示逻辑，如果createdTeam/joinedTeam为空则展示为空组件（这一点我们在之前也做过）</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-divider content-position=&quot;left&quot;&gt;我创建的队伍&lt;/van-divider&gt; <br>&lt;van-card<br>     v-if=&quot;teamCreated&quot;<br>     v-for=&quot;team in teamCreated&quot;<br>     :tag=&quot;team.status&quot;<br>     :title=&quot;team.name&quot;<br>     :desc=&quot;team.description&quot;<br>     thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>   &gt;<br>     &lt;template #bottom&gt;<br>       &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>       &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>       &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>     &lt;/template&gt;<br><br>     &lt;template #footer&gt;<br>       &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;toEditTeam(team.id)&quot;&gt;<br>         修改<br>       &lt;/van-button&gt;<br>       &lt;van-button size=&quot;mini&quot; type=&quot;danger&quot; @click=&quot;deleteTeam(team)&quot;<br>         &gt;解散&lt;/van-button<br>       &gt;<br>     &lt;/template&gt;<br>   &lt;/van-card&gt;<br>   &lt;!-- 已创建队伍信息展示 --&gt;<br>   &lt;van-empty v-if=&quot;!teamCreated&quot; description=&quot;创建队伍为空&quot; /&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-divider content-position=&quot;right&quot;&gt;我加入的队伍&lt;/van-divider&gt;<br>    &lt;van-card<br>      v-if=&quot;teamJoined&quot;<br>      v-for=&quot;team in teamJoined&quot;<br>      :tag=&quot;team.status&quot;<br>      :title=&quot;team.name&quot;<br>      :desc=&quot;team.description&quot;<br>      thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>    &gt;<br>      &lt;template #bottom&gt;<br>        &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>        &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>      &lt;/template&gt;<br><br>      &lt;template #footer&gt;<br>        &lt;van-button size=&quot;mini&quot; type=&quot;success&quot;&gt;进群聊天&lt;/van-button&gt;<br>        &lt;van-button size=&quot;mini&quot; type=&quot;danger&quot; @click=&quot;quitTeam(team)&quot;<br>          &gt;退出&lt;/van-button<br>        &gt;<br>      &lt;/template&gt;<br>    &lt;/van-card&gt;<br><br>    &lt;!-- 无用户信息展示 --&gt;<br>    &lt;van-empty v-if=&quot;!teamJoined&quot; description=&quot;加入队伍为空&quot; /&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里我才发现，之前把getCreatedTeam和getJoinedTeam的响应值赋值错了，导致俩表单展示相反了，我说怎么看起来那么奇怪"><a href="#这里我才发现，之前把getCreatedTeam和getJoinedTeam的响应值赋值错了，导致俩表单展示相反了，我说怎么看起来那么奇怪" class="headerlink" title="这里我才发现，之前把getCreatedTeam和getJoinedTeam的响应值赋值错了，导致俩表单展示相反了，我说怎么看起来那么奇怪"></a>这里我才发现，之前把getCreatedTeam和getJoinedTeam的响应值赋值错了，导致俩表单展示相反了，我说怎么看起来那么奇怪</h5></li><li><h5 id="正确的赋值："><a href="#正确的赋值：" class="headerlink" title="正确的赋值："></a>正确的赋值：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 拿到数据</span><br>teamCreated.<span class="hljs-property">value</span> = teamList1;<br>teamJoined.<span class="hljs-property">value</span> = teamList2;<br></code></pre></td></tr></table></figure><h2 id="阶段性问题-6"><a href="#阶段性问题-6" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="解散队伍逻辑实现不了"><a href="#解散队伍逻辑实现不了" class="headerlink" title="解散队伍逻辑实现不了"></a>解散队伍逻辑实现不了</h5></li><li><h5 id="就是前面提到的问题，队伍页面展示时team-status被硬修改了（0-“公开”，1-“私密”，2-“加密”），而在解散队伍的逻辑当中，需要获取队伍的status，导致请求参数错误。解决办法就是不要直接修改team的status，另找个变量。"><a href="#就是前面提到的问题，队伍页面展示时team-status被硬修改了（0-“公开”，1-“私密”，2-“加密”），而在解散队伍的逻辑当中，需要获取队伍的status，导致请求参数错误。解决办法就是不要直接修改team的status，另找个变量。" class="headerlink" title="就是前面提到的问题，队伍页面展示时team.status被硬修改了（0-“公开”，1-“私密”，2-“加密”），而在解散队伍的逻辑当中，需要获取队伍的status，导致请求参数错误。解决办法就是不要直接修改team的status，另找个变量。"></a>就是前面提到的问题，队伍页面展示时team.status被硬修改了（0-“公开”，1-“私密”，2-“加密”），而在解散队伍的逻辑当中，需要获取队伍的status，导致请求参数错误。解决办法就是不要直接修改team的status，另找个变量。</h5></li><li><h5 id="现在这个问题解决了，改动挺多，听我娓娓道来"><a href="#现在这个问题解决了，改动挺多，听我娓娓道来" class="headerlink" title="现在这个问题解决了，改动挺多，听我娓娓道来~"></a>现在这个问题解决了，改动挺多，听我娓娓道来~</h5></li><li><h5 id="这里另找个变量status不好实现，得遍历到所有team，得到的每个team对象中新增变量保存status修改后的状态。（设想这样是挺复杂的，可以实现，但感觉完全没必要）"><a href="#这里另找个变量status不好实现，得遍历到所有team，得到的每个team对象中新增变量保存status修改后的状态。（设想这样是挺复杂的，可以实现，但感觉完全没必要）" class="headerlink" title="这里另找个变量status不好实现，得遍历到所有team，得到的每个team对象中新增变量保存status修改后的状态。（设想这样是挺复杂的，可以实现，但感觉完全没必要）"></a>这里另找个变量status不好实现，得遍历到所有team，得到的每个team对象中新增变量保存status修改后的状态。（设想这样是挺复杂的，可以实现，但感觉完全没必要）</h5></li><li><h5 id="另一个思路很直接，不变team-status，表单在作展示时可以调用一个函数，按（0-“公开”，1-“私密”，2-“加密”）转换显示"><a href="#另一个思路很直接，不变team-status，表单在作展示时可以调用一个函数，按（0-“公开”，1-“私密”，2-“加密”）转换显示" class="headerlink" title="另一个思路很直接，不变team.status，表单在作展示时可以调用一个函数，按（0-“公开”，1-“私密”，2-“加密”）转换显示"></a>另一个思路很直接，不变team.status，表单在作展示时可以调用一个函数，按（0-“公开”，1-“私密”，2-“加密”）转换显示</h5></li><li><h5 id="那我们就在service-function-getStatus-ts下实现一个函数，负责转换status"><a href="#那我们就在service-function-getStatus-ts下实现一个函数，负责转换status" class="headerlink" title="那我们就在service/function\getStatus.ts下实现一个函数，负责转换status"></a>那我们就在service/function\getStatus.ts下实现一个函数，负责转换status</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 转换stasus</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getStatus</span> = (<span class="hljs-params">status: <span class="hljs-built_in">number</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (status === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;公开&quot;</span>;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status === <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;私密&quot;</span>;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;加密&quot;</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="tag标签下绑定这个函数就行"><a href="#tag标签下绑定这个函数就行" class="headerlink" title="tag标签下绑定这个函数就行"></a>tag标签下绑定这个函数就行</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-card<br>      v-if=&quot;teamCreated&quot;<br>      v-for=&quot;team in teamCreated&quot;<br>      :tag=&quot;getStatus(team.status)&quot;<br>      :title=&quot;team.name&quot;<br>      :desc=&quot;team.description&quot;<br>      thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>    &gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="那我们之前的处理status就不需要了，直接删除↓"><a href="#那我们之前的处理status就不需要了，直接删除↓" class="headerlink" title="那我们之前的处理status就不需要了，直接删除↓"></a>那我们之前的处理status就不需要了，直接删除↓</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 处理已创建队伍状态</span><br><span class="hljs-keyword">if</span> (teamList1) &#123;<br>  teamList1.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>    <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>  &#125;);<br>&#125;<br><span class="hljs-comment">// 处理已加入队伍状态</span><br><span class="hljs-keyword">if</span> (teamList2) &#123;<br>  teamList2.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">team: teamType</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;0&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;公开&quot;</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (team.<span class="hljs-property">status</span> == <span class="hljs-string">&quot;1&quot;</span>) team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;私有&quot;</span>;<br>    <span class="hljs-keyword">else</span> team.<span class="hljs-property">status</span> = <span class="hljs-string">&quot;加密&quot;</span>;<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="那解散队伍就好操作了："><a href="#那解散队伍就好操作了：" class="headerlink" title="那解散队伍就好操作了："></a>那解散队伍就好操作了：</h5></li></ul><h3 id="解散队伍"><a href="#解散队伍" class="headerlink" title="解散队伍"></a>解散队伍</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-button size=&quot;mini&quot; type=&quot;danger&quot; @click=&quot;deleteTeam(team)&quot;&gt;解散&lt;/van-button<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 解散队伍</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">deleteTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">team: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-title function_">showConfirmDialog</span>(&#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>    <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;你确定要解散队伍吗?&quot;</span>,<br>  &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>      <span class="hljs-comment">// on confirm</span><br>      <span class="hljs-keyword">const</span> del = <span class="hljs-keyword">await</span> myAxios<br>        .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/delete&quot;</span>, &#123;<br>          <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>          <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>          <span class="hljs-attr">status</span>: team.<span class="hljs-property">status</span>,<br>          <span class="hljs-attr">password</span>: team.<span class="hljs-property">password</span>,<br>        &#125;)<br>        <span class="hljs-comment">// 响应</span><br>        .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>          <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>          <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>        &#125;)<br>        <span class="hljs-comment">// 抛异常</span><br>        .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>        &#125;);<br><br>      <span class="hljs-keyword">if</span> (del.<span class="hljs-property">data</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;del.data&#125;</span>`</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;解散队伍失败&quot;</span>);<br>      &#125;<br>      <span class="hljs-comment">// 刷新页面</span><br>      location.<span class="hljs-property">reload</span>;<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-comment">// on cancel</span><br>    &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="阶段性问题-7"><a href="#阶段性问题-7" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里要留心，由于后端使用-requestBody接收参数，所以退出-解散队伍发送的json字符串一定要和后端对应"><a href="#这里要留心，由于后端使用-requestBody接收参数，所以退出-解散队伍发送的json字符串一定要和后端对应" class="headerlink" title="这里要留心，由于后端使用@requestBody接收参数，所以退出/解散队伍发送的json字符串一定要和后端对应"></a>这里要留心，由于后端使用@requestBody接收参数，所以退出/解散队伍发送的json字符串一定要和后端对应</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 退出队伍</span><br><span class="hljs-keyword">const</span> quit = <span class="hljs-keyword">await</span> myAxios<br>      .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/quit&quot;</span>, &#123;<br>        <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>        <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>        <span class="hljs-attr">joinNum</span>: team.<span class="hljs-property">joinNum</span>,<br>      &#125;)<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 解散队伍</span><br><span class="hljs-keyword">const</span> del = <span class="hljs-keyword">await</span> myAxios<br>       .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/delete&quot;</span>, &#123;<br>         <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>         <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>         <span class="hljs-attr">status</span>: team.<span class="hljs-property">status</span>,<br>         <span class="hljs-attr">password</span>: team.<span class="hljs-property">password</span>,<br>       &#125;)<br></code></pre></td></tr></table></figure><ul><li><h5 id="还要注意这两个操作的后端逻辑校验，那就是："><a href="#还要注意这两个操作的后端逻辑校验，那就是：" class="headerlink" title="还要注意这两个操作的后端逻辑校验，那就是："></a>还要注意这两个操作的后端逻辑校验，那就是：</h5></li><li><h5 id="退出队伍时，如果只剩最后一人，要解散队伍和队长直接解散队伍，一定要同时清楚team和user-team中的记录，这样不仅影响业务逻辑，还会在脏数据多的时候，前端队伍显示不正常，这问题你找都找不到"><a href="#退出队伍时，如果只剩最后一人，要解散队伍和队长直接解散队伍，一定要同时清楚team和user-team中的记录，这样不仅影响业务逻辑，还会在脏数据多的时候，前端队伍显示不正常，这问题你找都找不到" class="headerlink" title="退出队伍时，如果只剩最后一人，要解散队伍和队长直接解散队伍，一定要同时清楚team和user_team中的记录，这样不仅影响业务逻辑，还会在脏数据多的时候，前端队伍显示不正常，这问题你找都找不到"></a>退出队伍时，如果只剩最后一人，要解散队伍和队长直接解散队伍，一定要同时清楚team和user_team中的记录，这样不仅影响业务逻辑，还会在脏数据多的时候，前端队伍显示不正常，这问题你找都找不到</h5></li><li><h5 id="哎我真几把服了，还以为teamList1和teamList2没用了，把赋值语句删了。搞得队伍表单连数据都没有，怪不得突然就不显示队伍了"><a href="#哎我真几把服了，还以为teamList1和teamList2没用了，把赋值语句删了。搞得队伍表单连数据都没有，怪不得突然就不显示队伍了" class="headerlink" title="哎我真几把服了，还以为teamList1和teamList2没用了，把赋值语句删了。搞得队伍表单连数据都没有，怪不得突然就不显示队伍了"></a>哎我真几把服了，还以为teamList1和teamList2没用了，把赋值语句删了。搞得队伍表单连数据都没有，怪不得突然就不显示队伍了</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 拿到数据</span><br>teamCreated.<span class="hljs-property">value</span> = teamList1;<br>teamJoined.<span class="hljs-property">value</span> = teamList2;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;teamJoin =&gt; &quot;</span> + teamJoined.<span class="hljs-property">value</span>);<br></code></pre></td></tr></table></figure><h2 id="思考-2"><a href="#思考-2" class="headerlink" title="思考"></a>思考</h2><ul><li><h5 id="疯狂整理了下该文档的目录格式（2023-05-13晚）"><a href="#疯狂整理了下该文档的目录格式（2023-05-13晚）" class="headerlink" title="疯狂整理了下该文档的目录格式（2023/05/13晚）"></a>疯狂整理了下该文档的目录格式（2023/05/13晚）</h5></li><li><h5 id="每天完成一个小功能真的很快乐"><a href="#每天完成一个小功能真的很快乐" class="headerlink" title="每天完成一个小功能真的很快乐"></a>每天完成一个小功能真的很快乐</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.删除team记录</span><br>     <span class="hljs-type">boolean</span> <span class="hljs-variable">teamRemove</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.removeById(teamId);<br>     <span class="hljs-keyword">if</span> (!teamRemove)<br>         <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br> <span class="hljs-comment">// 2.删除user_team记录</span><br>     QueryWrapper&lt;UserTeam&gt; uqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>     uqw.eq(<span class="hljs-string">&quot;team_id&quot;</span>, teamId);<br>     <span class="hljs-type">boolean</span> <span class="hljs-variable">userTeamRemove</span> <span class="hljs-operator">=</span> userTeamService.remove(uqw);<br>     <span class="hljs-keyword">if</span> (!userTeamRemove)<br>         <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br></code></pre></td></tr></table></figure><ul><li><h5 id="哦我操他奶奶的，做个数据库实验不小心把数据库删了，他妈的。。。（2023-05-12晚）"><a href="#哦我操他奶奶的，做个数据库实验不小心把数据库删了，他妈的。。。（2023-05-12晚）" class="headerlink" title="哦我操他奶奶的，做个数据库实验不小心把数据库删了，他妈的。。。（2023/05/12晚）"></a>哦我操他奶奶的，做个数据库实验不小心把数据库删了，他妈的。。。（2023/05/12晚）</h5></li><li><h5 id="补充一点-做测试的时候-记得加上这样一条"><a href="#补充一点-做测试的时候-记得加上这样一条" class="headerlink" title="补充一点: 做测试的时候, 记得加上这样一条:"></a>补充一点: 做测试的时候, 记得加上这样一条:</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(classes = UserCenterApplication.class)</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="数据基本恢复完成！之前的同步工作做的不够好，建个表不是少tags就是缺profile，小问题"><a href="#数据基本恢复完成！之前的同步工作做的不够好，建个表不是少tags就是缺profile，小问题" class="headerlink" title="数据基本恢复完成！之前的同步工作做的不够好，建个表不是少tags就是缺profile，小问题"></a>数据基本恢复完成！之前的同步工作做的不够好，建个表不是少tags就是缺profile，小问题</h5></li><li><h5 id="顺便优化了join-num字段，默认为1，新增队伍时已加人数就默认置为1了"><a href="#顺便优化了join-num字段，默认为1，新增队伍时已加人数就默认置为1了" class="headerlink" title="顺便优化了join_num字段，默认为1，新增队伍时已加人数就默认置为1了"></a>顺便优化了join_num字段，默认为1，新增队伍时已加人数就默认置为1了</h5></li><li><h5 id="当然了，有了数据才解决了上面的解散队伍的问题"><a href="#当然了，有了数据才解决了上面的解散队伍的问题" class="headerlink" title="当然了，有了数据才解决了上面的解散队伍的问题"></a>当然了，有了数据才解决了上面的解散队伍的问题</h5></li><li><h5 id="浅浅记录一下效果吧："><a href="#浅浅记录一下效果吧：" class="headerlink" title="浅浅记录一下效果吧："></a>浅浅记录一下效果吧：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230520133756831.png" alt="image-20230520133756831"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230520133811546.png" alt="image-20230520133811546"></p><h2 id="浅浅记录"><a href="#浅浅记录" class="headerlink" title="浅浅记录"></a>浅浅记录</h2><ul><li><h5 id="想起来了，上次推送blog老是更新不成功，不知道这机子吃错药了还是，现在就没问题了"><a href="#想起来了，上次推送blog老是更新不成功，不知道这机子吃错药了还是，现在就没问题了" class="headerlink" title="想起来了，上次推送blog老是更新不成功，不知道这机子吃错药了还是，现在就没问题了"></a>想起来了，上次推送blog老是更新不成功，不知道这机子吃错药了还是，现在就没问题了</h5></li><li><h5 id="好几天没有更新内容了，这几天都去做毛概PPT和性交视频剪辑了，基本没精力完善这个（2023-05-18早）"><a href="#好几天没有更新内容了，这几天都去做毛概PPT和性交视频剪辑了，基本没精力完善这个（2023-05-18早）" class="headerlink" title="好几天没有更新内容了，这几天都去做毛概PPT和性交视频剪辑了，基本没精力完善这个（2023/05/18早）"></a>好几天没有更新内容了，这几天都去做毛概PPT和性交视频剪辑了，基本没精力完善这个（2023/05/18早）</h5></li><li><h5 id="今天就完成搜索队伍功能吧"><a href="#今天就完成搜索队伍功能吧" class="headerlink" title="今天就完成搜索队伍功能吧"></a>今天就完成搜索队伍功能吧</h5></li></ul><h3 id="搜索队伍"><a href="#搜索队伍" class="headerlink" title="搜索队伍"></a>搜索队伍</h3><ul><li><h5 id="今天升到win11系统了，新界面还挺不适应的"><a href="#今天升到win11系统了，新界面还挺不适应的" class="headerlink" title="今天升到win11系统了，新界面还挺不适应的"></a>今天升到win11系统了，新界面还挺不适应的</h5></li><li><h5 id="先完成一个小功能，给index-vue页面加一个返回顶部的功能，就是用了一个小组件"><a href="#先完成一个小功能，给index-vue页面加一个返回顶部的功能，就是用了一个小组件" class="headerlink" title="先完成一个小功能，给index.vue页面加一个返回顶部的功能，就是用了一个小组件"></a>先完成一个小功能，给index.vue页面加一个返回顶部的功能，就是用了一个小组件</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-back-top /&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="PPT制作完成，视频剪辑完成，可以安心搞Java了-2023-05-20黄昏"><a href="#PPT制作完成，视频剪辑完成，可以安心搞Java了-2023-05-20黄昏" class="headerlink" title="PPT制作完成，视频剪辑完成，可以安心搞Java了 (2023/05/20黄昏)"></a>PPT制作完成，视频剪辑完成，可以安心搞Java了 (2023/05/20黄昏)</h5></li><li><h5 id="快速记录一下开发情况吧"><a href="#快速记录一下开发情况吧" class="headerlink" title="快速记录一下开发情况吧:"></a>快速记录一下开发情况吧:</h5></li><li><h5 id="页面开发"><a href="#页面开发" class="headerlink" title="页面开发"></a>页面开发</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;van-form @submit=&quot;onSearchTeam&quot;&gt;<br>    &lt;van-cell-group inset&gt;<br>      &lt;van-field<br>        v-model=&quot;searchItem.name&quot;<br>        name=&quot;name&quot;<br>        label=&quot;队伍名&quot;<br>        placeholder=&quot;请输入队伍名&quot;<br>        :rules=&quot;[&#123; message: &#x27;请输入队伍名&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;searchItem.description&quot;<br>        rows=&quot;4&quot;<br>        name=&quot;description&quot;<br>        label=&quot;队伍描述&quot;<br>        type=&quot;textarea&quot;<br>        placeholder=&quot;请输入队伍描述&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;searchItem.userId&quot;<br>        name=&quot;userId&quot;<br>        label=&quot;队长id&quot;<br>        placeholder=&quot;请输入队长id&quot;<br>        :rules=&quot;[&#123; message: &#x27;请输入队长id&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field name=&quot;maxNum&quot; label=&quot;最少人数&quot;&gt;<br>        &lt;template #input&gt;<br>          &lt;van-stepper v-model=&quot;searchItem.maxNum&quot; max=&quot;20&quot; min=&quot;2&quot; /&gt;<br>        &lt;/template&gt;<br>      &lt;/van-field&gt;<br><br>      &lt;van-field name=&quot;radio&quot; label=&quot;队伍状态&quot;&gt;<br>        &lt;template #input&gt;<br>          &lt;van-radio-group v-model=&quot;searchItem.status&quot; direction=&quot;horizontal&quot;&gt;<br>            &lt;van-radio name=&quot;0&quot;&gt;公开&lt;/van-radio&gt;<br>            &lt;van-radio name=&quot;1&quot;&gt;私有&lt;/van-radio&gt;<br>            &lt;van-radio name=&quot;2&quot;&gt;加密&lt;/van-radio&gt;<br>          &lt;/van-radio-group&gt;<br>        &lt;/template&gt;<br>      &lt;/van-field&gt;<br>    &lt;/van-cell-group&gt;<br><br>    &lt;div style=&quot;margin: 16px&quot;&gt;<br>      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>        提交<br>      &lt;/van-button&gt;<br>    &lt;/div&gt;<br>  &lt;/van-form&gt;<br><br>  &lt;van-divider content-position=&quot;left&quot;&gt;符合条件的队伍&lt;/van-divider&gt;<br>  &lt;van-card<br>    v-if=&quot;teamList&quot;<br>    v-for=&quot;team in teamList&quot;<br>    :tag=&quot;getStatus(team.status)&quot;<br>    :title=&quot;team.name&quot;<br>    :desc=&quot;team.description&quot;<br>    thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>  &gt;<br>    &lt;template #bottom&gt;<br>      &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>      &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>      &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>    &lt;/template&gt;<br><br>    &lt;template #footer&gt;<br>      &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;&quot;&gt; 详细信息 &lt;/van-button&gt;<br>    &lt;/template&gt;<br>  &lt;/van-card&gt;<br>  &lt;!-- 无用户信息展示 --&gt;<br>  &lt;van-empty v-if=&quot;!teamList&quot; description=&quot;加入队伍为空&quot; /&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script lang=<span class="hljs-string">&quot;ts&quot;</span> setup&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; getStatus &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../service/function/getStatus&quot;</span>;<br><br><span class="hljs-keyword">const</span> initItem = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">description</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">maxNum</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">userId</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">status</span>: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;;<br><span class="hljs-comment">// 搜索条件</span><br><span class="hljs-keyword">const</span> searchItem = <span class="hljs-title function_">ref</span>(&#123; ...initItem &#125;);<br><span class="hljs-comment">// 队伍列表</span><br><span class="hljs-keyword">const</span> teamList = <span class="hljs-title function_">ref</span>([]);<br><span class="hljs-comment">// 表单项</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSearchTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/list/page&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">name</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<br>        <span class="hljs-attr">description</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">description</span>,<br>        <span class="hljs-attr">maxNum</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">maxNum</span>,<br>        <span class="hljs-attr">userId</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">userId</span>,<br>        <span class="hljs-attr">status</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">status</span>,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br>  <span class="hljs-comment">// 拿取队伍列表</span><br>  teamList.<span class="hljs-property">value</span> = res;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(teamList.<span class="hljs-property">value</span>);<br>&#125;;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="后端接口优化"><a href="#后端接口优化" class="headerlink" title="后端接口优化"></a>后端接口优化</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询队伍(分页查询)</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> team 查询参数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 符合条件的队伍</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Transactional</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Page&lt;Team&gt; <span class="hljs-title function_">teamList</span><span class="hljs-params">(TeamQuery team, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 登录校验</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>        <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>        QueryWrapper&lt;Team&gt; tqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br><br>        <span class="hljs-comment">// 1.根据队伍名查询</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> team.getName();<br>        <span class="hljs-keyword">if</span> (StringUtils.isNotEmpty(name) &amp;&amp; name.length() &lt; <span class="hljs-number">20</span>)<br>            tqw.like(<span class="hljs-string">&quot;name&quot;</span>, name);<br><br>        <span class="hljs-comment">// 2.根据队伍描述查询</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">description</span> <span class="hljs-operator">=</span> team.getDescription();<br>        <span class="hljs-keyword">if</span> (StringUtils.isNotEmpty(description) &amp;&amp; description.length() &gt; <span class="hljs-number">512</span>)<br>            tqw.like(<span class="hljs-string">&quot;description&quot;</span>, description);<br><br>        <span class="hljs-comment">// 3.根据队长id查询</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> team.getUserId();<br>        <span class="hljs-keyword">if</span> (userId != <span class="hljs-literal">null</span>)<br>            tqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br><br>        <span class="hljs-comment">// 4.根据最大人数查询</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br>        <span class="hljs-keyword">if</span> (maxNum &gt;= <span class="hljs-number">3</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>            tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum).eq(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum);<br><br>        <span class="hljs-comment">// 5.根据队伍状态查询</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>        <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>        <span class="hljs-keyword">if</span> (statusEnum != <span class="hljs-literal">null</span>)<br>            tqw.like(<span class="hljs-string">&quot;status&quot;</span>, status);<br><br>        <span class="hljs-comment">// 6.分页查询</span><br>        Page&lt;Team&gt; teamPage = <span class="hljs-built_in">this</span>.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>), tqw);<br>        <span class="hljs-keyword">if</span> (teamPage == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>        <span class="hljs-keyword">return</span> teamPage;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里我们记着要默认初始化查询条件均为空吧"><a href="#这里我们记着要默认初始化查询条件均为空吧" class="headerlink" title="这里我们记着要默认初始化查询条件均为空吧"></a>这里我们记着要默认初始化查询条件均为空吧</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> initItem = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">description</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">maxNum</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">userId</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">status</span>: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="最后注意一下maxNum的查询条件是-队伍的最少人数"><a href="#最后注意一下maxNum的查询条件是-队伍的最少人数" class="headerlink" title="最后注意一下maxNum的查询条件是 队伍的最少人数"></a>最后注意一下maxNum的查询条件是 队伍的最少人数</h5></li><li><h5 id="ok了-可以根据所选条件来筛选队伍了-就是样式比较丑"><a href="#ok了-可以根据所选条件来筛选队伍了-就是样式比较丑" class="headerlink" title="ok了, 可以根据所选条件来筛选队伍了, 就是样式比较丑"></a>ok了, 可以根据所选条件来筛选队伍了, 就是样式比较丑</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230520160601288.png"></p><h2 id="阶段性问题-8"><a href="#阶段性问题-8" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="开发搜索表单页面，就做好两点：搜索条件和搜索结果，把对应数据跟表单绑定好就成"><a href="#开发搜索表单页面，就做好两点：搜索条件和搜索结果，把对应数据跟表单绑定好就成" class="headerlink" title="开发搜索表单页面，就做好两点：搜索条件和搜索结果，把对应数据跟表单绑定好就成"></a>开发搜索表单页面，就做好两点：搜索条件和搜索结果，把对应数据跟表单绑定好就成</h5></li><li><h5 id="注意到后端处理请求的业务逻辑需要变动，之前写的不好，要求为：有值且值正确，就去查询数据库"><a href="#注意到后端处理请求的业务逻辑需要变动，之前写的不好，要求为：有值且值正确，就去查询数据库" class="headerlink" title="注意到后端处理请求的业务逻辑需要变动，之前写的不好，要求为：有值且值正确，就去查询数据库"></a>注意到后端处理请求的业务逻辑需要变动，之前写的不好，要求为：有值且值正确，就去查询数据库</h5></li><li><h5 id="拿到响应数据后，注意分页查询返回的队伍列表是封装在data下的records中的"><a href="#拿到响应数据后，注意分页查询返回的队伍列表是封装在data下的records中的" class="headerlink" title="拿到响应数据后，注意分页查询返回的队伍列表是封装在data下的records中的"></a>拿到响应数据后，注意分页查询返回的队伍列表是封装在data下的records中的</h5></li><li><h5 id="还有一个蛋疼的问题，就是浏览器不自动刷新了，只能重启前端服务才有效果-最后发现是TeamListPage-vue的路由里把Team小写了，服务启动没问题，但修改就有问题了，无语了"><a href="#还有一个蛋疼的问题，就是浏览器不自动刷新了，只能重启前端服务才有效果-最后发现是TeamListPage-vue的路由里把Team小写了，服务启动没问题，但修改就有问题了，无语了" class="headerlink" title="还有一个蛋疼的问题，就是浏览器不自动刷新了，只能重启前端服务才有效果,最后发现是TeamListPage.vue的路由里把Team小写了，服务启动没问题，但修改就有问题了，无语了"></a>还有一个蛋疼的问题，就是浏览器不自动刷新了，只能重启前端服务才有效果,最后发现是TeamListPage.vue的路由里把Team小写了，服务启动没问题，但修改就有问题了，无语了</h5></li></ul><h2 id="思考-3"><a href="#思考-3" class="headerlink" title="思考"></a>思考</h2><ul><li><h5 id="好的，队伍功能基本开发完毕，那么接下来的开发内容就是优化代码，开发自动推送，界面开发，追加一些小功能"><a href="#好的，队伍功能基本开发完毕，那么接下来的开发内容就是优化代码，开发自动推送，界面开发，追加一些小功能" class="headerlink" title="好的，队伍功能基本开发完毕，那么接下来的开发内容就是优化代码，开发自动推送，界面开发，追加一些小功能"></a>好的，队伍功能基本开发完毕，那么接下来的开发内容就是优化代码，开发自动推送，界面开发，追加一些小功能</h5></li></ul><h3 id="随机匹配"><a href="#随机匹配" class="headerlink" title="随机匹配"></a>随机匹配</h3><ul><li><h5 id="开始搞随机匹配咯"><a href="#开始搞随机匹配咯" class="headerlink" title="开始搞随机匹配咯"></a>开始搞随机匹配咯</h5></li><li><h5 id="编辑距离算法详解-https-blog-csdn-net-DBC-121-article-details-104198838"><a href="#编辑距离算法详解-https-blog-csdn-net-DBC-121-article-details-104198838" class="headerlink" title="编辑距离算法详解: https://blog.csdn.net/DBC_121/article/details/104198838"></a>编辑距离算法详解: <a href="https://blog.csdn.net/DBC_121/article/details/104198838">https://blog.csdn.net/DBC_121/article/details/104198838</a></h5></li></ul><h2 id="用户匹配"><a href="#用户匹配" class="headerlink" title="用户匹配"></a>用户匹配</h2><ul><li><h5 id="那我们二话不说，直接拿取人家的算法做成工具类了"><a href="#那我们二话不说，直接拿取人家的算法做成工具类了" class="headerlink" title="那我们二话不说，直接拿取人家的算法做成工具类了"></a>那我们二话不说，直接拿取人家的算法做成工具类了</h5></li><li><h5 id="utils-AlgorithmUtils下"><a href="#utils-AlgorithmUtils下" class="headerlink" title="utils/AlgorithmUtils下"></a>utils/AlgorithmUtils下</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.memory.usercenter.utils;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 邓哈哈</span><br><span class="hljs-comment"> * 2023/5/20 21:31</span><br><span class="hljs-comment"> * Function:</span><br><span class="hljs-comment"> * Version 1.0</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AlgorithmUtils</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑距离算法（用于计算最相似的两组标签）</span><br><span class="hljs-comment">     * 原理：&lt;a href=&quot;https://blog.csdn.net/DBC_121/article/details/104198838&quot;&gt;...&lt;/a&gt;</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> tagList1 标签1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> tagList2 标签2</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 操作数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">minDistance</span><span class="hljs-params">(List&lt;String&gt; tagList1, List&lt;String&gt; tagList2)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> tagList1.size();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> tagList2.size();<br><br>        <span class="hljs-keyword">if</span> (n * m == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> n + m;<br>        &#125;<br><br>        <span class="hljs-type">int</span>[][] d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n + <span class="hljs-number">1</span>][m + <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n + <span class="hljs-number">1</span>; i++) &#123;<br>            d[i][<span class="hljs-number">0</span>] = i;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; m + <span class="hljs-number">1</span>; j++) &#123;<br>            d[<span class="hljs-number">0</span>][j] = j;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt; m + <span class="hljs-number">1</span>; j++) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">left</span> <span class="hljs-operator">=</span> d[i - <span class="hljs-number">1</span>][j] + <span class="hljs-number">1</span>;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">down</span> <span class="hljs-operator">=</span> d[i][j - <span class="hljs-number">1</span>] + <span class="hljs-number">1</span>;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">left_down</span> <span class="hljs-operator">=</span> d[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">if</span> (!Objects.equals(tagList1.get(i - <span class="hljs-number">1</span>), tagList2.get(j - <span class="hljs-number">1</span>))) &#123;<br>                    left_down += <span class="hljs-number">1</span>;<br>                &#125;<br>                d[i][j] = Math.min(left, Math.min(down, left_down));<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> d[n][m];<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑距离算法（用于计算最相似的两个字符串）</span><br><span class="hljs-comment">     * 原理：&lt;a href=&quot;https://blog.csdn.net/DBC_121/article/details/104198838&quot;&gt;...&lt;/a&gt;</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> word1 字符串1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> word2 字符串2</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 操作数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">minDistance</span><span class="hljs-params">(String word1, String word2)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> word1.length();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> word2.length();<br><br>        <span class="hljs-keyword">if</span> (n * m == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> n + m;<br>        &#125;<br><br>        <span class="hljs-type">int</span>[][] d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n + <span class="hljs-number">1</span>][m + <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n + <span class="hljs-number">1</span>; i++) &#123;<br>            d[i][<span class="hljs-number">0</span>] = i;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; m + <span class="hljs-number">1</span>; j++) &#123;<br>            d[<span class="hljs-number">0</span>][j] = j;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; n + <span class="hljs-number">1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt; m + <span class="hljs-number">1</span>; j++) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">left</span> <span class="hljs-operator">=</span> d[i - <span class="hljs-number">1</span>][j] + <span class="hljs-number">1</span>;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">down</span> <span class="hljs-operator">=</span> d[i][j - <span class="hljs-number">1</span>] + <span class="hljs-number">1</span>;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">left_down</span> <span class="hljs-operator">=</span> d[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">if</span> (word1.charAt(i - <span class="hljs-number">1</span>) != word2.charAt(j - <span class="hljs-number">1</span>)) &#123;<br>                    left_down += <span class="hljs-number">1</span>;<br>                &#125;<br>                d[i][j] = Math.min(left, Math.min(down, left_down));<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> d[n][m];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="就实现了俩方法：匹配俩标签-匹配俩字符串"><a href="#就实现了俩方法：匹配俩标签-匹配俩字符串" class="headerlink" title="就实现了俩方法：匹配俩标签  匹配俩字符串"></a>就实现了俩方法：匹配俩标签  匹配俩字符串</h5></li><li><h5 id="简单做个测试吧"><a href="#简单做个测试吧" class="headerlink" title="简单做个测试吧"></a>简单做个测试吧</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(classes = UserCenterApplication.class)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AlgorithmUtilsTest</span> &#123;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;鱼皮是狗&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;鱼皮不是狗&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;鱼皮是鱼不是狗&quot;</span>;<br><span class="hljs-comment">//        String str4 = &quot;鱼皮是猫&quot;;</span><br>        <span class="hljs-comment">// 1</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">score1</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(str1, str2);<br>        <span class="hljs-comment">// 3</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">score2</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(str1, str3);<br>        System.out.println(score1);<br>        System.out.println(score2);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCompareTags</span><span class="hljs-params">()</span> &#123;<br>        List&lt;String&gt; tagList1 = Arrays.asList(<span class="hljs-string">&quot;Java&quot;</span>, <span class="hljs-string">&quot;大一&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);<br>        List&lt;String&gt; tagList2 = Arrays.asList(<span class="hljs-string">&quot;Java&quot;</span>, <span class="hljs-string">&quot;大一&quot;</span>, <span class="hljs-string">&quot;女&quot;</span>);<br>        List&lt;String&gt; tagList3 = Arrays.asList(<span class="hljs-string">&quot;Python&quot;</span>, <span class="hljs-string">&quot;大二&quot;</span>, <span class="hljs-string">&quot;女&quot;</span>);<br>        <span class="hljs-comment">// 1</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">score1</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(tagList1, tagList2);<br>        <span class="hljs-comment">// 3</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">score2</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(tagList1, tagList3);<br>        System.out.println(score1);<br>        System.out.println(score2);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="没错，直接照搬鱼皮的哈哈"><a href="#没错，直接照搬鱼皮的哈哈" class="headerlink" title="没错，直接照搬鱼皮的哈哈"></a>没错，直接照搬鱼皮的哈哈</h5></li><li><h5 id="测试完成-了解到编辑距离算法的功能就行"><a href="#测试完成-了解到编辑距离算法的功能就行" class="headerlink" title="测试完成!  了解到编辑距离算法的功能就行"></a>测试完成!  了解到编辑距离算法的功能就行</h5></li></ul><h3 id="匹配用户接口"><a href="#匹配用户接口" class="headerlink" title="匹配用户接口"></a>匹配用户接口</h3><ul><li><h5 id="controller层-7"><a href="#controller层-7" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户匹配</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> num     推荐/匹配数目</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request 获取登陆用户</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 匹配到的用户</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/match&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;User&gt;&gt; <span class="hljs-title function_">matchUsers</span><span class="hljs-params">(Integer num, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (num == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br>        <br>        List&lt;User&gt; userList = userService.matchUsers(num, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(userList);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-6"><a href="#service层-6" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 用户匹配</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> num     推荐/匹配数目</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request 获取登陆用户</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 匹配到的用户</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">matchUsers</span><span class="hljs-params">(<span class="hljs-type">long</span> num, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 1.获取登录用户标签(json字符串 -&gt; List列表)</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">tags</span> <span class="hljs-operator">=</span> loginUser.getTags();<br>       <span class="hljs-type">Gson</span> <span class="hljs-variable">gson</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br>       List&lt;String&gt; tagList = gson.fromJson(tags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>       &#125;.getType());<br>       System.out.println(tagList);<br><br>       <span class="hljs-comment">// 2.遍历所有查询到的用户, 依次进行标签比较, 并存储到容器中</span><br>       <span class="hljs-comment">// 2.1.查询到所有用户</span><br>       List&lt;User&gt; userList = <span class="hljs-built_in">this</span>.list();<br>       <span class="hljs-comment">// 2.2.使用SortedMap容器</span><br>       SortedMap&lt;Long, Integer&gt; indexDistanceMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TreeMap</span>&lt;&gt;();<br>       <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; userList.size(); i++) &#123;<br>           <span class="hljs-comment">// 2.2.1.拿到用户</span><br>           <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userList.get(i);<br>           <span class="hljs-comment">// 2.2.2.拿到其标签</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">userTags</span> <span class="hljs-operator">=</span> user.getTags();<br>           <span class="hljs-comment">// 2.2.3.无标签用户, 直接过滤</span><br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(userTags)) &#123;<br>               <span class="hljs-keyword">continue</span>;<br>           &#125;<br>           <span class="hljs-comment">// 2.2.4.转换标签(json字符串 -&gt; List列表)</span><br>           List&lt;String&gt; userTagList = gson.fromJson(userTags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>           &#125;.getType());<br>           <span class="hljs-comment">// 2.2.5.进行标签比较(编辑距离算法)</span><br>           <span class="hljs-type">long</span> <span class="hljs-variable">distance</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(tagList, userTagList);<br>           <span class="hljs-comment">// 2.2.6.将比较结果存入SortedMap容器中(存储了用户下标和匹配度, 并按distance升序排列)</span><br>           indexDistanceMap.put(distance, i);<br>       &#125;<br><br>       <span class="hljs-comment">// 3.拿取匹配度前num条数据, 并存储到容器中</span><br>       <span class="hljs-comment">// 3.1.使用List容器存储</span><br>       List&lt;User&gt; userListVo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>       <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">for</span> (Map.Entry&lt;Long, Integer&gt; entry : indexDistanceMap.entrySet()) &#123;<br>           <span class="hljs-comment">// 3.1.1.存储数量到位, 直接退出</span><br>           <span class="hljs-keyword">if</span> (i &gt; num) &#123;<br>               <span class="hljs-keyword">break</span>;<br>           &#125;<br>           <span class="hljs-comment">// 3.1.2.拿取用户, 将用户信息存放进List容器中</span><br>           <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userList.get(entry.getValue());<br>           userListVo.add(user);<br>           i++;<br>       &#125;<br><br>       <span class="hljs-comment">// 4.返回结果</span><br>       <span class="hljs-keyword">return</span> userListVo;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="拿接口文档测试一下"><a href="#拿接口文档测试一下" class="headerlink" title="拿接口文档测试一下"></a>拿接口文档测试一下</h5></li></ul><h2 id="阶段性问题-9"><a href="#阶段性问题-9" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里的SortedMap是用来存储用户和匹配度的，且默认按key值升序排序，不允许重复key值，实现起来有点问题，改天看完鱼皮再试一试，先记着-2023-05-20晚"><a href="#这里的SortedMap是用来存储用户和匹配度的，且默认按key值升序排序，不允许重复key值，实现起来有点问题，改天看完鱼皮再试一试，先记着-2023-05-20晚" class="headerlink" title="这里的SortedMap是用来存储用户和匹配度的，且默认按key值升序排序，不允许重复key值，实现起来有点问题，改天看完鱼皮再试一试，先记着 (2023/05/20晚)"></a>这里的SortedMap是用来存储用户和匹配度的，且默认按key值升序排序，不允许重复key值，实现起来有点问题，改天看完鱼皮再试一试，先记着 (2023/05/20晚)</h5></li><li><p>实现随机匹配的逻辑, 我们要优化两个点: 执行时长为多少? 是否能正确匹配? </p></li><li><p>首先优化执行时长, 有以下几点可以优化:</p></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment">-- 必做</span><br><span class="hljs-number">1.</span>数据量过大时, 不要循环输出日志<br><span class="hljs-number">2.</span>细节: 匹配结果剔除自己<br><span class="hljs-number">3.</span>标签为空, 不查<br><span class="hljs-number">4.</span>只查需要的字段(即投影, 如只查<span class="hljs-built_in">id</span>和tags)<br><br><span class="hljs-comment">-- 选做</span><br><span class="hljs-number">1.</span>维护一个固定长度的有序集合, 以时间换空间<br><span class="hljs-number">2.</span>根据部分标签筛选(前提是能区分出那些标签比较重要)<br><span class="hljs-number">3.</span>提前查, 搞缓存<br></code></pre></td></tr></table></figure><ul><li><p>然后就是优化能否正确匹配了, 很显然, 昨晚的那个SortedMap并不能完成这个功能, 我就说嘛</p></li><li><p>SortedMap默认按key值升序排列, 把distance做value是不行的, 把distance做key值也不行, 因为SortedMap不允许重复key, 那样的话相同distance就被顶替了.</p></li><li><p>比较可行的方法是把用户和相应相似度存放进List中, 再按distance升序排序, 最后查出前num条</p></li><li><p>代码实现的话就明天写吧 (2023/05/21晚)</p></li><li><p>他妈的连抄带粘写完了, 先不详细解释了, 必做的优化点做到位了, 剩下的逻辑看着真恶心, 放下边慢慢体会吧:</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 用户匹配</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> num     推荐/匹配数目</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request 获取登陆用户</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 匹配到的用户</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">matchUsers</span><span class="hljs-params">(<span class="hljs-type">long</span> num, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 1.获取登录用户标签(json字符串 -&gt; List列表)</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">tags</span> <span class="hljs-operator">=</span> loginUser.getTags();<br>       <span class="hljs-type">Gson</span> <span class="hljs-variable">gson</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br>       List&lt;String&gt; tagList = gson.fromJson(tags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>       &#125;.getType());<br><br>       QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       queryWrapper.isNotNull(<span class="hljs-string">&quot;tags&quot;</span>);<br>       queryWrapper.select(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;tags&quot;</span>);<br>       <span class="hljs-comment">// 2.遍历所有查询到的用户, 依次进行标签比较, 并存储到容器中</span><br>       <span class="hljs-comment">// 2.1.查询到所有用户</span><br>       List&lt;User&gt; userList = <span class="hljs-built_in">this</span>.list();<br>       <span class="hljs-comment">// 2.2.使用SortedMap容器</span><br>       List&lt;Pair&lt;User, Long&gt;&gt; userDistanceList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>       <span class="hljs-keyword">for</span> (User user : userList) &#123;<br>           <span class="hljs-comment">// 2.2.1.拿到用户</span><br>           <span class="hljs-comment">// 2.2.2.拿到其标签</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">userTags</span> <span class="hljs-operator">=</span> user.getTags();<br>           <span class="hljs-comment">// 2.2.3.无标签用户, 直接过滤, 匹配结果剔除自己</span><br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(userTags) || user.getId().equals(loginUser.getId())) &#123;<br>               <span class="hljs-keyword">continue</span>;<br>           &#125;<br>           <span class="hljs-comment">// 2.2.4.转换标签(json字符串 -&gt; List列表)</span><br>           List&lt;String&gt; userTagList = gson.fromJson(userTags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>           &#125;.getType());<br>           <span class="hljs-comment">// 2.2.5.进行标签比较(编辑距离算法)</span><br>           <span class="hljs-type">long</span> <span class="hljs-variable">distance</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(tagList, userTagList);<br>           <span class="hljs-comment">// 2.2.6.将比较结果存入SortedMap容器中(存储了用户下标和匹配度, 并按distance升序排列)</span><br>           userDistanceList.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Pair</span>&lt;&gt;(user, distance));<br>       &#125;<br><br>       <span class="hljs-comment">// 3.按编辑距离由小到大排序</span><br>       List&lt;Pair&lt;User, Long&gt;&gt; sortedUserDistanceList = userDistanceList.stream()<br>               .sorted((a, b) -&gt; (<span class="hljs-type">int</span>) (a.getB() - b.getB()))<br>               .limit(num)<br>               .collect(Collectors.toList());<br><br>       <span class="hljs-comment">// 4.有顺序的userID列表</span><br>       List&lt;Long&gt; userIdList = sortedUserDistanceList.stream().map(pair -&gt; pair.getA().getId()).collect(Collectors.toList());<br><br>       <span class="hljs-comment">// 5.根据id查询user完整信息</span><br>       QueryWrapper&lt;User&gt; userQueryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       userQueryWrapper.in(<span class="hljs-string">&quot;id&quot;</span>, userIdList);<br>       Map&lt;Long, List&lt;User&gt;&gt; userIdUserListMap = <span class="hljs-built_in">this</span>.list(userQueryWrapper).stream()<br>               .map(<span class="hljs-built_in">this</span>::getSafetyUser)<br>               .collect(Collectors.groupingBy(User::getId));<br><br>       <span class="hljs-comment">// 6.因为上面查询打乱了顺序，这里根据上面有序的userId列表赋值</span><br>       List&lt;User&gt; finalUserList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>       <span class="hljs-keyword">for</span> (Long userId : userIdList) &#123;<br>           finalUserList.add(userIdUserListMap.get(userId).get(<span class="hljs-number">0</span>));<br>       &#125;<br>       <br>       <span class="hljs-comment">// 7.返回匹配用户列表</span><br>       <span class="hljs-keyword">return</span> finalUserList;<br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="匹配用户页面"><a href="#匹配用户页面" class="headerlink" title="匹配用户页面"></a>匹配用户页面</h3><ul><li>之前写过的分页查询所有用户就先保留了</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;template&gt;<br>  &lt;!-- 寄语 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;盛年不重来，一日难再晨。及时当勉励，岁月不待人。&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">  /&gt;</span></span><br>&lt;!-- 首页轮播图 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">lazy-render</span> <span class="hljs-attr">:width</span>=<span class="hljs-string">&quot;480&quot;</span> <span class="hljs-attr">:height</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;image in images&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;image&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span></span><br><br>  &lt;!-- 匹配用户表单 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;recommend&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding-bottom: 53px&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123; color: &#x27;#1989fa&#x27;, borderColor: &#x27;#1989fa&#x27;, padding: &#x27;0 16px&#x27; &#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      每周推荐用户</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 匹配用户信息页 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-card</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;user in matchUserList&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:tag</span>=<span class="hljs-string">&quot;`$&#123;user.gender&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:desc</span>=<span class="hljs-string">&quot;user.profile&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:thumb</span>=<span class="hljs-string">&quot;`$&#123;user.avatarUrl&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      <span class="hljs-comment">&lt;!-- 标签展示 --&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tags</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">plain</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;tag in user.tags&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-right: 3px; margin-top: 3px&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        &gt;</span></span><br><span class="language-xml">          &#123;&#123; tag &#125;&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>联系俺<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">van-card</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 无用户信息展示 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!matchUserList&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;获取用户信息失败&quot;</span> /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br>  &lt;!-- 用户表单 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding-bottom: 53px&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123; color: &#x27;#1989fa&#x27;, borderColor: &#x27;#1989fa&#x27;, padding: &#x27;0 16px&#x27; &#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      主题</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 用户信息页 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-card</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;user in userList&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:tag</span>=<span class="hljs-string">&quot;`$&#123;user.gender&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:desc</span>=<span class="hljs-string">&quot;user.profile&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:thumb</span>=<span class="hljs-string">&quot;`$&#123;user.avatarUrl&#125;`&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      <span class="hljs-comment">&lt;!-- 标签展示 --&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tags</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">plain</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;tag in user.tags&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-right: 3px; margin-top: 3px&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        &gt;</span></span><br><span class="language-xml">          &#123;&#123; tag &#125;&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>联系俺<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">van-card</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 无用户信息展示 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!userList&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;获取用户信息失败&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 分页插件 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;userList&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;total&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:items-per-page</span>=<span class="hljs-string">&quot;pageSize&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">force-ellipses</span></span></span><br><span class="hljs-tag"><span class="language-xml">      @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;change&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  &lt;!-- 返回顶部 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">van-back-top</span> /&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; userType &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../models/user&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/myAxios&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 轮播图片</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> images = [</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-string">&quot;https://gitee.com/deng-2022/pictures/raw/master/images/sunset.jpg&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-string">&quot;https://gitee.com/deng-2022/pictures/raw/master/images/typora-icon.png&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">];</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 匹配用户列表</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> matchUserList = <span class="hljs-title function_">ref</span>([]);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 用户列表</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> userList = <span class="hljs-title function_">ref</span>([]);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 当前页码</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> currentPage = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 每页显示数</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">let</span> pageSize = <span class="hljs-number">10</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 总记录数</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">let</span> <span class="hljs-attr">total</span>: number = <span class="hljs-number">0</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">//</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> <span class="hljs-title function_">matchUsers</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 发送请求, 获取用户数据列表</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> userListData = <span class="hljs-keyword">await</span> myAxios</span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/match&quot;</span>, &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">params</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">num</span>: <span class="hljs-number">3</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 响应</span></span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 返回响应数据（用户列表）</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      total = response.<span class="hljs-property">data</span>.<span class="hljs-property">total</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      pageSize = response.<span class="hljs-property">data</span>.<span class="hljs-property">size</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 抛异常</span></span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 成功拿到用户数据列表(不为空)</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">if</span> (userListData) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 遍历用户数据列表</span></span></span><br><span class="language-javascript"><span class="language-xml">    userListData.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">user: userType</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 将gender的 &quot;1&quot;/&quot;0&quot; 渲染成 &quot;男&quot;/&quot;女&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;1&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;男&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;0&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;女&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// JSON字符串序列化为列表</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">tags</span>) user.<span class="hljs-property">tags</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(user.<span class="hljs-property">tags</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 处理过后的用户列表</span></span></span><br><span class="language-javascript"><span class="language-xml">    matchUserList.<span class="hljs-property">value</span> = userListData;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> <span class="hljs-title function_">getPage</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">currentPage: number</span>) =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 发送请求, 获取用户数据列表</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> userListData = <span class="hljs-keyword">await</span> myAxios</span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/recommend&quot;</span>, &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">params</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">currentPage</span>: currentPage,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">pageSize</span>: pageSize,</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 响应</span></span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 返回响应数据（用户列表）</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      total = response.<span class="hljs-property">data</span>.<span class="hljs-property">total</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      pageSize = response.<span class="hljs-property">data</span>.<span class="hljs-property">size</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 抛异常</span></span></span><br><span class="language-javascript"><span class="language-xml">    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 成功拿到用户数据列表(不为空)</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">if</span> (userListData) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 遍历用户数据列表</span></span></span><br><span class="language-javascript"><span class="language-xml">    userListData.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">user: userType</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// 将gender的 &quot;1&quot;/&quot;0&quot; 渲染成 &quot;男&quot;/&quot;女&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;1&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;男&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;0&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;女&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">// JSON字符串序列化为列表</span></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (user.<span class="hljs-property">tags</span>) user.<span class="hljs-property">tags</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(user.<span class="hljs-property">tags</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 处理过后的用户列表</span></span></span><br><span class="language-javascript"><span class="language-xml">    userList.<span class="hljs-property">value</span> = userListData;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 用户列表, 钩子函数</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 匹配用户</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">matchUsers</span>();</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 主页</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">getPage</span>(currentPage.<span class="hljs-property">value</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 改变页码</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> <span class="hljs-title function_">change</span> = (<span class="hljs-params"></span>) =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(currentPage.<span class="hljs-property">value</span>);</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(userList.<span class="hljs-property">value</span>.<span class="hljs-property">length</span>);</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">getPage</span>(currentPage.<span class="hljs-property">value</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><ul><li><h5 id="加了俩组件-寄语和轮播图"><a href="#加了俩组件-寄语和轮播图" class="headerlink" title="加了俩组件 寄语和轮播图"></a>加了俩组件 寄语和轮播图</h5></li><li><h5 id="然后我就想用自己的图片来做这个轮播图"><a href="#然后我就想用自己的图片来做这个轮播图" class="headerlink" title="然后我就想用自己的图片来做这个轮播图"></a>然后我就想用自己的图片来做这个轮播图</h5></li><li><h5 id="那我搭建一个自己的图床呗-拿个图片老方便了-学一学怎么搭建图床-说干就干"><a href="#那我搭建一个自己的图床呗-拿个图片老方便了-学一学怎么搭建图床-说干就干" class="headerlink" title="那我搭建一个自己的图床呗 拿个图片老方便了 学一学怎么搭建图床 说干就干"></a>那我搭建一个自己的图床呗 拿个图片老方便了 学一学怎么搭建图床 说干就干</h5></li></ul><h2 id="搭建图床"><a href="#搭建图床" class="headerlink" title="搭建图床"></a>搭建图床</h2><ul><li><h5 id="搭建过程就不多说了-收藏了好几个CSDN博客教程"><a href="#搭建过程就不多说了-收藏了好几个CSDN博客教程" class="headerlink" title="搭建过程就不多说了 收藏了好几个CSDN博客教程"></a>搭建过程就不多说了 收藏了好几个CSDN博客教程</h5></li><li><h5 id="最重要的是在PicGo里下一个插件-搭建一个Gitee图床-不用GitHub图床是因为这玩意儿BUG太多了-尤其是网络原因"><a href="#最重要的是在PicGo里下一个插件-搭建一个Gitee图床-不用GitHub图床是因为这玩意儿BUG太多了-尤其是网络原因" class="headerlink" title="最重要的是在PicGo里下一个插件  搭建一个Gitee图床 (不用GitHub图床是因为这玩意儿BUG太多了 尤其是网络原因)"></a>最重要的是在PicGo里下一个插件  搭建一个Gitee图床 (不用GitHub图床是因为这玩意儿BUG太多了 尤其是网络原因)</h5></li><li><h5 id="两个图床的配置都放下面了-我用了Gitee图床"><a href="#两个图床的配置都放下面了-我用了Gitee图床" class="headerlink" title="两个图床的配置都放下面了 我用了Gitee图床"></a>两个图床的配置都放下面了 我用了Gitee图床</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230523223215190.png" alt="image-20230523223215190"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230523223310839.png" alt="image-20230523223310839"></p><ul><li><h5 id="上传到图床的图片可以随意使用了"><a href="#上传到图床的图片可以随意使用了" class="headerlink" title="上传到图床的图片可以随意使用了"></a>上传到图床的图片可以随意使用了</h5></li><li><h5 id="在Typora-gt-偏好设置-gt-图像-里配置好上传服务和PicGo路径后-Typora里使用到的图片都会自动上传到图床上去"><a href="#在Typora-gt-偏好设置-gt-图像-里配置好上传服务和PicGo路径后-Typora里使用到的图片都会自动上传到图床上去" class="headerlink" title="在Typora -&gt; 偏好设置 -&gt; 图像 里配置好上传服务和PicGo路径后 Typora里使用到的图片都会自动上传到图床上去"></a>在Typora -&gt; 偏好设置 -&gt; 图像 里配置好上传服务和PicGo路径后 Typora里使用到的图片都会自动上传到图床上去</h5></li><li><h5 id="最后展示一下我刚上传到图床里的图片吧"><a href="#最后展示一下我刚上传到图床里的图片吧" class="headerlink" title="最后展示一下我刚上传到图床里的图片吧"></a>最后展示一下我刚上传到图床里的图片吧</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/sunset.jpg"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230523223215190.png"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/sunset.jpg"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/girl3.jpg"></p><ul><li><h5 id="操他妈的这张图片怎么就显示不出来呢"><a href="#操他妈的这张图片怎么就显示不出来呢" class="headerlink" title="操他妈的这张图片怎么就显示不出来呢"></a>操他妈的这张图片怎么就显示不出来呢</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/girl3.jpg"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/error.png"></p><ul><li><h5 id="操他妈的上个厕所就能显示了"><a href="#操他妈的上个厕所就能显示了" class="headerlink" title="操他妈的上个厕所就能显示了"></a>操他妈的上个厕所就能显示了</h5></li><li><h5 id="总之-图床可以正常使用了-现在把浏览器收藏夹整理一下先-2023-05-23晚"><a href="#总之-图床可以正常使用了-现在把浏览器收藏夹整理一下先-2023-05-23晚" class="headerlink" title="总之 图床可以正常使用了 现在把浏览器收藏夹整理一下先 (2023/05/23晚)"></a>总之 图床可以正常使用了 现在把浏览器收藏夹整理一下先 (2023/05/23晚)</h5></li><li><h5 id="今天距伙伴匹配系统从零开发-整整俩个月了-简单纪念一下-但是今天不想编码了-干点儿别的吧-2023-05-24晚"><a href="#今天距伙伴匹配系统从零开发-整整俩个月了-简单纪念一下-但是今天不想编码了-干点儿别的吧-2023-05-24晚" class="headerlink" title="今天距伙伴匹配系统从零开发 整整俩个月了 简单纪念一下 但是今天不想编码了 干点儿别的吧 (2023/05/24晚)"></a>今天距伙伴匹配系统从零开发 整整俩个月了 简单纪念一下 但是今天不想编码了 干点儿别的吧 (2023/05/24晚)</h5></li></ul><h1 id="持续优化"><a href="#持续优化" class="headerlink" title="持续优化"></a>持续优化</h1><ul><li><h5 id="之后的优化就统一写这里吧（新功能实现除外）"><a href="#之后的优化就统一写这里吧（新功能实现除外）" class="headerlink" title="之后的优化就统一写这里吧（新功能实现除外）"></a>之后的优化就统一写这里吧（新功能实现除外）</h5></li></ul><h3 id="随机匹配优化1-0"><a href="#随机匹配优化1-0" class="headerlink" title="随机匹配优化1.0"></a>随机匹配优化1.0</h3><ul><li><h5 id="增加了个可以开关的按钮"><a href="#增加了个可以开关的按钮" class="headerlink" title="增加了个可以开关的按钮"></a>增加了个可以开关的按钮</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;van-field name=<span class="hljs-string">&quot;switch&quot;</span> label=<span class="hljs-string">&quot;开启每周推荐&quot;</span>&gt;<br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;matchUsers&quot;</span> /&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br> &lt;/van-field&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 开启/关闭每周推荐</span><br><span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-comment">// 匹配用户列表</span><br><span class="hljs-keyword">const</span> matchUserList = <span class="hljs-title function_">ref</span>([]);<br><span class="hljs-comment">// 每周推荐功能</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">matchUsers</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;checked = &quot;</span> + checked.<span class="hljs-property">value</span>);<br>  <span class="hljs-comment">// 每周推荐是否开启</span><br>  <span class="hljs-keyword">if</span> (checked.<span class="hljs-property">value</span>) &#123;<br>    <span class="hljs-comment">// 发送请求, 获取用户数据列表</span><br>    <span class="hljs-keyword">const</span> userListData = <span class="hljs-keyword">await</span> myAxios<br>      .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/match&quot;</span>, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">num</span>: <span class="hljs-number">3</span>,<br>        &#125;,<br>      &#125;)<br>      <span class="hljs-comment">// 响应</span><br>      .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>        <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>        total = response.<span class="hljs-property">data</span>.<span class="hljs-property">total</span>;<br>        pageSize = response.<span class="hljs-property">data</span>.<span class="hljs-property">size</span>;<br>        <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>      &#125;)<br>      <span class="hljs-comment">// 抛异常</span><br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>      &#125;);<br>    <span class="hljs-comment">// 成功拿到用户数据列表(不为空)</span><br>    <span class="hljs-keyword">if</span> (userListData) &#123;<br>      <span class="hljs-comment">// 遍历用户数据列表</span><br>      userListData.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">user: userType</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 将gender的 &quot;1&quot;/&quot;0&quot; 渲染成 &quot;男&quot;/&quot;女&quot;</span><br>        <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;1&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;男&quot;</span>;<br>        <span class="hljs-keyword">if</span> (user.<span class="hljs-property">gender</span> === <span class="hljs-string">&quot;0&quot;</span>) user.<span class="hljs-property">gender</span> = <span class="hljs-string">&quot;女&quot;</span>;<br>        <span class="hljs-comment">// JSON字符串序列化为列表</span><br>        <span class="hljs-keyword">if</span> (user.<span class="hljs-property">tags</span>) user.<span class="hljs-property">tags</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(user.<span class="hljs-property">tags</span>);<br>      &#125;);<br>      <span class="hljs-comment">// 处理过后的用户列表</span><br>      matchUserList.<span class="hljs-property">value</span> = userListData;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    matchUserList.<span class="hljs-property">value</span> = [];<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里有个BUG，想实现关闭按钮后显示无用户页面无果（待解决）"><a href="#这里有个BUG，想实现关闭按钮后显示无用户页面无果（待解决）" class="headerlink" title="这里有个BUG，想实现关闭按钮后显示无用户页面无果（待解决）"></a>这里有个BUG，想实现关闭按钮后显示无用户页面无果（待解决）</h5></li></ul><h3 id="页面标题优化"><a href="#页面标题优化" class="headerlink" title="页面标题优化"></a>页面标题优化</h3><ul><li><h5 id="还记得咱的页面标题写哪吗？嘿嘿哈哈"><a href="#还记得咱的页面标题写哪吗？嘿嘿哈哈" class="headerlink" title="还记得咱的页面标题写哪吗？嘿嘿哈哈"></a>还记得咱的页面标题写哪吗？嘿嘿哈哈</h5></li><li><h5 id="layouts-BasicLayout-vue-下"><a href="#layouts-BasicLayout-vue-下" class="headerlink" title="layouts/BasicLayout.vue 下"></a>layouts/BasicLayout.vue 下</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- 导航栏 --&gt;<br>  &lt;van-nav-bar<br>    title=&quot;标题&quot;<br>    fixed<br>    left-arrow<br>    @click-left=&quot;onClickLeft&quot;<br>    @click-right=&quot;onClickRight&quot;<br>  &gt;<br>    &lt;template #right&gt;<br>      &lt;van-icon name=&quot;search&quot; size=&quot;18&quot; /&gt;<br>    &lt;/template&gt;<br>  &lt;/van-nav-bar&gt;<br><br>  &lt;div id=&quot;content&quot;&gt;<br>    &lt;router-view /&gt;<br>  &lt;/div&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="就在这页增加些逻辑吧，留心下routes，routerAPI的使用"><a href="#就在这页增加些逻辑吧，留心下routes，routerAPI的使用" class="headerlink" title="就在这页增加些逻辑吧，留心下routes，routerAPI的使用"></a>就在这页增加些逻辑吧，留心下routes，routerAPI的使用</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 默认页面标题</span><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_TITLE</span> = <span class="hljs-string">&quot;伙伴匹配&quot;</span>;<br><span class="hljs-comment">// 页面标题</span><br><span class="hljs-keyword">const</span> title = <span class="hljs-title function_">ref</span>(<span class="hljs-variable constant_">DEFAULT_TITLE</span>);<br><br><span class="hljs-comment">// 跳转页面前校验将要跳转的路由(目标路由)</span><br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-function">(<span class="hljs-params">to</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">// 拿取目标路由的path</span><br>  <span class="hljs-keyword">const</span> toPath = to.<span class="hljs-property">path</span>;<br>  <span class="hljs-comment">// 逐个比对自定义路由中的path</span><br>  <span class="hljs-keyword">const</span> route = routes.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">route</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 匹配到该路由的path</span><br>    <span class="hljs-keyword">return</span> toPath == route.<span class="hljs-property">path</span>;<br>  &#125;);<br>  <span class="hljs-comment">// 设置title为匹配路由的title</span><br>  title.<span class="hljs-property">value</span> = route?.<span class="hljs-property">title</span> ?? <span class="hljs-variable constant_">DEFAULT_TITLE</span>;<br>&#125;);<br><br><span class="hljs-comment">// 左”/“按钮, 返回上个页面</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickLeft</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">back</span>();<br>&#125;;<br><span class="hljs-comment">// 跳转至搜索页</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickRight</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/search&quot;</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230526233615488.png" alt="image-20230526233615488"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230526233636359.png" alt="image-20230526233636359"></p><ul><li><h5 id="效果很明显嘛，完成！"><a href="#效果很明显嘛，完成！" class="headerlink" title="效果很明显嘛，完成！"></a>效果很明显嘛，完成！</h5></li></ul><h3 id="用户标签优化"><a href="#用户标签优化" class="headerlink" title="用户标签优化"></a>用户标签优化</h3><ul><li><h5 id="记得队伍卡片上左上角的状态显示吧，我们优化一下用户卡片上的性别显示"><a href="#记得队伍卡片上左上角的状态显示吧，我们优化一下用户卡片上的性别显示" class="headerlink" title="记得队伍卡片上左上角的状态显示吧，我们优化一下用户卡片上的性别显示"></a>记得队伍卡片上左上角的状态显示吧，我们优化一下用户卡片上的性别显示</h5></li><li><h5 id="service-function-getUserGender-ts下："><a href="#service-function-getUserGender-ts下：" class="headerlink" title="service/function/getUserGender.ts下："></a>service/function/getUserGender.ts下：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 转换stasus</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getUserGender</span> = (<span class="hljs-params">gender: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (gender === <span class="hljs-string">&quot;0&quot;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;女&quot;</span>;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (gender === <span class="hljs-string">&quot;1&quot;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;男&quot;</span>;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;人妖&quot;</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="然后在用户列表页和匹配用户页调用一下就行"><a href="#然后在用户列表页和匹配用户页调用一下就行" class="headerlink" title="然后在用户列表页和匹配用户页调用一下就行"></a>然后在用户列表页和匹配用户页调用一下就行</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;van-card<br>     v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;user in userList&quot;</span><br>     :tag=<span class="hljs-string">&quot;getUserGender(user.gender)&quot;</span><br>     :title=<span class="hljs-string">&quot;`$&#123;user.userAccount&#125; $&#123;user.username&#125; $&#123;user.planetCode&#125;`&quot;</span><br>     :desc=<span class="hljs-string">&quot;user.profile&quot;</span><br>     :thumb=<span class="hljs-string">&quot;`$&#123;user.avatarUrl&#125;`&quot;</span><br>   &gt;<br></code></pre></td></tr></table></figure><h2 id="阶段性问题-10"><a href="#阶段性问题-10" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里把getTeamStatus-ts也优化了下，结果给网页整空白了，卡了半天发现TeamListPage和TeamPage都调用了这个方法而前者我忘记改过来了，要注意一下"><a href="#这里把getTeamStatus-ts也优化了下，结果给网页整空白了，卡了半天发现TeamListPage和TeamPage都调用了这个方法而前者我忘记改过来了，要注意一下" class="headerlink" title="这里把getTeamStatus.ts也优化了下，结果给网页整空白了，卡了半天发现TeamListPage和TeamPage都调用了这个方法而前者我忘记改过来了，要注意一下"></a>这里把getTeamStatus.ts也优化了下，结果给网页整空白了，卡了半天发现TeamListPage和TeamPage都调用了这个方法而前者我忘记改过来了，要注意一下</h5></li><li><h5 id="第一遍做的时候取了user的status，才反应过来user的是gender，又全改了一遍"><a href="#第一遍做的时候取了user的status，才反应过来user的是gender，又全改了一遍" class="headerlink" title="第一遍做的时候取了user的status，才反应过来user的是gender，又全改了一遍"></a>第一遍做的时候取了user的status，才反应过来user的是gender，又全改了一遍</h5></li><li><h5 id="然后发现数据库中的gender是varchar型，而status是int型，真几把服，谁设计的表，害我前端数据类型不对应，逻辑判断都有问题"><a href="#然后发现数据库中的gender是varchar型，而status是int型，真几把服，谁设计的表，害我前端数据类型不对应，逻辑判断都有问题" class="headerlink" title="然后发现数据库中的gender是varchar型，而status是int型，真几把服，谁设计的表，害我前端数据类型不对应，逻辑判断都有问题"></a>然后发现数据库中的gender是varchar型，而status是int型，真几把服，谁设计的表，害我前端数据类型不对应，逻辑判断都有问题</h5></li><li><h5 id="今天就干到这吧（2023-05-26晚）"><a href="#今天就干到这吧（2023-05-26晚）" class="headerlink" title="今天就干到这吧（2023/05/26晚）"></a>今天就干到这吧（2023/05/26晚）</h5></li></ul><h3 id="加入队伍"><a href="#加入队伍" class="headerlink" title="加入队伍"></a>加入队伍</h3><ul><li><h5 id="他爷爷的，我把这功能忘了"><a href="#他爷爷的，我把这功能忘了" class="headerlink" title="他爷爷的，我把这功能忘了"></a>他爷爷的，我把这功能忘了</h5></li><li><h5 id="之前后端接口已经写好了："><a href="#之前后端接口已经写好了：" class="headerlink" title="之前后端接口已经写好了："></a>之前后端接口已经写好了：</h5></li><li><h5 id="controller层-8"><a href="#controller层-8" class="headerlink" title="controller层"></a>controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 加入队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team    加入队伍参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 加入队伍成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/join&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">joinTeam</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> TeamJoin team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// controller对参数的校验</span><br>       <span class="hljs-keyword">if</span> (team == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">joinTeam</span> <span class="hljs-operator">=</span> teamService.joinTeam(team, request);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(joinTeam);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-7"><a href="#service层-7" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 加入队伍</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> team    加入队伍参数</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 加入队伍成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Transactional</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">joinTeam</span><span class="hljs-params">(TeamJoin team, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 1.登录校验</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br>       <span class="hljs-keyword">if</span> (loginUser == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN);<br><br>       <span class="hljs-comment">// 2.校验队伍是否存在</span><br>       <span class="hljs-type">Long</span> <span class="hljs-variable">teamId</span> <span class="hljs-operator">=</span> team.getId();<br>       <span class="hljs-keyword">if</span> (teamId == <span class="hljs-literal">null</span> || teamId &lt; <span class="hljs-number">0</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR);<br><br>       <span class="hljs-type">Team</span> <span class="hljs-variable">currentTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(teamId);<br>       <span class="hljs-keyword">if</span> (currentTeam == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;该队伍不存在&quot;</span>);<br><br>       <span class="hljs-comment">// 3.校验状态</span><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> team.getStatus();<br>       <span class="hljs-type">TeamStatusEnum</span> <span class="hljs-variable">statusEnum</span> <span class="hljs-operator">=</span> TeamStatusEnum.getEnumByValue(status);<br>       <span class="hljs-keyword">if</span> (statusEnum == <span class="hljs-literal">null</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;队伍状态不符合要求&quot;</span>);<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br>       <span class="hljs-comment">// 4.1.加入加密队伍必须输入密码</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入加密队伍要提供正确的密码&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 4.2.加入公开队伍不需要密码用户加入公开队伍不需要密码</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.PUBLIC.equals(statusEnum)) &#123;<br>           <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(password))<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入公开队伍无需密码&quot;</span>);<br>       &#125;<br><br>       <span class="hljs-comment">// 4.3.不能加入私有队伍</span><br>       <span class="hljs-keyword">if</span> (TeamStatusEnum.PRIVATE.equals(statusEnum))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;不能主动加入私有队伍&quot;</span>);<br><br>       <span class="hljs-comment">// 5.最多加入5个队伍</span><br>       QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> loginUser.getId();<br>       utqw.eq(<span class="hljs-string">&quot;user_id&quot;</span>, userId);<br>       <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> userTeamService.count(utqw);<br>       <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;该用户加入队伍已达上限&quot;</span>);<br><br>       <span class="hljs-comment">// 6.不能重复加入已加入的队伍</span><br>       utqw.eq(<span class="hljs-string">&quot;team_id&quot;</span>, team.getId());<br>       count = userTeamService.count(utqw);<br>       <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">0</span>)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;您已在该队伍中&quot;</span>);<br><br>       <span class="hljs-comment">// 7.不能加入满员的队伍</span><br>       <span class="hljs-type">Integer</span> <span class="hljs-variable">joinNum</span> <span class="hljs-operator">=</span> team.getJoinNum();<br>       <span class="hljs-keyword">if</span> (joinNum &gt;= team.getMaxNum())<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;该队伍已满员&quot;</span>);<br><br>       <span class="hljs-comment">// 8.更新team表队伍成员数量</span><br>       UpdateWrapper&lt;Team&gt; tuw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UpdateWrapper</span>&lt;&gt;();<br>       tuw.eq(<span class="hljs-string">&quot;id&quot;</span>, teamId).set(<span class="hljs-string">&quot;join_num&quot;</span>, ++joinNum);<br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">updateTeam</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.update(tuw);<br><br>       <span class="hljs-comment">// 9.插入用户-队伍关系到user_team表</span><br>       <span class="hljs-type">UserTeam</span> <span class="hljs-variable">userTeam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserTeam</span>();<br>       userTeam.setUserId(userId);<br>       userTeam.setTeamId(teamId);<br>       userTeam.setJoinTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br><br>       <span class="hljs-type">boolean</span> <span class="hljs-variable">saveUserTeam</span> <span class="hljs-operator">=</span> userTeamService.save(userTeam);<br><br>       <span class="hljs-keyword">if</span> (!updateTeam || !saveUserTeam)<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;用户加入队伍失败&quot;</span>);<br><br>       <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;加入队伍成功&quot;</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="快速开发前端页面："><a href="#快速开发前端页面：" class="headerlink" title="快速开发前端页面："></a>快速开发前端页面：</h5></li><li><h5 id="挂个按钮，再携带参数发送个toJoinTeam请求"><a href="#挂个按钮，再携带参数发送个toJoinTeam请求" class="headerlink" title="挂个按钮，再携带参数发送个toJoinTeam请求"></a>挂个按钮，再携带参数发送个toJoinTeam请求</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-button size=&quot;mini&quot; type=&quot;success&quot; @click=&quot;toJoinTeam(team)&quot;&gt;<br>       申请加入<br>     &lt;/van-button&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 申请加入队伍</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toJoinTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">team: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 发送请求, 获取用户数据列表</span><br>  <span class="hljs-keyword">const</span> joinTeam = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/join&quot;</span>, &#123;<br>      <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>      <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>      <span class="hljs-attr">maxNum</span>: team.<span class="hljs-property">maxNum</span>,<br>      <span class="hljs-attr">status</span>: team.<span class="hljs-property">status</span>,<br>      <span class="hljs-attr">password</span>: team.<span class="hljs-property">password</span>,<br>      <span class="hljs-attr">joinNum</span>: team.<span class="hljs-property">joinNum</span>,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;加入队伍: = &quot;</span> + response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br>  <span class="hljs-comment">// 成功加入队伍</span><br>  <span class="hljs-keyword">if</span> (joinTeam) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">`joinTeam`</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(joinTeam);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="那我们在搜索页面里找个队伍，申请加入吧"><a href="#那我们在搜索页面里找个队伍，申请加入吧" class="headerlink" title="那我们在搜索页面里找个队伍，申请加入吧"></a>那我们在搜索页面里找个队伍，申请加入吧</h5></li></ul><h3 id="搜索队伍优化"><a href="#搜索队伍优化" class="headerlink" title="搜索队伍优化"></a>搜索队伍优化</h3><ul><li><h5 id="这边发现按照队伍最大人数来筛选队伍时，后端逻辑校验有问题：本意是查询-gt-最小人数的队伍，但写成了："><a href="#这边发现按照队伍最大人数来筛选队伍时，后端逻辑校验有问题：本意是查询-gt-最小人数的队伍，但写成了：" class="headerlink" title="这边发现按照队伍最大人数来筛选队伍时，后端逻辑校验有问题：本意是查询&gt;=最小人数的队伍，但写成了："></a>这边发现按照队伍最大人数来筛选队伍时，后端逻辑校验有问题：本意是查询&gt;=最小人数的队伍，但写成了：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 4.根据最大人数查询</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br><span class="hljs-keyword">if</span> (maxNum &gt;= <span class="hljs-number">3</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum).eq(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum);<br></code></pre></td></tr></table></figure><ul><li><h5 id="显然有问题的，查询逻辑加个or就行了："><a href="#显然有问题的，查询逻辑加个or就行了：" class="headerlink" title="显然有问题的，查询逻辑加个or就行了："></a>显然有问题的，查询逻辑加个or就行了：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 4.根据最大人数查询</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br><span class="hljs-keyword">if</span> (maxNum &gt;= <span class="hljs-number">3</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum).or().eq(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum);<br></code></pre></td></tr></table></figure><h3 id="退出队伍优化"><a href="#退出队伍优化" class="headerlink" title="退出队伍优化"></a>退出队伍优化</h3><ul><li><h5 id="点击申请加入，可以正常加入公开队伍了，但是这边发现退出队伍时，没有正常删除user-team记录，这里捋一下退出队伍的逻辑吧："><a href="#点击申请加入，可以正常加入公开队伍了，但是这边发现退出队伍时，没有正常删除user-team记录，这里捋一下退出队伍的逻辑吧：" class="headerlink" title="点击申请加入，可以正常加入公开队伍了，但是这边发现退出队伍时，没有正常删除user_team记录，这里捋一下退出队伍的逻辑吧："></a>点击申请加入，可以正常加入公开队伍了，但是这边发现退出队伍时，没有正常删除user_team记录，这里捋一下退出队伍的逻辑吧：</h5></li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">退出队伍 -&gt; 校验队伍剩余人数 -&gt; 退出后为空？-&gt; 删除user_team记录，删除team记录<br> -&gt; 仅删除user_team记录 -&gt; 是否为队长？-&gt; 是，传位队长给队员<br></code></pre></td></tr></table></figure><ul><li><h5 id="在判断退出后不为空后没有删除user-team记录，导致调试时出现问题了"><a href="#在判断退出后不为空后没有删除user-team记录，导致调试时出现问题了" class="headerlink" title="在判断退出后不为空后没有删除user_team记录，导致调试时出现问题了"></a>在判断退出后不为空后没有删除user_team记录，导致调试时出现问题了</h5></li><li><h5 id="优化完成"><a href="#优化完成" class="headerlink" title="优化完成"></a>优化完成</h5></li></ul><h3 id="搜索队伍优化2-0"><a href="#搜索队伍优化2-0" class="headerlink" title="搜索队伍优化2.0"></a>搜索队伍优化2.0</h3><ul><li><h5 id="我们要在搜索页面根据公开-加密分页展示两类队伍，再从中筛选所需队伍"><a href="#我们要在搜索页面根据公开-加密分页展示两类队伍，再从中筛选所需队伍" class="headerlink" title="我们要在搜索页面根据公开/加密分页展示两类队伍，再从中筛选所需队伍"></a>我们要在搜索页面根据公开/加密分页展示两类队伍，再从中筛选所需队伍</h5></li><li><h5 id="首先我们使用-Tab标签页-组件，把队伍列表表单分为公开和加密两页"><a href="#首先我们使用-Tab标签页-组件，把队伍列表表单分为公开和加密两页" class="headerlink" title="首先我们使用 Tab标签页 组件，把队伍列表表单分为公开和加密两页"></a>首先我们使用 Tab标签页 组件，把队伍列表表单分为公开和加密两页</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-divider content-position=&quot;left&quot;&gt;符合条件的队伍&lt;/van-divider&gt;<br><br>  &lt;!-- 队伍列表分页展示 --&gt;<br>  &lt;van-tabs v-model:active=&quot;active&quot;&gt;<br>    &lt;!-- 公开队伍列表 --&gt;<br>    &lt;van-tab title=&quot;公开&quot; style=&quot;padding-bottom: 57px&quot;&gt;<br>      &lt;van-card<br>        v-if=&quot;pubTeamList&quot;<br>        v-for=&quot;team in pubTeamList&quot;<br>        :tag=&quot;getTeamStatus(team.status)&quot;<br>        :title=&quot;team.name&quot;<br>        :desc=&quot;team.description&quot;<br>        thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>      &gt;<br>        &lt;template #bottom&gt;<br>          &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>          &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>          &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>        &lt;/template&gt;<br><br>        &lt;template #footer&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;success&quot; @click=&quot;toJoinTeam(team)&quot;&gt;<br>            申请加入<br>          &lt;/van-button&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;&quot;&gt;<br>            详细信息<br>          &lt;/van-button&gt;<br>        &lt;/template&gt;<br>      &lt;/van-card&gt;<br>      &lt;!-- 无队伍信息展示 --&gt;<br>      &lt;van-empty v-if=&quot;!pubTeamList&quot; description=&quot;公开队伍为空&quot; /&gt;<br>    &lt;/van-tab&gt;<br><br>    &lt;!-- 加密队伍列表 --&gt;<br>    &lt;van-tab title=&quot;加密&quot; style=&quot;padding-bottom: 57px&quot;&gt;<br>      &lt;van-card<br>        v-if=&quot;safeTeamList&quot;<br>        v-for=&quot;team in safeTeamList&quot;<br>        :tag=&quot;getTeamStatus(team.status)&quot;<br>        :title=&quot;team.name&quot;<br>        :desc=&quot;team.description&quot;<br>        thumb=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/ipad.jpeg&quot;<br>      &gt;<br>        &lt;template #bottom&gt;<br>          &lt;div&gt;队伍人数: &#123;&#123; team.joinNum &#125;&#125;/ &#123;&#123; team.maxNum &#125;&#125;&lt;/div&gt;<br>          &lt;div&gt;创建时间: &#123;&#123; team.createTime &#125;&#125;&lt;/div&gt;<br>          &lt;div&gt;解散时间: &#123;&#123; team.expireTime &#125;&#125;&lt;/div&gt;<br>        &lt;/template&gt;<br><br>        &lt;template #footer&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;success&quot; @click=&quot;toJoinTeam(team)&quot;&gt;<br>            申请加入<br>          &lt;/van-button&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;&quot;&gt;<br>            详细信息<br>          &lt;/van-button&gt;<br>        &lt;/template&gt;<br>      &lt;/van-card&gt;<br>      &lt;!-- 无队伍信息展示 --&gt;<br>      &lt;van-empty v-if=&quot;!safeTeamList&quot; description=&quot;加密队伍为空&quot; /&gt;<br>    &lt;/van-tab&gt;<br>  &lt;/van-tabs&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 标签页-激活</span><br><span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="进入搜索页就按队伍状态-status：0-和-status：2-发两次请求，并将响应绑定到对应表单上"><a href="#进入搜索页就按队伍状态-status：0-和-status：2-发两次请求，并将响应绑定到对应表单上" class="headerlink" title="进入搜索页就按队伍状态 status：0 和 status：2 发两次请求，并将响应绑定到对应表单上"></a>进入搜索页就按队伍状态 status：0 和 status：2 发两次请求，并将响应绑定到对应表单上</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 公开队伍列表</span><br><span class="hljs-keyword">const</span> pubTeamList = <span class="hljs-title function_">ref</span>([]);<br><span class="hljs-comment">// 加密队伍列表</span><br><span class="hljs-keyword">const</span> safeTeamList = <span class="hljs-title function_">ref</span>([]);<br><span class="hljs-comment">// 钩子函数 - 加载所有队伍信息</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;active = &quot;</span> + active.<span class="hljs-property">value</span>);<br>  <span class="hljs-comment">// 公开队伍列表</span><br>  <span class="hljs-keyword">const</span> teamListData1 = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/list/page&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">name</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<br>        <span class="hljs-attr">description</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">description</span>,<br>        <span class="hljs-attr">maxNum</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">maxNum</span>,<br>        <span class="hljs-attr">userId</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">userId</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-number">0</span>,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-comment">// 加密队伍列表</span><br>  <span class="hljs-keyword">const</span> teamListData2 = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/list/page&quot;</span>, &#123;<br>      <span class="hljs-attr">params</span>: &#123;<br>        <span class="hljs-attr">name</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<br>        <span class="hljs-attr">description</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">description</span>,<br>        <span class="hljs-attr">maxNum</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">maxNum</span>,<br>        <span class="hljs-attr">userId</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">userId</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-number">2</span>,<br>      &#125;,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-comment">// 拿取公开队伍列表</span><br>  pubTeamList.<span class="hljs-property">value</span> = teamListData1;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(pubTeamList.<span class="hljs-property">value</span>);<br>  <span class="hljs-comment">// 拿取加密队伍列表</span><br>  safeTeamList.<span class="hljs-property">value</span> = teamListData2;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(safeTeamList.<span class="hljs-property">value</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="当然，我们可以再次使用onSearchTeam来根据搜索表单筛选队伍，分两种情况："><a href="#当然，我们可以再次使用onSearchTeam来根据搜索表单筛选队伍，分两种情况：" class="headerlink" title="当然，我们可以再次使用onSearchTeam来根据搜索表单筛选队伍，分两种情况："></a>当然，我们可以再次使用onSearchTeam来根据搜索表单筛选队伍，分两种情况：</h5></li><li><h5 id="公开页激活（active-value-0）和加密页激活（active-value-1）"><a href="#公开页激活（active-value-0）和加密页激活（active-value-1）" class="headerlink" title="公开页激活（active.value === 0）和加密页激活（active.value === 1）"></a>公开页激活（active.value === 0）和加密页激活（active.value === 1）</h5></li><li><h5 id="根据页面激活情况发送相应请求即可，并将结果绑定到对应表单上"><a href="#根据页面激活情况发送相应请求即可，并将结果绑定到对应表单上" class="headerlink" title="根据页面激活情况发送相应请求即可，并将结果绑定到对应表单上"></a>根据页面激活情况发送相应请求即可，并将结果绑定到对应表单上</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 搜索队伍</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSearchTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> teamListData;<br>  <span class="hljs-keyword">if</span> (active.<span class="hljs-property">value</span> === <span class="hljs-number">0</span>) &#123;<br>    teamListData = <span class="hljs-keyword">await</span> myAxios<br>      .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/list/page&quot;</span>, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">name</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<br>          <span class="hljs-attr">description</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">description</span>,<br>          <span class="hljs-attr">maxNum</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">maxNum</span>,<br>          <span class="hljs-attr">userId</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">userId</span>,<br>          <span class="hljs-attr">status</span>: <span class="hljs-number">0</span>,<br>        &#125;,<br>      &#125;)<br>      <span class="hljs-comment">// 响应</span><br>      .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>        <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>        <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>      &#125;)<br>      <span class="hljs-comment">// 抛异常</span><br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>      &#125;);<br>    <span class="hljs-comment">// 拿取公开队伍列表</span><br>    pubTeamList.<span class="hljs-property">value</span> = teamListData;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(pubTeamList.<span class="hljs-property">value</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    teamListData = <span class="hljs-keyword">await</span> myAxios<br>      .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/team/list/page&quot;</span>, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">name</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<br>          <span class="hljs-attr">description</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">description</span>,<br>          <span class="hljs-attr">maxNum</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">maxNum</span>,<br>          <span class="hljs-attr">userId</span>: searchItem.<span class="hljs-property">value</span>.<span class="hljs-property">userId</span>,<br>          <span class="hljs-attr">status</span>: <span class="hljs-number">2</span>,<br>        &#125;,<br>      &#125;)<br>      <span class="hljs-comment">// 响应</span><br>      .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>        <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>        <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>      &#125;)<br>      <span class="hljs-comment">// 抛异常</span><br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>      &#125;);<br>    <span class="hljs-comment">// 拿取队伍列表</span><br>    safeTeamList.<span class="hljs-property">value</span> = teamListData;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(safeTeamList.<span class="hljs-property">value</span>);<br>  &#125;<br><br>  <span class="hljs-comment">// 拿取队伍列表</span><br>  safeTeamList.<span class="hljs-property">value</span> = teamListData;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(safeTeamList.<span class="hljs-property">value</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="编写完成！效果如下："><a href="#编写完成！效果如下：" class="headerlink" title="编写完成！效果如下："></a>编写完成！效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230529233029591.png" alt="image-20230529233029591">s</p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230529233050906.png" alt="image-20230529233050906"></p><ul><li><h5 id="这里我们发现搜索队伍后端逻辑校验有问题："><a href="#这里我们发现搜索队伍后端逻辑校验有问题：" class="headerlink" title="这里我们发现搜索队伍后端逻辑校验有问题："></a>这里我们发现搜索队伍后端逻辑校验有问题：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 5.根据最大人数查询</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br><span class="hljs-keyword">if</span> (maxNum &gt;= <span class="hljs-number">2</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum).or().eq(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum);<br></code></pre></td></tr></table></figure><ul><li><h5 id="我们之前是这样实现的，本意是想筛选出-gt-maxNum的队伍，但MP的每个QueryWrapper后紧跟条件时，会自动使用and来拼接（懂吧，就是SQL中的where语句下的and拼接条件）。当最大人数筛选条件正确填写时，执行情况为：把-or-前的所有条件和-or-后的-eq-“max-num”-maxNum-条件用or连接去查询，结果显然不对，查到了多于预期的数据。"><a href="#我们之前是这样实现的，本意是想筛选出-gt-maxNum的队伍，但MP的每个QueryWrapper后紧跟条件时，会自动使用and来拼接（懂吧，就是SQL中的where语句下的and拼接条件）。当最大人数筛选条件正确填写时，执行情况为：把-or-前的所有条件和-or-后的-eq-“max-num”-maxNum-条件用or连接去查询，结果显然不对，查到了多于预期的数据。" class="headerlink" title="我们之前是这样实现的，本意是想筛选出&gt;=maxNum的队伍，但MP的每个QueryWrapper后紧跟条件时，会自动使用and来拼接（懂吧，就是SQL中的where语句下的and拼接条件）。当最大人数筛选条件正确填写时，执行情况为：把.or()前的所有条件和.or()后的.eq(“max_num”, maxNum)条件用or连接去查询，结果显然不对，查到了多于预期的数据。"></a>我们之前是这样实现的，本意是想筛选出&gt;=maxNum的队伍，但MP的每个QueryWrapper后紧跟条件时，会自动使用and来拼接（懂吧，就是SQL中的where语句下的and拼接条件）。当最大人数筛选条件正确填写时，执行情况为：把.or()前的所有条件和.or()后的.eq(“max_num”, maxNum)条件用or连接去查询，结果显然不对，查到了多于预期的数据。</h5></li><li><h5 id="那为了实现查询-gt-maxNum的队伍，我们舍弃了-eq，把maxNum-1就行了，逻辑上没有问题了"><a href="#那为了实现查询-gt-maxNum的队伍，我们舍弃了-eq，把maxNum-1就行了，逻辑上没有问题了" class="headerlink" title="那为了实现查询&gt;=maxNum的队伍，我们舍弃了.eq，把maxNum + 1就行了，逻辑上没有问题了"></a>那为了实现查询&gt;=maxNum的队伍，我们舍弃了.eq，把maxNum + 1就行了，逻辑上没有问题了</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 5.根据最大人数查询</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br><span class="hljs-keyword">if</span> (maxNum &gt;= <span class="hljs-number">2</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum - <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="今天就做到这里，明天继续！（2023-05-29晚）"><a href="#今天就做到这里，明天继续！（2023-05-29晚）" class="headerlink" title="今天就做到这里，明天继续！（2023/05/29晚）"></a>今天就做到这里，明天继续！（2023/05/29晚）</h5></li></ul><h3 id="搜索队伍优化3-0"><a href="#搜索队伍优化3-0" class="headerlink" title="搜索队伍优化3.0"></a>搜索队伍优化3.0</h3><ul><li><h5 id="搜索到的队伍不包含用户已加入的队伍（当然如果重复加入队伍，我们也是有逻辑校验的）"><a href="#搜索到的队伍不包含用户已加入的队伍（当然如果重复加入队伍，我们也是有逻辑校验的）" class="headerlink" title="搜索到的队伍不包含用户已加入的队伍（当然如果重复加入队伍，我们也是有逻辑校验的）"></a>搜索到的队伍不包含用户已加入的队伍（当然如果重复加入队伍，我们也是有逻辑校验的）</h5></li><li><h5 id="添加后端逻辑即可，代码如下："><a href="#添加后端逻辑即可，代码如下：" class="headerlink" title="添加后端逻辑即可，代码如下："></a>添加后端逻辑即可，代码如下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 6.排除当前用户已加入的队伍</span><br>QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br><span class="hljs-comment">// 6.1.查询当前用户已加入的队伍信息(为提高性能, 仅拿取需要的team_id字段即可)</span><br>utqw.select(<span class="hljs-string">&quot;team_id&quot;</span>).eq(<span class="hljs-string">&quot;user_id&quot;</span>, loginUser.getId());<br>List&lt;UserTeam&gt; userTeamList = userTeamService.list(utqw);<br><span class="hljs-comment">// 6.2.队伍列表排除掉用户已加入的队伍</span><br>List&lt;Long&gt; teamIdList = userTeamList.stream().map(UserTeam::getTeamId).collect(Collectors.toList());<br>tqw.notIn(<span class="hljs-string">&quot;id&quot;</span>, teamIdList);<br></code></pre></td></tr></table></figure><ul><li><h5 id="现在大厅中就bu显示用户已加入的队伍了，美滋滋-（2023-05-31下午）"><a href="#现在大厅中就bu显示用户已加入的队伍了，美滋滋-（2023-05-31下午）" class="headerlink" title="现在大厅中就bu显示用户已加入的队伍了，美滋滋~（2023/05/31下午）"></a>现在大厅中就bu显示用户已加入的队伍了，美滋滋~（2023/05/31下午）</h5></li></ul><h3 id="加入队伍优化"><a href="#加入队伍优化" class="headerlink" title="加入队伍优化"></a>加入队伍优化</h3><ul><li><h5 id="他妈的好多东西，明天再做吧嘿嘿嘿"><a href="#他妈的好多东西，明天再做吧嘿嘿嘿" class="headerlink" title="他妈的好多东西，明天再做吧嘿嘿嘿"></a>他妈的好多东西，明天再做吧嘿嘿嘿</h5></li><li><h5 id="实现申请加入加密队伍时，需要填写密码"><a href="#实现申请加入加密队伍时，需要填写密码" class="headerlink" title="实现申请加入加密队伍时，需要填写密码"></a>实现申请加入加密队伍时，需要填写密码</h5></li><li><h5 id="这个功能基本实现了，但发现目前后端仅校验password的格式，并没有校验其正确与否，待明日优化完毕这个逻辑后再作记录吧（2023-05-31晚）"><a href="#这个功能基本实现了，但发现目前后端仅校验password的格式，并没有校验其正确与否，待明日优化完毕这个逻辑后再作记录吧（2023-05-31晚）" class="headerlink" title="这个功能基本实现了，但发现目前后端仅校验password的格式，并没有校验其正确与否，待明日优化完毕这个逻辑后再作记录吧（2023/05/31晚）"></a>这个功能基本实现了，但发现目前后端仅校验password的格式，并没有校验其正确与否，待明日优化完毕这个逻辑后再作记录吧（2023/05/31晚）</h5></li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs fortran">const joinTeam = await myAxios<br>   .post(<span class="hljs-string">&quot;/team/join&quot;</span>, &#123;<br>     id: <span class="hljs-built_in">team</span>.id,<br>     userId: <span class="hljs-built_in">team</span>.userId,<br>     maxNum: <span class="hljs-built_in">team</span>.maxNum,<br>     password: <span class="hljs-built_in">team</span>.password,<br>     joinNum: <span class="hljs-built_in">team</span>.joinNum,<br>     <span class="hljs-keyword">status</span>: <span class="hljs-built_in">team</span>.<span class="hljs-keyword">status</span>,<br>   &#125;)<br></code></pre></td></tr></table></figure><ul><li><h5 id="我们边分析逻辑，边作相应的代码展示："><a href="#我们边分析逻辑，边作相应的代码展示：" class="headerlink" title="我们边分析逻辑，边作相应的代码展示："></a>我们边分析逻辑，边作相应的代码展示：</h5></li><li><h5 id="在加密队伍列表下，点击申请加入后，首先弹出对话框，并要求填写队伍密码"><a href="#在加密队伍列表下，点击申请加入后，首先弹出对话框，并要求填写队伍密码" class="headerlink" title="在加密队伍列表下，点击申请加入后，首先弹出对话框，并要求填写队伍密码"></a>在加密队伍列表下，点击申请加入后，首先弹出对话框，并要求填写队伍密码</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #footer&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;success&quot; @click=&quot;preJoinTeam(team)&quot;&gt;<br>            申请加入<br>          &lt;/van-button&gt;<br>          &lt;van-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;&quot;&gt;<br>            详细信息<br>          &lt;/van-button&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 密码对话框 --&gt;<br>  &lt;van-dialog<br>    v-model:show=&quot;show&quot;<br>    title=&quot;提示&quot;<br>    show-cancel-button<br>    @confirm=&quot;toJoinTeam(joinTeamParam, password)&quot;<br>    @cancel=&quot;cancelJoin&quot;<br>  &gt;<br>    &lt;van-field v-model=&quot;password&quot; placeholder=&quot;请输入密码&quot;&gt; &lt;/van-field&gt;<br>  &lt;/van-dialog&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 加入队伍参数</span><br><span class="hljs-keyword">const</span> joinTeamParam = <span class="hljs-title function_">ref</span>(&#123;&#125;);<br><span class="hljs-comment">// 队伍密码</span><br><span class="hljs-keyword">const</span> password = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 密码对话框</span><br><span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 弹出对话框 封装队伍信息</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">preJoinTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">team: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br>  joinTeamParam.<span class="hljs-property">value</span> = team;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 确定 申请加入队伍</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toJoinTeam</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">team: <span class="hljs-built_in">any</span>, password: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-comment">// on confirm</span><br>  <span class="hljs-comment">// 发送请求, 获取用户数据列表</span><br>  <span class="hljs-keyword">const</span> joinTeam = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/team/join&quot;</span>, &#123;<br>      <span class="hljs-attr">id</span>: team.<span class="hljs-property">id</span>,<br>      <span class="hljs-attr">userId</span>: team.<span class="hljs-property">userId</span>,<br>      <span class="hljs-attr">maxNum</span>: team.<span class="hljs-property">maxNum</span>,<br>      <span class="hljs-attr">joinNum</span>: team.<span class="hljs-property">joinNum</span>,<br>      <span class="hljs-attr">status</span>: team.<span class="hljs-property">status</span>,<br>      <span class="hljs-attr">password</span>: password,<br>    &#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;加入队伍: = &quot;</span> + response.<span class="hljs-property">data</span>);<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br>  <span class="hljs-comment">// 成功加入队伍</span><br>  <span class="hljs-keyword">if</span> (joinTeam) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">`joinTeam`</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(joinTeam);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 取消 清空密码槽 关闭对话框</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">cancelJoin</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  password.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;&quot;</span>;<br>  show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="前端就是这样，这边优化一下后端的密码校验"><a href="#前端就是这样，这边优化一下后端的密码校验" class="headerlink" title="前端就是这样，这边优化一下后端的密码校验"></a>前端就是这样，这边优化一下后端的密码校验</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 4.加入加密队伍必须输入密码且必须是正确的密码</span><br>        <span class="hljs-keyword">if</span> (TeamStatusEnum.SECRET.equals(statusEnum)) &#123;<br>            <span class="hljs-comment">// 4.1.查询所加队伍的password, 并判断输入的密码是否正确</span><br>            QueryWrapper&lt;Team&gt; tqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>            tqw.select(<span class="hljs-string">&quot;password&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> team.getPassword();<br><br>            <span class="hljs-keyword">if</span> (StringUtils.isBlank(password) || password.length() &gt; <span class="hljs-number">32</span>)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARMS_ERROR, <span class="hljs-string">&quot;加入加密队伍要提供正确的密码&quot;</span>);<br><br>            <span class="hljs-keyword">if</span> (!password.equals(<span class="hljs-built_in">this</span>.getById(teamId).getPassword()))<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR, <span class="hljs-string">&quot;输入的密码不正确&quot;</span>);<br>        &#125;     <br></code></pre></td></tr></table></figure><ul><li><h5 id="ok，优化完毕，加密队伍必须正确输入密码才能加入了。看一下效果：（2023-06-02）"><a href="#ok，优化完毕，加密队伍必须正确输入密码才能加入了。看一下效果：（2023-06-02）" class="headerlink" title="ok，优化完毕，加密队伍必须正确输入密码才能加入了。看一下效果：（2023/06/02）"></a>ok，优化完毕，加密队伍必须正确输入密码才能加入了。看一下效果：（2023/06/02）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230602162748112.png" alt="image-20230602162748112"></p><h3 id="分页查询队伍优化"><a href="#分页查询队伍优化" class="headerlink" title="分页查询队伍优化"></a>分页查询队伍优化</h3><ul><li><h5 id="拿到加入队伍的所有队员的信息（2023-05-28）"><a href="#拿到加入队伍的所有队员的信息（2023-05-28）" class="headerlink" title="拿到加入队伍的所有队员的信息（2023/05/28）"></a>拿到加入队伍的所有队员的信息（2023/05/28）</h5></li></ul><h3 id="主页优化"><a href="#主页优化" class="headerlink" title="主页优化"></a>主页优化</h3><ul><li><h5 id="之前写匹配用户时，请求-user-match是粘贴请求-user-recommend的，导致把这些代码也粘进来了："><a href="#之前写匹配用户时，请求-user-match是粘贴请求-user-recommend的，导致把这些代码也粘进来了：" class="headerlink" title="之前写匹配用户时，请求/user/match是粘贴请求/user/recommend的，导致把这些代码也粘进来了："></a>之前写匹配用户时，请求/user/match是粘贴请求/user/recommend的，导致把这些代码也粘进来了：</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 响应</span><br>   .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>     <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>     <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>);<br>     total = response.<span class="hljs-property">data</span>.<span class="hljs-property">total</span>;<br>     pageSize = response.<span class="hljs-property">data</span>.<span class="hljs-property">size</span>;<br>     <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>.<span class="hljs-property">records</span>;<br>   &#125;)<br></code></pre></td></tr></table></figure><ul><li><h5 id="怪不得每次开启匹配用户后，底边的分页条出问题了"><a href="#怪不得每次开启匹配用户后，底边的分页条出问题了" class="headerlink" title="怪不得每次开启匹配用户后，底边的分页条出问题了"></a>怪不得每次开启匹配用户后，底边的分页条出问题了</h5></li><li><h5 id="完美解决！"><a href="#完美解决！" class="headerlink" title="完美解决！"></a>完美解决！</h5></li></ul><h2 id="阶段性问题-11"><a href="#阶段性问题-11" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="前两天给GiHub仓库上推送用户中心和伙伴匹配时，由于近期没有按时推送项目到Gitee上，操作的时候不小心把Gitee上的旧代码拉到本地了。最要命的是，还他妈把本地项目给覆盖了，还好一查发现GitHub仓库里的代码是最新的了，差点以为这几天白干了"><a href="#前两天给GiHub仓库上推送用户中心和伙伴匹配时，由于近期没有按时推送项目到Gitee上，操作的时候不小心把Gitee上的旧代码拉到本地了。最要命的是，还他妈把本地项目给覆盖了，还好一查发现GitHub仓库里的代码是最新的了，差点以为这几天白干了" class="headerlink" title="前两天给GiHub仓库上推送用户中心和伙伴匹配时，由于近期没有按时推送项目到Gitee上，操作的时候不小心把Gitee上的旧代码拉到本地了。最要命的是，还他妈把本地项目给覆盖了，还好一查发现GitHub仓库里的代码是最新的了，差点以为这几天白干了"></a>前两天给GiHub仓库上推送用户中心和伙伴匹配时，由于近期没有按时推送项目到Gitee上，操作的时候不小心把Gitee上的旧代码拉到本地了。最要命的是，还他妈把本地项目给覆盖了，还好一查发现GitHub仓库里的代码是最新的了，差点以为这几天白干了</h5></li><li><h5 id="以后更新项目要及时推送到Gitee和GitHub上（2023-06-08）"><a href="#以后更新项目要及时推送到Gitee和GitHub上（2023-06-08）" class="headerlink" title="以后更新项目要及时推送到Gitee和GitHub上（2023/06/08）"></a>以后更新项目要及时推送到Gitee和GitHub上（2023/06/08）</h5></li></ul><h3 id="定时查询任务优化"><a href="#定时查询任务优化" class="headerlink" title="定时查询任务优化"></a>定时查询任务优化</h3><ul><li><h5 id="给重点用户推荐用户：每天00-00定时缓存预热，并保存24小时（好像没啥卵用，给匹配相似用户加这个功能还不错）"><a href="#给重点用户推荐用户：每天00-00定时缓存预热，并保存24小时（好像没啥卵用，给匹配相似用户加这个功能还不错）" class="headerlink" title="给重点用户推荐用户：每天00:00定时缓存预热，并保存24小时（好像没啥卵用，给匹配相似用户加这个功能还不错）"></a>给重点用户推荐用户：每天00:00定时缓存预热，并保存24小时（好像没啥卵用，给匹配相似用户加这个功能还不错）</h5></li><li><h5 id="这个定时查询使用了redisson实现分布式锁，完成了多台服务器中只能有一台抢锁成功并缓存预热的功能，目前这个定时任务只是预热了重点用户的查询用户，用处不大，仅学习定时任务和分布式锁，将来优化（2023-06-08）"><a href="#这个定时查询使用了redisson实现分布式锁，完成了多台服务器中只能有一台抢锁成功并缓存预热的功能，目前这个定时任务只是预热了重点用户的查询用户，用处不大，仅学习定时任务和分布式锁，将来优化（2023-06-08）" class="headerlink" title="这个定时查询使用了redisson实现分布式锁，完成了多台服务器中只能有一台抢锁成功并缓存预热的功能，目前这个定时任务只是预热了重点用户的查询用户，用处不大，仅学习定时任务和分布式锁，将来优化（2023/06/08）"></a>这个定时查询使用了redisson实现分布式锁，完成了多台服务器中只能有一台抢锁成功并缓存预热的功能，目前这个定时任务只是预热了重点用户的查询用户，用处不大，仅学习定时任务和分布式锁，将来优化（2023/06/08）</h5></li></ul><h3 id="随机匹配优化2-0"><a href="#随机匹配优化2-0" class="headerlink" title="随机匹配优化2.0"></a>随机匹配优化2.0</h3><ul><li><h5 id="使用redis缓存（保存6-hour），减少查询数据库的次数，减小数据库压力"><a href="#使用redis缓存（保存6-hour），减少查询数据库的次数，减小数据库压力" class="headerlink" title="使用redis缓存（保存6 hour），减少查询数据库的次数，减小数据库压力"></a>使用redis缓存（保存6 hour），减少查询数据库的次数，减小数据库压力</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 用户匹配</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> num     推荐/匹配数目</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> request request 获取登陆用户</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 匹配到的用户</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">matchUsers</span><span class="hljs-params">(<span class="hljs-type">long</span> num, HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">// 1.获取登录用户标签(json字符串 -&gt; List列表)</span><br>      <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> getLoginUser(request);<br><br>      <span class="hljs-comment">// 拿到当前登录用户的key(每个用户都有各自对应的key)</span><br>      <span class="hljs-type">String</span> <span class="hljs-variable">redisKey</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;memory:user:match:%s&quot;</span>, loginUser.getId());<br>      <span class="hljs-comment">// 查缓存</span><br>      List&lt;User&gt; userList = (List&lt;User&gt;) redisTemplate.opsForValue().get(redisKey);<br>      <span class="hljs-comment">// 缓存命中, 则返回用户信息</span><br>      <span class="hljs-keyword">if</span> (userList != <span class="hljs-literal">null</span>) &#123;<br>          <span class="hljs-keyword">return</span> userList;<br>      &#125;<br><br>      <span class="hljs-comment">// 缓存未命中, 查询数据库</span><br>      <span class="hljs-type">String</span> <span class="hljs-variable">tags</span> <span class="hljs-operator">=</span> loginUser.getTags();<br>      <span class="hljs-type">Gson</span> <span class="hljs-variable">gson</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br>      List&lt;String&gt; tagList = gson.fromJson(tags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>      &#125;.getType());<br><br>      QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>      queryWrapper.isNotNull(<span class="hljs-string">&quot;tags&quot;</span>);<br>      queryWrapper.select(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;tags&quot;</span>);<br>      <span class="hljs-comment">// 2.遍历所有查询到的用户, 依次进行标签比较, 并存储到容器中</span><br>      <span class="hljs-comment">// 2.1.查询到所有用户</span><br>      userList = <span class="hljs-built_in">this</span>.list(queryWrapper);<br>      <span class="hljs-comment">// 2.2.使用SortedMap容器</span><br>      List&lt;Pair&lt;User, Long&gt;&gt; userDistanceList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>      <span class="hljs-keyword">for</span> (User user : userList) &#123;<br>          <span class="hljs-comment">// 2.2.1.拿到用户</span><br>          <span class="hljs-comment">// 2.2.2.拿到其标签</span><br>          <span class="hljs-type">String</span> <span class="hljs-variable">userTags</span> <span class="hljs-operator">=</span> user.getTags();<br>          <span class="hljs-comment">// 2.2.3.无标签用户, 直接过滤, 匹配结果剔除自己</span><br>          <span class="hljs-keyword">if</span> (StringUtils.isBlank(userTags) || user.getId().equals(loginUser.getId())) &#123;<br>              <span class="hljs-keyword">continue</span>;<br>          &#125;<br>          <span class="hljs-comment">// 2.2.4.转换标签(json字符串 -&gt; List列表)</span><br>          List&lt;String&gt; userTagList = gson.fromJson(userTags, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;() &#123;<br>          &#125;.getType());<br>          <span class="hljs-comment">// 2.2.5.进行标签比较(编辑距离算法)</span><br>          <span class="hljs-type">long</span> <span class="hljs-variable">distance</span> <span class="hljs-operator">=</span> AlgorithmUtils.minDistance(tagList, userTagList);<br>          <span class="hljs-comment">// 2.2.6.将比较结果存入SortedMap容器中(存储了用户下标和匹配度, 并按distance升序排列)</span><br>          userDistanceList.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Pair</span>&lt;&gt;(user, distance));<br>      &#125;<br><br>      <span class="hljs-comment">// 3.按编辑距离由小到大排序</span><br>      List&lt;Pair&lt;User, Long&gt;&gt; sortedUserDistanceList = userDistanceList.stream()<br>              .sorted((a, b) -&gt; (<span class="hljs-type">int</span>) (a.getB() - b.getB()))<br>              .limit(num)<br>              .collect(Collectors.toList());<br><br>      <span class="hljs-comment">// 4.有顺序的userID列表</span><br>      List&lt;Long&gt; userIdList = sortedUserDistanceList.stream().map(pair -&gt; pair.getA().getId()).collect(Collectors.toList());<br><br>      <span class="hljs-comment">// 5.根据id查询user完整信息</span><br>      QueryWrapper&lt;User&gt; userQueryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>      userQueryWrapper.in(<span class="hljs-string">&quot;id&quot;</span>, userIdList);<br>      Map&lt;Long, List&lt;User&gt;&gt; userIdUserListMap = <span class="hljs-built_in">this</span>.list(userQueryWrapper).stream()<br>              .map(<span class="hljs-built_in">this</span>::getSafetyUser)<br>              .collect(Collectors.groupingBy(User::getId));<br><br>      <span class="hljs-comment">// 6.因为上面查询打乱了顺序，这里根据上面有序的userId列表赋值</span><br>      List&lt;User&gt; finalUserList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>      <span class="hljs-keyword">for</span> (Long userId : userIdList) &#123;<br>          finalUserList.add(userIdUserListMap.get(userId).get(<span class="hljs-number">0</span>));<br>      &#125;<br><br>      <span class="hljs-comment">// 将匹配到的用户信息写到缓存中</span><br>      <span class="hljs-keyword">try</span> &#123;<br>          redisTemplate.opsForValue().set(redisKey, finalUserList, <span class="hljs-number">6</span>, TimeUnit.HOURS);<br>      &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>          log.error(<span class="hljs-string">&quot;redis set key error&quot;</span>, e);<br>      &#125;<br><br>      <span class="hljs-comment">// 7.返回匹配用户列表</span><br>      <span class="hljs-keyword">return</span> finalUserList;<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="TODO优化"><a href="#TODO优化" class="headerlink" title="TODO优化"></a>TODO优化</h3><ul><li><h5 id="后端日期传至前端变成一串数字的解决办法"><a href="#后端日期传至前端变成一串数字的解决办法" class="headerlink" title="后端日期传至前端变成一串数字的解决办法"></a>后端日期传至前端变成一串数字的解决办法</h5></li><li><h5 id="实体属性前添加注解即可："><a href="#实体属性前添加注解即可：" class="headerlink" title="实体属性前添加注解即可："></a>实体属性前添加注解即可：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;,timezone = &quot;GMT+8&quot;)</span><br></code></pre></td></tr></table></figure><h3 id="搜索队伍优化4-0"><a href="#搜索队伍优化4-0" class="headerlink" title="搜索队伍优化4.0"></a>搜索队伍优化4.0</h3><ul><li><h5 id="这次优化使用搜索条件搜索的体验"><a href="#这次优化使用搜索条件搜索的体验" class="headerlink" title="这次优化使用搜索条件搜索的体验"></a>这次优化使用搜索条件搜索的体验</h5></li><li><h5 id="之前那搜索条件直接挂屏幕上边，很是格格不入，我们把它改成弹窗形式的"><a href="#之前那搜索条件直接挂屏幕上边，很是格格不入，我们把它改成弹窗形式的" class="headerlink" title="之前那搜索条件直接挂屏幕上边，很是格格不入，我们把它改成弹窗形式的"></a>之前那搜索条件直接挂屏幕上边，很是格格不入，我们把它改成弹窗形式的</h5></li><li><h5 id="引入组件-Popup-弹出层"><a href="#引入组件-Popup-弹出层" class="headerlink" title="引入组件 Popup 弹出层"></a>引入组件 Popup 弹出层</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索条件圆角弹窗（底部） --&gt;<br> &lt;van-popup<br>   v-model:show=&quot;showBottom&quot;<br>   round<br>   position=&quot;bottom&quot;<br>   :style=&quot;&#123; height: &#x27;50%&#x27; &#125;&quot;<br> &gt;<br> <br> &lt;/van-popup&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="最顶部加个控制弹出的按钮"><a href="#最顶部加个控制弹出的按钮" class="headerlink" title="最顶部加个控制弹出的按钮"></a>最顶部加个控制弹出的按钮</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 筛选按钮 --&gt;<br>&lt;van-button<br>  plain<br>  type=&quot;success&quot;<br>  style=&quot;margin-left: 110px&quot;<br>  @click=&quot;showSearchMenu&quot;<br>  &gt;点此筛选所需队伍&lt;/van-button<br>&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 展示底部搜索条件</span><br><span class="hljs-keyword">const</span> showBottom = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-comment">// 弹出底部搜索条件弹窗</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">showSearchMenu</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  showBottom.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="再把之前写好的搜索条件表单塞进底部弹出层中（样式、逻辑啥的都不需要改的）"><a href="#再把之前写好的搜索条件表单塞进底部弹出层中（样式、逻辑啥的都不需要改的）" class="headerlink" title="再把之前写好的搜索条件表单塞进底部弹出层中（样式、逻辑啥的都不需要改的）"></a>再把之前写好的搜索条件表单塞进底部弹出层中（样式、逻辑啥的都不需要改的）</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索表单 --&gt;<br>  &lt;van-form @submit=&quot;onSearchTeam&quot;&gt;<br>    &lt;van-cell-group inset&gt;<br>      &lt;van-field<br>        v-model=&quot;searchItem.name&quot;<br>        name=&quot;name&quot;<br>        label=&quot;队伍名&quot;<br>        placeholder=&quot;请输入队伍名&quot;<br>        :rules=&quot;[&#123; message: &#x27;请输入队伍名&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;searchItem.description&quot;<br>        rows=&quot;4&quot;<br>        name=&quot;description&quot;<br>        label=&quot;队伍描述&quot;<br>        type=&quot;textarea&quot;<br>        placeholder=&quot;请输入队伍描述&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;searchItem.userId&quot;<br>        name=&quot;userId&quot;<br>        label=&quot;队长id&quot;<br>        placeholder=&quot;请输入队长id&quot;<br>        :rules=&quot;[&#123; message: &#x27;请输入队长id&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field name=&quot;maxNum&quot; label=&quot;最少人数&quot;&gt;<br>        &lt;template #input&gt;<br>          &lt;van-stepper v-model=&quot;searchItem.maxNum&quot; max=&quot;20&quot; min=&quot;2&quot; /&gt;<br>        &lt;/template&gt;<br>      &lt;/van-field&gt;<br>    &lt;/van-cell-group&gt;<br><br>    &lt;div style=&quot;margin: 16px&quot;&gt;<br>      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>        查询队伍<br>      &lt;/van-button&gt;<br>    &lt;/div&gt;<br>  &lt;/van-form&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="现在使用条件搜索队伍就方便、轻快多了："><a href="#现在使用条件搜索队伍就方便、轻快多了：" class="headerlink" title="现在使用条件搜索队伍就方便、轻快多了："></a>现在使用条件搜索队伍就方便、轻快多了：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230608203846407.png" alt="image-20230608203846407"></p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230608203904842.png" alt="image-20230608203904842"></p><ul><li><h5 id="其他小的改动记录："><a href="#其他小的改动记录：" class="headerlink" title="其他小的改动记录："></a>其他小的改动记录：</h5></li><li><h5 id="点击查询队伍，关闭底部弹窗"><a href="#点击查询队伍，关闭底部弹窗" class="headerlink" title="点击查询队伍，关闭底部弹窗"></a>点击查询队伍，关闭底部弹窗</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 关闭底部搜索条件弹窗</span><br> showBottom.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="后端对-maxNum-的校验不合格：参数值maxNum为空时报系统错误，浅浅优化一下："><a href="#后端对-maxNum-的校验不合格：参数值maxNum为空时报系统错误，浅浅优化一下：" class="headerlink" title="后端对 maxNum 的校验不合格：参数值maxNum为空时报系统错误，浅浅优化一下："></a>后端对 maxNum 的校验不合格：参数值maxNum为空时报系统错误，浅浅优化一下：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 5.根据最大人数查询</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">maxNum</span> <span class="hljs-operator">=</span> team.getMaxNum();<br><span class="hljs-keyword">if</span> (maxNum != <span class="hljs-literal">null</span> &amp;&amp; maxNum &gt;= <span class="hljs-number">2</span> &amp;&amp; maxNum &lt;= <span class="hljs-number">20</span>)<br>    tqw.gt(<span class="hljs-string">&quot;max_num&quot;</span>, maxNum - <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="标签页上添加-swipeable-属性，可以实现tab标签页之间的平滑切换"><a href="#标签页上添加-swipeable-属性，可以实现tab标签页之间的平滑切换" class="headerlink" title="标签页上添加 swipeable 属性，可以实现tab标签页之间的平滑切换"></a>标签页上添加 swipeable 属性，可以实现tab标签页之间的平滑切换</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 队伍列表分页展示 --&gt;<br>&lt;van-tabs v-model:active=&quot;active&quot; swipeable&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="注意底部弹窗组件的-style-”-height-‘50-’-”-属性，调整其高度至合适位置"><a href="#注意底部弹窗组件的-style-”-height-‘50-’-”-属性，调整其高度至合适位置" class="headerlink" title="注意底部弹窗组件的  :style=”{ height: ‘50%’ }” 属性，调整其高度至合适位置"></a>注意底部弹窗组件的  :style=”{ height: ‘50%’ }” 属性，调整其高度至合适位置</h5></li><li><h5 id="分割线样式改成居中且自带好看的样式的了（2023-06-08）"><a href="#分割线样式改成居中且自带好看的样式的了（2023-06-08）" class="headerlink" title="分割线样式改成居中且自带好看的样式的了（2023/06/08）"></a>分割线样式改成居中且自带好看的样式的了（2023/06/08）</h5></li></ul><h3 id="个人信息页优化"><a href="#个人信息页优化" class="headerlink" title="个人信息页优化"></a>个人信息页优化</h3><ul><li><h5 id="用户头像的显示"><a href="#用户头像的显示" class="headerlink" title="用户头像的显示"></a>用户头像的显示</h5></li><li><h5 id="表单里加个img标签，设置一下宽高，图片路径url即为用户头像路径"><a href="#表单里加个img标签，设置一下宽高，图片路径url即为用户头像路径" class="headerlink" title="表单里加个img标签，设置一下宽高，图片路径url即为用户头像路径"></a>表单里加个img标签，设置一下宽高，图片路径url即为用户头像路径</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-cell<br>      title=&quot;头像&quot;<br>      is-link<br>      to=&quot;/user/edit&quot;<br>      :value=&quot;user.avatarUrl&quot;<br>      @click=&quot;toEdit(&#x27;avatarUrl&#x27;, &#x27;头像&#x27;, user.avatarUrl)&quot;<br>    &gt;<br>      &lt;img :src=&quot;url&quot; alt=&quot;头像&quot; style=&quot;height: 45px&quot; /&gt;<br>    &lt;/van-cell&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 用户头像url</span><br><span class="hljs-keyword">const</span> url = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 用户信息</span><br><span class="hljs-keyword">const</span> user = <span class="hljs-title function_">ref</span>();<br><span class="hljs-comment">// 钩子函数</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 发送获取当前登录用户请求</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">res</span>: requestData = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentUser</span>();<br>    <br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;获取用户信息成功&quot;</span>);<br>    <span class="hljs-comment">// 获取用户信息</span><br>    user.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>;<br>    <span class="hljs-comment">// 获取用户头像url</span><br>    url.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">avatarUrl</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;获取用户信息失败&quot;</span>);<br>  &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure><ul><li><h5 id="Tabbar标签栏优化"><a href="#Tabbar标签栏优化" class="headerlink" title="Tabbar标签栏优化"></a>Tabbar标签栏优化</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 右侧按钮 --&gt;<br>    &lt;template #right&gt;<br>      &lt;van-icon name=&quot;setting-o&quot; size=&quot;18&quot; /&gt;<br>    &lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 标签页 --&gt;<br> &lt;van-tabbar route&gt;<br>   &lt;van-tabbar-item to=&quot;/&quot; icon=&quot;home-o&quot; name=&quot;index&quot;&gt;主页&lt;/van-tabbar-item&gt;<br>   &lt;van-tabbar-item to=&quot;/team&quot; icon=&quot;paid&quot; name=&quot;team&quot;&gt;队伍 &lt;/van-tabbar-item&gt;<br>   &lt;van-tabbar-item to=&quot;/friend&quot; icon=&quot;friends-o&quot; name=&quot;friend&quot;<br>     &gt;联系人&lt;/van-tabbar-item<br>   &gt;<br>   &lt;van-tabbar-item to=&quot;/user&quot; icon=&quot;user-o&quot; name=&quot;user&quot;&gt;个人&lt;/van-tabbar-item&gt;<br> &lt;/van-tabbar&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="icon-属性里就是图标，在组件-icon-下可以选择合适的"><a href="#icon-属性里就是图标，在组件-icon-下可以选择合适的" class="headerlink" title="icon 属性里就是图标，在组件 icon 下可以选择合适的"></a>icon 属性里就是图标，在组件 icon 下可以选择合适的</h5></li></ul><h3 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h3><ul><li><h5 id="补充之前一直未实现的功能：退出登录"><a href="#补充之前一直未实现的功能：退出登录" class="headerlink" title="补充之前一直未实现的功能：退出登录"></a>补充之前一直未实现的功能：退出登录</h5></li><li><h5 id="在UserPage-vue下："><a href="#在UserPage-vue下：" class="headerlink" title="在UserPage.vue下："></a>在UserPage.vue下：</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 退出登录 --&gt;<br>  &lt;van-button<br>    plain<br>    type=&quot;danger&quot;<br>    size=&quot;large&quot;<br>    style=&quot;margin-top: 50px&quot;<br>    @click=&quot;logout&quot;<br>    &gt;退出登录&lt;/van-button<br>  &gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="发送退出登录请求"><a href="#发送退出登录请求" class="headerlink" title="发送退出登录请求"></a>发送退出登录请求</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 退出登录</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">logout</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> logout = <span class="hljs-keyword">await</span> myAxios<br>    .<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/user/logout&quot;</span>, &#123;&#125;)<br>    <span class="hljs-comment">// 响应</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>      <span class="hljs-comment">// 返回响应数据（用户列表）</span><br>      <span class="hljs-keyword">return</span> response?.<span class="hljs-property">data</span>;<br>    &#125;)<br>    <span class="hljs-comment">// 抛异常</span><br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);<br>    &#125;);<br><br>  <span class="hljs-keyword">if</span> (logout) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(logout);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(logout);<br>    router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/user/login&quot;</span>);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><h5 id="后端接口开发（这个用户中心写好的，直接用就行了）"><a href="#后端接口开发（这个用户中心写好的，直接用就行了）" class="headerlink" title="后端接口开发（这个用户中心写好的，直接用就行了）"></a>后端接口开发（这个用户中心写好的，直接用就行了）</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java">   <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户注销</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 注销成功与否(t / f)</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">userLogout</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) request.getSession().getAttribute(USER_LOGIN_STATE);<br>        <span class="hljs-comment">// 判断对象是否为空</span><br><span class="hljs-comment">//        if (Optional.ofNullable(user).isPresent())</span><br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(NULL_ERROR);<br><br>        <span class="hljs-comment">// 移除session</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;退出登录成功&quot;</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="退出登录功能完成！效果如下："><a href="#退出登录功能完成！效果如下：" class="headerlink" title="退出登录功能完成！效果如下："></a>退出登录功能完成！效果如下：</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230611233522701.png" alt="image-20230611233522701"></p><h2 id="验证码登录"><a href="#验证码登录" class="headerlink" title="验证码登录"></a>验证码登录</h2><ul><li><h5 id="基本实现验证码登录功能了，后端校验业务逻辑不够严谨，前端页面也有待改善（2023-06-11晚）"><a href="#基本实现验证码登录功能了，后端校验业务逻辑不够严谨，前端页面也有待改善（2023-06-11晚）" class="headerlink" title="基本实现验证码登录功能了，后端校验业务逻辑不够严谨，前端页面也有待改善（2023/06/11晚）"></a>基本实现验证码登录功能了，后端校验业务逻辑不够严谨，前端页面也有待改善（2023/06/11晚）</h5></li></ul><h3 id="前端开发-1"><a href="#前端开发-1" class="headerlink" title="前端开发"></a>前端开发</h3><ul><li><h5 id="pages-index下新增CodeLogin-vue页面"><a href="#pages-index下新增CodeLogin-vue页面" class="headerlink" title="pages/index下新增CodeLogin.vue页面"></a>pages/index下新增CodeLogin.vue页面</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;van-cell-group inset&gt;<br>    &lt;van-field<br>      v-model=&quot;phoneNumber&quot;<br>      name=&quot;手机号&quot;<br>      label=&quot;手机号&quot;<br>      placeholder=&quot;请填写手机号&quot;<br>      :rules=&quot;[&#123; required: true, message: &#x27;请填写手机号&#x27; &#125;]&quot;<br>    /&gt;<br><br>    &lt;van-field<br>      v-model=&quot;code&quot;<br>      name=&quot;验证码&quot;<br>      placeholder=&quot;请填写验证码&quot;<br>      :rules=&quot;[&#123; required: true, message: &#x27;请填写验证码&#x27; &#125;]&quot;<br>    /&gt;<br><br>    &lt;van-button plain type=&quot;primary&quot; @click=&quot;getCode&quot;&gt;发送验证码&lt;/van-button&gt;<br>  &lt;/van-cell-group&gt;<br><br>  &lt;div style=&quot;margin: 16px&quot;&gt;<br>    &lt;van-button<br>      round<br>      block<br>      type=&quot;primary&quot;<br>      native-type=&quot;submit&quot;<br>      @click=&quot;codeLogin&quot;<br>    &gt;<br>      登录<br>    &lt;/van-button&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; requestData &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../models/user&quot;</span>;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><span class="hljs-comment">// 电话号码</span><br><span class="hljs-keyword">const</span> phoneNumber = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 填写的验证码</span><br><span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 收到的验证码</span><br><span class="hljs-keyword">const</span> rightCode = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><br><span class="hljs-comment">// 直接获取验证码</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getCode</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">res</span>: requestData = <span class="hljs-keyword">await</span> myAxios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/getCode&quot;</span>, &#123;<br>    <span class="hljs-attr">params</span>: &#123;<br>      <span class="hljs-attr">phoneNumber</span>: phoneNumber.<span class="hljs-property">value</span>,<br>    &#125;,<br>  &#125;);<br><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-comment">//获取验证码</span><br>    rightCode.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;获取验证码失败&quot;</span>);<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// 发送短信验证码</span><br><br><span class="hljs-comment">// 验证码登录</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">codeLogin</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">res</span>: requestData = <span class="hljs-keyword">await</span> myAxios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;/user/codeLogin&quot;</span>, &#123;<br>    <span class="hljs-attr">params</span>: &#123;<br>      <span class="hljs-attr">phoneNumber</span>: phoneNumber.<span class="hljs-property">value</span>,<br>      <span class="hljs-attr">code</span>: code.<span class="hljs-property">value</span>,<br>      <span class="hljs-attr">rightCode</span>: rightCode.<span class="hljs-property">value</span>,<br>    &#125;,<br>  &#125;);<br><br>  <span class="hljs-comment">// 登录成功，跳转至主页</span><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;登录成功&quot;</span>);<br>    router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;登录失败&quot;</span>);<br>  &#125;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 1. 定义路由组件.</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">IndexPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/index/IndexPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">SearchPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/SearchPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserEditPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserEditPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserListPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserListPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserLoginPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserLoginPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamEditPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamEditPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamAddPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamAddPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamListPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamListPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">FriendPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/friend/FriendPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> codeLoginPage <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/index/CodeLoginPage.vue&quot;</span>;<br><br><span class="hljs-comment">// 2. 定义一些路由</span><br><span class="hljs-comment">// 每个路由都需要映射到一个组件</span><br><span class="hljs-comment">// 我们后面再讨论嵌套路由</span><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;主页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">IndexPage</span> &#125;, <span class="hljs-comment">// 主页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/code/login&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;验证码登录&quot;</span>, <span class="hljs-attr">component</span>: codeLoginPage &#125;, <span class="hljs-comment">// 验证码登录页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;个人信息页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserPage</span> &#125;, <span class="hljs-comment">// 个人页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/search&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户搜索页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">SearchPage</span> &#125;, <span class="hljs-comment">// 搜索页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户编辑页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserEditPage</span> &#125;, <span class="hljs-comment">// 用户信息修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/list&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserListPage</span> &#125;, <span class="hljs-comment">// 用户列表页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/login&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;登录页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserLoginPage</span> &#125;, <span class="hljs-comment">// 用户登录页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍信息页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamPage</span> &#125;, <span class="hljs-comment">// 队伍页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/edit&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍编辑&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamEditPage</span> &#125;, <span class="hljs-comment">// 队伍修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/add&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍新增页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamAddPage</span> &#125;, <span class="hljs-comment">// 队伍修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/list&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamListPage</span> &#125;, <span class="hljs-comment">// 队伍列表页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/friend&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">FriendPage</span> &#125;, <span class="hljs-comment">// 队伍列表页</span><br>];<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> routes;<br></code></pre></td></tr></table></figure><h2 id="阶段性问题-12"><a href="#阶段性问题-12" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="妈的，用post请求发送以params请求行发送请求，能打到后端，但接收参数为null，再复习下post-get传参方式"><a href="#妈的，用post请求发送以params请求行发送请求，能打到后端，但接收参数为null，再复习下post-get传参方式" class="headerlink" title="妈的，用post请求发送以params请求行发送请求，能打到后端，但接收参数为null，再复习下post/get传参方式"></a>妈的，用post请求发送以params请求行发送请求，能打到后端，但接收参数为null，再复习下post/get传参方式</h5></li></ul><h3 id="后端开发-1"><a href="#后端开发-1" class="headerlink" title="后端开发"></a>后端开发</h3><ul><li><h5 id="实现验证码登录分两步：1、获取验证码-2、验证码登录"><a href="#实现验证码登录分两步：1、获取验证码-2、验证码登录" class="headerlink" title="实现验证码登录分两步：1、获取验证码   2、验证码登录"></a>实现验证码登录分两步：1、获取验证码   2、验证码登录</h5></li><li><h5 id="先增加两个工具类：1、生成随机验证码-2、发送短信验证码"><a href="#先增加两个工具类：1、生成随机验证码-2、发送短信验证码" class="headerlink" title="先增加两个工具类：1、生成随机验证码  2、发送短信验证码"></a>先增加两个工具类：1、生成随机验证码  2、发送短信验证码</h5></li><li><h5 id="生成随机验证码"><a href="#生成随机验证码" class="headerlink" title="生成随机验证码"></a>生成随机验证码</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 随机生成验证码工具类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ValidateCodeUtils</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 随机生成验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> length 长度为4位或者6位</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 验证码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Integer <span class="hljs-title function_">generateValidateCode</span><span class="hljs-params">(<span class="hljs-type">int</span> length)</span>&#123;<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span><span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span>(length == <span class="hljs-number">4</span>)&#123;<br>            code = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>().nextInt(<span class="hljs-number">9999</span>);<span class="hljs-comment">//生成随机数，最大为9999</span><br>            <span class="hljs-keyword">if</span>(code &lt; <span class="hljs-number">1000</span>)&#123;<br>                code = code + <span class="hljs-number">1000</span>;<span class="hljs-comment">//保证随机数为4位数字</span><br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(length == <span class="hljs-number">6</span>)&#123;<br>            code = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>().nextInt(<span class="hljs-number">999999</span>);<span class="hljs-comment">//生成随机数，最大为999999</span><br>            <span class="hljs-keyword">if</span>(code &lt; <span class="hljs-number">100000</span>)&#123;<br>                code = code + <span class="hljs-number">100000</span>;<span class="hljs-comment">//保证随机数为6位数字</span><br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;只能生成4位或6位数字验证码&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 随机生成指定长度字符串验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> length 长度</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">generateValidateCode4String</span><span class="hljs-params">(<span class="hljs-type">int</span> length)</span>&#123;<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">rdm</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">hash1</span> <span class="hljs-operator">=</span> Integer.toHexString(rdm.nextInt());<br>        <span class="hljs-type">String</span> <span class="hljs-variable">capstr</span> <span class="hljs-operator">=</span> hash1.substring(<span class="hljs-number">0</span>, length);<br>        <span class="hljs-keyword">return</span> capstr;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="发送短信验证码"><a href="#发送短信验证码" class="headerlink" title="发送短信验证码"></a>发送短信验证码</h5></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.5.16<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 短信发送工具类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SMSUtils</span> &#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 发送短信</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> signName 签名</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> templateCode 模板</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> phoneNumbers 手机号</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> param 参数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(String signName, String templateCode,String phoneNumbers,String param)</span>&#123;<br><span class="hljs-type">DefaultProfile</span> <span class="hljs-variable">profile</span> <span class="hljs-operator">=</span> DefaultProfile.getProfile(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-type">IAcsClient</span> <span class="hljs-variable">client</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultAcsClient</span>(profile);<br><br><span class="hljs-type">SendSmsRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendSmsRequest</span>();<br>request.setSysRegionId(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>);<br>request.setPhoneNumbers(phoneNumbers);<br>request.setSignName(signName);<br>request.setTemplateCode(templateCode);<br>request.setTemplateParam(<span class="hljs-string">&quot;&#123;\&quot;code\&quot;:\&quot;&quot;</span>+param+<span class="hljs-string">&quot;\&quot;&#125;&quot;</span>);<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-type">SendSmsResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> client.getAcsResponse(request);<br>System.out.println(<span class="hljs-string">&quot;短信发送成功&quot;</span>);<br>&#125;<span class="hljs-keyword">catch</span> (ClientException e) &#123;<br>e.printStackTrace();<br>&#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="直接获取验证码-controller层"><a href="#直接获取验证码-controller层" class="headerlink" title="直接获取验证码 controller层"></a>直接获取验证码 controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 直接获取验证码</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> phoneNumber 电话号码</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 验证码</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@GetMapping(&quot;/getCode&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">getCode</span><span class="hljs-params">(String phoneNumber)</span> &#123;<br>       <span class="hljs-comment">//controller对参数的校验</span><br>       <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(phoneNumber))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> userService.getCode(phoneNumber);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(code);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-8"><a href="#service层-8" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 获取验证码</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> phoneNumber 电话号码</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@return</span> 验证码</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-meta">@Override</span><br> <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCode</span><span class="hljs-params">(String phoneNumber)</span> &#123;<br>     <span class="hljs-comment">// 1.校验电话号码</span><br>     <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1\\d&#123;10&#125;&quot;</span>;<br>     <span class="hljs-keyword">if</span> (StringUtils.isBlank(phoneNumber) || !Pattern.matches(pattern, phoneNumber))<br>         <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR, <span class="hljs-string">&quot;电话号码有误&quot;</span>);<br>     <span class="hljs-comment">// 2.判断该用户是否已注册</span><br>     QueryWrapper&lt;User&gt; uqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>     uqw.eq(<span class="hljs-string">&quot;phone&quot;</span>, phoneNumber);<br>     <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> getOne(uqw);<br>     <span class="hljs-comment">// 3.未注册</span><br>     <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(NOT_REGISTER);<br>     <span class="hljs-comment">// 4.已注册 随机生成4位验证码并返回</span><br>     <span class="hljs-keyword">return</span> ValidateCodeUtils.generateValidateCode(<span class="hljs-number">4</span>).toString();<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里还提供了阿里云短信服务，通过发送短信来接收验证码"><a href="#这里还提供了阿里云短信服务，通过发送短信来接收验证码" class="headerlink" title="这里还提供了阿里云短信服务，通过发送短信来接收验证码"></a>这里还提供了阿里云短信服务，通过发送短信来接收验证码</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 发送短信验证码</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> phoneNumber 手机号</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request     request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 短信验证码发送成功</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/sendMsg&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">sendMsg</span><span class="hljs-params">(String phoneNumber, HttpServletRequest request)</span> &#123;<br>       <span class="hljs-comment">// 1.校验手机号</span><br>       <span class="hljs-keyword">if</span> (StringUtils.isEmpty(phoneNumber))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br>       <span class="hljs-comment">// 2.生成随机的4位验证码</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> ValidateCodeUtils.generateValidateCode(<span class="hljs-number">4</span>).toString();<br>       <span class="hljs-comment">// 3.调用阿里云提供的短信服务API完成发送短信</span><br>       SMSUtils.sendMessage(<span class="hljs-string">&quot;伙伴匹配&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, phoneNumber, code);<br>       <span class="hljs-comment">// 4.需要将生成的验证码保存到Session</span><br>       request.getSession().setAttribute(phoneNumber, code);<br>       <span class="hljs-comment">// 5.短信发送成功</span><br>       <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-string">&quot;短信验证码发送成功!&quot;</span>);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="验证码登录-controller层"><a href="#验证码登录-controller层" class="headerlink" title="验证码登录 controller层"></a>验证码登录 controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 验证码登录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> phoneNumber 电话号码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code        验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 脱敏用户信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/codeLogin&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;User&gt; <span class="hljs-title function_">codeLogin</span><span class="hljs-params">(String phoneNumber, String code, String rightCode, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">//controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(phoneNumber, code, rightCode))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.codeLogin(phoneNumber, code, rightCode, request);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(user);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-9"><a href="#service层-9" class="headerlink" title="service层"></a>service层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 验证码登录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> phoneNumber 电话号码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code        验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 脱敏用户信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">codeLogin</span><span class="hljs-params">(String phoneNumber, String code, String rightCode, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验验证码</span><br>        <span class="hljs-keyword">if</span> (!code.equals(rightCode)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(CODE_ERROR);<br><br>        <span class="hljs-comment">// 2.校验电话号码</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1\\d&#123;10&#125;&quot;</span>;<br>        <span class="hljs-keyword">if</span> (StringUtils.isBlank(phoneNumber) || !Pattern.matches(pattern, phoneNumber))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR, <span class="hljs-string">&quot;电话号码有误&quot;</span>);<br><br>        <span class="hljs-comment">// 3.获取用户信息</span><br>        QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        qw.eq(<span class="hljs-string">&quot;phone&quot;</span>, phoneNumber);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">one</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getOne(qw);<br>        <span class="hljs-keyword">if</span> (one == <span class="hljs-literal">null</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(UPDATE_ERROR);<br><br>        <span class="hljs-comment">// 4.脱敏用户信息</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">safetyUser</span> <span class="hljs-operator">=</span> getSafetyUser(one);<br><br>        <span class="hljs-comment">// 5.记录用户登录态</span><br>        request.getSession().setAttribute(USER_LOGIN_STATE, safetyUser);<br><br>        <span class="hljs-comment">// 6.返回脱敏用户信息</span><br>        <span class="hljs-keyword">return</span> safetyUser;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="验证码登录功能基本实现！效果如下：（2023-06-12午）"><a href="#验证码登录功能基本实现！效果如下：（2023-06-12午）" class="headerlink" title="验证码登录功能基本实现！效果如下：（2023/06/12午）"></a>验证码登录功能基本实现！效果如下：（2023/06/12午）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230612114804354.png" alt="image-20230612114804354"></p><h2 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h2><h3 id="前端开发-2"><a href="#前端开发-2" class="headerlink" title="前端开发"></a>前端开发</h3><ul><li><h5 id="pages-UserRegisterPage-vue下"><a href="#pages-UserRegisterPage-vue下" class="headerlink" title="pages/UserRegisterPage.vue下"></a>pages/UserRegisterPage.vue下</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;van-form @submit=&quot;onSubmit&quot;&gt;<br>    &lt;van-cell-group inset&gt;<br>      &lt;van-field<br>        v-model=&quot;userAccount&quot;<br>        name=&quot;用户名&quot;<br>        label=&quot;用户名&quot;<br>        placeholder=&quot;用户名&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请填写用户名&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;userPassword&quot;<br>        type=&quot;password&quot;<br>        name=&quot;密码&quot;<br>        label=&quot;密码&quot;<br>        placeholder=&quot;密码&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请填写密码&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;checkPassword&quot;<br>        type=&quot;password&quot;<br>        name=&quot;确认密码&quot;<br>        label=&quot;确认密码&quot;<br>        placeholder=&quot;确认密码&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请再次填写密码&#x27; &#125;]&quot;<br>      /&gt;<br><br>      &lt;van-field<br>        v-model=&quot;planetCode&quot;<br>        name=&quot;星球编号&quot;<br>        label=&quot;星球编号&quot;<br>        placeholder=&quot; 星球编号&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请填写星球编号&#x27; &#125;]&quot;<br>      /&gt;<br>    &lt;/van-cell-group&gt;<br><br>    &lt;div style=&quot;margin: 16px&quot;&gt;<br>      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;<br>        注册<br>      &lt;/van-button&gt;<br>    &lt;/div&gt;<br>  &lt;/van-form&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> myAxios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../plugins/myAxios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; showSuccessToast, showFailToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vant&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; requestData &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../models/user&quot;</span>;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br><span class="hljs-comment">// 用户名</span><br><span class="hljs-keyword">const</span> userAccount = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 密码</span><br><span class="hljs-keyword">const</span> userPassword = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 确认密码</span><br><span class="hljs-keyword">const</span> checkPassword = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment">// 星球编号</span><br><span class="hljs-keyword">const</span> planetCode = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;&quot;</span>);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">res</span>: requestData = <span class="hljs-keyword">await</span> myAxios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/user/register&quot;</span>, &#123;<br>    <span class="hljs-attr">userAccount</span>: userAccount.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">userPassword</span>: userPassword.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">checkPassword</span>: checkPassword.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">planetCode</span>: planetCode.<span class="hljs-property">value</span>,<br>  &#125;);<br><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-title function_">showSuccessToast</span>(<span class="hljs-string">&quot;注册成功&quot;</span>);<br>    router.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;/user/login&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">showFailToast</span>(<span class="hljs-string">&quot;注册失败&quot;</span>);<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// 跳转至验证码登录页</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toCodeLogin</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/code/login&quot;</span>);<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><h5 id="config-route-ts-下添加路由"><a href="#config-route-ts-下添加路由" class="headerlink" title="config/route.ts 下添加路由"></a>config/route.ts 下添加路由</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 1. 定义路由组件.</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">IndexPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/index/IndexPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">SearchPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/SearchPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserEditPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserEditPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserListPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserListPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserLoginPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/user/UserLoginPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamEditPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamEditPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamAddPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamAddPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">TeamListPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/team/TeamListPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">FriendPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/friend/FriendPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">CodeLoginPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/index/CodeLoginPage.vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserRegisterPage</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../pages/index/UserRegisterPage.vue&quot;</span>;<br><br><span class="hljs-comment">// 2. 定义一些路由</span><br><span class="hljs-comment">// 每个路由都需要映射到一个组件</span><br><span class="hljs-comment">// 我们后面再讨论嵌套路由</span><br><span class="hljs-keyword">const</span> routes = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;主页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">IndexPage</span> &#125;, <span class="hljs-comment">// 主页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/code/login&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;验证码登录&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">CodeLoginPage</span> &#125;, <span class="hljs-comment">// 验证码登录页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/register&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;新用户注册&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserRegisterPage</span> &#125;, <span class="hljs-comment">// 验证码登录页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;个人信息页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserPage</span> &#125;, <span class="hljs-comment">// 个人页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/search&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户搜索页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">SearchPage</span> &#125;, <span class="hljs-comment">// 搜索页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/edit&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户编辑页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserEditPage</span> &#125;, <span class="hljs-comment">// 用户信息修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/list&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserListPage</span> &#125;, <span class="hljs-comment">// 用户列表页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/login&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;登录页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserLoginPage</span> &#125;, <span class="hljs-comment">// 用户登录页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍信息页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamPage</span> &#125;, <span class="hljs-comment">// 队伍页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/edit&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍编辑&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamEditPage</span> &#125;, <span class="hljs-comment">// 队伍修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/add&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍新增页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamAddPage</span> &#125;, <span class="hljs-comment">// 队伍修改页</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/team/list&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;队伍列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">TeamListPage</span> &#125;, <span class="hljs-comment">// 队伍列表页</span><br><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/friend&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户列表页&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">FriendPage</span> &#125;, <span class="hljs-comment">// 队伍列表页</span><br>];<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> routes;<br></code></pre></td></tr></table></figure><ul><li><h5 id="注意：注册后的跳转页面"><a href="#注意：注册后的跳转页面" class="headerlink" title="注意：注册后的跳转页面"></a>注意：注册后的跳转页面</h5></li><li><h5 id="其他修改：登录后的显示信息"><a href="#其他修改：登录后的显示信息" class="headerlink" title="其他修改：登录后的显示信息"></a>其他修改：登录后的显示信息</h5></li><li><h5 id="So-easy"><a href="#So-easy" class="headerlink" title="So easy!"></a>So easy!</h5></li></ul><h3 id="后端开发-2"><a href="#后端开发-2" class="headerlink" title="后端开发"></a>后端开发</h3><ul><li><h5 id="用户中心就做过了：controller层"><a href="#用户中心就做过了：controller层" class="headerlink" title="用户中心就做过了：controller层"></a>用户中心就做过了：controller层</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 用户注册</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> userRegisterRequest 注册用户信息</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> id</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br>   <span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">userRegister</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserRegister userRegisterRequest)</span> &#123;<br>       <span class="hljs-comment">//controller对参数的校验</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserAccount();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserPassword();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">checkPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getCheckPassword();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">planetCode</span> <span class="hljs-operator">=</span> userRegisterRequest.getPlanetCode();<br>       <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword, planetCode))<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br><br>       <span class="hljs-type">long</span> <span class="hljs-variable">userRegister</span> <span class="hljs-operator">=</span> userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>       <span class="hljs-keyword">return</span> ResultUtils.success(userRegister);<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层："><a href="#service层：" class="headerlink" title="service层："></a>service层：</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 用户注册</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> userAccount   账户</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> userPassword  密码</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> checkPassword 二次密码</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@return</span> 用户id</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-meta">@Override</span><br> <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount, String userPassword, String checkPassword, String planetCode)</span> &#123;<br>     <span class="hljs-comment">// 1.校验</span><br>     <span class="hljs-comment">// 1.1.账户, 密码, 二次密码不能为空</span><br>     <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br><br>     <span class="hljs-comment">// 1.2.账户不小于4位</span><br>     <span class="hljs-keyword">if</span> (userAccount.length() &lt; <span class="hljs-number">4</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50000</span>, <span class="hljs-string">&quot;账户小于4位&quot;</span>);<br><br>     <span class="hljs-comment">// 1.3.账户不包含特殊字符</span><br>     <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.*[\\s`~!@#$%^&amp;*()+=|&#123;&#125;&#x27;:;&#x27;,\\[\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？\\\\]+.*&quot;</span>;<br>     <span class="hljs-keyword">if</span> (Pattern.matches(pattern, userAccount)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50001</span>, <span class="hljs-string">&quot;账户包含特殊字符&quot;</span>);<br><br>     <span class="hljs-comment">// 1.4.用户密码不小于8位</span><br>     <span class="hljs-keyword">if</span> (userPassword.length() &lt; <span class="hljs-number">8</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;密码不符合要求&quot;</span>, <span class="hljs-number">60000</span>, <span class="hljs-string">&quot;用户密码小于8位&quot;</span>);<br><br>     <span class="hljs-comment">// 1.5.二次密码与密码相同</span><br>     <span class="hljs-keyword">if</span> (!userPassword.equals(checkPassword)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;二次密码不符合要求&quot;</span>, <span class="hljs-number">60001</span>, <span class="hljs-string">&quot;二次密码与密码不相同&quot;</span>);<br><br>     <span class="hljs-comment">// 1.6.星球编号不能超过5位</span><br>     <span class="hljs-keyword">if</span> (planetCode.length() &gt; <span class="hljs-number">5</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;星球编号不符合要求&quot;</span>, <span class="hljs-number">60002</span>, <span class="hljs-string">&quot;星球编号超过5位&quot;</span>);<br><br>     <span class="hljs-comment">// 1.7.账户不能重复</span><br>     QueryWrapper&lt;User&gt; ua_lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;(); <span class="hljs-comment">// LambdaQueryWrapper&lt;User&gt; userLambdaQueryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br>     ua_lqw.eq(<span class="hljs-string">&quot;user_account&quot;</span>, userAccount); <span class="hljs-comment">// userLambdaQueryWrapper.eq(User::getUserAccount, userAccount);</span><br>     <span class="hljs-type">Long</span> <span class="hljs-variable">ua_count</span> <span class="hljs-operator">=</span> userMapper.selectCount(ua_lqw);   <span class="hljs-comment">// long count = this.count(lqw);</span><br>     <span class="hljs-keyword">if</span> (ua_count &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50002</span>, <span class="hljs-string">&quot;账户重复&quot;</span>);<br><br>     <span class="hljs-comment">// 1.8.星球编号不能重复</span><br>     QueryWrapper&lt;User&gt; pc_lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>     pc_lqw.eq(<span class="hljs-string">&quot;planet_code&quot;</span>, planetCode);<br>     <span class="hljs-type">Long</span> <span class="hljs-variable">pc_count</span> <span class="hljs-operator">=</span> userMapper.selectCount(pc_lqw);<br>     <span class="hljs-keyword">if</span> (pc_count &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;星球编号不符合要求&quot;</span>, <span class="hljs-number">60003</span>, <span class="hljs-string">&quot;星球编号重复&quot;</span>);<br><br>     <span class="hljs-comment">// 2.对密码进行加密</span><br>     <span class="hljs-type">String</span> <span class="hljs-variable">encryptPassword</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());<br><br>     <span class="hljs-comment">// 3.向数据库中插入用户数据</span><br>     <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>     <span class="hljs-comment">//</span><br>     user.setUserAccount(userAccount);<br>     user.setUserPassword(encryptPassword);<br>     user.setPlanetCode(planetCode);<br>     <span class="hljs-type">boolean</span> <span class="hljs-variable">save</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.save(user);<br>     <span class="hljs-comment">//插入失败</span><br>     <span class="hljs-keyword">if</span> (!save) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.UPDATE_ERROR);<br><br>     <span class="hljs-keyword">return</span> user.getId();<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="测试一下，完成！（2023-06-14晚）"><a href="#测试一下，完成！（2023-06-14晚）" class="headerlink" title="测试一下，完成！（2023/06/14晚）"></a>测试一下，完成！（2023/06/14晚）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230614225016567.png" alt="image-20230614225016567"></p><p>![](<a href="https://gitee.com/deng-2022/pictures/raw/master/images/image-20230614225016567.png">https://gitee.com/deng-2022/pictures/raw/master/images/image-20230614225016567.png</a></p><h2 id="阶段性问题-13"><a href="#阶段性问题-13" class="headerlink" title="阶段性问题"></a>阶段性问题</h2><ul><li><h5 id="这里发现由于新用户没有已加入的队伍，在筛选队伍的后端逻辑校验时，排除自己已加入的队伍"><a href="#这里发现由于新用户没有已加入的队伍，在筛选队伍的后端逻辑校验时，排除自己已加入的队伍" class="headerlink" title="这里发现由于新用户没有已加入的队伍，在筛选队伍的后端逻辑校验时，排除自己已加入的队伍"></a>这里发现由于新用户没有已加入的队伍，在筛选队伍的后端逻辑校验时，排除自己已加入的队伍</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 6.排除当前用户已加入的队伍</span><br>       QueryWrapper&lt;UserTeam&gt; utqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       <span class="hljs-comment">// 6.1.查询当前用户已加入的队伍信息(为提高性能, 仅拿取需要的team_id字段即可)</span><br>       utqw.select(<span class="hljs-string">&quot;team_id&quot;</span>).eq(<span class="hljs-string">&quot;user_id&quot;</span>, loginUser.getId());<br>       List&lt;UserTeam&gt; userTeamList = userTeamService.list(utqw);<br>       <span class="hljs-comment">// 6.2.队伍列表排除掉用户已加入的队伍</span><br>       <span class="hljs-keyword">if</span> (!CollectionUtils.isEmpty(userTeamList)) &#123;<br>           List&lt;Long&gt; teamIdList = userTeamList.stream().map(UserTeam::getTeamId).collect(Collectors.toList());<br>           tqw.notIn(<span class="hljs-string">&quot;id&quot;</span>, teamIdList);<br>       &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="要判断userTeamList不为空才能进行stream流操作，否则会报错，已修正（2023-06-14晚）"><a href="#要判断userTeamList不为空才能进行stream流操作，否则会报错，已修正（2023-06-14晚）" class="headerlink" title="要判断userTeamList不为空才能进行stream流操作，否则会报错，已修正（2023/06/14晚）"></a>要判断userTeamList不为空才能进行stream流操作，否则会报错，已修正（2023/06/14晚）</h5></li></ul><h2 id="思考-4"><a href="#思考-4" class="headerlink" title="思考"></a>思考</h2><ul><li><h5 id="浅浅记录一下，由于英语四六级和临近期末，伙伴匹配系统暂时开发。"><a href="#浅浅记录一下，由于英语四六级和临近期末，伙伴匹配系统暂时开发。" class="headerlink" title="浅浅记录一下，由于英语四六级和临近期末，伙伴匹配系统暂时开发。"></a>浅浅记录一下，由于英语四六级和临近期末，伙伴匹配系统暂时开发。</h5></li><li><h5 id="但基础功能已经完备，这几天也正在了解云服务器领域的知识，为将来的项目的顺利部署打点基础，也要准备接下来项目的学习：接口开发项目、微服务搜索、BI智能平台（2023-06-26午）"><a href="#但基础功能已经完备，这几天也正在了解云服务器领域的知识，为将来的项目的顺利部署打点基础，也要准备接下来项目的学习：接口开发项目、微服务搜索、BI智能平台（2023-06-26午）" class="headerlink" title="但基础功能已经完备，这几天也正在了解云服务器领域的知识，为将来的项目的顺利部署打点基础，也要准备接下来项目的学习：接口开发项目、微服务搜索、BI智能平台（2023/06/26午）"></a>但基础功能已经完备，这几天也正在了解云服务器领域的知识，为将来的项目的顺利部署打点基础，也要准备接下来项目的学习：接口开发项目、微服务搜索、BI智能平台（2023/06/26午）</h5></li></ul><h3 id="搜索用户优化"><a href="#搜索用户优化" class="headerlink" title="搜索用户优化"></a>搜索用户优化</h3><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li><h5 id="新老值一样，无需修改-减少查询数据库"><a href="#新老值一样，无需修改-减少查询数据库" class="headerlink" title="新老值一样，无需修改(减少查询数据库)"></a>新老值一样，无需修改(减少查询数据库)</h5></li><li><h5 id="根据队长id查询队伍——-gt-根据队长姓名？（这个也可以不改的，可以把用户星球编号设置为队员id编号）"><a href="#根据队长id查询队伍——-gt-根据队长姓名？（这个也可以不改的，可以把用户星球编号设置为队员id编号）" class="headerlink" title="根据队长id查询队伍——&gt;根据队长姓名？（这个也可以不改的，可以把用户星球编号设置为队员id编号）"></a>根据队长id查询队伍——&gt;根据队长姓名？（这个也可以不改的，可以把用户星球编号设置为队员id编号）</h5></li><li><h5 id="校验老三样：校验登录、校验用户（存在？权限？封号？）、校验队伍（存在？状态？）（√）"><a href="#校验老三样：校验登录、校验用户（存在？权限？封号？）、校验队伍（存在？状态？）（√）" class="headerlink" title="校验老三样：校验登录、校验用户（存在？权限？封号？）、校验队伍（存在？状态？）（√）"></a>校验老三样：校验登录、校验用户（存在？权限？封号？）、校验队伍（存在？状态？）（√）</h5></li><li><h5 id="退出队伍，校验该用户是否为该队伍成员"><a href="#退出队伍，校验该用户是否为该队伍成员" class="headerlink" title="退出队伍，校验该用户是否为该队伍成员"></a>退出队伍，校验该用户是否为该队伍成员</h5></li><li><h5 id="解散加密队伍必须输入密码"><a href="#解散加密队伍必须输入密码" class="headerlink" title="解散加密队伍必须输入密码"></a>解散加密队伍必须输入密码</h5></li><li><h5 id="获取当前用户创建的队伍（√）"><a href="#获取当前用户创建的队伍（√）" class="headerlink" title="获取当前用户创建的队伍（√）"></a>获取当前用户创建的队伍（√）</h5></li><li><h5 id="获取当前用户加入的队伍（√）"><a href="#获取当前用户加入的队伍（√）" class="headerlink" title="获取当前用户加入的队伍（√）"></a>获取当前用户加入的队伍（√）</h5></li><li><h5 id="分页查询用户信息的脱敏"><a href="#分页查询用户信息的脱敏" class="headerlink" title="分页查询用户信息的脱敏"></a>分页查询用户信息的脱敏</h5></li><li><h5 id="分页查询队伍信息的脱敏"><a href="#分页查询队伍信息的脱敏" class="headerlink" title="分页查询队伍信息的脱敏"></a>分页查询队伍信息的脱敏</h5></li><li><h5 id="代码封装性不好，好多重复代码"><a href="#代码封装性不好，好多重复代码" class="headerlink" title="代码封装性不好，好多重复代码"></a>代码封装性不好，好多重复代码</h5></li><li><h5 id="代码思路很清晰，但有些许不整洁"><a href="#代码思路很清晰，但有些许不整洁" class="headerlink" title="代码思路很清晰，但有些许不整洁"></a>代码思路很清晰，但有些许不整洁</h5></li><li><h5 id="user-team表join-time冗余字段-（收回这个问题，create-time与业务无关，不能替代join-time）"><a href="#user-team表join-time冗余字段-（收回这个问题，create-time与业务无关，不能替代join-time）" class="headerlink" title="user_team表join_time冗余字段 （收回这个问题，create_time与业务无关，不能替代join_time）"></a>user_team表join_time冗余字段 （收回这个问题，create_time与业务无关，不能替代join_time）</h5></li><li><h5 id="createTime、expireTime、updateTime传到前端显示不正常（√）"><a href="#createTime、expireTime、updateTime传到前端显示不正常（√）" class="headerlink" title="createTime、expireTime、updateTime传到前端显示不正常（√）"></a>createTime、expireTime、updateTime传到前端显示不正常（√）</h5></li><li><h5 id="前端的pages、models等目录杂乱了，需要分包管理"><a href="#前端的pages、models等目录杂乱了，需要分包管理" class="headerlink" title="前端的pages、models等目录杂乱了，需要分包管理"></a>前端的pages、models等目录杂乱了，需要分包管理</h5></li><li><h5 id="前端关于页面跳转的问题，router-push-、router-replace-的使用"><a href="#前端关于页面跳转的问题，router-push-、router-replace-的使用" class="headerlink" title="前端关于页面跳转的问题，router.push()、router.replace()的使用"></a>前端关于页面跳转的问题，router.push()、router.replace()的使用</h5></li><li><h5 id="axios请求的返回值：response、response-data（√）"><a href="#axios请求的返回值：response、response-data（√）" class="headerlink" title="axios请求的返回值：response、response.data（√）"></a>axios请求的返回值：response、response.data（√）</h5></li><li><h5 id="修改队伍还要扩展支持修改最大人数"><a href="#修改队伍还要扩展支持修改最大人数" class="headerlink" title="修改队伍还要扩展支持修改最大人数"></a>修改队伍还要扩展支持修改最大人数</h5></li><li><h5 id="获取队伍信息team-one我直接返回team了，没有脱敏，其实密码加密就行"><a href="#获取队伍信息team-one我直接返回team了，没有脱敏，其实密码加密就行" class="headerlink" title="获取队伍信息team/one我直接返回team了，没有脱敏，其实密码加密就行"></a>获取队伍信息team/one我直接返回team了，没有脱敏，其实密码加密就行</h5></li><li><h5 id="根据标签搜索用户、根据队伍名、队伍描述等搜索队伍需要优化（√）"><a href="#根据标签搜索用户、根据队伍名、队伍描述等搜索队伍需要优化（√）" class="headerlink" title="根据标签搜索用户、根据队伍名、队伍描述等搜索队伍需要优化（√）"></a>根据标签搜索用户、根据队伍名、队伍描述等搜索队伍需要优化（√）</h5></li><li><h5 id="前端页面的标题-对应每个页面都应该显示对应的标题（√）"><a href="#前端页面的标题-对应每个页面都应该显示对应的标题（√）" class="headerlink" title="前端页面的标题 对应每个页面都应该显示对应的标题（√）"></a>前端页面的标题 对应每个页面都应该显示对应的标题（√）</h5></li><li><h5 id="登录后页面跳转到原先页"><a href="#登录后页面跳转到原先页" class="headerlink" title="登录后页面跳转到原先页"></a>登录后页面跳转到原先页</h5></li><li><h5 id="搜索队伍分为公开和加密两栏，私有队伍不对外显示（√）"><a href="#搜索队伍分为公开和加密两栏，私有队伍不对外显示（√）" class="headerlink" title="搜索队伍分为公开和加密两栏，私有队伍不对外显示（√）"></a>搜索队伍分为公开和加密两栏，私有队伍不对外显示（√）</h5></li><li><h5 id="加入队伍功能，加入加密队伍需要输入密码（√）"><a href="#加入队伍功能，加入加密队伍需要输入密码（√）" class="headerlink" title="加入队伍功能，加入加密队伍需要输入密码（√）"></a>加入队伍功能，加入加密队伍需要输入密码（√）</h5></li><li><h5 id="分布式锁防止单用户加入两次队伍"><a href="#分布式锁防止单用户加入两次队伍" class="headerlink" title="分布式锁防止单用户加入两次队伍"></a>分布式锁防止单用户加入两次队伍</h5></li><li><h5 id="项目打包上线"><a href="#项目打包上线" class="headerlink" title="项目打包上线"></a>项目打包上线</h5></li><li><h5 id="拿到加入队伍的所有队员的信息"><a href="#拿到加入队伍的所有队员的信息" class="headerlink" title="拿到加入队伍的所有队员的信息"></a>拿到加入队伍的所有队员的信息</h5></li><li><h5 id="前台的提示信息不够完善，比如登录时的用户名、密码校验提示，电话号码、验证码校验提示，新增、删除、加入队伍提示等等"><a href="#前台的提示信息不够完善，比如登录时的用户名、密码校验提示，电话号码、验证码校验提示，新增、删除、加入队伍提示等等" class="headerlink" title="前台的提示信息不够完善，比如登录时的用户名、密码校验提示，电话号码、验证码校验提示，新增、删除、加入队伍提示等等"></a>前台的提示信息不够完善，比如登录时的用户名、密码校验提示，电话号码、验证码校验提示，新增、删除、加入队伍提示等等</h5></li><li><h5 id="支持用户上传头像"><a href="#支持用户上传头像" class="headerlink" title="支持用户上传头像"></a>支持用户上传头像</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>开发经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>开发经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>探索我的博客世界 - 个人导读</title>
    <link href="/blog/2023/03/23/%E5%AF%BC%E8%AF%BB/"/>
    <url>/blog/2023/03/23/%E5%AF%BC%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="blog导读"><a href="#blog导读" class="headerlink" title="blog导读"></a>blog导读</h1><ol><li>个人介绍：包括你的姓名、职业、爱好、特长等信息。</li><li>博客简介：介绍你博客的内容、主题、定位以及你想与读者分享的知识领域。</li><li>内容导向：简要说明博客的内容类型、风格和目标受众，让读者对博客有进一步的了解。</li><li>博客特色：阐述博客站点的独特之处、与众不同之处或者提供给读者的特殊价值。</li><li>互动邀请：鼓励读者参与留言、订阅、分享和参与社交媒体，与你建立更紧密的联系</li></ol>]]></content>
    
    
    <categories>
      
      <category>导读</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导读</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux常用命令</title>
    <link href="/blog/2023/03/22/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/blog/2023/03/22/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="Linux是一种开源操作系统，它提供了丰富的命令行工具来管理和操作系统"><a href="#Linux是一种开源操作系统，它提供了丰富的命令行工具来管理和操作系统" class="headerlink" title="Linux是一种开源操作系统，它提供了丰富的命令行工具来管理和操作系统"></a>Linux是一种开源操作系统，它提供了丰富的命令行工具来管理和操作系统</h5></li><li><h5 id="本文将快速介绍一些常用的Linux命令"><a href="#本文将快速介绍一些常用的Linux命令" class="headerlink" title="本文将快速介绍一些常用的Linux命令"></a>本文将快速介绍一些常用的Linux命令</h5></li></ul><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="通用格式"><a href="#通用格式" class="headerlink" title="通用格式"></a>通用格式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">command <span class="hljs-selector-attr">[-options]</span> <span class="hljs-selector-attr">[parameter]</span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">command : 命令本身<br>-options : 选项[可选] <br>parameter : 参数[可选]<br></code></pre></td></tr></table></figure><h2 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h2><ul><li><h5 id="ls-列出目录"><a href="#ls-列出目录" class="headerlink" title="ls - 列出目录"></a>ls - 列出目录</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">ls [<span class="hljs-operator">-</span>a <span class="hljs-operator">-</span>l <span class="hljs-operator">-</span>h] [Linux路径]<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">-a : 列出全部文件, 包含隐藏的文件/文件夹<br>-l : 纵向形式排列信息<br>-h : 列出文件大小, 与-<span class="hljs-type">l</span>配合使用<br></code></pre></td></tr></table></figure><ul><li><h5 id="cd-切换工作目录-Change-Directory"><a href="#cd-切换工作目录-Change-Directory" class="headerlink" title="cd - 切换工作目录  (Change Directory)"></a>cd - 切换工作目录  (Change Directory)</h5></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span><span class="hljs-meta"> [Linux路径]</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd   回到用户的HOME目录 <span class="hljs-regexp">/home/m</span>emory<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/ 回到根目录 /</span><br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">注:  / 表示根目录 <br>~/ 表示 <span class="hljs-string">/home/memory</span> <br>    <span class="hljs-string">./</span> 表示当前目录<br>    <span class="hljs-string">../</span> 表示上一级目录<br></code></pre></td></tr></table></figure><ul><li><h5 id="pwd-查看当前工作目录-Print-Work-Directory"><a href="#pwd-查看当前工作目录-Print-Work-Directory" class="headerlink" title="pwd - 查看当前工作目录  (Print Work Directory)"></a>pwd - 查看当前工作目录  (Print Work Directory)</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">pwd</span> 无选项 无参数<br></code></pre></td></tr></table></figure><ul><li><h5 id="mkdir-创建目录-Make-Directory"><a href="#mkdir-创建目录-Make-Directory" class="headerlink" title="mkdir - 创建目录  (Make Directory)"></a>mkdir - 创建目录  (Make Directory)</h5></li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir [-p] Linux路径<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">-p : 选填, 可创建多级目录<br>Linux路径 : 必填<br></code></pre></td></tr></table></figure><h2 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h2><ul><li><h5 id="touch-创建文件"><a href="#touch-创建文件" class="headerlink" title="touch - 创建文件"></a>touch - 创建文件</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> Linux路径<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无选项 参数必填 <br></code></pre></td></tr></table></figure><ul><li><h5 id="cat-查看文件内容"><a href="#cat-查看文件内容" class="headerlink" title="cat - 查看文件内容"></a>cat - 查看文件内容</h5></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> Linux路径<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无选项 参数必填<br></code></pre></td></tr></table></figure><ul><li><h5 id="more-查看文件内容-可翻页查看-空格翻页-q退出"><a href="#more-查看文件内容-可翻页查看-空格翻页-q退出" class="headerlink" title="more - 查看文件内容  (可翻页查看, 空格翻页, q退出)"></a>more - 查看文件内容  (可翻页查看, 空格翻页, q退出)</h5></li></ul><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">more</span> Linux路径<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无选项 参数必填<br></code></pre></td></tr></table></figure><ul><li><h5 id="cp-复制文件-文件夹-copy"><a href="#cp-复制文件-文件夹-copy" class="headerlink" title="cp - 复制文件/文件夹  (copy)"></a>cp - 复制文件/文件夹  (copy)</h5></li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-keyword">cp</span> [-r] 参数一 参数二<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">-r : 可选, 复制文件夹时使用<br>参数一 : <span class="hljs-type">Linux</span>路径, 表示被复制的文件或文件夹<br>参数二 : <span class="hljs-type">Linux</span>路径, 表示要复制去的地方<br></code></pre></td></tr></table></figure><ul><li><h5 id="rm-删除文件-文件夹-remove"><a href="#rm-删除文件-文件夹-remove" class="headerlink" title="rm - 删除文件/文件夹  (remove)"></a>rm - 删除文件/文件夹  (remove)</h5></li></ul><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">rm [-r -f] 参数一 参数二 ......<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">-r : 删除文件夹时使用<br>-f : 强制删除 (<span class="hljs-type">force</span>)<br>参数 : 要删除的文件/文件夹路径<br></code></pre></td></tr></table></figure><ul><li><h5 id="mv-移动文件-文件夹-move"><a href="#mv-移动文件-文件夹-move" class="headerlink" title="mv - 移动文件/文件夹 (move)"></a>mv - 移动文件/文件夹 (move)</h5></li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">move 参数一 参数二<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">参数一 : <span class="hljs-type">Linux</span>路径, 表示被移动的文件或文件夹<br>参数二 : <span class="hljs-type">Linux</span>路径, 表示移动去的地方, <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL从入门到入土</title>
    <link href="/blog/2023/03/22/MySQL%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/"/>
    <url>/blog/2023/03/22/MySQL%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</url>
    
    <content type="html"><![CDATA[<p>注：本文整理自网友的优秀学习笔记，结合了自己的学习经验，可供日常学习参考和使用</p><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="通用语法及分类"><a href="#通用语法及分类" class="headerlink" title="通用语法及分类"></a>通用语法及分类</h2><ul><li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li><li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li><li>DQL: 数据查询语言，用来查询数据库中表的记录</li><li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li></ul><h3 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h3><p>数据定义语言</p><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>查询所有数据库：<br><code>SHOW DATABASES;</code><br>查询当前数据库：<br><code>SELECT DATABASE();</code><br>创建数据库：<br><code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code><br>删除数据库：<br><code>DROP DATABASE [ IF EXISTS ] 数据库名;</code><br>使用数据库：<br><code>USE 数据库名;</code></p><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集</li></ul><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><p>查询当前数据库所有表：<br><code>SHOW TABLES;</code><br>查询表结构：<br><code>DESC 表名;</code><br>查询指定表的建表语句：<br><code>SHOW CREATE TABLE 表名;</code></p><p>创建表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE 表名(<br>字段1 字段1类型 [COMMENT 字段1注释],<br>字段2 字段2类型 [COMMENT 字段2注释],<br>字段3 字段3类型 [COMMENT 字段3注释],<br>...<br>字段n 字段n类型 [COMMENT 字段n注释]<br>)[ COMMENT 表注释 ];<br></code></pre></td></tr></table></figure><p><strong>最后一个字段后面没有逗号</strong></p><p>添加字段：<br><code>ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：<code>ALTER TABLE emp ADD nickname varchar(20) COMMENT &#39;昵称&#39;;</code></p><p>修改数据类型：<br><code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code><br>修改字段名和字段类型：<br><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：将emp表的nickname字段修改为username，类型为varchar(30)<br><code>ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT &#39;昵称&#39;;</code></p><p>删除字段：<br><code>ALTER TABLE 表名 DROP 字段名;</code></p><p>修改表名：<br><code>ALTER TABLE 表名 RENAME TO 新表名</code></p><p>删除表：<br><code>DROP TABLE [IF EXISTS] 表名;</code><br>删除表，并重新创建该表：<br><code>TRUNCATE TABLE 表名;</code></p><h3 id="DML（数据操作语言）"><a href="#DML（数据操作语言）" class="headerlink" title="DML（数据操作语言）"></a>DML（数据操作语言）</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>指定字段：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code><br>全部字段：<br><code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code></p><p>批量添加数据：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code><br><code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p><h5 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>字符串和日期类型数据应该包含在引号中</li><li>插入的数据大小应该在字段的规定范围内</li></ul><h4 id="更新和删除数据"><a href="#更新和删除数据" class="headerlink" title="更新和删除数据"></a>更新和删除数据</h4><p>修改数据：<br><code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code><br>例：<br><code>UPDATE emp SET name = &#39;Jack&#39; WHERE id = 1;</code></p><p>删除数据：<br><code>DELETE FROM 表名 [ WHERE 条件 ];</code></p><h3 id="DQL（数据查询语言）"><a href="#DQL（数据查询语言）" class="headerlink" title="DQL（数据查询语言）"></a>DQL（数据查询语言）</h3><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>字段列表<br>FROM<br>表名字段<br>WHERE<br>条件列表<br>GROUP BY<br>分组字段列表<br>HAVING<br>分组后的条件列表<br>ORDER BY<br>排序字段列表<br>LIMIT<br>分页参数<br></code></pre></td></tr></table></figure><h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>查询多个字段：<br><code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code><br><code>SELECT * FROM 表名;</code></p><p>设置别名：<br><code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code><br><code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p><p>去除重复记录：<br><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p><p>转义：<br><code>SELECT * FROM 表名 WHERE name LIKE &#39;/_张三&#39; ESCAPE &#39;/&#39;</code><br>/ 之后的_不作为通配符</p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p><p>条件：</p><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !=</td><td>不等于</td></tr><tr><td>BETWEEN … AND …</td><td>在某个范围内（含最小、最大值）</td></tr><tr><td>IN(…)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>LIKE 占位符</td><td>模糊匹配（_匹配单个字符，%匹配任意个字符）</td></tr><tr><td>IS NULL</td><td>是NULL</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND 或 &amp;&amp;</td><td>并且（多个条件同时成立）</td></tr><tr><td>OR 或 &#124;&#124;</td><td>或者（多个条件任意一个成立）</td></tr><tr><td>NOT 或 !</td><td>非，不是</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 年龄等于30<br>select * from employee where age = 30;<br>-- 年龄小于30<br>select * from employee where age &lt; 30;<br>-- 小于等于<br>select * from employee where age &lt;= 30;<br>-- 没有身份证<br>select * from employee where idcard is null or idcard = &#x27;&#x27;;<br>-- 有身份证<br>select * from employee where idcard;<br>select * from employee where idcard is not null;<br>-- 不等于<br>select * from employee where age != 30;<br>-- 年龄在20到30之间<br>select * from employee where age between 20 and 30;<br>select * from employee where age &gt;= 20 and age &lt;= 30;<br>-- 下面语句不报错，但查不到任何信息<br>select * from employee where age between 30 and 20;<br>-- 性别为女且年龄小于30<br>select * from employee where age &lt; 30 and gender = &#x27;女&#x27;;<br>-- 年龄等于25或30或35<br>select * from employee where age = 25 or age = 30 or age = 35;<br>select * from employee where age in (25, 30, 35);<br>-- 姓名为两个字<br>select * from employee where name like &#x27;__&#x27;;<br>-- 身份证最后为X<br>select * from employee where idcard like &#x27;%X&#x27;;<br></code></pre></td></tr></table></figure><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>常见聚合函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><p>语法：<br><code>SELECT 聚合函数(字段列表) FROM 表名;</code><br>例：<br><code>SELECT count(id) from employee where workaddress = &quot;广东省&quot;;</code></p><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p><p>where 和 having 的区别：</p><ul><li>执行时机不同：where是分组之前进行过滤，不满足where条件不参与分组；having是分组后对结果进行过滤。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）<br>select count(*) from employee group by gender;<br>-- 根据性别分组，统计男性和女性数量<br>select gender, count(*) from employee group by gender;<br>-- 根据性别分组，统计男性和女性的平均年龄<br>select gender, avg(age) from employee group by gender;<br>-- 年龄小于45，并根据工作地址分组<br>select workaddress, count(*) from employee where age &lt; 45 group by workaddress;<br>-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址<br>select workaddress, count(*) address_count from employee where age &lt; 45 group by workaddress having address_count &gt;= 3;<br></code></pre></td></tr></table></figure><h5 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>执行顺序：where &gt; 聚合函数 &gt; having</li><li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</li></ul><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code></p><p>排序方式：</p><ul><li>ASC: 升序（默认）</li><li>DESC: 降序</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 根据年龄升序排序<br>SELECT * FROM employee ORDER BY age ASC;<br>SELECT * FROM employee ORDER BY age;<br>-- 两字段排序，根据年龄升序排序，入职时间降序排序<br>SELECT * FROM employee ORDER BY age ASC, entrydate DESC;<br></code></pre></td></tr></table></figure><h5 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h5><p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询第一页数据，展示10条<br>SELECT * FROM employee LIMIT 0, 10;<br>-- 查询第二页<br>SELECT * FROM employee LIMIT 10, 10;<br></code></pre></td></tr></table></figure><h5 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>起始索引从0开始，起始索引 = （查询页码 - 1） * 每页显示记录数</li><li>分页查询是数据库的方言，不同数据库有不同实现，MySQL是LIMIT</li><li>如果查询的是第一页数据，起始索引可以省略，直接简写 LIMIT 10</li></ul><h4 id="DQL执行顺序"><a href="#DQL执行顺序" class="headerlink" title="DQL执行顺序"></a>DQL执行顺序</h4><p>FROM -&gt; WHERE -&gt; GROUP BY -&gt; SELECT -&gt; ORDER BY -&gt; LIMIT</p><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><p>查询用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">USER mysql;<br>SELECT * FROM user;<br></code></pre></td></tr></table></figure><p>创建用户:<br><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p><p>修改用户密码：<br><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p><p>删除用户：<br><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 创建用户test，只能在当前主机localhost访问<br>create user &#x27;test&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;<br>-- 创建用户test，能在任意主机访问<br>create user &#x27;test&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;<br>create user &#x27;test&#x27; identified by &#x27;123456&#x27;;<br>-- 修改密码<br>alter user &#x27;test&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27;1234&#x27;;<br>-- 删除用户<br>drop user &#x27;test&#x27;@&#x27;localhost&#x27;;<br></code></pre></td></tr></table></figure><h5 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>主机名可以使用 % 通配</li></ul><h4 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h4><p>常用权限：</p><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL, ALL PRIVILEGES</td><td>所有权限</td></tr><tr><td>SELECT</td><td>查询数据</td></tr><tr><td>INSERT</td><td>插入数据</td></tr><tr><td>UPDATE</td><td>修改数据</td></tr><tr><td>DELETE</td><td>删除数据</td></tr><tr><td>ALTER</td><td>修改表</td></tr><tr><td>DROP</td><td>删除数据库/表/视图</td></tr><tr><td>CREATE</td><td>创建数据库/表</td></tr></tbody></table><p>更多权限请看<a href="#%E6%9D%83%E9%99%90%E4%B8%80%E8%A7%88%E8%A1%A8" title="权限一览表">权限一览表</a></p><p>查询权限：<br><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>授予权限：<br><code>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>撤销权限：<br><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h5 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多个权限用逗号分隔</li><li>授权时，数据库名和表名可以用 * 进行通配，代表所有</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>字符串函数</li><li>数值函数</li><li>日期函数</li><li>流程函数</li></ul><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CONCAT(s1, s2, …, sn)</td><td>字符串拼接，将s1, s2, …, sn拼接成一个字符串</td></tr><tr><td>LOWER(str)</td><td>将字符串全部转为小写</td></tr><tr><td>UPPER(str)</td><td>将字符串全部转为大写</td></tr><tr><td>LPAD(str, n, pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>RPAD(str, n, pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>TRIM(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>SUBSTRING(str, start, len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table><p>使用示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 拼接<br>SELECT CONCAT(&#x27;Hello&#x27;, &#x27;World&#x27;);<br>-- 小写<br>SELECT LOWER(&#x27;Hello&#x27;);<br>-- 大写<br>SELECT UPPER(&#x27;Hello&#x27;);<br>-- 左填充<br>SELECT LPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);<br>-- 右填充<br>SELECT RPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);<br>-- 去除空格<br>SELECT TRIM(&#x27; Hello World &#x27;);<br>-- 切片（起始索引为1）<br>SELECT SUBSTRING(&#x27;Hello World&#x27;, 1, 5);<br></code></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p>常见函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CEIL(x)</td><td>向上取整</td></tr><tr><td>FLOOR(x)</td><td>向下取整</td></tr><tr><td>MOD(x, y)</td><td>返回x/y的模</td></tr><tr><td>RAND()</td><td>返回0~1内的随机数</td></tr><tr><td>ROUND(x, y)</td><td>求参数x的四舍五入值，保留y位小数</td></tr></tbody></table><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CURDATE()</td><td>返回当前日期</td></tr><tr><td>CURTIME()</td><td>返回当前时间</td></tr><tr><td>NOW()</td><td>返回当前日期和时间</td></tr><tr><td>YEAR(date)</td><td>获取指定date的年份</td></tr><tr><td>MONTH(date)</td><td>获取指定date的月份</td></tr><tr><td>DAY(date)</td><td>获取指定date的日期</td></tr><tr><td>DATE_ADD(date, INTERVAL expr type)</td><td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td></tr><tr><td>DATEDIFF(date1, date2)</td><td>返回起始时间date1和结束时间date2之间的天数</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- DATE_ADD<br>SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);<br></code></pre></td></tr></table></figure><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>IF(value, t, f)</td><td>如果value为true，则返回t，否则返回f</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果value1不为空，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果val1为true，返回res1，… 否则返回default默认值</td></tr><tr><td>CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果expr的值等于val1，返回res1，… 否则返回default默认值</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select<br>name,<br>(case when age &gt; 30 then &#x27;中年&#x27; else &#x27;青年&#x27; end)<br>from employee;<br>select<br>name,<br>(case workaddress when &#x27;北京市&#x27; then &#x27;一线城市&#x27; when &#x27;上海市&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;<br>from employee;<br></code></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>分类：</p><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段的数据不能为null</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>保证该字段的所有数据都是唯一、不重复的</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>PRIMARY KEY</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td><td>DEFAULT</td></tr><tr><td>检查约束（8.0.1版本后）</td><td>保证字段值满足某一个条件</td><td>CHECK</td></tr><tr><td>外键约束</td><td>用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td><td>FOREIGN KEY</td></tr></tbody></table><p>约束是作用于表中字段上的，可以再创建表/修改表的时候添加约束。</p><h3 id="常用约束"><a href="#常用约束" class="headerlink" title="常用约束"></a>常用约束</h3><table><thead><tr><th>约束条件</th><th>关键字</th></tr></thead><tbody><tr><td>主键</td><td>PRIMARY KEY</td></tr><tr><td>自动增长</td><td>AUTO_INCREMENT</td></tr><tr><td>不为空</td><td>NOT NULL</td></tr><tr><td>唯一</td><td>UNIQUE</td></tr><tr><td>逻辑条件</td><td>CHECK</td></tr><tr><td>默认值</td><td>DEFAULT</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table user(<br>id int primary key auto_increment,<br>name varchar(10) not null unique,<br>age int check(age &gt; 0 and age &lt; 120),<br>status char(1) default &#x27;1&#x27;,<br>gender char(1)<br>);<br></code></pre></td></tr></table></figure><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><p>添加外键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE 表名(<br>字段名 字段类型,<br>...<br>[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)<br>);<br>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);<br><br>-- 例子<br>alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id);<br></code></pre></td></tr></table></figure><p>删除外键：<br><code>ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</code></p><h4 id="删除-更新行为"><a href="#删除-更新行为" class="headerlink" title="删除/更新行为"></a>删除/更新行为</h4><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTION</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与RESTRICT一致）</td></tr><tr><td>RESTRICT</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与NO ACTION一致）</td></tr><tr><td>CASCADE</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除/更新外键在子表中的记录</td></tr><tr><td>SET NULL</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（要求该外键允许为null）</td></tr><tr><td>SET DEFAULT</td><td>父表有变更时，子表将外键设为一个默认值（Innodb不支持）</td></tr></tbody></table><p>更改删除/更新行为：<br><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</code></p><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><ul><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ul><h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><p>案例：部门与员工<br>关系：一个部门对应多个员工，一个员工对应一个部门<br>实现：在多的一方建立外键，指向一的一方的主键</p><h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p>案例：学生与课程<br>关系：一个学生可以选多门课程，一门课程也可以供多个学生选修<br>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p><h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p>案例：用户与用户详情<br>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率<br>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>合并查询（笛卡尔积，会展示所有组合结果）：<br><code>select * from employee, dept;</code></p><blockquote><p>笛卡尔积：两个集合A集合和B集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）</p></blockquote><p>消除无效笛卡尔积：<br><code>select * from employee, dept where employee.dept = dept.id;</code></p><h3 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h3><p>内连接查询的是两张表交集的部分</p><p>隐式内连接：<br><code>SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;</code></p><p>显式内连接：<br><code>SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;</code></p><p>显式性能比隐式高</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询员工姓名，及关联的部门的名称<br>-- 隐式<br>select e.name, d.name from employee as e, dept as d where e.dept = d.id;<br>-- 显式<br>select e.name, d.name from employee as e inner join dept as d on e.dept = d.id;<br></code></pre></td></tr></table></figure><h3 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>左外连接：<br>查询左表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;</code><br>相当于查询表1的所有数据，包含表1和表2交集部分数据</p><p>右外连接：<br>查询右表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 左<br>select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id;<br>select d.name, e.* from dept d left outer join emp e on e.dept = d.id;  -- 这条语句与下面的语句效果一样<br>-- 右<br>select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id;<br></code></pre></td></tr></table></figure><p>左连接可以查询到没有dept的employee，右连接可以查询到没有employee的dept</p><h3 id="自连接查询"><a href="#自连接查询" class="headerlink" title="自连接查询"></a>自连接查询</h3><p>当前表与自身的连接查询，自连接必须使用表别名</p><p>语法：<br><code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</code></p><p>自连接查询，可以是内连接查询，也可以是外连接查询</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询员工及其所属领导的名字<br>select a.name, b.name from employee a, employee b where a.manager = b.id;<br>-- 没有领导的也查询出来<br>select a.name, b.name from employee a left join employee b on a.manager = b.id;<br></code></pre></td></tr></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>SQL语句中嵌套SELECT语句，称谓嵌套查询，又称子查询。<br><code>SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</code><br><strong>子查询外部的语句可以是 INSERT / UPDATE / DELETE / SELECT 的任何一个</strong></p><p>根据子查询结果可以分为：</p><ul><li>标量子查询（子查询结果为单个值）</li><li>列子查询（子查询结果为一列）</li><li>行子查询（子查询结果为一行）</li><li>表子查询（子查询结果为多行多列）</li></ul><p>根据子查询位置可分为：</p><ul><li>WHERE 之后</li><li>FROM 之后</li><li>SELECT 之后</li></ul><h4 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等）。<br>常用操作符：- &lt; &gt; &gt; &gt;= &lt; &lt;=</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询销售部所有员工<br>select id from dept where name = &#x27;销售部&#x27;;<br>-- 根据销售部部门ID，查询员工信息<br>select * from employee where dept = 4;<br>-- 合并（子查询）<br>select * from employee where dept = (select id from dept where name = &#x27;销售部&#x27;);<br><br>-- 查询xxx入职之后的员工信息<br>select * from employee where entrydate &gt; (select entrydate from employee where name = &#x27;xxx&#x27;);<br></code></pre></td></tr></table></figure><h4 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h4><p>返回的结果是一列（可以是多行）。</p><p>常用操作符：</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询销售部和市场部的所有员工信息<br>select * from employee where dept in (select id from dept where name = &#x27;销售部&#x27; or name = &#x27;市场部&#x27;);<br>-- 查询比财务部所有人工资都高的员工信息<br>select * from employee where salary &gt; all(select salary from employee where dept = (select id from dept where name = &#x27;财务部&#x27;));<br>-- 查询比研发部任意一人工资高的员工信息<br>select * from employee where salary &gt; any (select salary from employee where dept = (select id from dept where name = &#x27;研发部&#x27;));<br></code></pre></td></tr></table></figure><h4 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h4><p>返回的结果是一行（可以是多列）。<br>常用操作符：=, &lt;, &gt;, IN, NOT IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询与xxx的薪资及直属领导相同的员工信息<br>select * from employee where (salary, manager) = (12500, 1);<br>select * from employee where (salary, manager) = (select salary, manager from employee where name = &#x27;xxx&#x27;);<br></code></pre></td></tr></table></figure><h4 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h4><p>返回的结果是多行多列<br>常用操作符：IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询与xxx1，xxx2的职位和薪资相同的员工<br>select * from employee where (job, salary) in (select job, salary from employee where name = &#x27;xxx1&#x27; or name = &#x27;xxx2&#x27;);<br>-- 查询入职日期是2006-01-01之后的员工，及其部门信息<br>select e.*, d.* from (select * from employee where entrydate &gt; &#x27;2006-01-01&#x27;) as e left join dept as d on e.dept = d.id;<br></code></pre></td></tr></table></figure><h3 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询 union, union all"></a>联合查询 union, union all</h3><p>把多次查询的结果合并，形成一个新的查询集</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT 字段列表 FROM 表A ...<br>UNION [ALL]<br>SELECT 字段列表 FROM 表B ...<br></code></pre></td></tr></table></figure><h4 id="注意事项-7"><a href="#注意事项-7" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>UNION ALL 会有重复结果，UNION 不会</li><li>联合查询比使用or效率高，不会使索引失效</li></ul><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><p>基本操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 1. 查询张三账户余额<br>select * from account where name = &#x27;张三&#x27;;<br>-- 2. 将张三账户余额-1000<br>update account set money = money - 1000 where name = &#x27;张三&#x27;;<br>-- 此语句出错后张三钱减少但是李四钱没有增加<br>模拟sql语句错误<br>-- 3. 将李四账户余额+1000<br>update account set money = money + 1000 where name = &#x27;李四&#x27;;<br><br>-- 查看事务提交方式<br>SELECT @@AUTOCOMMIT;<br>-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效<br>SET @@AUTOCOMMIT = 0;<br>-- 提交事务<br>COMMIT;<br>-- 回滚事务<br>ROLLBACK;<br><br>-- 设置手动提交后上面代码改为：<br>select * from account where name = &#x27;张三&#x27;;<br>update account set money = money - 1000 where name = &#x27;张三&#x27;;<br>update account set money = money + 1000 where name = &#x27;李四&#x27;;<br>commit;<br></code></pre></td></tr></table></figure><p>操作方式二：</p><p>开启事务：<br><code>START TRANSACTION 或 BEGIN TRANSACTION;</code><br>提交事务：<br><code>COMMIT;</code><br>回滚事务：<br><code>ROLLBACK;</code></p><p>操作实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">start transaction;<br>select * from account where name = &#x27;张三&#x27;;<br>update account set money = money - 1000 where name = &#x27;张三&#x27;;<br>update account set money = money + 1000 where name = &#x27;李四&#x27;;<br>commit;<br></code></pre></td></tr></table></figure><h3 id="四大特性ACID"><a href="#四大特性ACID" class="headerlink" title="四大特性ACID"></a>四大特性ACID</h3><ul><li>原子性(Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li><li>一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态</li><li>隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><h3 id="并发事务"><a href="#并发事务" class="headerlink" title="并发事务"></a>并发事务</h3><table><thead><tr><th>问题</th><th>描述</th></tr></thead><tbody><tr><td>脏读</td><td>一个事务读到另一个事务还没提交的数据</td></tr><tr><td>不可重复读</td><td>一个事务先后读取同一条记录，但两次读取的数据不同</td></tr><tr><td>幻读</td><td>一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td></tr></tbody></table><blockquote><p>这三个问题的详细演示：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd</a> </p></blockquote><p>并发事务隔离级别：</p><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Read committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>Repeatable Read(默认)</td><td>×</td><td>×</td><td>√</td></tr><tr><td>Serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><ul><li>√表示在当前隔离级别下该问题会出现</li><li>Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差</li></ul><p>查看事务隔离级别：<br><code>SELECT @@TRANSACTION_ISOLATION;</code><br>设置事务隔离级别：<br><code>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</code><br>SESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效</p><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><p>MySQL体系结构：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_20220315034329549927.png" alt="结构图" title="结构图"><br><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%B1%82%E7%BA%A7%E5%90%AB%E4%B9%89_20220315034359342837.png" alt="层级描述" title="层级描述"></p><p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。<br>默认存储引擎是InnoDB。</p><p>相关操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询建表语句<br>show create table account;<br>-- 建表时指定存储引擎<br>CREATE TABLE 表名(<br>...<br>) ENGINE=INNODB;<br>-- 查看当前数据库支持的存储引擎<br>show engines;<br></code></pre></td></tr></table></figure><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。</p><p>特点：</p><ul><li>DML 操作遵循 ACID 模型，支持<strong>事务</strong></li><li><strong>行级锁</strong>，提高并发访问性能</li><li>支持<strong>外键</strong>约束，保证数据的完整性和正确性</li></ul><p>文件：</p><ul><li>xxx.ibd: xxx代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。</li></ul><p>参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间</p><p>知识点：</p><p>查看 Mysql 变量：<br><code>show variables like &#39;innodb_file_per_table&#39;;</code></p><p>从idb文件提取表结构数据：<br>（在cmd运行）<br><code>ibd2sdi xxx.ibd</code></p><p>InnoDB 逻辑存储结构：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84_20220316030616590001.png" alt="InnoDB逻辑存储结构" title="InnoDB逻辑存储结构"></p><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>MyISAM 是 MySQL 早期的默认存储引擎。</p><p>特点：</p><ul><li>不支持事务，不支持外键</li><li>支持表锁，不支持行锁</li><li>访问速度快</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li><li>xxx.MYD: 存储数据</li><li>xxx.MYI: 存储索引</li></ul><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><p>Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。</p><p>特点：</p><ul><li>存放在内存中，速度快</li><li>hash索引（默认）</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li></ul><h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><table><thead><tr><th>特点</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>存储限制</td><td>64TB</td><td>有</td><td>有</td></tr><tr><td>事务安全</td><td>支持</td><td>-</td><td>-</td></tr><tr><td>锁机制</td><td>行锁</td><td>表锁</td><td>表锁</td></tr><tr><td>B+tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>-</td><td>-</td><td>支持</td></tr><tr><td>全文索引</td><td>支持（5.6版本之后）</td><td>支持</td><td>-</td></tr><tr><td>空间使用</td><td>高</td><td>低</td><td>N/A</td></tr><tr><td>内存使用</td><td>高</td><td>低</td><td>中等</td></tr><tr><td>批量插入速度</td><td>低</td><td>高</td><td>高</td></tr><tr><td>支持外键</td><td>支持</td><td>-</td><td>-</td></tr></tbody></table><h3 id="存储引擎的选择"><a href="#存储引擎的选择" class="headerlink" title="存储引擎的选择"></a>存储引擎的选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p><ul><li>InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择</li><li>MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。</li><li>Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</li></ul><p>电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><h3 id="查看执行频次"><a href="#查看执行频次" class="headerlink" title="查看执行频次"></a>查看执行频次</h3><p>查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：<br><code>SHOW GLOBAL STATUS LIKE &#39;Com_______&#39;;</code> 或者 <code>SHOW SESSION STATUS LIKE &#39;Com_______&#39;;</code><br>例：<code>show global status like &#39;Com_______&#39;</code></p><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10秒）的所有SQL语句的日志。<br>MySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：<br>    # 开启慢查询日志开关<br>    slow_query_log=1<br>    # 设置慢查询日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志<br>    long_query_time=2<br>更改后记得重启MySQL服务，日志文件位置：/var/lib/mysql/localhost-slow.log</p><p>查看慢查询日志开关状态：<br><code>show variables like &#39;slow_query_log&#39;;</code></p><h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><p>show profile 能在做SQL优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：<br><code>SELECT @@have_profiling;</code><br>profiling 默认关闭，可以通过set语句在session/global级别开启 profiling：<br><code>SET profiling = 1;</code><br>查看所有语句的耗时：<br><code>show profiles;</code><br>查看指定query_id的SQL语句各个阶段的耗时：<br><code>show profile for query query_id;</code><br>查看指定query_id的SQL语句CPU的使用情况<br><code>show profile cpu for query query_id;</code></p><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><p>EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。<br>语法：<br>    # 直接在select语句之前加上关键字 explain / desc<br>    EXPLAIN SELECT 字段列表 FROM 表名 HWERE 条件;</p><p>EXPLAIN 各字段含义：</p><ul><li>id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id相同，执行顺序从上到下；id不同，值越大越先执行）</li><li>select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION中的第二个或者后面的查询语句）、SUBQUERY（SELECT/WHERE之后包含了子查询）等</li><li>type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all</li><li>possible_key：可能应用在这张表上的索引，一个或多个</li><li>Key：实际使用的索引，如果为 NULL，则没有使用索引</li><li>Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好</li><li>rows：MySQL认为必须要执行的行数，在InnoDB引擎的表中，是一个估计值，可能并不总是准确的</li><li>filtered：表示返回结果的行数占需读取行数的百分比，filtered的值越大越好</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>索引是帮助 MySQL <strong>高效获取数据</strong>的<strong>数据结构（有序）</strong>。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。</p><p>优缺点：</p><p>优点：</p><ul><li>提高数据检索效率，降低数据库的IO成本</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</li></ul><p>缺点：</p><ul><li>索引列也是要占用空间的</li><li>索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE</li></ul><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td>B+Tree</td><td>最常见的索引类型，大部分引擎都支持B+树索引</td></tr><tr><td>Hash</td><td>底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R-Tree(空间索引)</td><td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-Text(全文索引)</td><td>是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES</td></tr></tbody></table><table><thead><tr><th>索引</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>B+Tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>R-Tree索引</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>Full-text</td><td>5.6版本后支持</td><td>支持</td><td>不支持</td></tr></tbody></table><h4 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h4><p><img src="https://dhc.pythonanywhere.com/media/editor/%E4%BA%8C%E5%8F%89%E6%A0%91_20220316153214227108.png" alt="二叉树" title="二叉树"></p><p>二叉树的缺点可以用红黑树来解决：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BA%A2%E9%BB%91%E6%A0%91_20220316163142686602.png" alt="红黑树" title="红黑树"><br>红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。</p><p>为了解决上述问题，可以使用 B-Tree 结构。<br>B-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为5（5阶）的 b-tree 为例（每个节点最多存储4个key，5个指针）</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B-Tree%E7%BB%93%E6%9E%84_20220316163813441163.png" alt="B-Tree结构" title="B-Tree结构"></p><blockquote><p>B-Tree 的数据插入过程动画参照：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68</a><br>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BTree.html">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></p></blockquote><h4 id="B-Tree-1"><a href="#B-Tree-1" class="headerlink" title="B+Tree"></a>B+Tree</h4><p>结构图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B+Tree%E7%BB%93%E6%9E%84%E5%9B%BE_20220316170700591277.png" alt="B+Tree结构图" title="B+Tree结构图"></p><blockquote><p>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</a></p></blockquote><p>与 B-Tree 的区别：</p><ul><li>所有的数据都会出现在叶子节点</li><li>叶子节点形成一个单向链表</li></ul><p>MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BB%93%E6%9E%84%E5%9B%BE_20220316171730865611.png" alt="MySQL B+Tree 结构图" title="MySQL B+Tree 结构图"></p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><p>哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。<br>如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞），可以通过链表来解决。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/Hash%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%9B%BE_20220317143226150679.png" alt="Hash索引原理图" title="Hash索引原理图"></p><p>特点：</p><ul><li>Hash索引只能用于对等比较（=、in），不支持范围查询（betwwn、&gt;、&lt;、…）</li><li>无法利用索引完成排序操作</li><li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引</li></ul><p>存储引擎支持：</p><ul><li>Memory</li><li>InnoDB: 具有自适应hash功能，hash索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的</li></ul><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><ol><li>为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？</li></ol><ul><li>相对于二叉树，层级更少，搜索效率高</li><li>对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低</li><li>相对于 Hash 索引，B+Tree 支持范围匹配及排序操作</li></ul><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><table><thead><tr><th>分类</th><th>含义</th><th>特点</th><th>关键字</th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建，只能有一个</td><td>PRIMARY</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>UNIQUE</td></tr><tr><td>常规索引</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td><td>可以有多个</td><td>FULLTEXT</td></tr></tbody></table><p>在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：</p><table><thead><tr><th>分类</th><th>含义</th><th>特点</th></tr></thead><tbody><tr><td>聚集索引(Clustered Index)</td><td>将数据存储与索引放一块，索引结构的叶子节点保存了行数据</td><td>必须有，而且只有一个</td></tr><tr><td>二级索引(Secondary Index)</td><td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table><p>演示图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/%E5%8E%9F%E7%90%86%E5%9B%BE_20220318194454880073.png" alt="大致原理" title="大致原理"><br><img src="https://dhc.pythonanywhere.com/media/editor/%E6%BC%94%E7%A4%BA%E5%9B%BE_20220319215403721066.png" alt="演示图" title="演示图"></p><p>聚集索引选取规则：</p><ul><li>如果存在主键，主键索引就是聚集索引</li><li>如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引</li><li>如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引</li></ul><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p>1. 以下 SQL 语句，哪个执行效率高？为什么？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from user where id = 10;<br>select * from user where name = &#x27;Arm&#x27;;<br>-- 备注：id为主键，name字段创建的有索引<br></code></pre></td></tr></table></figure><p>答：第一条语句，因为第二条需要回表查询，相当于两个步骤。</p><p>2. InnoDB 主键索引的 B+Tree 高度为多少？</p><p>答：假设一行数据大小为1k，一页中可以存储16行这样的数据。InnoDB 的指针占用6个字节的空间，主键假设为bigint，占用字节数为8.<br>可得公式：<code>n * 8 + (n + 1) * 6 = 16 * 1024</code>，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的key的数量，(n + 1) 表示指针数量（比key多一个）。算出n约为1170。</p><p>如果树的高度为2，那么他能存储的数据量大概为：<code>1171 * 16 = 18736</code>；<br>如果树的高度为3，那么他能存储的数据量大概为：<code>1171 * 1171 * 16 = 21939856</code>。</p><p>另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>创建索引：<br><code>CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);</code><br>如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引</p><p>查看索引：<br><code>SHOW INDEX FROM table_name;</code></p><p>删除索引：<br><code>DROP INDEX index_name ON table_name;</code></p><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引<br>create index idx_user_name on tb_user(name);<br>-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引<br>create unique index idx_user_phone on tb_user (phone);<br>-- 为profession, age, status创建联合索引<br>create index idx_user_pro_age_stat on tb_user(profession, age, status);<br>-- 为email建立合适的索引来提升查询效率<br>create index idx_user_email on tb_user(email);<br><br>-- 删除索引<br>drop index idx_user_email on tb_user;<br></code></pre></td></tr></table></figure><h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h4><p>如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br>如果跳跃某一列，索引将部分失效（后面的字段索引失效）。</p><p>联合索引中，出现范围查询（&lt;, &gt;），范围查询右侧的列索引失效。可以用&gt;=或者&lt;=来规避索引失效问题。</p><h4 id="索引失效情况"><a href="#索引失效情况" class="headerlink" title="索引失效情况"></a>索引失效情况</h4><ol><li>在索引列上进行运算操作，索引将失效。如：<code>explain select * from tb_user where substring(phone, 10, 2) = &#39;15&#39;;</code></li><li>字符串类型字段使用时，不加引号，索引将失效。如：<code>explain select * from tb_user where phone = 17799990015;</code>，此处phone的值没有加引号</li><li>模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如：<code>explain select * from tb_user where profession like &#39;%工程&#39;;</code>，前后都有 % 也会失效。</li><li>用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。</li><li>如果 MySQL 评估使用索引比全表更慢，则不使用索引。</li></ol><h4 id="SQL-提示"><a href="#SQL-提示" class="headerlink" title="SQL 提示"></a>SQL 提示</h4><p>是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。</p><p>例如，使用索引：<br><code>explain select * from tb_user use index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>不使用哪个索引：<br><code>explain select * from tb_user ignore index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>必须使用哪个索引：<br><code>explain select * from tb_user force index(idx_user_pro) where profession=&quot;软件工程&quot;;</code></p><p>use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force就是无论如何都强制使用该索引。</p><h4 id="覆盖索引-amp-回表查询"><a href="#覆盖索引-amp-回表查询" class="headerlink" title="覆盖索引&amp;回表查询"></a>覆盖索引&amp;回表查询</h4><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。</p><p>explain 中 extra 字段含义：<br><code>using index condition</code>：查找使用了索引，但是需要回表查询数据<br><code>using where; using index;</code>：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询</p><p>如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是select *；如果在辅助索引中找聚集索引，如<code>select id, name from xxx where name=&#39;xxx&#39;;</code>，也只需要通过辅助索引(name)查找到对应的id，返回name和name索引对应的id即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如<code>select id, name, gender from xxx where name=&#39;xxx&#39;;</code></p><p>所以尽量不要用<code>select *</code>，容易出现回表查询，降低效率，除非有联合索引包含了所有字段</p><p>面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下SQL语句进行优化，该如何进行才是最优方案：<br><code>select id, username, password from tb_user where username=&#39;itcast&#39;;</code></p><p>解：给username和password字段建立联合索引，则不需要回表查询，直接覆盖索引</p><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>当字段类型为字符串（varchar, text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p><p>语法：<code>create index idx_xxxx on table_name(columnn(n));</code><br>前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。<br>求选择性公式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(distinct email) / count(*) from tb_user;<br>select count(distinct substring(email, 1, 5)) / count(*) from tb_user;<br></code></pre></td></tr></table></figure><p>show index 里面的sub_part可以看到接取的长度</p><h4 id="单列索引-amp-联合索引"><a href="#单列索引-amp-联合索引" class="headerlink" title="单列索引&amp;联合索引"></a>单列索引&amp;联合索引</h4><p>单列索引：即一个索引只包含单个列<br>联合索引：即一个索引包含了多个列<br>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p><p>单列索引情况：<br><code>explain select id, phone, name from tb_user where phone = &#39;17799990010&#39; and name = &#39;韩信&#39;;</code><br>这句只会用到phone索引字段</p><h5 id="注意事项-8"><a href="#注意事项-8" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</li></ul><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ol><li>针对于数据量较大，且查询比较频繁的表建立索引</li><li>针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引</li><li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li><li>如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引</li><li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li><li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li><li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询</li></ol><h2 id="SQL-优化"><a href="#SQL-优化" class="headerlink" title="SQL 优化"></a>SQL 优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>普通插入：</p><ol><li>采用批量插入（一次插入的数据不建议超过1000条）</li><li>手动提交事务</li><li>主键顺序插入</li></ol><p>大批量插入：<br>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令插入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）<br>mysql --local-infile -u root -p<br># 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关<br>set global local_infile = 1;<br>select @@local_infile;<br># 执行load指令将准备好的数据，加载到表结构中<br>load data local infile &#x27;/root/sql1.log&#x27; into table &#x27;tb_user&#x27; fields terminated by &#x27;,&#x27; lines terminated by &#x27;\n&#x27;;<br></code></pre></td></tr></table></figure><h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><p>数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）</p><p>页分裂：页可以为空，也可以填充一般，也可以填充100%，每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列。<br>页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。</p><p>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定</p><blockquote><p>文字说明不够清晰明了，具体可以看视频里的PPT演示过程：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90</a></p></blockquote><p>主键设计原则：</p><ul><li>满足业务需求的情况下，尽量降低主键的长度</li><li>插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键</li><li>尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号</li><li>业务操作时，避免对主键的修改</li></ul><h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><ol><li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序</li><li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高</li></ol><p>如果order by字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain的extra信息显示的是<code>Using index, Using filesort</code>，如果要优化掉Using filesort，则需要另外再创建一个索引，如：<code>create index idx_user_age_phone_ad on tb_user(age asc, phone desc);</code>，此时使用<code>select id, age, phone from tb_user order by age asc, phone desc;</code>会全部走索引</p><p>总结：</p><ul><li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li><li>尽量使用覆盖索引</li><li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）</li><li>如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认256k）</li></ul><h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><ul><li>在分组操作时，可以通过索引来提高效率</li><li>分组操作时，索引的使用也是满足最左前缀法则的</li></ul><p>如索引为<code>idx_user_pro_age_stat</code>，则句式可以是<code>select ... where profession order by age</code>，这样也符合最左前缀法则</p><h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p>常见的问题如<code>limit 2000000, 10</code>，此时需要 MySQL 排序前2000000条记录，但仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。<br>优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 此语句耗时很长<br>select * from tb_sku limit 9000000, 10;<br>-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询<br>select id from tb_sku order by id limit 9000000, 10;<br>-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit<br>-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);<br>-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度<br>select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;<br></code></pre></td></tr></table></figure><h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（前提是不适用where）；<br>InnoDB 在执行 count(*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。<br>优化方案：自己计数，如创建key-value表存储在内存或硬盘，或者是用redis</p><p>count的几种用法：</p><ul><li>如果count函数的参数（count里面写的那个字段）不是NULL（字段值不为NULL），累计值就加一，最后返回累计值</li><li>用法：count(*)、count(主键)、count(字段)、count(1)</li><li>count(主键)跟count(*)一样，因为主键不能为空；count(字段)只计算字段值不为NULL的行；count(1)引擎会为每行添加一个1，然后就count这个1，返回结果也跟count(*)一样；count(null)返回0</li></ul><p>各种用法的性能：</p><ul><li>count(主键)：InnoDB引擎会遍历整张表，把每行的主键id值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）</li><li>count(字段)：没有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加</li><li>count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加</li><li>count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</li></ul><p>按效率排序：count(字段) &lt; count(主键) &lt; count(1) &lt; count(*)，所以尽量使用 count(*)</p><h3 id="update优化（避免行锁升级为表锁）"><a href="#update优化（避免行锁升级为表锁）" class="headerlink" title="update优化（避免行锁升级为表锁）"></a>update优化（避免行锁升级为表锁）</h3><p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p><p>如以下两条语句：<br><code>update student set no = &#39;123&#39; where id = 1;</code>，这句由于id有主键索引，所以只会锁这一行；<br><code>update student set no = &#39;123&#39; where name = &#39;test&#39;;</code>，这句由于name没有索引，所以会把整张表都锁住进行数据更新，解决方法是给name字段添加索引</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><table><thead><tr><th>类型名称</th><th>取值范围</th><th>大小</th></tr></thead><tbody><tr><td>TINYINT</td><td>-128〜127</td><td>1个字节</td></tr><tr><td>SMALLINT</td><td>-32768〜32767</td><td>2个宇节</td></tr><tr><td>MEDIUMINT</td><td>-8388608〜8388607</td><td>3个字节</td></tr><tr><td>INT (INTEGHR)</td><td>-2147483648〜2147483647</td><td>4个字节</td></tr><tr><td>BIGINT</td><td>-9223372036854775808〜9223372036854775807</td><td>8个字节</td></tr></tbody></table><p>无符号在数据类型后加 unsigned 关键字。</p><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>FLOAT</td><td>单精度浮点数</td><td>4 个字节</td></tr><tr><td>DOUBLE</td><td>双精度浮点数</td><td>8 个字节</td></tr><tr><td>DECIMAL (M, D)，DEC</td><td>压缩的“严格”定点数</td><td>M+2 个字节</td></tr></tbody></table><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td><td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td><td>4 个字节</td></tr></tbody></table><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>CHAR(M)</td><td>固定长度非二进制字符串</td><td>M 字节，1&lt;=M&lt;=255</td></tr><tr><td>VARCHAR(M)</td><td>变长非二进制字符串</td><td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td></tr><tr><td>TINYTEXT</td><td>非常小的非二进制字符串</td><td>L+1字节，在此，L&lt;2^8</td></tr><tr><td>TEXT</td><td>小的非二进制字符串</td><td>L+2字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMTEXT</td><td>中等大小的非二进制字符串</td><td>L+3字节，在此，L&lt;2^24</td></tr><tr><td>LONGTEXT</td><td>大的非二进制字符串</td><td>L+4字节，在此，L&lt;2^32</td></tr><tr><td>ENUM</td><td>枚举类型，只能有一个枚举字符串值</td><td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td></tr><tr><td>SET</td><td>一个设置，字符串对象可以有零个或 多个SET成员</td><td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td></tr></tbody></table><h2 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>BIT(M)</td><td>位字段类型</td><td>大约 (M+7)/8 字节</td></tr><tr><td>BINARY(M)</td><td>固定长度二进制字符串</td><td>M 字节</td></tr><tr><td>VARBINARY (M)</td><td>可变长度二进制字符串</td><td>M+1 字节</td></tr><tr><td>TINYBLOB (M)</td><td>非常小的BLOB</td><td>L+1 字节，在此，L&lt;2^8</td></tr><tr><td>BLOB (M)</td><td>小 BLOB</td><td>L+2 字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMBLOB (M)</td><td>中等大小的BLOB</td><td>L+3 字节，在此，L&lt;2^24</td></tr><tr><td>LONGBLOB (M)</td><td>非常大的BLOB</td><td>L+4 字节，在此，L&lt;2^32</td></tr></tbody></table><h1 id="权限一览表"><a href="#权限一览表" class="headerlink" title="权限一览表"></a>权限一览表</h1><blockquote><p>具体权限的作用详见<a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html" title="官方文档">官方文档</a></p></blockquote><p>GRANT 和 REVOKE 允许的静态权限</p><table><thead><tr><th align="left">Privilege</th><th align="left">Grant Table Column</th><th align="left">Context</th></tr></thead><tbody><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all"><code>ALL [PRIVILEGES]</code></a></td><td align="left">Synonym for “all privileges”</td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter"><code>ALTER</code></a></td><td align="left"><code>Alter_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine"><code>ALTER ROUTINE</code></a></td><td align="left"><code>Alter_routine_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create"><code>CREATE</code></a></td><td align="left"><code>Create_priv</code></td><td align="left">Databases, tables, or indexes</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role"><code>CREATE ROLE</code></a></td><td align="left"><code>Create_role_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine"><code>CREATE ROUTINE</code></a></td><td align="left"><code>Create_routine_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace"><code>CREATE TABLESPACE</code></a></td><td align="left"><code>Create_tablespace_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables"><code>CREATE TEMPORARY TABLES</code></a></td><td align="left"><code>Create_tmp_table_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user"><code>CREATE USER</code></a></td><td align="left"><code>Create_user_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view"><code>CREATE VIEW</code></a></td><td align="left"><code>Create_view_priv</code></td><td align="left">Views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete"><code>DELETE</code></a></td><td align="left"><code>Delete_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop"><code>DROP</code></a></td><td align="left"><code>Drop_priv</code></td><td align="left">Databases, tables, or views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role"><code>DROP ROLE</code></a></td><td align="left"><code>Drop_role_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event"><code>EVENT</code></a></td><td align="left"><code>Event_priv</code></td><td align="left">Databases</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute"><code>EXECUTE</code></a></td><td align="left"><code>Execute_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file"><code>FILE</code></a></td><td align="left"><code>File_priv</code></td><td align="left">File access on server host</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option"><code>GRANT OPTION</code></a></td><td align="left"><code>Grant_priv</code></td><td align="left">Databases, tables, or stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index"><code>INDEX</code></a></td><td align="left"><code>Index_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert"><code>INSERT</code></a></td><td align="left"><code>Insert_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables"><code>LOCK TABLES</code></a></td><td align="left"><code>Lock_tables_priv</code></td><td align="left">Databases</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process"><code>PROCESS</code></a></td><td align="left"><code>Process_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy"><code>PROXY</code></a></td><td align="left">See <code>proxies_priv</code> table</td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references"><code>REFERENCES</code></a></td><td align="left"><code>References_priv</code></td><td align="left">Databases or tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload"><code>RELOAD</code></a></td><td align="left"><code>Reload_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client"><code>REPLICATION CLIENT</code></a></td><td align="left"><code>Repl_client_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave"><code>REPLICATION SLAVE</code></a></td><td align="left"><code>Repl_slave_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select"><code>SELECT</code></a></td><td align="left"><code>Select_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases"><code>SHOW DATABASES</code></a></td><td align="left"><code>Show_db_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view"><code>SHOW VIEW</code></a></td><td align="left"><code>Show_view_priv</code></td><td align="left">Views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown"><code>SHUTDOWN</code></a></td><td align="left"><code>Shutdown_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super"><code>SUPER</code></a></td><td align="left"><code>Super_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger"><code>TRIGGER</code></a></td><td align="left"><code>Trigger_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update"><code>UPDATE</code></a></td><td align="left"><code>Update_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage"><code>USAGE</code></a></td><td align="left">Synonym for “no privileges”</td><td align="left">Server administration</td></tr></tbody></table><p>GRANT 和 REVOKE 允许的动态权限</p><table><thead><tr><th align="left">Privilege</th><th align="left">Context</th></tr></thead><tbody><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin"><code>APPLICATION_PASSWORD_ADMIN</code></a></td><td align="left">Dual password administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt"><code>AUDIT_ABORT_EXEMPT</code></a></td><td align="left">Allow queries blocked by audit log filter</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin"><code>AUDIT_ADMIN</code></a></td><td align="left">Audit log administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin"><code>AUTHENTICATION_POLICY_ADMIN</code></a></td><td align="left">Authentication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin"><code>BACKUP_ADMIN</code></a></td><td align="left">Backup administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin"><code>BINLOG_ADMIN</code></a></td><td align="left">Backup and Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin"><code>BINLOG_ENCRYPTION_ADMIN</code></a></td><td align="left">Backup and Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin"><code>CLONE_ADMIN</code></a></td><td align="left">Clone administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin"><code>CONNECTION_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin"><code>ENCRYPTION_KEY_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin"><code>FIREWALL_ADMIN</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt"><code>FIREWALL_EXEMPT</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user"><code>FIREWALL_USER</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs"><code>FLUSH_OPTIMIZER_COSTS</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status"><code>FLUSH_STATUS</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables"><code>FLUSH_TABLES</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources"><code>FLUSH_USER_RESOURCES</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin"><code>GROUP_REPLICATION_ADMIN</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream"><code>GROUP_REPLICATION_STREAM</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive"><code>INNODB_REDO_LOG_ARCHIVE</code></a></td><td align="left">Redo log archiving administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user"><code>NDB_STORED_USER</code></a></td><td align="left">NDB Cluster</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin"><code>PASSWORDLESS_USER_ADMIN</code></a></td><td align="left">Authentication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin"><code>PERSIST_RO_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier"><code>REPLICATION_APPLIER</code></a></td><td align="left"><code>PRIVILEGE_CHECKS_USER</code> for a replication channel</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin"><code>REPLICATION_SLAVE_ADMIN</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin"><code>RESOURCE_GROUP_ADMIN</code></a></td><td align="left">Resource group administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user"><code>RESOURCE_GROUP_USER</code></a></td><td align="left">Resource group administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin"><code>ROLE_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin"><code>SESSION_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id"><code>SET_USER_ID</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine"><code>SHOW_ROUTINE</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user"><code>SYSTEM_USER</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin"><code>SYSTEM_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin"><code>TABLE_ENCRYPTION_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin"><code>VERSION_TOKEN_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin"><code>XA_RECOVER_ADMIN</code></a></td><td align="left">Server administration</td></tr></tbody></table><h1 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h1><ul><li>Workbench(免费): <a href="http://dev.mysql.com/downloads/workbench/">http://dev.mysql.com/downloads/workbench/</a></li><li>navicat(收费，试用版30天): <a href="https://www.navicat.com/en/download/navicat-for-mysql">https://www.navicat.com/en/download/navicat-for-mysql</a></li><li>Sequel Pro(开源免费，仅支持Mac OS): <a href="http://www.sequelpro.com/">http://www.sequelpro.com/</a></li><li>HeidiSQL(免费): <a href="http://www.heidisql.com/">http://www.heidisql.com/</a></li><li>phpMyAdmin(免费): <a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net/</a></li><li>SQLyog: <a href="https://sqlyog.en.softonic.com/">https://sqlyog.en.softonic.com/</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><ol><li>在SQL语句之后加上<code>\G</code>会将结果的表格形式转换成行文本形式</li><li>查看Mysql数据库占用空间：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT table_schema &quot;Database Name&quot;<br>     , SUM(data_length + index_length) / (1024 * 1024) &quot;Database Size in MB&quot;<br>FROM information_schema.TABLES<br>GROUP BY table_schema;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏打包</title>
    <link href="/blog/2023/03/19/%E6%B8%B8%E6%88%8F%E6%89%93%E5%8C%85/"/>
    <url>/blog/2023/03/19/%E6%B8%B8%E6%88%8F%E6%89%93%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<ul><li><h3 id=""><a href="#" class="headerlink" title=""></a><!--本文内容均转载自黑马程序员-阿玮老师的游戏打包教程--></h3></li></ul><h1 id="主要实现步骤"><a href="#主要实现步骤" class="headerlink" title="主要实现步骤"></a>主要实现步骤</h1><ul><li><h5 id="将代码打包成jar包"><a href="#将代码打包成jar包" class="headerlink" title="将代码打包成jar包"></a>将代码打包成jar包</h5></li><li><h5 id="整合资源文件"><a href="#整合资源文件" class="headerlink" title="整合资源文件"></a>整合资源文件</h5></li><li><h5 id="将jar包打包成exe"><a href="#将jar包打包成exe" class="headerlink" title="将jar包打包成exe"></a>将jar包打包成exe</h5></li><li><h5 id="将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。"><a href="#将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。" class="headerlink" title="将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。"></a>将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。</h5></li></ul><h1 id="准备软件"><a href="#准备软件" class="headerlink" title="准备软件"></a>准备软件</h1><ul><li><h5 id="Idea：将代码打包成jar包（java形式的压缩包）"><a href="#Idea：将代码打包成jar包（java形式的压缩包）" class="headerlink" title="Idea：将代码打包成jar包（java形式的压缩包）"></a>Idea：将代码打包成jar包（java形式的压缩包）</h5></li><li><h5 id="exe4j：将jar包转换成exe的工具。"><a href="#exe4j：将jar包转换成exe的工具。" class="headerlink" title="exe4j：将jar包转换成exe的工具。"></a>exe4j：将jar包转换成exe的工具。</h5></li><li><h5 id="innosetup：将游戏用到的图片，Java的运行环境和第二步打包的代码，组合成最终的安装程序。"><a href="#innosetup：将游戏用到的图片，Java的运行环境和第二步打包的代码，组合成最终的安装程序。" class="headerlink" title="innosetup：将游戏用到的图片，Java的运行环境和第二步打包的代码，组合成最终的安装程序。"></a>innosetup：将游戏用到的图片，Java的运行环境和第二步打包的代码，组合成最终的安装程序。</h5></li><li><p><strong>备注1：</strong>exe4j和innosetup安装非常简单，傻瓜式下一步即可。</p></li><li><p><strong>备注2：</strong>exe4j支持的JDK版本是8~11，其他版本的JDK不行，所以我也给大家提供了JDK11版本。</p></li><li><p><strong>备注3：</strong>64位的操作系统用exe4j_windows-x64_6_0_2.exe    32位的操作系统用exe4j_windows_6_0_2.exe</p></li><li><p><strong>备注4：</strong>打开我的电脑，右键空白处，点击属性，在弹出界面的中央就能查看自己电脑是64位的还是32位的。</p></li></ul><h1 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h1><ul><li><h5 id="jdk-下载安装"><a href="#jdk-下载安装" class="headerlink" title="jdk 下载安装 "></a>jdk 下载安装 <a href="https://www.oracle.com/java/technologies/downloads/#java11-windows"></a></h5></li><li><h5 id="exe4j-链接：https-pan-baidu-com-s-1LS4VhUFfj5Hcl3qLeCg8kA-提取码：ZSZS"><a href="#exe4j-链接：https-pan-baidu-com-s-1LS4VhUFfj5Hcl3qLeCg8kA-提取码：ZSZS" class="headerlink" title="exe4j 链接：https://pan.baidu.com/s/1LS4VhUFfj5Hcl3qLeCg8kA  提取码：ZSZS"></a>exe4j 链接：<a href="https://pan.baidu.com/s/1LS4VhUFfj5Hcl3qLeCg8kA">https://pan.baidu.com/s/1LS4VhUFfj5Hcl3qLeCg8kA</a>  提取码：ZSZS</h5></li><li><h5 id="innosetup-链接：https-pan-baidu-com-s-1zo29xYryY3oiY4x3naGtRQ-pwd-ibu0-提取码：ibu0"><a href="#innosetup-链接：https-pan-baidu-com-s-1zo29xYryY3oiY4x3naGtRQ-pwd-ibu0-提取码：ibu0" class="headerlink" title="innosetup 链接：https://pan.baidu.com/s/1zo29xYryY3oiY4x3naGtRQ?pwd=ibu0  提取码：ibu0"></a>innosetup 链接：<a href="https://pan.baidu.com/s/1zo29xYryY3oiY4x3naGtRQ?pwd=ibu0">https://pan.baidu.com/s/1zo29xYryY3oiY4x3naGtRQ?pwd=ibu0</a>  提取码：ibu0</h5></li></ul><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ul><li><h5 id="确保idea已经安装完毕"><a href="#确保idea已经安装完毕" class="headerlink" title="确保idea已经安装完毕"></a>确保idea已经安装完毕</h5></li><li><h5 id="安装exe4j"><a href="#安装exe4j" class="headerlink" title="安装exe4j"></a>安装exe4j</h5></li><li><h5 id="安装innosetup"><a href="#安装innosetup" class="headerlink" title="安装innosetup"></a>安装innosetup</h5></li><li><h5 id="傻瓜式安装，直接下一步即可，但是要记住安装路径。"><a href="#傻瓜式安装，直接下一步即可，但是要记住安装路径。" class="headerlink" title="傻瓜式安装，直接下一步即可，但是要记住安装路径。"></a>傻瓜式安装，直接下一步即可，但是要记住安装路径。</h5></li></ul><h1 id="代码改写："><a href="#代码改写：" class="headerlink" title="代码改写："></a>代码改写：</h1><ul><li><h5 id="代码中所有图片用到的路径需要把模块名删除，改写之后如下："><a href="#代码中所有图片用到的路径需要把模块名删除，改写之后如下：" class="headerlink" title="代码中所有图片用到的路径需要把模块名删除，改写之后如下："></a>代码中所有图片用到的路径需要把模块名删除，改写之后如下：</h5></li><li><h5 id="在不同的情况下，相对路径的相对位置是不一样的。"><a href="#在不同的情况下，相对路径的相对位置是不一样的。" class="headerlink" title="在不同的情况下，相对路径的相对位置是不一样的。"></a>在不同的情况下，相对路径的相对位置是不一样的。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image002.jpg" alt="img"></p><h1 id="打包步骤："><a href="#打包步骤：" class="headerlink" title="打包步骤："></a>打包步骤：</h1><h2 id="代码打包成jar包"><a href="#代码打包成jar包" class="headerlink" title="代码打包成jar包"></a>代码打包成jar包</h2><ul><li><h5 id="点击File，再点Project-Structure。"><a href="#点击File，再点Project-Structure。" class="headerlink" title="点击File，再点Project Structure。"></a>点击File，再点Project Structure。</h5></li><li><h5 id="点击Artifaces。"><a href="#点击Artifaces。" class="headerlink" title="点击Artifaces。"></a>点击Artifaces。</h5></li><li><h5 id="下方图片箭头指向位置应为空白，如果有其他内容，可以选中之后，点击减号删除。"><a href="#下方图片箭头指向位置应为空白，如果有其他内容，可以选中之后，点击减号删除。" class="headerlink" title="下方图片箭头指向位置应为空白，如果有其他内容，可以选中之后，点击减号删除。"></a>下方图片箭头指向位置应为空白，如果有其他内容，可以选中之后，点击减号删除。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image003.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="选中左侧的Artifacts-，"><a href="#选中左侧的Artifacts-，" class="headerlink" title="选中左侧的Artifacts ，"></a>选中左侧的Artifacts ，</h5></li><li><h5 id="点击中间上方位置的"><a href="#点击中间上方位置的" class="headerlink" title="点击中间上方位置的+"></a>点击中间上方位置的+</h5></li><li><h5 id="点击JAR"><a href="#点击JAR" class="headerlink" title="点击JAR"></a>点击JAR</h5></li><li><h5 id="点击From-modules-with-dependencies…"><a href="#点击From-modules-with-dependencies…" class="headerlink" title="点击From modules with dependencies…"></a>点击From modules with dependencies…</h5></li><li><h5 id="如下图所示："><a href="#如下图所示：" class="headerlink" title="如下图所示："></a>如下图所示：</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image004.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="Module：选择要打包的项目。"><a href="#Module：选择要打包的项目。" class="headerlink" title="Module：选择要打包的项目。"></a>Module：选择要打包的项目。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image005.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="Main-Class：点击红框最后的那个小图标，项目中是哪个main方法所在的类去启动项目，这里就选择哪个类。我的项目是由app里面的main方法启动的，所以我就选择App"><a href="#Main-Class：点击红框最后的那个小图标，项目中是哪个main方法所在的类去启动项目，这里就选择哪个类。我的项目是由app里面的main方法启动的，所以我就选择App" class="headerlink" title="Main Class：点击红框最后的那个小图标，项目中是哪个main方法所在的类去启动项目，这里就选择哪个类。我的项目是由app里面的main方法启动的，所以我就选择App"></a>Main Class：点击红框最后的那个小图标，项目中是哪个main方法所在的类去启动项目，这里就选择哪个类。我的项目是由app里面的main方法启动的，所以我就选择App</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image006.png" alt="img" style="zoom: 150%;" /><ul><li><h5 id="设置-META-INF-MANIFEST-MF。"><a href="#设置-META-INF-MANIFEST-MF。" class="headerlink" title="设置 META-INF/MANIFEST.MF。"></a>设置 META-INF/MANIFEST.MF。</h5></li><li><h5 id="点击箭头指向的图标进行设置。"><a href="#点击箭头指向的图标进行设置。" class="headerlink" title="点击箭头指向的图标进行设置。"></a>点击箭头指向的图标进行设置。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image007.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="选择当前模块"><a href="#选择当前模块" class="headerlink" title="选择当前模块"></a>选择当前模块</h5></li><li><h5 id="点击OK"><a href="#点击OK" class="headerlink" title="点击OK"></a>点击OK</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image008.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="此时这里的路径就是模块所在路径，点击OK。"><a href="#此时这里的路径就是模块所在路径，点击OK。" class="headerlink" title="此时这里的路径就是模块所在路径，点击OK。"></a>此时这里的路径就是模块所在路径，点击OK。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image009.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="如果没有弹框报错，第十步可以跳过，直接看十一步。"><a href="#如果没有弹框报错，第十步可以跳过，直接看十一步。" class="headerlink" title="如果没有弹框报错，第十步可以跳过，直接看十一步。"></a>如果没有弹框报错，第十步可以跳过，直接看十一步。</h5></li><li><h5 id="如果出现弹框报错，表示当前模块下已存在META-INF文件夹了。可以在本地找到已存在的META-INF文件夹，右键点击DELETE删除即可。"><a href="#如果出现弹框报错，表示当前模块下已存在META-INF文件夹了。可以在本地找到已存在的META-INF文件夹，右键点击DELETE删除即可。" class="headerlink" title="如果出现弹框报错，表示当前模块下已存在META-INF文件夹了。可以在本地找到已存在的META-INF文件夹，右键点击DELETE删除即可。"></a>如果出现弹框报错，表示当前模块下已存在META-INF文件夹了。可以在本地找到已存在的META-INF文件夹，右键点击DELETE删除即可。</h5></li><li><h5 id="查找方式如下："><a href="#查找方式如下：" class="headerlink" title="查找方式如下："></a>查找方式如下：</h5></li><li><h5 id="右键模块点击open-in"><a href="#右键模块点击open-in" class="headerlink" title="右键模块点击open in"></a>右键模块点击open in</h5></li><li><h5 id="点击Explorer"><a href="#点击Explorer" class="headerlink" title="点击Explorer"></a>点击Explorer</h5></li><li><h5 id="在模块里面找到META-INF文件删除即可。"><a href="#在模块里面找到META-INF文件删除即可。" class="headerlink" title="在模块里面找到META-INF文件删除即可。"></a>在模块里面找到META-INF文件删除即可。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image011.jpg" alt="img"></p><ul><li><h5 id="如果没有报错，就出现一个puzzlegame：jar的提示。"><a href="#如果没有报错，就出现一个puzzlegame：jar的提示。" class="headerlink" title="如果没有报错，就出现一个puzzlegame：jar的提示。"></a>如果没有报错，就出现一个puzzlegame：jar的提示。</h5></li><li><h5 id="点击右下角的OK。"><a href="#点击右下角的OK。" class="headerlink" title="点击右下角的OK。"></a>点击右下角的OK。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image013.jpg" alt="img"></p><ul><li><h5 id="在idea主界面上方，点击Build里面的Build-Artifacts。"><a href="#在idea主界面上方，点击Build里面的Build-Artifacts。" class="headerlink" title="在idea主界面上方，点击Build里面的Build Artifacts。"></a>在idea主界面上方，点击Build里面的Build Artifacts。</h5></li><li><h5 id="如果是灰色的不能按，请确定在上面第一步-第九步有没有配置好jar包的信息。"><a href="#如果是灰色的不能按，请确定在上面第一步-第九步有没有配置好jar包的信息。" class="headerlink" title="如果是灰色的不能按，请确定在上面第一步~第九步有没有配置好jar包的信息。"></a>如果是灰色的不能按，请确定在上面第一步~第九步有没有配置好jar包的信息。</h5></li><li><h5 id="如果已经配置好了jar的信息，此处就可以正常点击。"><a href="#如果已经配置好了jar的信息，此处就可以正常点击。" class="headerlink" title="如果已经配置好了jar的信息，此处就可以正常点击。"></a>如果已经配置好了jar的信息，此处就可以正常点击。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image014.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="在主界面正中央。"><a href="#在主界面正中央。" class="headerlink" title="在主界面正中央。"></a>在主界面正中央。</h5></li><li><h5 id="选择puzzlegame-jar。"><a href="#选择puzzlegame-jar。" class="headerlink" title="选择puzzlegame:jar。"></a>选择puzzlegame:jar。</h5></li><li><h5 id="再选择Build。"><a href="#再选择Build。" class="headerlink" title="再选择Build。"></a>再选择Build。</h5></li><li><h5 id="idea会帮我们生成jar包。"><a href="#idea会帮我们生成jar包。" class="headerlink" title="idea会帮我们生成jar包。"></a>idea会帮我们生成jar包。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image015.png" alt="img" style="zoom:150%;" /><ul><li><h5 id="等页面右下角的进度条结束，jar就已经生成完毕。"><a href="#等页面右下角的进度条结束，jar就已经生成完毕。" class="headerlink" title="等页面右下角的进度条结束，jar就已经生成完毕。"></a>等页面右下角的进度条结束，jar就已经生成完毕。</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image017.jpg" alt="img" style="zoom:150%;" /><ul><li><h5 id="点击File，再点Project-Structure"><a href="#点击File，再点Project-Structure" class="headerlink" title="点击File，再点Project Structure"></a>点击File，再点Project Structure</h5></li><li><h5 id="点击Artifaces"><a href="#点击Artifaces" class="headerlink" title="点击Artifaces"></a>点击Artifaces</h5></li><li><h5 id="在下图红色框中的路径下，可以找到生成好的jar包"><a href="#在下图红色框中的路径下，可以找到生成好的jar包" class="headerlink" title="在下图红色框中的路径下，可以找到生成好的jar包"></a>在下图红色框中的路径下，可以找到生成好的jar包</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image019.jpg" alt="img" style="zoom:150%;" /><h2 id="整合资源文件-1"><a href="#整合资源文件-1" class="headerlink" title="整合资源文件"></a>整合资源文件</h2><ul><li><h5 id="将第一步创建好的jar包拷贝到桌面上。"><a href="#将第一步创建好的jar包拷贝到桌面上。" class="headerlink" title="将第一步创建好的jar包拷贝到桌面上。"></a>将第一步创建好的jar包拷贝到桌面上。</h5></li><li><h5 id="在桌面上新建一个文件夹resource。"><a href="#在桌面上新建一个文件夹resource。" class="headerlink" title="在桌面上新建一个文件夹resource。"></a>在桌面上新建一个文件夹resource。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image020.png" alt="img"></p><ul><li><h5 id="将《拼图游戏》中的image文件夹粘贴到resource文件夹当中。"><a href="#将《拼图游戏》中的image文件夹粘贴到resource文件夹当中。" class="headerlink" title="将《拼图游戏》中的image文件夹粘贴到resource文件夹当中。"></a>将《拼图游戏》中的image文件夹粘贴到resource文件夹当中。</h5></li><li><h5 id="此时在桌面中的resource文件夹下的image文件夹下，就会看到游戏里面用到的所有图片。"><a href="#此时在桌面中的resource文件夹下的image文件夹下，就会看到游戏里面用到的所有图片。" class="headerlink" title="此时在桌面中的resource文件夹下的image文件夹下，就会看到游戏里面用到的所有图片。"></a>此时在桌面中的resource文件夹下的image文件夹下，就会看到游戏里面用到的所有图片。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image021.png" alt="img"></p><h2 id="将jar包打包成exe-1"><a href="#将jar包打包成exe-1" class="headerlink" title="将jar包打包成exe"></a>将jar包打包成exe</h2><ul><li><h5 id="双击打开安装好的exe4j-exe，注册软件。"><a href="#双击打开安装好的exe4j-exe，注册软件。" class="headerlink" title="双击打开安装好的exe4j.exe，注册软件。"></a>双击打开安装好的exe4j.exe，注册软件。</h5></li><li><h5 id="点击下面的Enter-License"><a href="#点击下面的Enter-License" class="headerlink" title="点击下面的Enter License"></a>点击下面的Enter License</h5></li></ul><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image023.jpg" alt="img" style="zoom:150%;" /><ul><li><h5 id="输入用户名，公司名和注册码后点击ok"><a href="#输入用户名，公司名和注册码后点击ok" class="headerlink" title="输入用户名，公司名和注册码后点击ok"></a>输入用户名，公司名和注册码后点击ok</h5></li><li><h5 id="用户名，公司名随便填，最好都是小写字母。"><a href="#用户名，公司名随便填，最好都是小写字母。" class="headerlink" title="用户名，公司名随便填，最好都是小写字母。"></a>用户名，公司名随便填，最好都是小写字母。</h5></li><li><h5 id="注册码：L-g782dn2d-1f1yqxx1rv1sqd"><a href="#注册码：L-g782dn2d-1f1yqxx1rv1sqd" class="headerlink" title="注册码：L-g782dn2d-1f1yqxx1rv1sqd"></a>注册码：L-g782dn2d-1f1yqxx1rv1sqd</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image024.png" alt="img"></p><ul><li><h5 id="注册完毕之后点击右下角的next"><a href="#注册完毕之后点击右下角的next" class="headerlink" title="注册完毕之后点击右下角的next"></a>注册完毕之后点击右下角的next</h5></li><li><h5 id="备注：exe4j-exe只识别JDK8到JDK11，如果安装时出现弹框报错，请检查JDK版本，资料文件夹中给大家提供了JDK11，有需要可以安装。（黑马程序员阿玮老师出品）"><a href="#备注：exe4j-exe只识别JDK8到JDK11，如果安装时出现弹框报错，请检查JDK版本，资料文件夹中给大家提供了JDK11，有需要可以安装。（黑马程序员阿玮老师出品）" class="headerlink" title="备注：exe4j.exe只识别JDK8到JDK11，如果安装时出现弹框报错，请检查JDK版本，资料文件夹中给大家提供了JDK11，有需要可以安装。（黑马程序员阿玮老师出品）"></a>备注：exe4j.exe只识别JDK8到JDK11，如果安装时出现弹框报错，请检查JDK版本，资料文件夹中给大家提供了JDK11，有需要可以安装。（黑马程序员阿玮老师出品）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image026.jpg" alt="img"></p><ul><li><h5 id="选择JAVA转EXE"><a href="#选择JAVA转EXE" class="headerlink" title="选择JAVA转EXE"></a>选择JAVA转EXE</h5></li><li><h5 id="点击右下角的next"><a href="#点击右下角的next" class="headerlink" title="点击右下角的next"></a>点击右下角的next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image028.jpg" alt="img"></p><ul><li><h5 id="输入名称puzzlegame"><a href="#输入名称puzzlegame" class="headerlink" title="输入名称puzzlegame"></a>输入名称puzzlegame</h5></li><li><h5 id="输出保存exe的路径，建议选择到桌面上。"><a href="#输出保存exe的路径，建议选择到桌面上。" class="headerlink" title="输出保存exe的路径，建议选择到桌面上。"></a>输出保存exe的路径，建议选择到桌面上。</h5></li><li><h5 id="点击右下角的next-1"><a href="#点击右下角的next-1" class="headerlink" title="点击右下角的next"></a>点击右下角的next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image030.jpg" alt="img"></p><ul><li><h5 id="选择以图形界面的形式启动游戏"><a href="#选择以图形界面的形式启动游戏" class="headerlink" title="选择以图形界面的形式启动游戏"></a>选择以图形界面的形式启动游戏</h5></li><li><h5 id="输入应用名称，puzzlegame"><a href="#输入应用名称，puzzlegame" class="headerlink" title="输入应用名称，puzzlegame"></a>输入应用名称，puzzlegame</h5></li><li><h5 id="点击高级设置Advanced-Options，选择32-bit-or-64-bit"><a href="#点击高级设置Advanced-Options，选择32-bit-or-64-bit" class="headerlink" title="点击高级设置Advanced Options，选择32-bit or 64-bit"></a>点击高级设置Advanced Options，选择32-bit or 64-bit</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image032.jpg" alt="img"></p><ul><li><h5 id="勾选Generate-64-bit-executable"><a href="#勾选Generate-64-bit-executable" class="headerlink" title="勾选Generate 64-bit executable"></a>勾选Generate 64-bit executable</h5></li><li><h5 id="表示要生成64位的exe安装包，如果未勾选默认生成32位的安装包。"><a href="#表示要生成64位的exe安装包，如果未勾选默认生成32位的安装包。" class="headerlink" title="表示要生成64位的exe安装包，如果未勾选默认生成32位的安装包。"></a>表示要生成64位的exe安装包，如果未勾选默认生成32位的安装包。</h5></li><li><h5 id="点击右下角next"><a href="#点击右下角next" class="headerlink" title="点击右下角next"></a>点击右下角next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image034.jpg" alt="img"></p><ul><li><h5 id="然后一直下一步，一直出现如下界面"><a href="#然后一直下一步，一直出现如下界面" class="headerlink" title="然后一直下一步，一直出现如下界面"></a>然后一直下一步，一直出现如下界面</h5></li><li><h5 id="在本界面开始jar包并以及配置启动类。（黑马程序员阿玮老师出品）"><a href="#在本界面开始jar包并以及配置启动类。（黑马程序员阿玮老师出品）" class="headerlink" title="在本界面开始jar包并以及配置启动类。（黑马程序员阿玮老师出品）"></a>在本界面开始jar包并以及配置启动类。（黑马程序员阿玮老师出品）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image036.jpg" alt="img"></p><ul><li><h5 id="第一行，VM参数配置的地方加上：-Dfile-encoding-utf-8"><a href="#第一行，VM参数配置的地方加上：-Dfile-encoding-utf-8" class="headerlink" title="第一行，VM参数配置的地方加上：-Dfile.encoding=utf-8"></a>第一行，VM参数配置的地方加上：-Dfile.encoding=utf-8</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image037.png" alt="img"></p><ul><li><h5 id="点击右侧绿色的-，添加jar包"><a href="#点击右侧绿色的-，添加jar包" class="headerlink" title="点击右侧绿色的+，添加jar包"></a>点击右侧绿色的+，添加jar包</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image039.jpg" alt="img"></p><ul><li><h5 id="添加jar包"><a href="#添加jar包" class="headerlink" title="添加jar包"></a>添加jar包</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image040.png" alt="img"></p><ul><li><h5 id="选择桌面上的puzzlegame-jar。"><a href="#选择桌面上的puzzlegame-jar。" class="headerlink" title="选择桌面上的puzzlegame.jar。"></a>选择桌面上的puzzlegame.jar。</h5></li><li><h5 id="点击下面的打开。（黑马程序员阿玮老师出品）"><a href="#点击下面的打开。（黑马程序员阿玮老师出品）" class="headerlink" title="点击下面的打开。（黑马程序员阿玮老师出品）"></a>点击下面的打开。（黑马程序员阿玮老师出品）</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image042.jpg" alt="img"></p><ul><li><h5 id="检查路径，如果无误点击右下角的OK"><a href="#检查路径，如果无误点击右下角的OK" class="headerlink" title="检查路径，如果无误点击右下角的OK"></a>检查路径，如果无误点击右下角的OK</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image044.jpg" alt="img"></p><ul><li><h5 id="选择项目启动类"><a href="#选择项目启动类" class="headerlink" title="选择项目启动类"></a>选择项目启动类</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image046.jpg" alt="img"></p><ul><li><h5 id="因为程序主入口main方法写在App类中，所有选择app，并点击OK。"><a href="#因为程序主入口main方法写在App类中，所有选择app，并点击OK。" class="headerlink" title="因为程序主入口main方法写在App类中，所有选择app，并点击OK。"></a>因为程序主入口main方法写在App类中，所有选择app，并点击OK。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image048.jpg" alt="img"></p><ul><li><h5 id="本页面中，一共修改了三处。"><a href="#本页面中，一共修改了三处。" class="headerlink" title="本页面中，一共修改了三处。"></a>本页面中，一共修改了三处。</h5></li><li><h5 id="三处全部操作完毕。点击右下角的next"><a href="#三处全部操作完毕。点击右下角的next" class="headerlink" title="三处全部操作完毕。点击右下角的next"></a>三处全部操作完毕。点击右下角的next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image050.jpg" alt="img"></p><ul><li><h5 id="填写最小启动的JDK版本。输入1-8"><a href="#填写最小启动的JDK版本。输入1-8" class="headerlink" title="填写最小启动的JDK版本。输入1.8"></a>填写最小启动的JDK版本。输入1.8</h5></li><li><h5 id="配置exe加载的JDK，选择第一个。"><a href="#配置exe加载的JDK，选择第一个。" class="headerlink" title="配置exe加载的JDK，选择第一个。"></a>配置exe加载的JDK，选择第一个。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image052.jpg" alt="img"></p><ul><li><h5 id="点击"><a href="#点击" class="headerlink" title="点击+"></a>点击+</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image054.png" alt="https://img-blog.csdnimg.cn/20200204003959383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3NzAxMzgx,size_16,color_FFFFFF,t_70"></p><ul><li><h5 id="选择Directory"><a href="#选择Directory" class="headerlink" title="选择Directory"></a>选择Directory</h5></li><li><h5 id="下面输入-jdk"><a href="#下面输入-jdk" class="headerlink" title="下面输入.\jdk"></a>下面输入.\jdk</h5></li><li><p><strong>（注意：输入点杠jdk，都要是英文状态下输入）</strong></p></li><li><h5 id="点击OK-1"><a href="#点击OK-1" class="headerlink" title="点击OK"></a>点击OK</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image055.png" alt="img"></p><ul><li><h5 id="再次点击"><a href="#再次点击" class="headerlink" title="再次点击+"></a>再次点击+</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image057.jpg" alt="img"></p><ul><li><h5 id="选择Directory-1"><a href="#选择Directory-1" class="headerlink" title="选择Directory"></a>选择Directory</h5></li><li><h5 id="下面输入-image"><a href="#下面输入-image" class="headerlink" title="下面输入.\image"></a>下面输入.\image</h5></li><li><p><strong>（输入点杠image，都要是英文状态下输入）</strong></p></li><li><h5 id="点击OK-2"><a href="#点击OK-2" class="headerlink" title="点击OK"></a>点击OK</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image058.png" alt="img"></p><ul><li><h5 id="点击右下角的next-2"><a href="#点击右下角的next-2" class="headerlink" title="点击右下角的next"></a>点击右下角的next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image060.jpg" alt="img"></p><ul><li><h5 id="选择Client-VM"><a href="#选择Client-VM" class="headerlink" title="选择Client VM"></a>选择Client VM</h5></li><li><h5 id="点击右下角的next-3"><a href="#点击右下角的next-3" class="headerlink" title="点击右下角的next"></a>点击右下角的next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image062.png" alt="https://img-blog.csdnimg.cn/20200204004404491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3NzAxMzgx,size_16,color_FFFFFF,t_70"></p><ul><li><h5 id="然后一直下一步，最终出现如下界面"><a href="#然后一直下一步，最终出现如下界面" class="headerlink" title="然后一直下一步，最终出现如下界面"></a>然后一直下一步，最终出现如下界面</h5></li><li><h5 id="点击右下角的Exit退出。"><a href="#点击右下角的Exit退出。" class="headerlink" title="点击右下角的Exit退出。"></a>点击右下角的Exit退出。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image064.jpg" alt="img"></p><ul><li><h5 id="点击Exit后，会提升是否需要保存刚刚的配置信息，可以点击Yes，并选择一个路径进行保存。"><a href="#点击Exit后，会提升是否需要保存刚刚的配置信息，可以点击Yes，并选择一个路径进行保存。" class="headerlink" title="点击Exit后，会提升是否需要保存刚刚的配置信息，可以点击Yes，并选择一个路径进行保存。"></a>点击Exit后，会提升是否需要保存刚刚的配置信息，可以点击Yes，并选择一个路径进行保存。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image066.jpg" alt="img"></p><ul><li><h5 id="如果第三步选择的exe保存的路径是桌面，那么在桌面上"><a href="#如果第三步选择的exe保存的路径是桌面，那么在桌面上" class="headerlink" title="如果第三步选择的exe保存的路径是桌面，那么在桌面上"></a>如果第三步选择的exe保存的路径是桌面，那么在桌面上</h5></li><li><h5 id="就能看到生成的puzzlegame-exe文件了。"><a href="#就能看到生成的puzzlegame-exe文件了。" class="headerlink" title="就能看到生成的puzzlegame.exe文件了。"></a>就能看到生成的puzzlegame.exe文件了。</h5></li><li><h5 id="四个文件分别为："><a href="#四个文件分别为：" class="headerlink" title="四个文件分别为："></a>四个文件分别为：</h5></li><li><h5 id="左一：刚刚用jar生成的exe文件。"><a href="#左一：刚刚用jar生成的exe文件。" class="headerlink" title="左一：刚刚用jar生成的exe文件。"></a>左一：刚刚用jar生成的exe文件。</h5></li><li><h5 id="左二：idea生成的jar包"><a href="#左二：idea生成的jar包" class="headerlink" title="左二：idea生成的jar包"></a>左二：idea生成的jar包</h5></li><li><h5 id="左三：游戏用到的资源图片"><a href="#左三：游戏用到的资源图片" class="headerlink" title="左三：游戏用到的资源图片"></a>左三：游戏用到的资源图片</h5></li><li><h5 id="左四：刚刚用exe4J设置完毕之后保存的信息。"><a href="#左四：刚刚用exe4J设置完毕之后保存的信息。" class="headerlink" title="左四：刚刚用exe4J设置完毕之后保存的信息。"></a>左四：刚刚用exe4J设置完毕之后保存的信息。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image067.png" alt="img"></p><h2 id="将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。-1"><a href="#将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。-1" class="headerlink" title="将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。"></a>将jdk、资源文件、jar包转换后的exe三者再次打包成最终的exe。</h2><ul><li><h5 id="刚刚，我们仅仅是把java代码变成了exe。下面我们要把游戏中依赖的资源文件，也就是使用到的所有图片，还有JDK三者再次打包成最终的exe，这样在没有jdk电脑环境下也能运行。"><a href="#刚刚，我们仅仅是把java代码变成了exe。下面我们要把游戏中依赖的资源文件，也就是使用到的所有图片，还有JDK三者再次打包成最终的exe，这样在没有jdk电脑环境下也能运行。" class="headerlink" title="刚刚，我们仅仅是把java代码变成了exe。下面我们要把游戏中依赖的资源文件，也就是使用到的所有图片，还有JDK三者再次打包成最终的exe，这样在没有jdk电脑环境下也能运行。"></a>刚刚，我们仅仅是把java代码变成了exe。下面我们要把游戏中依赖的资源文件，也就是使用到的所有图片，还有JDK三者再次打包成最终的exe，这样在没有jdk电脑环境下也能运行。</h5></li><li><h5 id="打开inno-setup"><a href="#打开inno-setup" class="headerlink" title="打开inno setup"></a>打开inno setup</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image069.jpg" alt="img"></p><ul><li><h5 id="在欢迎页面点击右下角的关闭"><a href="#在欢迎页面点击右下角的关闭" class="headerlink" title="在欢迎页面点击右下角的关闭"></a>在欢迎页面点击右下角的关闭</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image070.png" alt="img"></p><ul><li><h5 id="点击左上角的File"><a href="#点击左上角的File" class="headerlink" title="点击左上角的File"></a>点击左上角的File</h5></li><li><h5 id="再点击NEW"><a href="#再点击NEW" class="headerlink" title="再点击NEW"></a>再点击NEW</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image071.png" alt="img"></p><ul><li><h5 id="点击next"><a href="#点击next" class="headerlink" title="点击next"></a>点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image072.png" alt="img"></p><ul><li><h5 id="输入应用名称puzzlegame"><a href="#输入应用名称puzzlegame" class="headerlink" title="输入应用名称puzzlegame"></a>输入应用名称puzzlegame</h5></li><li><h5 id="点击next-1"><a href="#点击next-1" class="headerlink" title="点击next"></a>点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image073.png" alt="img"></p><ul><li><h5 id="不修改任何东西，直接点击next"><a href="#不修改任何东西，直接点击next" class="headerlink" title="不修改任何东西，直接点击next"></a>不修改任何东西，直接点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image074.png" alt="img"></p><ul><li><h5 id="点击这里，选择桌面上已经生成好的puzzlegame-exe"><a href="#点击这里，选择桌面上已经生成好的puzzlegame-exe" class="headerlink" title="点击这里，选择桌面上已经生成好的puzzlegame.exe"></a>点击这里，选择桌面上已经生成好的puzzlegame.exe</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image075.png" alt="img"></p><ul><li><h5 id="点击Add-folder"><a href="#点击Add-folder" class="headerlink" title="点击Add folder"></a>点击Add folder</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image076.png" alt="img"></p><ul><li><h5 id="选择桌面的resource，再点击确定。"><a href="#选择桌面的resource，再点击确定。" class="headerlink" title="选择桌面的resource，再点击确定。"></a>选择桌面的resource，再点击确定。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image077.png" alt="img"></p><ul><li><h5 id="如果出现下面弹框，则点击是。"><a href="#如果出现下面弹框，则点击是。" class="headerlink" title="如果出现下面弹框，则点击是。"></a>如果出现下面弹框，则点击是。</h5></li><li><h5 id="如果没有出现也没有任何关系。"><a href="#如果没有出现也没有任何关系。" class="headerlink" title="如果没有出现也没有任何关系。"></a>如果没有出现也没有任何关系。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image078.png" alt="img"></p><ul><li><h5 id="再点击-Add-file-s-…"><a href="#再点击-Add-file-s-…" class="headerlink" title="再点击 Add file(s)…"></a>再点击 Add file(s)…</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image079.png" alt="img"></p><ul><li><h5 id="选中桌面的puzzlegame-exe，再次添加一次。"><a href="#选中桌面的puzzlegame-exe，再次添加一次。" class="headerlink" title="选中桌面的puzzlegame.exe，再次添加一次。"></a>选中桌面的puzzlegame.exe，再次添加一次。</h5></li><li><h5 id="点击下面的打开。"><a href="#点击下面的打开。" class="headerlink" title="点击下面的打开。"></a>点击下面的打开。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image081.jpg" alt="img"></p><ul><li><h5 id="在本页面中一共设置了三处地方。"><a href="#在本页面中一共设置了三处地方。" class="headerlink" title="在本页面中一共设置了三处地方。"></a>在本页面中一共设置了三处地方。</h5></li><li><h5 id="全部设置完毕，点击next。"><a href="#全部设置完毕，点击next。" class="headerlink" title="全部设置完毕，点击next。"></a>全部设置完毕，点击next。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image082.png" alt="img"></p><ul><li><h5 id="默认不用选择，点击next"><a href="#默认不用选择，点击next" class="headerlink" title="默认不用选择，点击next"></a>默认不用选择，点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image083.png" alt="img"></p><ul><li><h5 id="默认不用选择，点击next-1"><a href="#默认不用选择，点击next-1" class="headerlink" title="默认不用选择，点击next"></a>默认不用选择，点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image084.png" alt="img"></p><ul><li><h5 id="选择语言，还是默认，点击next"><a href="#选择语言，还是默认，点击next" class="headerlink" title="选择语言，还是默认，点击next"></a>选择语言，还是默认，点击next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image085.png" alt="img"></p><ul><li><h5 id="选择输出路径，还是选择桌面。"><a href="#选择输出路径，还是选择桌面。" class="headerlink" title="选择输出路径，还是选择桌面。"></a>选择输出路径，还是选择桌面。</h5></li><li><h5 id="输入最终安装包的名字，不能跟已有的puzzlegame重名。"><a href="#输入最终安装包的名字，不能跟已有的puzzlegame重名。" class="headerlink" title="输入最终安装包的名字，不能跟已有的puzzlegame重名。"></a>输入最终安装包的名字，不能跟已有的puzzlegame重名。</h5></li><li><h5 id="所以我写setup，再点击右下角next"><a href="#所以我写setup，再点击右下角next" class="headerlink" title="所以我写setup，再点击右下角next"></a>所以我写setup，再点击右下角next</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image086.png" alt="img"></p><ul><li><h5 id="默认点击next"><a href="#默认点击next" class="headerlink" title="默认点击next"></a>默认点击next</h5></li><li><h5 id="有部分同学电脑不显示这一步，也没有关系。"><a href="#有部分同学电脑不显示这一步，也没有关系。" class="headerlink" title="有部分同学电脑不显示这一步，也没有关系。"></a>有部分同学电脑不显示这一步，也没有关系。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image087.png" alt="img"></p><ul><li><h5 id="完成，点击finish"><a href="#完成，点击finish" class="headerlink" title="完成，点击finish"></a>完成，点击finish</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image088.png" alt="img"></p><ul><li><h5 id="配置到最后一步了，脚本文件，到这里会弹出问你是否马"><a href="#配置到最后一步了，脚本文件，到这里会弹出问你是否马" class="headerlink" title="配置到最后一步了，脚本文件，到这里会弹出问你是否马"></a>配置到最后一步了，脚本文件，到这里会弹出问你是否马</h5></li><li><h5 id="上编译，选择否，先把脚本写好再自己编译。"><a href="#上编译，选择否，先把脚本写好再自己编译。" class="headerlink" title="上编译，选择否，先把脚本写好再自己编译。"></a>上编译，选择否，先把脚本写好再自己编译。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image089.png" alt="img"></p><ul><li><h5 id="上面红色箭头处添加一行脚本。"><a href="#上面红色箭头处添加一行脚本。" class="headerlink" title="上面红色箭头处添加一行脚本。"></a>上面红色箭头处添加一行脚本。</h5></li><li><h5 id="define-MyJdkName-“jdk”"><a href="#define-MyJdkName-“jdk”" class="headerlink" title="#define MyJdkName “jdk”"></a>#define MyJdkName “jdk”</h5></li></ul><p>添加前：<img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image090.png" alt="img"></p><ul><li><h5 id="添加完毕之后，如下图所示"><a href="#添加完毕之后，如下图所示" class="headerlink" title="添加完毕之后，如下图所示"></a>添加完毕之后，如下图所示</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image092.jpg" alt="img"></p><ul><li><h5 id="往下拉，把有红色框起来的这一行删掉"><a href="#往下拉，把有红色框起来的这一行删掉" class="headerlink" title="往下拉，把有红色框起来的这一行删掉"></a>往下拉，把有红色框起来的这一行删掉</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image094.jpg" alt="img"></p><ul><li><h5 id="在上一步删除位置添加一段行的文字"><a href="#在上一步删除位置添加一段行的文字" class="headerlink" title="在上一步删除位置添加一段行的文字"></a>在上一步删除位置添加一段行的文字</h5></li><li><h5 id="Source"><a href="#Source" class="headerlink" title="Source:"></a>Source:</h5></li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-string">&quot;自己本地JDK路径\*&quot;</span><span class="hljs-comment">; DestDir: &quot;&#123;app&#125;\&#123;#MyJdkName&#125;&quot;; Flags: ignoreversion recursesubdirs createallsubdirs</span><br></code></pre></td></tr></table></figure><ul><li><h5 id="千万注意：这段文字不要直接复制。根据自己电脑中JDK的安装位置进行修改，添加完毕之后如下图"><a href="#千万注意：这段文字不要直接复制。根据自己电脑中JDK的安装位置进行修改，添加完毕之后如下图" class="headerlink" title="千万注意：这段文字不要直接复制。根据自己电脑中JDK的安装位置进行修改，添加完毕之后如下图"></a>千万注意：这段文字不要直接复制。根据自己电脑中JDK的安装位置进行修改，添加完毕之后如下图</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image096.jpg" alt="img"></p><ul><li><h5 id="点击上方的绿色按钮开始编译。"><a href="#点击上方的绿色按钮开始编译。" class="headerlink" title="点击上方的绿色按钮开始编译。"></a>点击上方的绿色按钮开始编译。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image097.png" alt="https://img-blog.csdnimg.cn/20200204010100205.png"></p><ul><li><h5 id="此时会询问，是否需要保存。"><a href="#此时会询问，是否需要保存。" class="headerlink" title="此时会询问，是否需要保存。"></a>此时会询问，是否需要保存。</h5></li><li><h5 id="可以点击是，选择一个位置保存一下刚刚修改之后的结果。"><a href="#可以点击是，选择一个位置保存一下刚刚修改之后的结果。" class="headerlink" title="可以点击是，选择一个位置保存一下刚刚修改之后的结果。"></a>可以点击是，选择一个位置保存一下刚刚修改之后的结果。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image098.png" alt="img"></p><p> 然后等待绿色滚动条结束</p><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image100.jpg" alt="img"></p><ul><li><h5 id="当绿色滚动条结束后，会自动安装setup-exe文件。"><a href="#当绿色滚动条结束后，会自动安装setup-exe文件。" class="headerlink" title="当绿色滚动条结束后，会自动安装setup.exe文件。"></a>当绿色滚动条结束后，会自动安装setup.exe文件。</h5></li><li><h5 id="此时可以点击否，先不安装。"><a href="#此时可以点击否，先不安装。" class="headerlink" title="此时可以点击否，先不安装。"></a>此时可以点击否，先不安装。</h5></li><li><h5 id="在桌面上，会多了一个setup-exe文件和一个后缀名为iss的文件"><a href="#在桌面上，会多了一个setup-exe文件和一个后缀名为iss的文件" class="headerlink" title="在桌面上，会多了一个setup.exe文件和一个后缀名为iss的文件"></a>在桌面上，会多了一个setup.exe文件和一个后缀名为iss的文件</h5></li><li><h5 id="setup-exe：打包成功的游戏安装包。"><a href="#setup-exe：打包成功的游戏安装包。" class="headerlink" title="setup.exe：打包成功的游戏安装包。"></a>setup.exe：打包成功的游戏安装包。</h5></li><li><h5 id="iss文件：就是刚刚设置的脚本文件。"><a href="#iss文件：就是刚刚设置的脚本文件。" class="headerlink" title="iss文件：就是刚刚设置的脚本文件。"></a>iss文件：就是刚刚设置的脚本文件。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image101.png" alt="img"></p><ul><li><h5 id="现在就可以把这个exe文件发给你的好基友了，他的电脑"><a href="#现在就可以把这个exe文件发给你的好基友了，他的电脑" class="headerlink" title="现在就可以把这个exe文件发给你的好基友了，他的电脑"></a>现在就可以把这个exe文件发给你的好基友了，他的电脑</h5></li><li><h5 id="上不需要安装JDK，直接双击这个安装包就可以玩游戏了。"><a href="#上不需要安装JDK，直接双击这个安装包就可以玩游戏了。" class="headerlink" title="上不需要安装JDK，直接双击这个安装包就可以玩游戏了。"></a>上不需要安装JDK，直接双击这个安装包就可以玩游戏了。</h5></li><li><h5 id="在安装的时候可以选择安装路径。"><a href="#在安装的时候可以选择安装路径。" class="headerlink" title="在安装的时候可以选择安装路径。"></a>在安装的时候可以选择安装路径。</h5></li><li><h5 id="还可以在桌面生成快捷方式。"><a href="#还可以在桌面生成快捷方式。" class="headerlink" title="还可以在桌面生成快捷方式。"></a>还可以在桌面生成快捷方式。</h5></li></ul><h1 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h1><ul><li><h5 id="安装完毕之后，可以到安装目录去找puzzlegame-exe"><a href="#安装完毕之后，可以到安装目录去找puzzlegame-exe" class="headerlink" title="安装完毕之后，可以到安装目录去找puzzlegame.exe"></a>安装完毕之后，可以到安装目录去找puzzlegame.exe</h5></li><li><h5 id="双击就可以玩游戏了。刚刚桌面上的5个文件可以全部删除。以后双击puzzlegame-exe就可以玩游戏了。"><a href="#双击就可以玩游戏了。刚刚桌面上的5个文件可以全部删除。以后双击puzzlegame-exe就可以玩游戏了。" class="headerlink" title="双击就可以玩游戏了。刚刚桌面上的5个文件可以全部删除。以后双击puzzlegame.exe就可以玩游戏了。"></a>双击就可以玩游戏了。刚刚桌面上的5个文件可以全部删除。以后双击puzzlegame.exe就可以玩游戏了。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image102.png" alt="img"></p><ul><li><h5 id="如果游戏运行之后，有效果但是无图片，或者部分图片无"><a href="#如果游戏运行之后，有效果但是无图片，或者部分图片无" class="headerlink" title="如果游戏运行之后，有效果但是无图片，或者部分图片无"></a>如果游戏运行之后，有效果但是无图片，或者部分图片无</h5></li><li><h5 id="法加载。如下图所示：此时背景图片无法加载。"><a href="#法加载。如下图所示：此时背景图片无法加载。" class="headerlink" title="法加载。如下图所示：此时背景图片无法加载。"></a>法加载。如下图所示：此时背景图片无法加载。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image103.png" alt="img"></p><ul><li><h5 id="修改步骤一："><a href="#修改步骤一：" class="headerlink" title="修改步骤一："></a>修改步骤一：</h5></li><li><h5 id="检查安装目录下image文件夹中是否有该图片。如果没有将缺少的图片粘贴进去重新运行游戏。（黑马程序员阿玮老师出品）"><a href="#检查安装目录下image文件夹中是否有该图片。如果没有将缺少的图片粘贴进去重新运行游戏。（黑马程序员阿玮老师出品）" class="headerlink" title="检查安装目录下image文件夹中是否有该图片。如果没有将缺少的图片粘贴进去重新运行游戏。（黑马程序员阿玮老师出品）"></a>检查安装目录下image文件夹中是否有该图片。如果没有将缺少的图片粘贴进去重新运行游戏。（黑马程序员阿玮老师出品）</h5></li><li><h5 id="修改步骤二："><a href="#修改步骤二：" class="headerlink" title="修改步骤二："></a>修改步骤二：</h5></li><li><h5 id="检查代码，图片的路径需要把模块名删掉。"><a href="#检查代码，图片的路径需要把模块名删掉。" class="headerlink" title="检查代码，图片的路径需要把模块名删掉。"></a>检查代码，图片的路径需要把模块名删掉。</h5></li></ul><p><img src="https://gitee.com/deng-2022/pictures/raw/master/images/clip_image104.jpg" alt="img"></p><ul><li><h5 id="代码修改后，需要重新生成exe安装包，重新安装游戏。"><a href="#代码修改后，需要重新生成exe安装包，重新安装游戏。" class="headerlink" title="代码修改后，需要重新生成exe安装包，重新安装游戏。"></a>代码修改后，需要重新生成exe安装包，重新安装游戏。</h5></li></ul>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>game</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL安装配置</title>
    <link href="/blog/2023/03/19/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/blog/2023/03/19/MySQL%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL安装配置一条龙教程"><a href="#MySQL安装配置一条龙教程" class="headerlink" title="MySQL安装配置一条龙教程"></a>MySQL安装配置一条龙教程</h1><h2 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h2><ul><li><h5 id="视频资源-MySQL安装教程-黑马程序员"><a href="#视频资源-MySQL安装教程-黑马程序员" class="headerlink" title="视频资源   MySQL安装教程-黑马程序员"></a>视频资源   <a href="https://www.bilibili.com/video/BV1Qf4y1T7Hx/?p=3&share_source=copy_web&vd_source=41484c3c23d7dc1caf838d6574365b27">MySQL安装教程-黑马程序员</a></h5></li><li><h5 id="文档笔记-（去年暑假自己随手记的，具体操作注意事项还是建议跟着上面的视频走一遍）"><a href="#文档笔记-（去年暑假自己随手记的，具体操作注意事项还是建议跟着上面的视频走一遍）" class="headerlink" title="文档笔记  （去年暑假自己随手记的，具体操作注意事项还是建议跟着上面的视频走一遍）"></a>文档笔记  （去年暑假自己随手记的，具体操作注意事项还是建议跟着上面的视频走一遍）</h5></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>.下载 安装解压<br>https:<span class="hljs-regexp">//</span>downloads.mysql.com<span class="hljs-regexp">/archives/</span>community/<br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">2.1</span>.添加环境变量<br><span class="hljs-comment">(1)</span>新建MYSQL_HOME变量,变量名: D:\softWare\mysql\mysql<span class="hljs-number">-5.7</span><span class="hljs-number">.19</span>-wi<span class="hljs-symbol">nx64</span><br><span class="hljs-comment">(2)</span>Path环境变量:<span class="hljs-meta">%</span> MYSQL_HOME<span class="hljs-meta">%</span>\bi<span class="hljs-symbol">n</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">2.2</span>.新建配置文件<br>在路径D:\softWare\mysql\mysql<span class="hljs-number">-5.7</span><span class="hljs-number">.19</span>-winx64下创建my.ini,配置如下内容:<br>[mysql]<br><span class="hljs-keyword">default</span>-<span class="hljs-type">character</span>-<span class="hljs-keyword">set</span>=utf8<br>[mysqld]<br><span class="hljs-type">character</span>-<span class="hljs-keyword">set</span>-<span class="hljs-keyword">server</span>=utf8<br><span class="hljs-keyword">default</span>-<span class="hljs-keyword">storage</span>-engine=INNODB<br>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">3</span>.初始化MySQL，生成date<br><span class="hljs-attribute">mysqld</span> -–initialize-insecure <br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">4</span>.注册MySQL服务<br><span class="hljs-attribute">mysqld</span> -install<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">5</span>.启动MySQL服务<br><span class="hljs-attribute">C</span>:\WINDOWS\system32&gt;net start mysql <br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">6</span>.设置账户密码<br><span class="hljs-attribute">mysqladmin</span> -u 用户名 -p 密码  (这里的用户名就是root了,之后可以创建新用户)<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">7</span>.后期修改账户密码<br><span class="hljs-attribute">mysqladmin</span> -u用户名 -p旧密码 password 新密码<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">3</span>.登录MySQL<br>Mysql -u root -<span class="hljs-selector-tag">p</span>密码<br></code></pre></td></tr></table></figure><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cos"><span class="hljs-number">4.</span>登出MySQL <br>mysql&gt; <span class="hljs-keyword">quit</span><br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-number">5</span>.关闭MySQL服务<br><span class="hljs-symbol">C:</span>\WINDOWS\system32&gt;net <span class="hljs-keyword">stop</span> mysql<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">6.卸载MySQL<br>C:\WINDOWS\system32&gt;mysqld -<span class="hljs-built_in">remove</span> mysql<br></code></pre></td></tr></table></figure><h2 id="安装可视化软件"><a href="#安装可视化软件" class="headerlink" title="安装可视化软件"></a>安装可视化软件</h2><ul><li><h5 id="可视化软件有很多，比如Navicat，sqlyog等，都是为了方便操作数据库，咱就选一个简单好用还免费的"><a href="#可视化软件有很多，比如Navicat，sqlyog等，都是为了方便操作数据库，咱就选一个简单好用还免费的" class="headerlink" title="可视化软件有很多，比如Navicat，sqlyog等，都是为了方便操作数据库，咱就选一个简单好用还免费的"></a>可视化软件有很多，比如Navicat，sqlyog等，都是为了方便操作数据库，咱就选一个简单好用还免费的</h5></li><li><h5 id="安装sqlyog-可以跟着这篇文章操作"><a href="#安装sqlyog-可以跟着这篇文章操作" class="headerlink" title="安装sqlyog  可以跟着这篇文章操作"></a><a href="https://blog.csdn.net/cong666555/article/details/128399011">安装sqlyog</a>  可以跟着这篇文章操作</h5></li><li><h5 id="连接本地数据库"><a href="#连接本地数据库" class="headerlink" title="连接本地数据库"></a>连接本地数据库</h5></li><li><h5 id="Navicat连接本地数据库-黑马程序员-跟着视频操作就行，他用的是Navicat，其实都一样"><a href="#Navicat连接本地数据库-黑马程序员-跟着视频操作就行，他用的是Navicat，其实都一样" class="headerlink" title="Navicat连接本地数据库-黑马程序员     跟着视频操作就行，他用的是Navicat，其实都一样"></a><a href="https://www.bilibili.com/video/BV1Qf4y1T7Hx/?p=10&share_source=copy_web&vd_source=41484c3c23d7dc1caf838d6574365b27">Navicat连接本地数据库-黑马程序员</a>     跟着视频操作就行，他用的是Navicat，其实都一样</h5></li></ul><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ul><li><h5 id="MySQL修改密码解决方案-连接MySQL时-出现报错-Access-denied-for-user-‘root‘-’localhost’-using-password-YES"><a href="#MySQL修改密码解决方案-连接MySQL时-出现报错-Access-denied-for-user-‘root‘-’localhost’-using-password-YES" class="headerlink" title="MySQL修改密码解决方案 |  连接MySQL时, 出现报错: Access denied for user ‘root‘@’localhost’ (using password: YES)"></a>MySQL修改密码解决方案 |  连接MySQL时, 出现报错: Access denied for user ‘root‘@’localhost’ (using password: YES)</h5></li></ul><ul><li><h5 id="打开mysql-cmd"><a href="#打开mysql-cmd" class="headerlink" title="打开mysql cmd"></a>打开mysql cmd</h5></li></ul><ul><li><h5 id="执行语句"><a href="#执行语句" class="headerlink" title="执行语句"></a>执行语句</h5></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27; PASSWORD EXPIRE NEVER; #修改加密规则<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;; #更新一下用户的密码<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES; #刷新权限<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123fzw&#x27;; #重置密码<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用户中心开发文档</title>
    <link href="/blog/2023/03/17/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <url>/blog/2023/03/17/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83-%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><h5 id="本文档记录了用户中心开发的基本流程，-包含了前期的框架搭建、数据库设计，以及后期的后端接口实现、前端页面开发，实现了基础的登录注册功能，以及查看在线用户状态和删除用户的功能（管理员）"><a href="#本文档记录了用户中心开发的基本流程，-包含了前期的框架搭建、数据库设计，以及后期的后端接口实现、前端页面开发，实现了基础的登录注册功能，以及查看在线用户状态和删除用户的功能（管理员）" class="headerlink" title="本文档记录了用户中心开发的基本流程， 包含了前期的框架搭建、数据库设计，以及后期的后端接口实现、前端页面开发，实现了基础的登录注册功能，以及查看在线用户状态和删除用户的功能（管理员）"></a>本文档记录了用户中心开发的基本流程， 包含了前期的框架搭建、数据库设计，以及后期的后端接口实现、前端页面开发，实现了基础的登录注册功能，以及查看在线用户状态和删除用户的功能（管理员）</h5></li></ul><h1 id="开发项目前的分析"><a href="#开发项目前的分析" class="headerlink" title="开发项目前的分析"></a>开发项目前的分析</h1><h2 id="企业做项目流程"><a href="#企业做项目流程" class="headerlink" title="企业做项目流程"></a>企业做项目流程</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">需求分析 <span class="hljs-operator">=</span>&gt; 设计（概要设计、详细设计）<span class="hljs-operator">=</span>&gt; 技术选型 <span class="hljs-operator">=</span>&gt; <br>初始化 / 引⼊需要的技术 <span class="hljs-operator">=</span>&gt; 写 Demo <span class="hljs-operator">=</span>&gt; 写代码（实现业务逻辑） <span class="hljs-operator">=</span>&gt;<br>测试（单元测试）<span class="hljs-operator">=</span>&gt; 代码提 交 / 代码评审 <span class="hljs-operator">=</span>&gt; 部署<span class="hljs-operator">=</span>&gt; 发布<br></code></pre></td></tr></table></figure><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ol><li>登录 / 注册  </li><li>⽤户管理（仅管理员可⻅）对⽤户的查询或者修改</li><li> ⽤户校验（ 仅星球⽤户 ）</li></ol><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h5 id="前端："><a href="#前端：" class="headerlink" title="前端："></a>前端：</h5><p>三件套 + React + 组件库 Ant Design + Umi + Ant Design Pro（现成的管理系统）</p><h5 id="后端："><a href="#后端：" class="headerlink" title="后端："></a>后端：</h5><ul><li> java </li><li>spring（依赖注⼊框架，帮助你管理 Java 对象，集成⼀些其他的内容） </li><li>springmvc（web 框架，提供接⼝访问、restful接⼝等能⼒） </li><li>mybatis（Java 操作数据库的框架，持久层框架，对 jdbc 的封装）</li><li>mybatis-plus（对 mybatis 的增强，不⽤写 sql 也能实现增删改查）</li><li> springboot（快速启动 / 快速集成项⽬。不⽤⾃⼰管理 spring 配置，不⽤⾃⼰整合各种框架）</li><li> junit 单元测试库 </li><li>mysql</li></ul><h2 id="部署：服务器-容器（平台）"><a href="#部署：服务器-容器（平台）" class="headerlink" title="部署：服务器 / 容器（平台）"></a>部署：服务器 / 容器（平台）</h2><h1 id="框架搭建"><a href="#框架搭建" class="headerlink" title="框架搭建"></a>框架搭建</h1><h3 id="前端框架搭建"><a href="#前端框架搭建" class="headerlink" title="前端框架搭建"></a>前端框架搭建</h3><h5 id="搭建AntDesignPro脚手架"><a href="#搭建AntDesignPro脚手架" class="headerlink" title="搭建AntDesignPro脚手架"></a><a href="https://blog.csdn.net/Lcq_best/article/details/125569667">搭建AntDesignPro脚手架</a></h5><h3 id="后端框架搭建"><a href="#后端框架搭建" class="headerlink" title="后端框架搭建"></a>后端框架搭建</h3><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">create table <span class="hljs-title function_">user</span><br><span class="hljs-params">(</span><br><span class="hljs-params">    id            bigint                                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;id&#x27;</span> primary key,</span><br><span class="hljs-params">    user_account  varchar(<span class="hljs-number">256</span>)</span>                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    username      <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">256</span>)</span>                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;昵称&#x27;</span>,<br>    user_password <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">128</span>)</span>                           not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;密码&#x27;</span>,<br>    avatar_url    <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">512</span>)</span>                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;头像&#x27;</span>,<br>    gender        <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">128</span>)</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;0&#x27;</span>               <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    phone         <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">128</span>)</span>                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;电话&#x27;</span>,<br>    email         <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">128</span>)</span>                           <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;邮箱&#x27;</span>,<br>    user_status   <span class="hljs-type">int</span>          <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;状态 0 - 正常&#x27;</span>,<br>    create_time   datetime     <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time   datetime     <span class="hljs-keyword">default</span> CURRENT_TIMESTAMP not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    is_delete     tinyint      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;是否删除 0 - 正常&#x27;</span>,<br>    user_role     <span class="hljs-title function_">int</span><span class="hljs-params">(<span class="hljs-number">1</span>)</span>       <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;用户权限 0 - 管理员 1 - 普通用户&#x27;</span>,<br>    planet_code   <span class="hljs-title function_">varchar</span><span class="hljs-params">(<span class="hljs-number">512</span>)</span>                           not <span class="hljs-literal">null</span> comment <span class="hljs-string">&#x27;星球编号&#x27;</span><br>)<br>    comment <span class="hljs-string">&#x27;用户&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><h5 id="MybatisX插件快速生成domain-entity-service-以及-serviceImpl"><a href="#MybatisX插件快速生成domain-entity-service-以及-serviceImpl" class="headerlink" title="MybatisX插件快速生成domain entity service 以及 serviceImpl"></a>MybatisX插件快速生成domain entity service 以及 serviceImpl</h5><ul><li>选择生成目录</li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230324211359229.png" alt="image-20230324211359229"></p><ul><li>生成选项</li></ul><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20230324211329077.png" alt="image-20230324211329077"></p></li><li><h5 id="application-yaml-项目配置文件"><a href="#application-yaml-项目配置文件" class="headerlink" title="application.yaml 项目配置文件"></a>application.yaml 项目配置文件</h5><ul><li><h5 id="连接到数据库"><a href="#连接到数据库" class="headerlink" title="连接到数据库"></a>连接到数据库</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"># DataSource Config<br>datasource:<br>  driver-class-name: com.mysql.cj.jdbc.Driver<br>  url: jdbc:mysql:<span class="hljs-comment">//localhost:3306/memory</span><br>  username: root<br>  password: Dw990831<br></code></pre></td></tr></table></figure><ul><li><h5 id="项目名称"><a href="#项目名称" class="headerlink" title="项目名称"></a>项目名称</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">spring:<br>  # Project name<br>  application:<br>    name: user-center<br></code></pre></td></tr></table></figure><ul><li><h5 id="项目端口-项目所有API路径上下文"><a href="#项目端口-项目所有API路径上下文" class="headerlink" title="项目端口 | 项目所有API路径上下文"></a>项目端口 | 项目所有API路径上下文</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"># 端口<br>server:<br>  port: <span class="hljs-number">8081</span><br>  servlet:<br>    context-path: /api<br></code></pre></td></tr></table></figure><ul><li><h5 id="逻辑删除-MybatisPlus提供"><a href="#逻辑删除-MybatisPlus提供" class="headerlink" title="逻辑删除(MybatisPlus提供)"></a>逻辑删除(MybatisPlus提供)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"># 逻辑删除<br>mybatis-plus:<br>  global-config:<br>    db-config:<br>      logic-delete-field: isDelete # 全局逻辑删除的实体字段名(since <span class="hljs-number">3.3</span><span class="hljs-number">.0</span>,配置后可以忽略不配置步骤<span class="hljs-number">2</span>)<br>      logic-delete-value: <span class="hljs-number">1</span> # 逻辑已删除值(默认为 <span class="hljs-number">1</span>)<br>      logic-not-delete-value: <span class="hljs-number">0</span> # 逻辑未删除值(默认为 <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><ul><li><h5 id="session"><a href="#session" class="headerlink" title="session"></a>session</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">  # session存活时间 一天<br>session:<br>  timeout: <span class="hljs-number">86640</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h1><h5 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h5><h2 id="登录-校验"><a href="#登录-校验" class="headerlink" title="登录+校验"></a>登录+校验</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">User <span class="hljs-title function_">userLogin</span><span class="hljs-params">(String userAccount, String userPassword, HttpServletRequest request)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">@Override<br>public User user<span class="hljs-constructor">Login(String <span class="hljs-params">userAccount</span>, String <span class="hljs-params">userPassword</span>, HttpServletRequest <span class="hljs-params">request</span>)</span> &#123;<br>    <span class="hljs-comment">// 1.校验</span><br>    <span class="hljs-comment">// 1.1.账户, 密码不能为空</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">StringUtils</span>.</span></span>is<span class="hljs-constructor">AnyBlank(<span class="hljs-params">userAccount</span>, <span class="hljs-params">userPassword</span>)</span>)<br>        return null;<br><br>    <span class="hljs-comment">// 1.2.账户不小于4位</span><br>    <span class="hljs-keyword">if</span> (userAccount.length<span class="hljs-literal">()</span> &lt; <span class="hljs-number">4</span>)<br>        return null;<br><br>    <span class="hljs-comment">// 1.3.用户密码不小于8位</span><br>    <span class="hljs-keyword">if</span> (userPassword.length<span class="hljs-literal">()</span> &lt; <span class="hljs-number">8</span>)<br>        return null;<br><br>    <span class="hljs-comment">// 1.4.账户不包含特殊字符</span><br>    String pattern = <span class="hljs-string">&quot;.*[\\s`~!@#$%^&amp;*()+=|&#123;&#125;&#x27;:;&#x27;,\\[\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？\\\\]+.*&quot;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Pattern</span>.</span></span>matches(pattern, userAccount))<br>        return null;<br><br>    <span class="hljs-comment">// 1.5.检验该用户是否注册</span><br>    User user = <span class="hljs-keyword">new</span> <span class="hljs-constructor">User()</span>;<br><br>    user.set<span class="hljs-constructor">UserAccount(<span class="hljs-params">userAccount</span>)</span>;<br><br>    String encryptPassword = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">DigestUtils</span>.</span></span>md5<span class="hljs-constructor">DigestAsHex((SALT + <span class="hljs-params">userPassword</span>)</span>.get<span class="hljs-constructor">Bytes()</span>);<br>    user.set<span class="hljs-constructor">UserPassword(<span class="hljs-params">encryptPassword</span>)</span>;<br><br>    QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;<span class="hljs-literal">()</span>;<br>    qw.eq(<span class="hljs-string">&quot;user_account&quot;</span>, userAccount).eq(<span class="hljs-string">&quot;user_password&quot;</span>, encryptPassword);<br>    User one = this.get<span class="hljs-constructor">One(<span class="hljs-params">qw</span>)</span>;<br><br>    <span class="hljs-comment">// 1.5.1.用户未注册(包含了MP自带的逻辑删除校验)</span><br>    <span class="hljs-keyword">if</span> (one<span class="hljs-operator"> == </span>null)<br>        return null;<br><br>    <span class="hljs-comment">// 2.脱敏用户信息</span><br>    User safetyUser = get<span class="hljs-constructor">SafetyUser(<span class="hljs-params">one</span>)</span>;<br><br>    <span class="hljs-comment">// 3.记录用户登录态</span><br>    request.get<span class="hljs-constructor">Session()</span>.set<span class="hljs-constructor">Attribute(USER_LOGIN_STATE, <span class="hljs-params">safetyUser</span>)</span>;<br><br>    <span class="hljs-comment">// 4.返回用户信息</span><br>    return safetyUser;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="注册-校验"><a href="#注册-校验" class="headerlink" title="注册+校验"></a>注册+校验</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount, String userPassword, String checkPassword)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户注册</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userAccount   账户</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userPassword  密码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> checkPassword 二次密码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 用户id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount, String userPassword, String checkPassword)</span> &#123;<br>        <span class="hljs-comment">// 1.校验</span><br>        <span class="hljs-comment">// 1.1.账户, 密码, 二次密码不能为空</span><br>        <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword))<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">// 1.2.账户不小于4位</span><br>        <span class="hljs-keyword">if</span> (userAccount.length() &lt; <span class="hljs-number">4</span>)<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">// 1.3.账户不能重复</span><br>        QueryWrapper&lt;User&gt; lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;(); <span class="hljs-comment">// LambdaQueryWrapper&lt;User&gt; userLambdaQueryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br>        lqw.eq(<span class="hljs-string">&quot;user_account&quot;</span>, userAccount); <span class="hljs-comment">// userLambdaQueryWrapper.eq(User::getUserAccount, userAccount);</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> userMapper.selectCount(lqw);   <span class="hljs-comment">// long count = this.count(lqw);</span><br><br>        <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">// 1.4.用户密码不小于8位</span><br>        <span class="hljs-keyword">if</span> (userPassword.length() &lt; <span class="hljs-number">8</span>)<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">// 1.5.账户不包含特殊字符</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.*[\\s`~!@#$%^&amp;*()+=|&#123;&#125;&#x27;:;&#x27;,\\[\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？\\\\]+.*&quot;</span>;<br>        <span class="hljs-keyword">if</span> (Pattern.matches(pattern, userAccount))<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">// 1.6.二次密码与密码相同</span><br>        <span class="hljs-keyword">if</span> (!userPassword.equals(checkPassword))<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br><br>        <span class="hljs-comment">// 2.对密码进行加密</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">encryptPassword</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());<br><span class="hljs-comment">//        System.out.println(encryptPassword);</span><br><br><br>        <span class="hljs-comment">// 3.向数据库中插入用户数据</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        <span class="hljs-comment">//</span><br>        user.setUserAccount(userAccount);<br>        user.setUserPassword(encryptPassword);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">save</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.save(user);<br>        <span class="hljs-comment">//插入失败</span><br>        <span class="hljs-keyword">if</span> (!save)<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">return</span> user.getId();<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="封装脱敏用户信息"><a href="#封装脱敏用户信息" class="headerlink" title="封装脱敏用户信息"></a>封装脱敏用户信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">User <span class="hljs-title function_">getSafetyUser</span><span class="hljs-params">(User originUser)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户信息脱敏</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> originUser 原始用户</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 脱敏后的用户</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getSafetyUser</span><span class="hljs-params">(User originUser)</span> &#123;<br>    <span class="hljs-keyword">if</span> (originUser == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-type">User</span> <span class="hljs-variable">safetyUser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>    safetyUser.setId(originUser.getId());<br>    safetyUser.setUserAccount(originUser.getUserAccount());<br>    safetyUser.setUsername(originUser.getUsername());<br>    safetyUser.setAvatarUrl(originUser.getAvatarUrl());<br>    safetyUser.setGender(originUser.getGender());<br>    safetyUser.setPhone(originUser.getPhone());<br>    safetyUser.setEmail(originUser.getEmail());<br>    safetyUser.setUserStatus(originUser.getUserStatus());<br>    safetyUser.setCreateTime(originUser.getCreateTime());<br>    safetyUser.setIsDelete(originUser.getIsDelete());<br>    safetyUser.setUserRole(originUser.getUserRole());<br><br>    <span class="hljs-keyword">return</span> safetyUser;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h5><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户登录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userLoginRequest 登录信息封装</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request          request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> User</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">userLogin</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserLoginRequest userLoginRequest, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userLoginRequest.getUserAccount();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> userLoginRequest.getUserPassword();<br>        <span class="hljs-comment">//controller对参数的校验</span><br>        <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword))<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">return</span> userService.userLogin(userAccount, userPassword, request);<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户注册</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> userRegisterRequest 注册信息封装类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br><span class="hljs-keyword">public</span> Long <span class="hljs-title function_">userRegister</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserRegisterRequest userRegisterRequest)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserAccount();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserPassword();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">checkPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getCheckPassword();<br>    <span class="hljs-comment">//controller对参数的校验</span><br>    <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">return</span> userService.userRegister(userAccount, userPassword, checkPassword);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查询用户-权限校验"><a href="#查询用户-权限校验" class="headerlink" title="查询用户+权限校验"></a>查询用户+权限校验</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询用户</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> username 用户名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 查到的用户</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/search&quot;)</span><br>    <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">userSearch</span><span class="hljs-params">(String username, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验权限</span><br>        <span class="hljs-keyword">if</span> (!isAdmin(request))<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-comment">// 2.判空, 默认查询全部</span><br>        QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(username))<br>            qw.like(<span class="hljs-string">&quot;username&quot;</span>, username);<br>        <span class="hljs-comment">// 3.查询</span><br>        List&lt;User&gt; userList = userService.list(qw);<br>        <span class="hljs-comment">// 4.返回脱敏的用户信息</span><br>        <span class="hljs-keyword">return</span> userList.stream().map(user -&gt; userService.getSafetyUser(user)).collect(Collectors.toList());<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="删除用户-权限校验"><a href="#删除用户-权限校验" class="headerlink" title="删除用户+权限校验"></a>删除用户+权限校验</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除用户</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 用户id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> true/false</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/delete&quot;)</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">userDelete</span><span class="hljs-params">(Long id, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">// 1.校验权限</span><br>        <span class="hljs-keyword">if</span> (!isAdmin(request))<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-keyword">if</span> (id &lt;= <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-comment">// 2.删除用户(只要配置MP的逻辑删除的话, 该删除为逻辑删除)</span><br>        <span class="hljs-keyword">return</span> userService.removeById(id);<br>    &#125;<br><br></code></pre></td></tr></table></figure><h2 id="获取用户登录态"><a href="#获取用户登录态" class="headerlink" title="获取用户登录态"></a>获取用户登录态</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 查询用户</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> username 用户名</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> 查到的用户</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@GetMapping(&quot;/search&quot;)</span><br>  <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">userSearch</span><span class="hljs-params">(String username, HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">// 1.校验权限</span><br>      <span class="hljs-keyword">if</span> (!isAdmin(request))<br>          <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>      <span class="hljs-comment">// 2.判空, 默认查询全部</span><br>      QueryWrapper&lt;User&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>      <span class="hljs-keyword">if</span> (StringUtils.isNotBlank(username))<br>          qw.like(<span class="hljs-string">&quot;username&quot;</span>, username);<br>      <span class="hljs-comment">// 3.查询</span><br>      List&lt;User&gt; userList = userService.list(qw);<br>      <span class="hljs-comment">// 4.返回脱敏的用户信息</span><br>      <span class="hljs-keyword">return</span> userList.stream().map(user -&gt; userService.getSafetyUser(user)).collect(Collectors.toList());<br>  &#125;<br></code></pre></td></tr></table></figure><h2 id="封装校验管理员逻辑"><a href="#封装校验管理员逻辑" class="headerlink" title="封装校验管理员逻辑"></a>封装校验管理员逻辑</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 校验是否为管理员</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 校验成功与否</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">isAdmin</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">//校验是否为管理员</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) request.getSession().getAttribute(USER_LOGIN_STATE);<br>        <span class="hljs-keyword">return</span> user != <span class="hljs-literal">null</span> &amp;&amp; user.getUserRole() == ADMIN_ROLE;<br>    &#125;<br></code></pre></td></tr></table></figure><h5 id="constant层"><a href="#constant层" class="headerlink" title="constant层"></a>constant层</h5><h2 id="封装常量"><a href="#封装常量" class="headerlink" title="封装常量"></a>封装常量</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//登录用户session Key</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">USER_LOGIN_STATE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;userLoginState&quot;</span>;<br>   <span class="hljs-comment">//管理员权限</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">ADMIN_ROLE</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>   <span class="hljs-comment">//普通用户权限</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">DEFAULT_ROLE</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h5 id="model-request层"><a href="#model-request层" class="headerlink" title="model/request层"></a>model/request层</h5><h2 id="封装login-register实体接收类"><a href="#封装login-register实体接收类" class="headerlink" title="封装login/register实体接收类"></a>封装login/register实体接收类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserLoginRequest</span> &#123;<br>    <span class="hljs-keyword">private</span> String userAccount;<br>    <span class="hljs-keyword">private</span> String userPassword;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRegisterRequest</span> &#123;<br>    <span class="hljs-keyword">private</span> String userAccount;<br>    <span class="hljs-keyword">private</span> String userPassword;<br>    <span class="hljs-keyword">private</span> String checkPassword;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h1><h2 id="修改登录页面"><a href="#修改登录页面" class="headerlink" title="修改登录页面"></a>修改登录页面</h2><ul><li><p>熟悉登录流程 请求地址 返回数据</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 登录</span><br><span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-title function_">login</span>(&#123;<br>  ...values,<br>  <span class="hljs-keyword">type</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/** 登录接口 POST /api/login/account */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">body: API.LoginParams, options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">LoginResult</span>&gt;(<span class="hljs-string">&#x27;/api/user/login&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>      <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">data</span>: body,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>登录表单的校验逻辑(账号 密码)</p></li><li><p>登录校验  成功则提示登录成功   重定向到welcome页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 登录成功</span><br><span class="hljs-keyword">if</span> (user) &#123;<br>  <span class="hljs-keyword">const</span> defaultLoginSuccessMessage = <span class="hljs-string">&#x27;登录成功！&#x27;</span>;<br>  message.<span class="hljs-title function_">success</span>(defaultLoginSuccessMessage);<br>  <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetchUserInfo</span>();<br>  <span class="hljs-comment">/** 此方法会跳转到 redirect 参数所在的位置 */</span><br>  <span class="hljs-keyword">if</span> (!history) <span class="hljs-keyword">return</span>;<br>  <span class="hljs-keyword">const</span> &#123;query&#125; = history.<span class="hljs-property">location</span>;<br>  <span class="hljs-keyword">const</span> &#123;redirect&#125; = query <span class="hljs-keyword">as</span> &#123;<br>    <span class="hljs-attr">redirect</span>: string;<br>  &#125;;<br>  <span class="hljs-comment">// &#123; path: &#x27;/&#x27;, redirect: &#x27;/welcome&#x27; &#125;,</span><br>  <span class="hljs-comment">// 跳转到欢迎页面</span><br>  history.<span class="hljs-title function_">push</span>(redirect || <span class="hljs-string">&#x27;/&#x27;</span>);<br>  <span class="hljs-keyword">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>登录校验  失败则提示登录失败</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> defaultLoginFailureMessage = <span class="hljs-string">&#x27;登录失败，请重试！&#x27;</span>;<br>message.<span class="hljs-title function_">error</span>(defaultLoginFailureMessage);<br></code></pre></td></tr></table></figure></li></ul><h2 id="开发注册页面"><a href="#开发注册页面" class="headerlink" title="开发注册页面"></a>开发注册页面</h2><ul><li><p>登录页的复制粘贴</p></li><li><p>路由的理解  设置注册页的路由  </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;注册&#x27;</span>, <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/register&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./user/Register&#x27;</span> &#125;,<br></code></pre></td></tr></table></figure></li><li><p>注册表单的校验逻辑(账号 密码)</p></li><li><p>熟悉注册流程  请求地址 返回数据</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 发起请求</span><br><span class="hljs-keyword">const</span> id = <span class="hljs-keyword">await</span> <span class="hljs-title function_">register</span>(&#123;<br>  ...values,<br>  <span class="hljs-keyword">type</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/** 注册接口 POST /api/login/account */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">register</span>(<span class="hljs-params">body: API.LoginParams, options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">LoginResult</span>&gt;(<span class="hljs-string">&#x27;/api/user/register&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>      <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">data</span>: body,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>解决访问注册页面   重定向到Login问题   业务逻辑   白名单内, 无需重定向到登录页</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">//白名单内无需重定向</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NO_NEED_LOGIN_WHITE_LIST</span>.<span class="hljs-title function_">includes</span>(location.<span class="hljs-property">pathname</span>))<br>  <span class="hljs-keyword">return</span>;<br><span class="hljs-comment">// 白名单外, 如果没有登录, 重定向到 login</span><br><span class="hljs-keyword">if</span> (!initialState?.<span class="hljs-property">currentUser</span>) &#123;<br>  history.<span class="hljs-title function_">push</span>(loginPath);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>注册成功  提示”注册成功”  跳转登录页面</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript">history.<span class="hljs-title function_">push</span>(&#123;<br>  <span class="hljs-attr">pathname</span>: <span class="hljs-string">&#x27;user/login&#x27;</span>,<br>  query,<br>&#125;)<br>跳转到登录页面<br></code></pre></td></tr></table></figure></li><li><p>注册失败  提示”注册失败”   </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> defaultLoginFailureMessage = <span class="hljs-string">&#x27;注册失败，请重试！&#x27;</span>;<br>message.<span class="hljs-title function_">error</span>(defaultLoginFailureMessage);<br></code></pre></td></tr></table></figure></li><li><p>“登录” 修改为 “注册”   (了解源码)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript">submitter=&#123;&#123;<br>  <span class="hljs-attr">searchConfig</span>: &#123;<br>    <span class="hljs-attr">submitText</span>: <span class="hljs-string">&#x27;注册&#x27;</span><br>  &#125;<br>&#125;&#125;<br></code></pre></td></tr></table></figure></li><li><p>添加注册校验  简单的逻辑  根据返回的数据  解构出密码和二次密码 判断二者是否相等</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> &#123;userPassword, checkPassword&#125; = values;<br><span class="hljs-comment">//校验</span><br><span class="hljs-keyword">if</span> (userPassword != checkPassword) &#123;<br>  message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;两次输入的密码不一致!&#x27;</span>)<br>  <span class="hljs-keyword">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>添加登录页跳转到注册页的链接”新用户注册”  仿照  “忘记密码”  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a<br>  href=&quot;/user/register&quot;<br>  target=&quot;_blank&quot;<br>  rel=&quot;noreferrer&quot;<br>&gt;<br>  新用户注册<br>&lt;/a&gt;<br></code></pre></td></tr></table></figure></li></ul><h1 id="获取当前用户登录态"><a href="#获取当前用户登录态" class="headerlink" title="获取当前用户登录态"></a>获取当前用户登录态</h1><h2 id="后端实现接口"><a href="#后端实现接口" class="headerlink" title="后端实现接口"></a>后端实现接口</h2><p>返回当前用户的当前信息(重新查询过数据库)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/currentUser&quot;)</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getCurrentUser</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">currentUser</span> <span class="hljs-operator">=</span> (User) request.getSession().getAttribute(USER_LOGIN_STATE);<br>    <span class="hljs-keyword">if</span> (currentUser == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> currentUser.getId();<br>    <span class="hljs-comment">// 查询数据库, 获取最新信息, 而非登录时记录的信息</span><br>    <span class="hljs-keyword">return</span> userService.getById(id);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="前端获取用户登录态"><a href="#前端获取用户登录态" class="headerlink" title="前端获取用户登录态"></a>前端获取用户登录态</h2><ul><li>app.tsx   前端服务入口   每次打开页面, 都会执行查询</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 查询用户登录态信息</span><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">queryCurrentUser</span>();<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 请求</span><br><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;(<span class="hljs-string">&#x27;/api/user/currentUser&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>修改CurrentUser, 将返回的字段全部修改为对应数据库中的字段</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">type</span> <span class="hljs-title class_">CurrentUser</span> = &#123;<br>  id?: <span class="hljs-built_in">number</span>;<br>  userAccount?: <span class="hljs-built_in">string</span>;<br>  username?: <span class="hljs-built_in">string</span>;<br>  avatarUtil?: <span class="hljs-built_in">string</span>;<br>  gender?: <span class="hljs-built_in">string</span>;<br>  phone?: <span class="hljs-built_in">string</span>;<br>  email?: <span class="hljs-built_in">string</span>;<br>  userStatus?: <span class="hljs-built_in">string</span>;<br>  userRole?: <span class="hljs-built_in">string</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>设置白名单, 登录注册页面不会返回查询到的用户登录态, 其余页面会返回查询到的用户登录态</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 白名单内(登陆注册), 不返回用户登录态信息</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NO_NEED_LOGIN_WHITE_LIST</span>.<span class="hljs-title function_">includes</span>(history.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>)) &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    fetchUserInfo,<br>    <span class="hljs-attr">settings</span>: defaultSettings,<br>  &#125;;<br>&#125;<br><span class="hljs-comment">// 登陆注册后, 页面返回用户登录态信息</span><br><span class="hljs-keyword">const</span> currentUser = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetchUserInfo</span>();<br><span class="hljs-keyword">return</span> &#123;<br>  fetchUserInfo,<br>  currentUser,<br>  <span class="hljs-attr">settings</span>: defaultSettings,<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="开发欢迎页面"><a href="#开发欢迎页面" class="headerlink" title="开发欢迎页面"></a>开发欢迎页面</h1><ul><li>设置欢迎页面的水印  头像</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-attr">waterMarkProps</span>: &#123;<br>  <span class="hljs-comment">// 添加水印</span><br>  <span class="hljs-attr">content</span>: initialState?.<span class="hljs-property">currentUser</span>?.<span class="hljs-property">username</span>, <span class="hljs-comment">// 以用户昵称作为水印</span><br>&#125;,<br></code></pre></td></tr></table></figure><ul><li>头像的话在/src/components/RightContext/AvatarDropdown.tsx里有个引用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;Avatar size=&quot;small&quot; className=&#123;styles.avatar&#125; src=&#123;currentUser.avatarUrl&#125; alt=&quot;avatar&quot;/&gt;<br></code></pre></td></tr></table></figure><ul><li>我这边头像刷新不出来是因为数据库里字段名写成avatarUtil了,一直没发现,改了正确的字段名以及映射实体类属性名  Mapper.xml 文件后 头像映射正常了</li></ul><h1 id="开发用户管理页面"><a href="#开发用户管理页面" class="headerlink" title="开发用户管理页面"></a>开发用户管理页面</h1><h2 id="新建一个管理界面"><a href="#新建一个管理界面" class="headerlink" title="新建一个管理界面"></a>新建一个管理界面</h2><ul><li><p>他奶奶的我这边出问题了</p></li><li><p>我新建了一个/Pages/Admin/UserManage    把Register文件夹复制过去打算修改, 结果它给我把Register的路由给替换了</p></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;注册&#x27;</span>, <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/register&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./user/UserManage&#x27;</span> &#125;,<br></code></pre></td></tr></table></figure><ul><li>然后前端直接挂掉了, 报错报了这个玩意儿  妈的找了半天 终于发现了 把路由改回来了</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">Cannot <span class="hljs-built_in">find</span> <span class="hljs-built_in">module</span> <span class="hljs-string">&#x27;D:/Project/星球项目/ClientCenter/myapp/src/pages/user/UserManage&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>给新增的用户管理页面加个路由</li></ul><p>​    path: ‘/admin/user-manager’    是访问路径</p><p>​    component: ‘./Admin/UserManage’    是资源路径</p><p>​    仿照下面的写就行了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;管理页&#x27;</span>,<br>  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;crown&#x27;</span>,<br>  <span class="hljs-attr">access</span>: <span class="hljs-string">&#x27;canAdmin&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin&#x27;</span>,<br>  <span class="hljs-attr">routes</span>: [<br>  <span class="hljs-comment">// 用户管理</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/user-manager&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin/UserManage&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/sub-page&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;二级管理页&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Welcome&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./404&#x27;</span> &#125;,<br>  ],<br>&#125;,<br></code></pre></td></tr></table></figure><ul><li>访问<a href="http://localhost:8000/admin/user-manager%E5%8F%91%E7%8E%B0%E6%97%A0%E6%9D%83%E8%AE%BF%E9%97%AE">http://localhost:8000/admin/user-manager发现无权访问</a>    好像存在访问权限    访问不到</li></ul><h4 id="项目全局入口"><a href="#项目全局入口" class="headerlink" title="项目全局入口"></a>项目全局入口</h4><h6 id="app-tsx是项目全局入口-里面包含了访问页面时-就会调用的方法-重定向到Login页-查询用户登录态"><a href="#app-tsx是项目全局入口-里面包含了访问页面时-就会调用的方法-重定向到Login页-查询用户登录态" class="headerlink" title="app.tsx是项目全局入口     里面包含了访问页面时, 就会调用的方法,     重定向到Login页   查询用户登录态"></a>app.tsx是项目全局入口     里面包含了访问页面时, 就会调用的方法,     <strong>重定向到Login页   查询用户登录态</strong></h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;管理页&#x27;</span>,<br>  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;crown&#x27;</span>,<br>  <span class="hljs-comment">// 管理员权限校验</span><br>  <span class="hljs-attr">access</span>: <span class="hljs-string">&#x27;canAdmin&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin&#x27;</span>,<br>  <span class="hljs-attr">routes</span>: [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/user-manager&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin/UserManage&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/sub-page&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;二级管理页&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Welcome&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./404&#x27;</span> &#125;,<br>  ],<br>&#125;,<br></code></pre></td></tr></table></figure><h6 id="看到那个access了吗-通过校验’canAdmin’的真假-判断是否具有管理员权限-这就是控制了这个路由的访问权限-怎么实现的"><a href="#看到那个access了吗-通过校验’canAdmin’的真假-判断是否具有管理员权限-这就是控制了这个路由的访问权限-怎么实现的" class="headerlink" title="看到那个access了吗  通过校验’canAdmin’的真假   判断是否具有管理员权限  这就是控制了这个路由的访问权限    怎么实现的?"></a>看到那个access了吗  通过校验’canAdmin’的真假   判断是否具有管理员权限  这就是控制了这个路由的访问权限    怎么实现的?</h6><h4 id="访问权限管理"><a href="#访问权限管理" class="headerlink" title="访问权限管理"></a>访问权限管理</h4><h6 id="access-ts是访问权限管理-在查询到用户登录态后-通过返回结果CurrentUser来校验-这段逻辑非常简单-我们可以修改为自己的逻辑"><a href="#access-ts是访问权限管理-在查询到用户登录态后-通过返回结果CurrentUser来校验-这段逻辑非常简单-我们可以修改为自己的逻辑" class="headerlink" title="access.ts是访问权限管理    在查询到用户登录态后    通过返回结果CurrentUser来校验    这段逻辑非常简单    我们可以修改为自己的逻辑"></a>access.ts是访问权限管理    在查询到用户登录态后    通过返回结果CurrentUser来校验    这段逻辑非常简单    我们可以修改为自己的逻辑</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">access</span>(<span class="hljs-params">initialState: &#123; currentUser?: API.CurrentUser &#125; | <span class="hljs-literal">undefined</span></span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123; currentUser &#125; = initialState ?? &#123;&#125;;<br>  <span class="hljs-comment">// 权限校验</span><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-comment">// 校验管理员权限</span><br>    <span class="hljs-attr">canAdmin</span>: currentUser &amp;&amp; currentUser.<span class="hljs-property">access</span> === <span class="hljs-string">&#x27;admin&#x27;</span><br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>修改访问路由的管理员权限的校验规则</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 校验管理员权限</span><br><span class="hljs-attr">canAdmin</span>: currentUser &amp;&amp; currentUser.<span class="hljs-property">userRole</span> === <span class="hljs-number">1</span>,<br></code></pre></td></tr></table></figure><ul><li>找一个管理员账号登录,  发现<a href="http://localhost:8000/admin/user-manager%E9%A1%B5%E9%9D%A2%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E4%BA%86">http://localhost:8000/admin/user-manager页面可以访问了</a>  因为我们由管理员权限了</li></ul><h2 id="正确显示管理页面"><a href="#正确显示管理页面" class="headerlink" title="正确显示管理页面"></a>正确显示管理页面</h2><h6 id="原本的页面显示组件是-Admin-tsx"><a href="#原本的页面显示组件是-Admin-tsx" class="headerlink" title="原本的页面显示组件是 Admin.tsx"></a>原本的页面显示组件是 Admin.tsx</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 父路由</span><br><span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin&#x27;</span>,<br><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;管理页&#x27;</span>,<br><span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;crown&#x27;</span>,<br><span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin&#x27;</span>,<br><span class="hljs-comment">// 子路由</span><br>    <span class="hljs-attr">routes</span>: [<br>      &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/user-manager&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;smile&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./Admin/UserManage&#x27;</span> &#125;,<br>      &#123; <span class="hljs-attr">component</span>: <span class="hljs-string">&#x27;./404&#x27;</span> &#125;,<br>    ],<br></code></pre></td></tr></table></figure><h6 id="组件里面这么写"><a href="#组件里面这么写" class="headerlink" title="组件里面这么写:"></a>组件里面这么写:</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript">onst <span class="hljs-title class_">Admin</span>: <span class="hljs-title class_">React</span>.<span class="hljs-property">FC</span> = <span class="hljs-function">(<span class="hljs-params">&#123;children&#125;</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">PageHeaderWrapper</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&#123;</span>&#x27; <span class="hljs-attr">这个页面只有</span> <span class="hljs-attr">admin</span> <span class="hljs-attr">权限才能查看</span>&#x27;&#125;&gt;</span></span><br><span class="language-xml">    // 展示子路由组件</span><br><span class="language-xml">      &#123;children&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">PageHeaderWrapper</span>&gt;</span></span><br>  );<br>&#125;;<br></code></pre></td></tr></table></figure><h6 id="这样管理页面就能显示我们定义的组件-Admin-UserManage-index-tsx-了"><a href="#这样管理页面就能显示我们定义的组件-Admin-UserManage-index-tsx-了" class="headerlink" title="这样管理页面就能显示我们定义的组件 Admin/UserManage/index.tsx 了"></a>这样管理页面就能显示我们定义的组件 Admin/UserManage/index.tsx 了</h6><ul><li><p>我们上ProComponents的高级表格里找一个高级表格, 作为管理页面</p></li><li><p>直接找一个漂亮有用的, 粘贴到/UserManage/index.tsx里</p></li><li><p>接下来就是对该页面的改造了</p></li></ul><h2 id="改造新的组件-管理页面"><a href="#改造新的组件-管理页面" class="headerlink" title="改造新的组件(管理页面)"></a>改造新的组件(管理页面)</h2><h4 id="改造表格数据-数据如何展示"><a href="#改造表格数据-数据如何展示" class="headerlink" title="改造表格数据(数据如何展示)"></a>改造表格数据(数据如何展示)</h4><ul><li>改造返回数据类型 (API.CurrentUser) 和各列名</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 返回的数据类型改造为Api.currentUser</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">columns</span>: <span class="hljs-title class_">ProColumns</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;[] = [<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userAccount&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;昵称&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;username&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;头像&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;avatarUrl&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;性别&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;电话&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;phone&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;邮件&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;email&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;角色&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userRole&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>    <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">disable</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;状态&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;state&#x27;</span>,<br>    <span class="hljs-attr">filters</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">onFilter</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>    <span class="hljs-attr">valueEnum</span>: &#123;<br>      <span class="hljs-attr">all</span>: &#123;<span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;超长&#x27;</span>.<span class="hljs-title function_">repeat</span>(<span class="hljs-number">50</span>)&#125;,<br>      <span class="hljs-attr">open</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;未解决&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Error&#x27;</span>,<br>      &#125;,<br>      <span class="hljs-attr">closed</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;已解决&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Success&#x27;</span>,<br>        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,<br>      &#125;,<br>      <span class="hljs-attr">processing</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;解决中&#x27;</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Processing&#x27;</span>,<br>      &#125;,<br>    &#125;,<br>  &#125;,<br><br>];<br></code></pre></td></tr></table></figure><h4 id="改造访问路径-数据从何而来"><a href="#改造访问路径-数据从何而来" class="headerlink" title="改造访问路径(数据从何而来)"></a>改造访问路径(数据从何而来)</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript">columns=&#123;columns&#125;<br>actionRef=&#123;actionRef&#125;<br>cardBordered<br>request=&#123;<span class="hljs-keyword">async</span> (params = &#123;&#125;, sort, filter) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sort, filter);<br>  <span class="hljs-comment">// 返回userList</span><br>  <span class="hljs-comment">// 自定义函数</span><br>  <span class="hljs-keyword">const</span> userList = <span class="hljs-keyword">await</span> <span class="hljs-title function_">searchUsers</span>();<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">data</span>: userList<br>  &#125;<br>&#125;&#125;<br></code></pre></td></tr></table></figure><ul><li>在api.ts下编写自定义函数searchUsers, 并设置访问路径</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/** 此处后端没有提供注释 GET /api/notices */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">searchUsers</span>(<span class="hljs-params">options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span>) &#123;<br><span class="hljs-comment">// 返回数据格式为API.CurrentUser</span><br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;(<span class="hljs-string">&#x27;/api/user/search&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>后端返回所有用户数据, 并展示在表格中 展示成功了</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询用户</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> username 用户名</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 查到的用户</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping</span>(<span class="hljs-string">&quot;/search&quot;</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-title class_">List</span>&lt;<span class="hljs-title class_">User</span>&gt; <span class="hljs-title function_">userSearch</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> username, HttpServletRequest request</span>) &#123;<br>    <span class="hljs-comment">// 1.校验权限</span><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isAdmin</span>(request))<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-comment">// 2.判空, 默认查询全部</span><br>    <span class="hljs-title class_">QueryWrapper</span>&lt;<span class="hljs-title class_">User</span>&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">StringUtils</span>.<span class="hljs-title function_">isNotBlank</span>(username))<br>        qw.<span class="hljs-title function_">like</span>(<span class="hljs-string">&quot;username&quot;</span>, username);<br>    <span class="hljs-comment">// 3.查询</span><br>    <span class="hljs-title class_">List</span>&lt;<span class="hljs-title class_">User</span>&gt; userList = userService.<span class="hljs-title function_">list</span>(qw);<br>    <span class="hljs-comment">// 4.返回脱敏的用户信息</span><br>    <span class="hljs-keyword">return</span> userList.<span class="hljs-title function_">stream</span>().<span class="hljs-title function_">map</span>(user -&gt; userService.<span class="hljs-title function_">getSafetyUser</span>(user)).<span class="hljs-title function_">collect</span>(<span class="hljs-title class_">Collectors</span>.<span class="hljs-title function_">toList</span>());<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="项目全局命名空间-把一组TS类型全部定义到了这个命名空间下-即定义了一组返回数据对象-取的时候就不需要import了-直接API-TS类型就可以取到"><a href="#项目全局命名空间-把一组TS类型全部定义到了这个命名空间下-即定义了一组返回数据对象-取的时候就不需要import了-直接API-TS类型就可以取到" class="headerlink" title="项目全局命名空间, 把一组TS类型全部定义到了这个命名空间下, 即定义了一组返回数据对象, 取的时候就不需要import了, 直接API.TS类型就可以取到"></a><em><strong>项目全局命名空间</strong></em>, <em>把一组TS类型全部定义到了这个命名空间下, 即定义了一组返回数据对象, 取的时候就不需要import了, 直接API.TS类型就可以取到</em></h6><h6 id="src-services-ant-design-pro-typings-d-ts"><a href="#src-services-ant-design-pro-typings-d-ts" class="headerlink" title="src/services/ant-design-pro/typings.d.ts"></a>src/services/ant-design-pro/typings.d.ts</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">namespace</span> API &#123;<br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">CurrentUser</span> = &#123;<br>  .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">LoginResult</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">RegisterResult</span> = <span class="hljs-built_in">number</span>;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">PageParams</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">RuleListItem</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">RuleList</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">FakeCaptcha</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">LoginParams</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">RegisterParams</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">ErrorResponse</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">NoticeIconList</span> = &#123;<br>   .............<br>  &#125;;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">NoticeIconItemType</span> = <span class="hljs-string">&#x27;notification&#x27;</span> | <span class="hljs-string">&#x27;message&#x27;</span> | <span class="hljs-string">&#x27;event&#x27;</span>;<br><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">NoticeIconItem</span> = &#123;<br>   .............<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="src-services-ant-design-pro-api-ts-这里定义了许多请求接口-根据请求地址-请求方式发出请求"><a href="#src-services-ant-design-pro-api-ts-这里定义了许多请求接口-根据请求地址-请求方式发出请求" class="headerlink" title="src/services/ant-design-pro/api.ts    这里定义了许多请求接口    根据请求地址 请求方式发出请求"></a>src/services/ant-design-pro/api.ts    <em>这里定义了许多请求接口</em>    <em>根据请求地址</em> 请求方式发出请求</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;umi&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="修改表格显示细节"><a href="#修改表格显示细节" class="headerlink" title="修改表格显示细节"></a>修改表格显示细节</h2><ul><li><p>通过columns定义表格有哪些列</p></li><li><p>column属性</p></li></ul><p>​        <em><strong>dataIndex    对应返回数据对象的属性</strong></em></p><p>​        <em><strong>title    表格列名</strong></em></p><p>​        <em><strong>copyable    是否允许复制</strong></em></p><p>​        <em><strong>ellipsis    是否允许缩略</strong></em></p><p>​        <em><strong>valueType    用于声明这一列的类型</strong></em></p><ul><li>头像</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&#123;<br>  title: &#x27;头像&#x27;,<br>  dataIndex: &#x27;avatarUrl&#x27;,<br>  copyable: true,<br>  render: (_, record) =&gt; (<br>    &lt;div&gt;<br>      &lt;img src=&#123;record.avatarUrl&#125; width=&#123;100&#125;/&gt;<br>    &lt;/div&gt;<br>  )<br>&#125;,<br></code></pre></td></tr></table></figure><ul><li>性别    角色    状态</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;性别&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,<br>  <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>  <span class="hljs-attr">valueEnum</span>: &#123;<br>    <span class="hljs-number">0</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;女&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-number">1</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;男&#x27;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;,<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;角色&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userRole&#x27;</span>,<br>  <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>  <span class="hljs-attr">valueEnum</span>: &#123;<br>    <span class="hljs-number">0</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;普通用户&#x27;</span>,<br>      <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Default&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-number">1</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;管理员&#x27;</span>,<br>      <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Success&#x27;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;,<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;状态&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userStatus&#x27;</span>,<br>  <span class="hljs-attr">valueType</span>: <span class="hljs-string">&#x27;select&#x27;</span>,<br>  <span class="hljs-attr">valueEnum</span>: &#123;<br>    <span class="hljs-number">0</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;正常&#x27;</span>,<br>      <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Success&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-number">1</span>: &#123;<br>      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;异常&#x27;</span>,<br>      <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;Error&#x27;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;,<br></code></pre></td></tr></table></figure><h1 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h1><h2 id="新增注销功能"><a href="#新增注销功能" class="headerlink" title="新增注销功能"></a>新增注销功能</h2><ul><li>service层新增userLogout</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-title function_">userLogout</span><span class="hljs-params">(HttpServletRequest request)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 用户注销</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">userLogout</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>   <span class="hljs-comment">// 移除session</span><br>       request.getSession().removeAttribute(USER_LOGIN_STATE);<br>       <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li>controller层新增userLogout</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 用户登录</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> int</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@PostMapping(&quot;/logout&quot;)</span><br>  <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">userLogout</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>      <span class="hljs-comment">//controller对参数的校验</span><br>      <span class="hljs-keyword">if</span> (request == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>      <span class="hljs-keyword">return</span> userService.userLogout(request);<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li>前端src/RightContent/AvatarDropdown.tsx下有注销功能</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 退出登录，并且将当前的 url 保存</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">loginOut</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">await</span> <span class="hljs-title function_">outLogin</span>();<br>  <span class="hljs-keyword">const</span> &#123;query = &#123;&#125;, search, pathname&#125; = history.<span class="hljs-property">location</span>;<br>  <span class="hljs-keyword">const</span> &#123;redirect&#125; = query;<br>  <span class="hljs-comment">// Note: There may be security issues, please note</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span> !== <span class="hljs-string">&#x27;/user/login&#x27;</span> &amp;&amp; !redirect) &#123;<br>    history.<span class="hljs-title function_">replace</span>(&#123;<br>      <span class="hljs-attr">pathname</span>: <span class="hljs-string">&#x27;/user/login&#x27;</span>,<br>      <span class="hljs-attr">search</span>: <span class="hljs-title function_">stringify</span>(&#123;<br>        <span class="hljs-attr">redirect</span>: pathname + search,<br>      &#125;),<br>    &#125;);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>修改注销接口 请求路径 </li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/** 退出登录接口 POST /api/user/logout */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">outLogin</span>(<span class="hljs-params">options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> request&lt;<span class="hljs-title class_">Record</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">any</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/logout&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    ...(options || &#123;&#125;),<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="注销功能优化完毕"><a href="#注销功能优化完毕" class="headerlink" title="注销功能优化完毕"></a>注销功能优化完毕</h4><h2 id="用户必填信息新增星球编号"><a href="#用户必填信息新增星球编号" class="headerlink" title="用户必填信息新增星球编号"></a>用户必填信息新增星球编号</h2><ul><li>user表新增字段planet_code</li><li>重新生成对应实体类 domain    Mapper.xml  </li><li>注册接收类新增planetCode</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRegisterRequest</span> &#123;<br>    <span class="hljs-keyword">private</span> String userAccount;<br>    <span class="hljs-keyword">private</span> String userPassword;<br>    <span class="hljs-keyword">private</span> String checkPassword;<br>    <span class="hljs-keyword">private</span> String planetCode;<br>&#125;<br></code></pre></td></tr></table></figure><p>service层</p><ul><li>注册校验新增</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount, String userPassword, String checkPassword, String planetCode)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.6.星球编号不能超过5位</span><br>       <span class="hljs-keyword">if</span> (planetCode.length() &gt; <span class="hljs-number">5</span>)<br>           <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.8.星球编号不能重复</span><br>       QueryWrapper&lt;User&gt; pc_lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>       pc_lqw.eq(<span class="hljs-string">&quot;planet_code&quot;</span>, planetCode);<br>       <span class="hljs-type">Long</span> <span class="hljs-variable">pc_count</span> <span class="hljs-operator">=</span> userMapper.selectCount(pc_lqw);<br>       <span class="hljs-keyword">if</span> (pc_count &gt; <span class="hljs-number">0</span>)<br>           <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><ul><li>用户信息脱敏新增</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">safetyUser.setPlanetCode(originUser.getPlanetCode());<br></code></pre></td></tr></table></figure><p>controller层</p><ul><li>controller参数校验</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//controller对参数的校验</span><br><span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword, planetCode))<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><ul><li>注册页面新增星球编号填写和校验</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;ProFormText<br>  name=&quot;planetCode&quot;<br>  fieldProps=&#123;&#123;<br>    size: &#x27;large&#x27;,<br>    prefix: &lt;LockOutlined className=&#123;styles.prefixIcon&#125;/&gt;,<br>  &#125;&#125;<br>  placeholder=&#123;&#x27;请输入星球编号&#x27;&#125;<br>  rules=&#123;[<br>    &#123;<br>      required: true,<br>      message: &#x27;星球编号是必填项！&#x27;,<br>    &#125;,<br>    &#123;<br>      max: 5,<br>      type: &#x27;string&#x27;,<br>      message: &#x27;长度不能大于5位&#x27;,<br>    &#125;,<br>  ]&#125;<br>/&gt;<br></code></pre></td></tr></table></figure><ul><li>测试类新增planetCode</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;memory&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">checkPassword</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;123456&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">planetCode</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;17265&quot;</span>;<br><br>    <span class="hljs-type">long</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertEquals(-<span class="hljs-number">1</span>, result);<br>    userAccount = <span class="hljs-string">&quot;mem&quot;</span>;<br>    result = userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertEquals(-<span class="hljs-number">1</span>, result);<br>    userPassword = <span class="hljs-string">&quot;123456&quot;</span>;<br>    result = userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertEquals(-<span class="hljs-number">1</span>, result);<br>    userAccount = <span class="hljs-string">&quot;me mory&quot;</span>;<br>    userPassword = <span class="hljs-string">&quot;12345678&quot;</span>;<br>    result = userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertEquals(-<span class="hljs-number">1</span>, result);<br>    userAccount = <span class="hljs-string">&quot;me mory&quot;</span>;<br>    checkPassword = <span class="hljs-string">&quot;12345678&quot;</span>;<br>    result = userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertEquals(-<span class="hljs-number">1</span>, result);<br>    userAccount = <span class="hljs-string">&quot;memory4&quot;</span>;<br>    result = userService.userRegister(userAccount, userPassword, checkPassword, planetCode);<br>    Assertions.assertTrue(result &gt; <span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>currentUser新增planetCode</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">type</span> <span class="hljs-title class_">CurrentUser</span> = &#123;<br>  id?: <span class="hljs-built_in">number</span>;<br>  userAccount?: <span class="hljs-built_in">string</span>;<br>  username?: <span class="hljs-built_in">string</span>;<br>  avatarUrl?: <span class="hljs-built_in">string</span>;<br>  gender?: <span class="hljs-built_in">string</span>;<br>  phone?: <span class="hljs-built_in">string</span>;<br>  email?: <span class="hljs-built_in">string</span>;<br>  createTime?: <span class="hljs-title class_">Date</span>;<br>  userStatus?: <span class="hljs-built_in">string</span>;<br>  userRole?: <span class="hljs-built_in">number</span>;<br>  planetCode?: <span class="hljs-built_in">string</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>管理页用户信息新增planetCode</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;星球编号&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;planetCode&#x27;</span>,<br>  <span class="hljs-attr">copyable</span>: <span class="hljs-literal">true</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><h4 id="新增星球编号注册必填项完成-管理页用户信息正常显示"><a href="#新增星球编号注册必填项完成-管理页用户信息正常显示" class="headerlink" title="新增星球编号注册必填项完成, 管理页用户信息正常显示"></a>新增星球编号注册必填项完成, 管理页用户信息正常显示</h4><h2 id="返回通用对象"><a href="#返回通用对象" class="headerlink" title="返回通用对象"></a>返回通用对象</h2><ul><li><h5 id="自定义通用返回对象-BaseResponse"><a href="#自定义通用返回对象-BaseResponse" class="headerlink" title="自定义通用返回对象 - BaseResponse"></a>自定义通用返回对象 - BaseResponse</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 状态码</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> code;<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 数据</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> T data;<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 信息</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> String message;<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 描述</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> String description;<br></code></pre></td></tr></table></figure><ul><li><h5 id="通用返回对象多种构造器"><a href="#通用返回对象多种构造器" class="headerlink" title="通用返回对象多种构造器"></a>通用返回对象多种构造器</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 封装执行成功的结果</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> code        状态码</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> data        数据</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> message     信息</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> description 描述</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(<span class="hljs-type">int</span> code, T data, String message, String description)</span> &#123;<br>       <span class="hljs-built_in">this</span>.code = code;<br>       <span class="hljs-built_in">this</span>.data = data;<br>       <span class="hljs-built_in">this</span>.message = message;<br>       <span class="hljs-built_in">this</span>.description = description;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 封装全局自定义异常</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> code        状态码</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> message     信息</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> description 描述</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(<span class="hljs-type">int</span> code, String message, String description)</span> &#123;<br>       <span class="hljs-built_in">this</span>.code = code;<br>       <span class="hljs-built_in">this</span>.data = <span class="hljs-literal">null</span>;<br>       <span class="hljs-built_in">this</span>.message = message;<br>       <span class="hljs-built_in">this</span>.description = description;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 封装局部自定义异常</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> errorCode 自定义异常态</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(ErrorCode errorCode)</span> &#123;<br>      <span class="hljs-built_in">this</span>.code = errorCode.getCode();<br>      <span class="hljs-built_in">this</span>.data = <span class="hljs-literal">null</span>;<br>      <span class="hljs-built_in">this</span>.message = errorCode.getMessage();<br>      <span class="hljs-built_in">this</span>.description = errorCode.getDescription();<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="通用返回对象添加getter-setter方法"><a href="#通用返回对象添加getter-setter方法" class="headerlink" title="通用返回对象添加getter, setter方法"></a>通用返回对象添加getter, setter方法</h5></li><li><h5 id="这一步一定不要忘记啊-我就因为没加这俩方法-测试登录注册就报406错误"><a href="#这一步一定不要忘记啊-我就因为没加这俩方法-测试登录注册就报406错误" class="headerlink" title="这一步一定不要忘记啊, 我就因为没加这俩方法, 测试登录注册就报406错误"></a>这一步一定不要忘记啊, 我就因为没加这俩方法, 测试登录注册就报406错误</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> T <span class="hljs-title function_">getData</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> data;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> message;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDescription</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> description;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCode</span><span class="hljs-params">(<span class="hljs-type">int</span> code)</span> &#123;<br>    <span class="hljs-built_in">this</span>.code = code;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setData</span><span class="hljs-params">(T data)</span> &#123;<br>    <span class="hljs-built_in">this</span>.data = data;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMessage</span><span class="hljs-params">(String message)</span> &#123;<br>    <span class="hljs-built_in">this</span>.message = message;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDescription</span><span class="hljs-params">(String description)</span> &#123;<br>    <span class="hljs-built_in">this</span>.description = description;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="返回成功的话-就是返回成功状态-即返回状态码-数据-“ok”-message-“”-description"><a href="#返回成功的话-就是返回成功状态-即返回状态码-数据-“ok”-message-“”-description" class="headerlink" title="返回成功的话, 就是返回成功状态, 即返回状态码 + 数据 + “ok”(message) + “”(description)"></a>返回成功的话, 就是返回成功状态, 即返回状态码 + 数据 + “ok”(message) + “”(description)</h4><ul><li><h5 id="封装返回成功状态下通用对象的方法"><a href="#封装返回成功状态下通用对象的方法" class="headerlink" title="封装返回成功状态下通用对象的方法"></a>封装返回成功状态下通用对象的方法</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 封装调用执行成功</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> data 返回数据</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> &lt;T&gt;  数据类型</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 执行成功信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; BaseResponse&lt;T&gt; <span class="hljs-title function_">success</span><span class="hljs-params">(T data)</span> &#123;<br>       <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;&gt;(<span class="hljs-number">0</span>, data, <span class="hljs-string">&quot;ok&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="返回失败的话-就是返回失败状态-即返回状态码-null-data-message-description"><a href="#返回失败的话-就是返回失败状态-即返回状态码-null-data-message-description" class="headerlink" title="返回失败的话, 就是返回失败状态, 即返回状态码 + null(data) + message + description"></a>返回失败的话, 就是返回失败状态, 即返回状态码 + null(data) + message + description</h4><h4 id="实现思路-这里我们打算封装自定义异常类和全局异常处理器-当业务中出现错误-不会返回失败结果-而是抛出相应的异常-并由全局异常处理器捕获-再由全局异常处理器来返回对应失败状态"><a href="#实现思路-这里我们打算封装自定义异常类和全局异常处理器-当业务中出现错误-不会返回失败结果-而是抛出相应的异常-并由全局异常处理器捕获-再由全局异常处理器来返回对应失败状态" class="headerlink" title="实现思路: 这里我们打算封装自定义异常类和全局异常处理器, 当业务中出现错误, 不会返回失败结果, 而是抛出相应的异常, 并由全局异常处理器捕获, 再由全局异常处理器来返回对应失败状态"></a>实现思路: 这里我们打算封装自定义异常类和全局异常处理器, 当业务中出现错误, 不会返回失败结果, 而是抛出相应的异常, 并由全局异常处理器捕获, 再由全局异常处理器来返回对应失败状态</h4><h2 id="封装自定义异常BusinessException"><a href="#封装自定义异常BusinessException" class="headerlink" title="封装自定义异常BusinessException"></a>封装自定义异常BusinessException</h2><h5 id="自定义异常成员属性"><a href="#自定义异常成员属性" class="headerlink" title="自定义异常成员属性"></a>自定义异常成员属性</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BusinessException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span> &#123;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态码</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 异常描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String description;<br>................<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这里我们会发现-自定义异常里没有定义message属性-这是因为自定义异常继承了RuntimeException-在执行构造方法时-执行super-message-即可设置自定义的异常信息-再通过e-getMessage-方法来获取异常信息"><a href="#这里我们会发现-自定义异常里没有定义message属性-这是因为自定义异常继承了RuntimeException-在执行构造方法时-执行super-message-即可设置自定义的异常信息-再通过e-getMessage-方法来获取异常信息" class="headerlink" title="这里我们会发现, 自定义异常里没有定义message属性. 这是因为自定义异常继承了RuntimeException, 在执行构造方法时, 执行super(message)即可设置自定义的异常信息, 再通过e.getMessage()方法来获取异常信息"></a>这里我们会发现, 自定义异常里没有定义message属性. 这是因为自定义异常继承了RuntimeException, 在执行构造方法时, 执行super(message)即可设置自定义的异常信息, 再通过e.getMessage()方法来获取异常信息</h5></li><li><h5 id="自定义异常多种构造器"><a href="#自定义异常多种构造器" class="headerlink" title="自定义异常多种构造器"></a>自定义异常多种构造器</h5></li><li><h5 id="局部业务代码下自定义的异常信息"><a href="#局部业务代码下自定义的异常信息" class="headerlink" title="局部业务代码下自定义的异常信息"></a>局部业务代码下自定义的异常信息</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 封装局部自定义异常</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> message     异常信息</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> code        异常状态码</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> description 异常描述</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(String message, <span class="hljs-type">int</span> code, String description)</span> &#123;<br>      <span class="hljs-built_in">super</span>(message);<br>      <span class="hljs-built_in">this</span>.code = code;<br>      <span class="hljs-built_in">this</span>.description = description;<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装全局自定义异常-无描述"><a href="#封装全局自定义异常-无描述" class="headerlink" title="封装全局自定义异常(无描述)"></a>封装全局自定义异常(无描述)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 封装全局自定义异常(无描述)</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> errorCode 自定义异常态</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(ErrorCode errorCode)</span> &#123;<br>      <span class="hljs-built_in">super</span>(errorCode.getMessage());<br>      <span class="hljs-built_in">this</span>.code = errorCode.getCode();<br>      <span class="hljs-built_in">this</span>.description = errorCode.getDescription();<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装全局自定义异常-有描述"><a href="#封装全局自定义异常-有描述" class="headerlink" title="封装全局自定义异常(有描述)"></a>封装全局自定义异常(有描述)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 封装全局自定义异常(有描述)</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> errorCode   自定义异常态</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> description 异常描述</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(ErrorCode errorCode, String description)</span> &#123;<br>     <span class="hljs-built_in">super</span>(errorCode.getMessage());<br>     <span class="hljs-built_in">this</span>.code = errorCode.getCode();<br>     <span class="hljs-built_in">this</span>.description = description;<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="补充-封装全局自定义异常信息-ErrorCode-枚举类"><a href="#补充-封装全局自定义异常信息-ErrorCode-枚举类" class="headerlink" title="补充: 封装全局自定义异常信息 ErrorCode (枚举类)"></a>补充: 封装全局自定义异常信息 ErrorCode (枚举类)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ErrorCode</span> &#123;<br>..............<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="枚举值-需持续完善更新"><a href="#枚举值-需持续完善更新" class="headerlink" title="枚举值 (需持续完善更新)"></a>枚举值 (需持续完善更新)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">PARMS_ERROR(<span class="hljs-number">40000</span>, <span class="hljs-string">&quot;请求参数错误&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>NULL_ERROR(<span class="hljs-number">40001</span>, <span class="hljs-string">&quot;请求数据为空&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>UPDATE_ERROR(<span class="hljs-number">40002</span>, <span class="hljs-string">&quot;操作数据库失败&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>NOT_LOGIN(<span class="hljs-number">40003</span>, <span class="hljs-string">&quot;未登录&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>NOT_REGISTER(<span class="hljs-number">40004</span>, <span class="hljs-string">&quot;未注册&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>NO_AUTH(<span class="hljs-number">40005</span>, <span class="hljs-string">&quot;无权限&quot;</span>, <span class="hljs-string">&quot;&quot;</span>),<br>SYSTEM_ERROR(<span class="hljs-number">10000</span>, <span class="hljs-string">&quot;系统内部异常&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="成员属性"><a href="#成员属性" class="headerlink" title="成员属性"></a>成员属性</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 状态码</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br><br>   <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 状态码信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br>   <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 状态码描述</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String description;<br></code></pre></td></tr></table></figure><ul><li><h5 id="构造器和-getter-方法"><a href="#构造器和-getter-方法" class="headerlink" title="构造器和 getter 方法"></a>构造器和 getter 方法</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> code        状态码</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> message     信息</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> description 描述</span><br><span class="hljs-comment">   */</span><br>  ErrorCode(<span class="hljs-type">int</span> code, String message, String description) &#123;<br>      <span class="hljs-built_in">this</span>.code = code;<br>      <span class="hljs-built_in">this</span>.message = message;<br>      <span class="hljs-built_in">this</span>.description = description;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-keyword">return</span> code;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-keyword">return</span> message;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDescription</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-keyword">return</span> description;<br>  &#125;<br></code></pre></td></tr></table></figure><h5 id="自定义异常-getter-方法"><a href="#自定义异常-getter-方法" class="headerlink" title="自定义异常 getter 方法"></a>自定义异常 getter 方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br>    <br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDescription</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> description;<br>    &#125;    <br></code></pre></td></tr></table></figure><h2 id="封装全局异常处理器"><a href="#封装全局异常处理器" class="headerlink" title="封装全局异常处理器"></a>封装全局异常处理器</h2><h5 id=""><a href="#" class="headerlink" title=""></a><!--熟悉全局异常处理器的写法和实现过程, 了解其实现原理--></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br>....................<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="捕获自定义异常对象"><a href="#捕获自定义异常对象" class="headerlink" title="捕获自定义异常对象"></a>捕获自定义异常对象</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 捕获自定义异常对象</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> e 自定义异常</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 封装返回执行失败异常信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@ExceptionHandler(BusinessException.class)</span><br>   <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">locallyCustomException</span><span class="hljs-params">(BusinessException e)</span> &#123;<br>       log.error(<span class="hljs-string">&quot;businessException: &quot;</span> + e.getMessage(), e);<br>       log.info(<span class="hljs-string">&quot;&quot;</span> + e.getCode());<br>       log.info(e.getMessage());<br>       log.info(e.getDescription());<br>       <span class="hljs-keyword">return</span> ResultUtils.error(e.getCode(), e.getMessage(), e.getDescription());<br>   &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="捕获其他异常"><a href="#捕获其他异常" class="headerlink" title="捕获其他异常"></a>捕获其他异常</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 捕获其他异常</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> e 其他异常</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return</span> 封装返回请求失败异常信息</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-meta">@ExceptionHandler(RuntimeException.class)</span><br>   <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">globalCustomException</span><span class="hljs-params">(Exception e)</span> &#123;<br>       log.error(<span class="hljs-string">&quot;runtimeException&quot;</span>, e);<br>       <span class="hljs-keyword">return</span> ResultUtils.error(ErrorCode.SYSTEM_ERROR);<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="修改后端返回给前端的数据-全部更新为直接返回通用对象-成功状态-或抛出业务异常再由全局异常处理器返回通用对象-失败状态"><a href="#修改后端返回给前端的数据-全部更新为直接返回通用对象-成功状态-或抛出业务异常再由全局异常处理器返回通用对象-失败状态" class="headerlink" title="修改后端返回给前端的数据, 全部更新为直接返回通用对象(成功状态)或抛出业务异常再由全局异常处理器返回通用对象(失败状态)"></a>修改后端返回给前端的数据, 全部更新为直接返回通用对象(成功状态)或抛出业务异常再由全局异常处理器返回通用对象(失败状态)</h2><ul><li><h5 id="成功状态-controller层"><a href="#成功状态-controller层" class="headerlink" title="成功状态 (controller层)"></a>成功状态 (controller层)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户注册</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userRegisterRequest 注册信息封装类</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> id</span><br><span class="hljs-comment">     */</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">userRegister</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserRegisterRequest userRegisterRequest)</span> &#123;<br>    ......................<br>    <span class="hljs-keyword">return</span> ResultUtils.success(userRegister);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户登录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userLoginRequest 登录信息封装</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request          request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> User</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;User&gt; <span class="hljs-title function_">userLogin</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserLoginRequest userLoginRequest, HttpServletRequest request)</span> &#123;<br>        .........................<br>        <span class="hljs-keyword">return</span> ResultUtils.success(userLogin);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户登录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> int</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/logout&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">userLogout</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        ..........................<br>        <span class="hljs-keyword">return</span> ResultUtils.success(userLogout);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前用户登录态</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 当前用户信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/currentUser&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;User&gt; <span class="hljs-title function_">getCurrentUser</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        ............................<br>        <span class="hljs-keyword">return</span> ResultUtils.success(user);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询用户</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> username 用户名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 查到的用户</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/search&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;User&gt;&gt; <span class="hljs-title function_">userSearch</span><span class="hljs-params">(String username, HttpServletRequest request)</span> &#123;<br>        .............................<br>        <span class="hljs-keyword">return</span> ResultUtils.success(users);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除用户</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 用户id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> true/false</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/delete&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">userDelete</span><span class="hljs-params">(Long id, HttpServletRequest request)</span> &#123;<br>        ..............................<br>        <span class="hljs-keyword">return</span> ResultUtils.success(removeById);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword, planetCode))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><h5 id="失败状态"><a href="#失败状态" class="headerlink" title="失败状态"></a>失败状态</h5><ul><li><h5 id="controller层-register-login-logout-currentUser-search-delete-下的controller参数校验"><a href="#controller层-register-login-logout-currentUser-search-delete-下的controller参数校验" class="headerlink" title="controller层    register    login    logout    currentUser    search    delete 下的controller参数校验"></a>controller层    register    login    logout    currentUser    search    delete 下的controller参数校验</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword, planetCode))<br>       <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword))<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (request == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (currentUser == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (!isAdmin(request))<br>         <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(NO_AUTH);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (!isAdmin(request))<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(NO_AUTH);<br><span class="hljs-keyword">if</span> (id &lt;= <span class="hljs-number">0</span>)<br>          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-register-下的参数校验"><a href="#service层-register-下的参数校验" class="headerlink" title="service层    register 下的参数校验"></a>service层    register 下的参数校验</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.1.账户, 密码, 二次密码不能为空</span><br>        <span class="hljs-keyword">if</span> (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(PARMS_ERROR);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.2.账户不小于4位</span><br>        <span class="hljs-keyword">if</span> (userAccount.length() &lt; <span class="hljs-number">4</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50000</span>, <span class="hljs-string">&quot;账户小于4位&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.3.账户不包含特殊字符</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.*[\\s`~!@#$%^&amp;*()+=|&#123;&#125;&#x27;:;&#x27;,\\[\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？\\\\]+.*&quot;</span>;<br>        <span class="hljs-keyword">if</span> (Pattern.matches(pattern, userAccount))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50001</span>, <span class="hljs-string">&quot;账户包含特殊字符&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.4.用户密码不小于8位</span><br>        <span class="hljs-keyword">if</span> (userPassword.length() &lt; <span class="hljs-number">8</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;密码不符合要求&quot;</span>, <span class="hljs-number">60000</span>, <span class="hljs-string">&quot;用户密码小于8位&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.5.二次密码与密码相同</span><br>        <span class="hljs-keyword">if</span> (!userPassword.equals(checkPassword))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;二次密码不符合要求&quot;</span>, <span class="hljs-number">60001</span>, <span class="hljs-string">&quot;二次密码与密码不相同&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.6.星球编号不能超过5位</span><br>        <span class="hljs-keyword">if</span> (planetCode.length() &gt; <span class="hljs-number">5</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;星球编号不符合要求&quot;</span>, <span class="hljs-number">60002</span>, <span class="hljs-string">&quot;星球编号超过5位&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.7.账户不能重复</span><br>        QueryWrapper&lt;User&gt; ua_lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;(); <span class="hljs-comment">// LambdaQueryWrapper&lt;User&gt; userLambdaQueryWrapper = new LambdaQueryWrapper&lt;&gt;();</span><br>        ua_lqw.eq(<span class="hljs-string">&quot;user_account&quot;</span>, userAccount); <span class="hljs-comment">// userLambdaQueryWrapper.eq(User::getUserAccount, userAccount);</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">ua_count</span> <span class="hljs-operator">=</span> userMapper.selectCount(ua_lqw);   <span class="hljs-comment">// long count = this.count(lqw);</span><br>        <span class="hljs-keyword">if</span> (ua_count &gt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50002</span>, <span class="hljs-string">&quot;账户重复&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.8.星球编号不能重复</span><br>        QueryWrapper&lt;User&gt; pc_lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        pc_lqw.eq(<span class="hljs-string">&quot;planet_code&quot;</span>, planetCode);<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">pc_count</span> <span class="hljs-operator">=</span> userMapper.selectCount(pc_lqw);<br>        <span class="hljs-keyword">if</span> (pc_count &gt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;星球编号不符合要求&quot;</span>, <span class="hljs-number">60003</span>, <span class="hljs-string">&quot;星球编号重复&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-login下的参数校验"><a href="#service层-login下的参数校验" class="headerlink" title="service层    login下的参数校验"></a>service层    login下的参数校验</h5></li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 1.1.账户, 密码不能为空</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">StringUtils</span>.</span></span>is<span class="hljs-constructor">AnyBlank(<span class="hljs-params">userAccount</span>, <span class="hljs-params">userPassword</span>)</span>)<br>            throw <span class="hljs-keyword">new</span> <span class="hljs-constructor">BusinessException(PARMS_ERROR)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.2.账户不小于4位</span><br>        <span class="hljs-keyword">if</span> (userAccount.length() &lt; <span class="hljs-number">4</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50000</span>, <span class="hljs-string">&quot;账户小于4位&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.3.用户密码不小于8位</span><br>        <span class="hljs-keyword">if</span> (userPassword.length() &lt; <span class="hljs-number">8</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;密码不符合要求&quot;</span>, <span class="hljs-number">60000</span>, <span class="hljs-string">&quot;用户密码小于8位&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 1.4.账户不包含特殊字符</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.*[\\s`~!@#$%^&amp;*()+=|&#123;&#125;&#x27;:;&#x27;,\\[\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？\\\\]+.*&quot;</span>;<br>        <span class="hljs-keyword">if</span> (Pattern.matches(pattern, userAccount))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(<span class="hljs-string">&quot;账户不符合要求&quot;</span>, <span class="hljs-number">50001</span>, <span class="hljs-string">&quot;账户包含特殊字符&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><h5 id="service层-logout下的返回信息"><a href="#service层-logout下的返回信息" class="headerlink" title="service层    logout下的返回信息"></a>service层    logout下的返回信息</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">request.getSession().removeAttribute(USER_LOGIN_STATE);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;注销成功&quot;</span>;<br></code></pre></td></tr></table></figure><h5 id="自定义异常并由全局异常处理器成功处理-功能基本完成"><a href="#自定义异常并由全局异常处理器成功处理-功能基本完成" class="headerlink" title="自定义异常并由全局异常处理器成功处理, 功能基本完成"></a>自定义异常并由全局异常处理器成功处理, 功能基本完成</h5><h2 id="前端适配后端的通用返回对象"><a href="#前端适配后端的通用返回对象" class="headerlink" title="前端适配后端的通用返回对象"></a>前端适配后端的通用返回对象</h2><ul><li><h5 id="前端定义通用返回对象-services-ant-design-pro-typings-d-ts"><a href="#前端定义通用返回对象-services-ant-design-pro-typings-d-ts" class="headerlink" title="前端定义通用返回对象(services/ant-design-pro/typings.d.ts)"></a>前端定义通用返回对象(services/ant-design-pro/typings.d.ts)</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 通用返回类</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">type</span> <span class="hljs-title class_">BaseResponse</span>&lt;T&gt; = &#123;<br>    <span class="hljs-attr">code</span>: <span class="hljs-built_in">number</span>,<br>    <span class="hljs-attr">data</span>: T,<br>    <span class="hljs-attr">message</span>: <span class="hljs-built_in">string</span>,<br>    <span class="hljs-attr">description</span>: <span class="hljs-built_in">string</span><br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="封装各接口响应类型-services-ant-design-pro-api-ts"><a href="#封装各接口响应类型-services-ant-design-pro-api-ts" class="headerlink" title="封装各接口响应类型(services/ant-design-pro/api.ts)"></a>封装各接口响应类型(services/ant-design-pro/api.ts)</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/currentUser&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/logout&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/login&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>  <span class="hljs-attr">headers</span>: &#123;<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">data</span>: body,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/register&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>  <span class="hljs-attr">headers</span>: &#123;<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">data</span>: body,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">return</span> request&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;(<span class="hljs-string">&#x27;/api/user/search&#x27;</span>, &#123;<br>  <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  ...(options || &#123;&#125;),<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li><h5 id="修改登录-注册成功的校验逻辑"><a href="#修改登录-注册成功的校验逻辑" class="headerlink" title="修改登录/注册成功的校验逻辑"></a>修改登录/注册成功的校验逻辑</h5></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 登录</span><br><span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> <span class="hljs-title function_">login</span>(&#123;<br>  ...values,<br>  <span class="hljs-keyword">type</span>,<br>&#125;);<br><span class="hljs-comment">// 登录成功</span><br><span class="hljs-keyword">if</span> (data) &#123;<br>  <span class="hljs-keyword">const</span> defaultLoginSuccessMessage = <span class="hljs-string">&#x27;登录成功！&#x27;</span>;<br>  ................<br> &#125;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 注册</span><br><span class="hljs-comment">// 返回id</span><br><span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> <span class="hljs-title function_">register</span>(&#123;<br>  ...values,<br>  <span class="hljs-keyword">type</span>,<br>&#125;);<br><span class="hljs-comment">// 注册成功</span><br><span class="hljs-keyword">if</span> (data) &#123;<br>  <span class="hljs-keyword">const</span> defaultLoginSuccessMessage = <span class="hljs-string">&#x27;注册成功！&#x27;</span>;<br>  ....................<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><h5 id="这边还要记得修改两个地方"><a href="#这边还要记得修改两个地方" class="headerlink" title="这边还要记得修改两个地方:"></a>这边还要记得修改两个地方:</h5></li></ul><h6 id="修改管理员权限的校验-解决了无法正确访问到管理员页面的问题"><a href="#修改管理员权限的校验-解决了无法正确访问到管理员页面的问题" class="headerlink" title="修改管理员权限的校验 - 解决了无法正确访问到管理员页面的问题"></a>修改管理员权限的校验 - 解决了无法正确访问到管理员页面的问题</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">access</span>(<span class="hljs-params">initialState: &#123; baseResponse?: API.BaseResponse&lt;API.CurrentUser&gt; &#125; | <span class="hljs-literal">undefined</span></span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123; baseResponse &#125; = initialState ?? &#123;&#125;;<br>  <span class="hljs-comment">// 权限校验</span><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-comment">// 校验管理员权限</span><br>    <span class="hljs-attr">canAdmin</span>: baseResponse &amp;&amp; baseResponse.<span class="hljs-property">data</span>.<span class="hljs-property">userRole</span> === <span class="hljs-number">1</span>,<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="修改查询在线用户信息-解决了在线用户信息页面无法正常显示的问题"><a href="#修改查询在线用户信息-解决了在线用户信息页面无法正常显示的问题" class="headerlink" title="修改查询在线用户信息 - 解决了在线用户信息页面无法正常显示的问题"></a>修改查询在线用户信息 - 解决了在线用户信息页面无法正常显示的问题</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> <span class="hljs-attr">columns</span>: <span class="hljs-title class_">ProColumns</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;[] = [<br>...............<br>]<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&lt;<span class="hljs-title class_">ProTable</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">BaseResponse</span>&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">CurrentUser</span>&gt;&gt;<br>  columns=&#123;columns&#125;<br>  ............<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs typescript"> <span class="hljs-comment">// 弹出异常信息</span><br>    message.<span class="hljs-title function_">error</span>(res.<span class="hljs-property">message</span>)<br>    <span class="hljs-comment">// 弹出异常描述</span><br>    message.<span class="hljs-title function_">error</span>(res.<span class="hljs-property">description</span>)<br>    <span class="hljs-comment">// 跳转至登录页</span><br>    history.<span class="hljs-title function_">replace</span>(&#123;<br>      <span class="hljs-attr">pathname</span>: <span class="hljs-string">&#x27;user/login&#x27;</span>,<br>      <span class="hljs-attr">search</span>: <span class="hljs-title function_">stringify</span>(&#123;<br>        <span class="hljs-attr">redirect</span>: location.<span class="hljs-property">pathname</span>,<br>      &#125;),<br>    &#125;);request=&#123;<span class="hljs-keyword">async</span> (params = &#123;&#125;, sort, filter) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sort, filter);<br>  <span class="hljs-comment">// 返回userList</span><br>  <span class="hljs-keyword">const</span> baseResponse = <span class="hljs-keyword">await</span> <span class="hljs-title function_">searchUsers</span>();<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">data</span>: baseResponse,<br>  &#125;<br>&#125;&#125;<br></code></pre></td></tr></table></figure><h2 id="前端封装全局请求-响应拦截器"><a href="#前端封装全局请求-响应拦截器" class="headerlink" title="前端封装全局请求/响应拦截器"></a>前端封装全局请求/响应拦截器</h2><h5 id="umi其实已经给我们封装好了request了-目录-src-umi-plugin-request-request-ts-在这里我们也可以在该目录下自定义全局请求-响应拦截器-但是一方面破坏了封装组件的完整性-不好直接修改封装好的组件-我们的想法是定义自己的requert来封装axios-再自定义全局请求-响应拦截器"><a href="#umi其实已经给我们封装好了request了-目录-src-umi-plugin-request-request-ts-在这里我们也可以在该目录下自定义全局请求-响应拦截器-但是一方面破坏了封装组件的完整性-不好直接修改封装好的组件-我们的想法是定义自己的requert来封装axios-再自定义全局请求-响应拦截器" class="headerlink" title="umi其实已经给我们封装好了request了(目录:src/.umi/plugin-request/request.ts), 在这里我们也可以在该目录下自定义全局请求/响应拦截器, 但是一方面破坏了封装组件的完整性, 不好直接修改封装好的组件. 我们的想法是定义自己的requert来封装axios, 再自定义全局请求/响应拦截器"></a>umi其实已经给我们封装好了request了(目录:src/.umi/plugin-request/request.ts), 在这里我们也可以在该目录下自定义全局请求/响应拦截器, 但是一方面破坏了封装组件的完整性, 不好直接修改封装好的组件. 我们的想法是定义自己的requert来封装axios, 再自定义全局请求/响应拦截器</h5><h5 id="新建目录-src-plugins-globalRequest-ts"><a href="#新建目录-src-plugins-globalRequest-ts" class="headerlink" title="新建目录: src/plugins/globalRequest.ts"></a>新建目录: src/plugins/globalRequest.ts</h5><h5 id="在该目录下我们封装自己的request"><a href="#在该目录下我们封装自己的request" class="headerlink" title="在该目录下我们封装自己的request"></a>在该目录下我们封装自己的request</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123;extend&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;umi-request&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123;message&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;history&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;umi&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123;stringify&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;querystring&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 配置request请求时的默认参数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> request = <span class="hljs-title function_">extend</span>(&#123;<br>  <span class="hljs-attr">credentials</span>: <span class="hljs-string">&#x27;include&#x27;</span>, <span class="hljs-comment">// 默认请求是否带上cookie</span><br>  <span class="hljs-comment">// requestType: &#x27;form&#x27;,</span><br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局请求拦截器</span><br><span class="hljs-comment"> */</span><br>request.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>((url, options): <span class="hljs-function"><span class="hljs-params">any</span> =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`do request url = <span class="hljs-subst">$&#123;url&#125;</span>`</span>)<br>  <span class="hljs-keyword">return</span> &#123;<br>    url,<br>    <span class="hljs-attr">options</span>: &#123;<br>      ...options,<br>      <span class="hljs-attr">headers</span>: &#123;&#125;,<br>    &#125;,<br>  &#125;;<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局响应拦截器</span><br><span class="hljs-comment"> */</span><br>request.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">async</span> (response, options): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-built_in">any</span>&gt; =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">json</span>();<br>  <span class="hljs-comment">// 1.返回成功状态</span><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span> &gt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">message</span>);<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-property">data</span>;<br>  &#125;<br>  <span class="hljs-comment">// 2.返回失败状态</span><br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> === <span class="hljs-number">50001</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;...&quot;</span>)<br>    <span class="hljs-comment">// 弹出异常信息</span><br>    message.<span class="hljs-title function_">error</span>(res.<span class="hljs-property">message</span>)<br>    <span class="hljs-comment">// 弹出异常描述</span><br>    <span class="hljs-comment">// message.error(res.description)</span><br>    <span class="hljs-comment">// 跳转至登录页</span><br>    history.<span class="hljs-title function_">replace</span>(&#123;<br>      <span class="hljs-attr">pathname</span>: <span class="hljs-string">&#x27;user/login&#x27;</span>,<br>      <span class="hljs-attr">search</span>: <span class="hljs-title function_">stringify</span>(&#123;<br>        <span class="hljs-attr">redirect</span>: location.<span class="hljs-property">pathname</span>,<br>      &#125;),<br>    &#125;);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;code: &quot;</span> + res.<span class="hljs-property">code</span>)<br>  &#125;<br>  <br>  <span class="hljs-keyword">return</span> res.<span class="hljs-property">data</span>;<br><br>&#125;);<br></code></pre></td></tr></table></figure><h5 id="最后不要忘了-在src-services-ant-design-pro-api-ts目录下引入我们自己实现的request-覆盖掉umi封装的request"><a href="#最后不要忘了-在src-services-ant-design-pro-api-ts目录下引入我们自己实现的request-覆盖掉umi封装的request" class="headerlink" title="最后不要忘了, 在src/services/ant-design-pro/api.ts目录下引入我们自己实现的request, 覆盖掉umi封装的request"></a>最后不要忘了, 在src/services/ant-design-pro/api.ts目录下引入我们自己实现的request, 覆盖掉umi封装的request</h5><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/plugins/globalRequest&#x27;</span>;<br></code></pre></td></tr></table></figure><h5 id="我们实现了自定义的前端全局请求-响应拦截器"><a href="#我们实现了自定义的前端全局请求-响应拦截器" class="headerlink" title="我们实现了自定义的前端全局请求/响应拦截器"></a>我们实现了自定义的前端全局请求/响应拦截器</h5><h1 id="至此-用户中心系统基本功能已经完成"><a href="#至此-用户中心系统基本功能已经完成" class="headerlink" title="至此, 用户中心系统基本功能已经完成"></a>至此, 用户中心系统基本功能已经完成</h1><h4 id="未来的持续优化"><a href="#未来的持续优化" class="headerlink" title="未来的持续优化:"></a>未来的持续优化:</h4><ul><li><h5 id="完善框架搭建和数据库设计的文档编写"><a href="#完善框架搭建和数据库设计的文档编写" class="headerlink" title="完善框架搭建和数据库设计的文档编写"></a>完善框架搭建和数据库设计的文档编写</h5></li><li><h5 id="注册的新用户会有默认的头像和昵称"><a href="#注册的新用户会有默认的头像和昵称" class="headerlink" title="注册的新用户会有默认的头像和昵称"></a>注册的新用户会有默认的头像和昵称</h5></li><li><h5 id="用户登录后可以更改个人信息"><a href="#用户登录后可以更改个人信息" class="headerlink" title="用户登录后可以更改个人信息"></a>用户登录后可以更改个人信息</h5></li><li><h5 id="完善前端全局异常处理器所处理的异常类型"><a href="#完善前端全局异常处理器所处理的异常类型" class="headerlink" title="完善前端全局异常处理器所处理的异常类型"></a>完善前端全局异常处理器所处理的异常类型</h5></li><li><h5 id="项目的部署和上线"><a href="#项目的部署和上线" class="headerlink" title="项目的部署和上线"></a>项目的部署和上线</h5></li></ul><h4 id="废话不多说-开启-伙伴匹配系统-的学习-（2023-04-21）"><a href="#废话不多说-开启-伙伴匹配系统-的学习-（2023-04-21）" class="headerlink" title="废话不多说, 开启 伙伴匹配系统 的学习 （2023/04/21）"></a>废话不多说, 开启 伙伴匹配系统 的学习 （2023/04/21）</h4><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><h3 id="前端多环境配置"><a href="#前端多环境配置" class="headerlink" title="前端多环境配置"></a>前端多环境配置</h3><h3 id="后端多环境配置"><a href="#后端多环境配置" class="headerlink" title="后端多环境配置"></a>后端多环境配置</h3><h2 id="项目上线"><a href="#项目上线" class="headerlink" title="项目上线"></a>项目上线</h2>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>开发经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
      <tag>开发经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>入门指南：掌握Git的基本操作及进阶学习</title>
    <link href="/blog/2023/03/17/%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E6%8E%8C%E6%8F%A1Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%8F%8A%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0/"/>
    <url>/blog/2023/03/17/%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E6%8E%8C%E6%8F%A1Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%8F%8A%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><ul><li><h5 id="Git-是一个分布式版本控制工具，提供代码托管服务"><a href="#Git-是一个分布式版本控制工具，提供代码托管服务" class="headerlink" title="Git 是一个分布式版本控制工具，提供代码托管服务"></a>Git 是一个分布式版本控制工具，提供代码托管服务</h5></li></ul><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="工作区状态"><a href="#工作区状态" class="headerlink" title="工作区状态"></a>工作区状态</h3><ul><li><h5 id="工作区：包含-git-隐藏文件夹的目录，也称为工作目录，用于存放开发的代码"><a href="#工作区：包含-git-隐藏文件夹的目录，也称为工作目录，用于存放开发的代码" class="headerlink" title="工作区：包含.git 隐藏文件夹的目录，也称为工作目录，用于存放开发的代码"></a>工作区：包含.git 隐藏文件夹的目录，也称为工作目录，用于存放开发的代码</h5></li></ul><ul><li><h5 id="版本库：-git-隐藏文件夹，储存配置信息、日志信息和文件版本信息等"><a href="#版本库：-git-隐藏文件夹，储存配置信息、日志信息和文件版本信息等" class="headerlink" title="版本库：.git 隐藏文件夹，储存配置信息、日志信息和文件版本信息等"></a>版本库：.git 隐藏文件夹，储存配置信息、日志信息和文件版本信息等</h5></li></ul><ul><li><h5 id="暂存区：-git-隐藏文件夹中的一个-index-文件，也可叫做-stage，用来临时保存修改文件"><a href="#暂存区：-git-隐藏文件夹中的一个-index-文件，也可叫做-stage，用来临时保存修改文件" class="headerlink" title="暂存区：.git 隐藏文件夹中的一个 index 文件，也可叫做 stage，用来临时保存修改文件"></a>暂存区：.git 隐藏文件夹中的一个 index 文件，也可叫做 stage，用来临时保存修改文件</h5></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">（1）untracked 未跟踪（未被纳入版本控制）<br>（2）tracked 已跟踪（被纳入版本控制）<br><span class="hljs-code">1）Unmodified 未修改状态</span><br><span class="hljs-code">2）Modified 已修改状态</span><br><span class="hljs-code">3）Staged 已暂存状态</span><br></code></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="全局设置："><a href="#全局设置：" class="headerlink" title="全局设置："></a>全局设置：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">git config --global user.name <span class="hljs-string">&quot;用户名</span><br><span class="hljs-string">git config --global user.email &quot;</span>用户邮箱<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><h4 id="获取-Git-仓库："><a href="#获取-Git-仓库：" class="headerlink" title="获取 Git 仓库："></a>获取 Git 仓库：</h4><p> 在本地初始化一个仓库：git init<br>​ 从远处仓库克隆：git clone 【仓库地址(URL)】</p><h4 id="本地仓库-工作区-常用命令："><a href="#本地仓库-工作区-常用命令：" class="headerlink" title="本地仓库(工作区)常用命令："></a>本地仓库(工作区)常用命令：</h4><ul><li>查看工作区内的文件状态（是否纳入版本控制？已纳入的是否修改？修改后的是否暂存？）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git status<br></code></pre></td></tr></table></figure><ul><li>将文件的修改加入暂存区</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git add 【文件名】<br></code></pre></td></tr></table></figure><ul><li>将暂存区的文件取消暂存或者切换到指定版本 2</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git reset【版本号】<br></code></pre></td></tr></table></figure><ul><li>将暂存区的文件提交修改到版本库</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git commit -m 【修改信息】【文件名】<br></code></pre></td></tr></table></figure><ul><li>查看日志，查看提交记录，方便回溯到指定版本</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h4 id="远程仓库-工作区-常用命令："><a href="#远程仓库-工作区-常用命令：" class="headerlink" title="远程仓库(工作区)常用命令："></a>远程仓库(工作区)常用命令：</h4><ul><li>查看远程仓库：查看仓库名、仓库地址(URL)</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git remote -v<br></code></pre></td></tr></table></figure><ul><li>将本地仓库与远程仓库连接起来</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">git remote add 【仓库名】【仓库地址】<br>git remote add origin【仓库地址(URL)】<br></code></pre></td></tr></table></figure><ul><li>从远程仓库克隆</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git clone 【仓库地址(URL)】<br></code></pre></td></tr></table></figure><ul><li>从远程仓库拉取</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">git pull 【仓库名】【仓库分支】<br>git pull origin master<br></code></pre></td></tr></table></figure><ul><li>将工作区内的文件推送/上传到远程仓库的分支上（文件一定是成功提交到版本库中的，才能推送至远程仓库）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">git push【仓库名】【仓库分支】<br>git push origin master<br></code></pre></td></tr></table></figure><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><ul><li>列出所有本地分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch<br></code></pre></td></tr></table></figure><ul><li>列出所有远程分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch -r<br></code></pre></td></tr></table></figure><ul><li>列出所有本地分支和远程分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch -a<br></code></pre></td></tr></table></figure><ul><li>在本地创建分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git branch 【分支名】<br></code></pre></td></tr></table></figure><ul><li>切换本地分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git checkout 【分支名】<br></code></pre></td></tr></table></figure><ul><li>将该本地分支推送至远程分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git push 【仓库名】【分支名】<br></code></pre></td></tr></table></figure><ul><li>在该分支下，合并指定分支</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git merge 【分支名】<br></code></pre></td></tr></table></figure><h4 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h4><ul><li>列出已有标签</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git tag<br></code></pre></td></tr></table></figure><ul><li>创建标签</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git tag 【标签名】<br></code></pre></td></tr></table></figure><ul><li>将标签推送至远程仓库</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git push 【仓库名】【标签名】<br></code></pre></td></tr></table></figure><ul><li>检出标签</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git checkout -b 【分支名】【标签名】<br></code></pre></td></tr></table></figure><ul><li><h5 id="分支：开发隔离-，标签：分支下的版本控制"><a href="#分支：开发隔离-，标签：分支下的版本控制" class="headerlink" title="分支：开发隔离 ，标签：分支下的版本控制"></a>分支：开发隔离 ，标签：分支下的版本控制</h5></li></ul><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="合并冲突问题"><a href="#合并冲突问题" class="headerlink" title="合并冲突问题"></a>合并冲突问题</h3><ul><li>如果执行推送时出现</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">! [rejected] master -&gt; master (fetch first) error: fail to push some refs<br></code></pre></td></tr></table></figure><ul><li>在执行推送前执行</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git pull --rebase origin master<br></code></pre></td></tr></table></figure><ul><li><p>将 README.md 拉到本地以解决此问题</p></li><li><p>如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库中拉取文件的时候会报错</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">（fatal：refusing to merge unrelated histories）<br></code></pre></td></tr></table></figure><ul><li><h5 id="如此拉取："><a href="#如此拉取：" class="headerlink" title="如此拉取："></a>如此拉取：</h5></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">git pull origin master --allow-unrelated-histories<br></code></pre></td></tr></table></figure><ul><li>以解决此问题</li></ul><h2 id="2023-04-13-17-57"><a href="#2023-04-13-17-57" class="headerlink" title="2023 04.13 17:57"></a>2023 04.13 17:57</h2><h2 id="2023-04-26-23-52"><a href="#2023-04-26-23-52" class="headerlink" title="2023 04.26 23:52"></a>2023 04.26 23:52</h2><p>今天可算抽出时间，把用户中心-伙伴匹配系统的后端代码托管到gitte仓库上了，那就浅浅总结一下最简单无脑的一条龙推送流程吧：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git init<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git remote -v<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git remote remove origin<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git remote add origin 【仓库地址】<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git add .<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git commit -m &quot;提交信息&quot; .<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git pull origin master / git pull origin master --allow-unrelated-histories<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">git push origin master<br></code></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/u010784833/article/details/131305689">(77条消息) git撤销推送_git 取消推送_wxz470960225的博客-CSDN博客</a></li></ul><h2 id="远程推送问题"><a href="#远程推送问题" class="headerlink" title="远程推送问题"></a>远程推送问题</h2><h3 id="远程仓库未同步"><a href="#远程仓库未同步" class="headerlink" title="远程仓库未同步"></a>远程仓库未同步</h3>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试测试测试</title>
    <link href="/blog/2023/03/15/%E6%B5%8B%E8%AF%95%E6%B5%8B%E8%AF%95%E6%B5%8B%E8%AF%95/"/>
    <url>/blog/2023/03/15/%E6%B5%8B%E8%AF%95%E6%B5%8B%E8%AF%95%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="第二篇测试文档"><a href="#第二篇测试文档" class="headerlink" title="第二篇测试文档"></a>第二篇测试文档</h2>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2023/03/07/hello-world/"/>
    <url>/blog/2023/03/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
